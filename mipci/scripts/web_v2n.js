(function(window, document){
    var s_div                   = "div",
        s_setAttribute          = "setAttribute",
        s_datepicker            = "datepicker",
        s_datetimepicker        = "datetimepicker",
        s_mCustomScrollbar      = "mCustomScrollbar",
        s_tzSelect              = "tzSelect",
        s_jNice                 = "jNice",
        s_style                 = "style",
        s_cssText               = "cssText",
        s_innerHTML             = "innerHTML",
        s_width                 = "width",
        s_height                = "height",
        s_right                 = "right",
        s_offsetWidth           = "offsetWidth",
        s_offsetHeight          = "offsetHeight",
        s_removeChild           = "removeChild",

        g_web                     = null,
        g_page                    = null,
        g_j_page                  = null,

        g_avc_conf = { filter: "original", filterHorLuma: "optimized", filterVerLumaEdge: "optimized", getBoundaryStrengthsA: "optimized" },
        g_avc=null,

        mmd5 = window.mmd5,
        mcloud_agent		= window.mcloud_agent;
        /* ----------------mining.lang.strings.begin-----do-not-change-this-line------------------- */
    /* 
    Localizable.strings
    Created by mining code-gen base Mining Frameworks.
    More about : http://www.shenzhenmining.com
    */
    var 
        mcs_name,
        CFBundleDisplayName,
        mcs_nick,
        mcs_old_nick,
        mcs_linked,
        mcs_sign_in,
        mcs_back,
        mcs_will_back,
        mcs_add,
        mcs_add_device,
        mcs_device_existed,
        mcs_cancel,
        mcs_exit,
        mcs_remember_password,
        mcs_password_remembered,
        mcs_sign_ining,
        mcs_cloud_server,
        mcs_input_device_id,
        mcs_input_username,
        mcs_input_email_addr,
        mcs_email_address,
        mcs_email,
        mcs_binding,
        mcs_binding_email,
        mcs_binding_send_prompt,
        mcs_binding_email_prompt,
        mcs_input_password,
        mcs_access_server_failed,
        mcs_device_offline,
        mcs_invalid_password,
        mcs_invalid_dev,
        mcs_login_faided,
        mcs_invalid_qrcode,
        mcs_please_input_username,
        mcs_please_input_password,
        mcs_qrcode_scan_hint,
        mcs_device_list_empty,
        mcs_record_list_is_empty,
        mcs_password_expired,
        mcs_set_video_size,
        mcs_hd_1280x720,
        mcs_auto,
        mcs_normal_640x360,
        mcs_half_320x180,
        mcs_small_160x90,
        mcs_play,
        mcs_settings,
        mcs_messages,
        mcs_alarm,
        mcs_delete,
        mcs_delete_camera,
        mcs_apply,
        mcs_speed,
        mcs_others,
        mcs_audio,
        mcs_speaker,
        mcs_mic,
        mcs_power_frequency,
        mcs_online_upgrade,
        mcs_restore_the_factory_settings,
        mcs_restore,
        mcs_restore_camera,
        mcs_start_upgrade,
        mcs_system,
        mcs_system_settings,
        mcs_online,
        mcs_offline,
        mcs_query,
        mcs_begin_time,
        mcs_end_time,
        mcs_mode,
        mcs_opened,
        mcs_high,
        mcs_middle,
        mcs_low,
        mcs_io_alert_input,
        mcs_io_alert_output,
        mcs_normally_open,
        mcs_normally_close,
        mcs_motion_detection_sensitivity,
        mcs_daytime,
        mcs_night,
        mcs_sdcord,
        mcs_storage_device,
        mcs_set_mask,
        mcs_status,
        mcs_capacity,
        mcs_usage,
        mcs_format,
        mcs_repair,
        mcs_formating,
        mcs_repairing,
        mcs_mounted,
        mcs_unmounted,
        mcs_mount,
        mcs_unmount,
        mcs_ethernet,
        mcs_wifi,
        mcs_enabled,
        mcs_mac_address,
        mcs_network_status,
        mcs_wifi_mode,
        mcs_client,
        mcs_ap,
        mcs_start_address,
        mcs_end_address,
        mcs_gateway,
        mcs_select_network,
        mcs_dhcp_ip,
        mcs_dhcp_dns,
        mcs_ip_address,
        mcs_network_mask,
        mcs_input_secondary_dns,
        mcs_secondary_dns,
        mcs_input_dns,
        mcs_input_alternate_dns,
        mcs_input_ip,
        mcs_input_gateway,
        mcs_input_network_mask,
        mcs_wifi_list,
        mcs_display_date,
        mcs_date_format,
        mcs_display_time,
        mcs_time_format,
        mcs_24_hour,
        mcs_12_hour,
        mcs_display_weeks,
        mcs_date_time,
        mcs_set_time,
        mcs_set_week,
        mcs_stream,
        mcs_encode,
        mcs_resolution,
        mcs_frame_fate,
        mcs_maximum_bitrate,
        mcs_minimum_bitrate,
        mcs_i_frame_interval,
        mcs_video,
        mcs_sampling_rate,
        mcs_nickname,
        mcs_old_password,
        mcs_confirm_password,
        mcs_modify_password,
        mcs_password,
        mcs_admin_password,
        mcs_guest_password,
        mcs_product_info,
        mcs_software_version,
        mcs_device_id,
        mcs_operation,
        mcs_record,
        mcs_record_2,
        mcs_upgrade_now,
        mcs_upgrading,
        mcs_already_latest_version,
        mcs_sensitivty,
        mcs_user_defined,
        mcs_time,
        mcs_date,
        mcs_finish,
        mcs_delete_fail,
        mcs_motion,
        mcs_start,
        mcs_talk,
        mcs_password_input_inconsistent,
        mcs_input_6_to_20_litters,
        mcs_user_letter_range_hint,
        mcs_password_range_hint,
        mcs_begin_with_the_letters,
        mcs_sign_up,
        mcs_sign_up_failed,
        mcs_successful_sign_up,
        mcs_are_you_sure_delete,
        mcs_failed_to_set_the,
        mcs_set_successfully,
        mcs_downloading,
        mcs_wrote,
        mcs_visit_again_later,
        mcs_restart_failed,
        mcs_upgrade_failed,
        mcs_connnected,
        mcs_connnected_to,
        mcs_not_select,
        mcs_message_list,
        mcs_saved_password,
        mcs_alert,
        mcs_no_record,
        mcs_new_about,
        mcs_device,
        mcs_config,
        mcs_change_password_failed,
        mcs_do_you_want_restart,
        mcs_do_you_want_restore,
        mcs_do_you_want_upgrade,
        mcs_load_end,
        mcs_loading,
        mcs_down_refresh,
        mcs_release_refresh,
        mcs_refreshing,
        mcs_release_then_loading_data_hint,
        mcs_pull_refresh_hint,
        mcs_restarting,
        mcs_upgraded_time,
        mcs_done,
        mcs_playback,
        mcs_i_o_alarm,
        mcs_alarm_action,
        mcs_alarm_sources,
        mcs_io_output,
        mcs_snapshots,
        mcs_snapshot,
        mcs_snapshot_interval,
        mcs_pre_record_length,
        mcs_nick_range_hint,
        mcs_save,
        mcs_close,
        mcs_snapshoting,
        mcs_snapshot_failed,
        mcs_record_failed,
        mcs_saved_successfully,
        mcs_save_failed,
        mcs_restart_to_take_effect,
        mcs_please_allow_access_album,
        mcs_please_allow,
        mcs_access_album,
        mcs_ios_privacy_setting_for_photo_prompt,
        mcs_execute_change,
        mcs_access_camera,
        mcs_please_allow_access_camera,
        mcs_ios_privacy_setting_for_camera_prompt,
        mcs_busy_when_write,
        mcs_unknown_error,
        mcs_i_know,
        mcs_segment,
        mcs_please_relogin,
        mcs_change_password_succeed,
        mcs_upgrade_to_ver,
        mcs_restore_failed,
        mcs_please_restart,
        mcs_keep_network_settings,
        mcs_not_connected,
        mcs_sdcard_not_ready,
        mcs_device_not_exist,
        mcs_disable,
        mcs_to_determine_the,
        mcs_alert_on,
        mcs_alert_off,
        mcs_alert_onoff,
        mcs_monday,
        mcs_tuesday,
        mcs_wednesday,
        mcs_thursday,
        mcs_friday,
        mcs_saturday,
        mcs_sunday,
        mcs_mon,
        mcs_tue,
        mcs_wed,
        mcs_thu,
        mcs_fri,
        mcs_sat,
        mcs_sun,
        mcs_scheduled_recording,
        mcs_schedule,
        mcs_scheduled_recording_status,
        mcs_folding,
        mcs_unfolding,
        mcs_end_time_should_lt_begin,
        mcs_recording,
        mcs_prerecord_interval_range_hint,
        mcs_snapshot_interval_range_hint,
        mcs_not_ready,
        mcs_availablesize,
        mcs_reboot,
        mcs_alerter,
        mcs_pir,
        mcs_isp,
        mcs_encoder,
        mcs_ok,
        mcs_fault,
        mcs_sensor_status,
        mcs_about,
        mcs_reset_now,
        mcs_reset_later,
        mcs_prompt,
        mcs_select,
        mcs_available_netword,
        mcs_request_send,
        mcs_blank_device_id,
        mcs_blank_username,
        mcs_blank_password,
        mcs_exist_user,
        mcs_invalid_user,
        mcs_invalid_email_addr,
        mcs_system_err,
        mcs_exceed_device,
        mcs_continue,
        mcs_prompt_exit,
        mcs_device_list,
        mcs_no_sdcard,
        mcs_no_hard_disk,
        mcs_show_more,
        mcs_shotsnop_exists,
        mcs_input_nick,
        mcs_nick_not_empty,
        mcs_input_new_pass,
        mcs_input_new_pass_again,
        mcs_new_password,
        mcs_modify_network_prompt,
        mcs_wifi_disable_prompt,
        mcs_eth_disable_prompt,
        mcs_ip,
        mcs_auto_obtain,
        mcs_manually_set,
        mcs_dns,
        mcs_dns_prim,
        mcs_client_mode,
        mcs_adhoc_mode,
        mcs_connect_fail,
        mcs_dhcp_server,
        mcs_display_text,
        mcs_repair_prompt_detail,
        mcs_format_prompt_detail,
        mcs_mount_prompt,
        mcs_umount_prompt,
        mcs_sdcard_reset,
        mcs_sdcard_repairing,
        mcs_sdcard_formating,
        mcs_sdcard_umount,
        mcs_valid,
        mcs_io,
        mcs_input,
        mcs_outinput,
        mcs_prompt_alert_on,
        mcs_auto_sync_date_time,
        mcs_alarm_record,
        mcs_username,
        mcs_re_enter_the_password,
        mcs_remember_me,
        mcs_home,
        mcs_install_the_plug,
        mcs_install_the_video_plug,
        mcs_install_now,
        mcs_temporarily_installed_use_ordinary_video,
        mcs_brightness,
        mcs_contrast,
        mcs_color_saturation,
        mcs_sharpness,
        mcs_duration,
        mcs_index,
        mcs_remark,
        mcs_media_stream,
        mcs_server,
        mcs_media_transfer,
        mcs_osd,
        mcs_manufacturer,
        mcs_model,
        mcs_plugin_version,
        mcs_network_interface,
        mcs_transfer_protocol,
        mcs_year,
        mcs_month,
        mcs_day,
        mcs_hour,
        mcs_minute,
        mcs_second,
        mcs_millisec,
        mcs_ntp,
        mcs_upload_upgrade,
        mcs_stop,
        mcs_info_rewind,
        mcs_fast_forward,
        mcs_previous_frame,
        mcs_next_frame,
        mcs_record_audio,
        mcs_week,
        mcs_all,
        mcs_id,
        mcs_select_all,
        mcs_call,
        mcs_activation,
        mcs_caption,
        mcs_alarm_device,
        mcs_not_installed,
        mcs_join_us_now,
        mcs_reconnect_please_wait,
        mcs_erasing,
        mcs_writing,
        mcs_dhcp,
        mcs_new_version,
        mcs_equipment_flip,
        mcs_device_status,
        mcs_audio_setting,
        mcs_nick_modify,
        mcs_ready,
        mcs_full,
        mcs_connecting,
        mcs_message_buffering,
        mcs_upgrade_finish,
        mcs_image,
        mcs_bar,
        mcs_init,
        mcs_confirm_new_password,
        mcs_continue_switch_wireless_network,
        mcs_restore_factory_settings_prompt,
        mcs_username_does_not_exis,
        mcs_username_already_exists,
        mcs_successful_whether_login,
        mcs_username_demand,
        mcs_the_password_is_empty,
        mcs_password_demand,
        mcs_password_empty,
        mcs_two_password_input_inconsistent,
        mcs_the_user_name_is_empty,
        mcs_upgrade_to_the_latest_version,
        mcs_subnet_mask_wrong_format,
        mcs_upgrade_successful_restart_to_take_effect,
        mcs_need_to_restart_the_camera_to_take_effect,
        mcs_not_allowed_close_two_network_cards,
        mcs_modified_successfully,
        mcs_connection_successfully,
        mcs_connection_is_interrupted,
        mcs_devices_in_the_account_overrun,
        mcs_format_error,
        mcs_change,
        mcs_refresh,
        mcs_connect,
        mcs_upgrade,
        mcs_activate,
        mcs_filter,
        mcs_reset,
        mcs_prompt_alert_off,
        mcs_invalid_server,
        mcs_upgrade_prompt,
        mcs_restart_prompt,
        mcs_repeat,
        mcs_scheduled_one,
        mcs_scheduled_two,
        mcs_scheduled_three,
        mcs_scheduled_four,
        mcs_more,
        mcs_leave,
        mcs_qrcode_scan,
        mcs_inserted,
        mcs_removed,
        mcs_upgrade_init,
        mcs_upgrade_download,
        mcs_check,
        mcs_audio_encoder_config,
        mcs_video_codec,
        mcs_download,
        mcs_client_download,
        mcs_for_more_clarity_smooth_video_experience,
        mcs_network,
        mcs_mobile_client_download,
        mcs_readonly,
        mcs_please_exit_and_relogin,
        mcs_add_device_failed,
        mcs_set_password,
        mcs_7x24_hours,
        mcs_mtalt,
        mcs_ioalt,
        mcs_time_zone,
        mcs_select_time,
        mcs_now,
        mcs_mipc_have_alert_notification,
        mcs_notification_center,
        mcs_sound,
        mcs_vibration,
        mcs_clear_cache,
        mcs_clear_cache_hint,
        mcs_successfully_cleared_cache,
        mcs_app_except_exit_hint,
        mcs_rate_us,
        mcs_password_too_simple_hint,
        mcs_check_for_new_version,
        mcs_contact_us,
        mcs_buffer_time,
        mcs_default,
        mcs_alarmed_devices,
        mcs_aec,
        mcs_permission_denied,
        mcs_full_screen,
        mcs_forgot_your_password,
        mcs_your_email,
        mcs_sign_up_confirmation,
        mcs_recovery_prompt,
        mcs_password_reset_confirmation,
        mcs_recovery_fail_no_mail,
        mcs_recovery_fail_invalid_link,
        mcs_recovery_ok_login,
        mcs_active_ok_login,
        mcs_active_fail_invalid_link,
        mcs_login_fail_inactive,
        mcs_sign_up_again,
        mcs_press_start_talk,
        mcs_release_stop_talk,
        mcs_delete_device,
        mcs_success_removed_equipment,
        mcs_remove_equipment_failure,
        mcs_device_busy,
        mcs_keep_testing,
        mcs_notify_tone,
        mcs_float_video,
        mcs_float_position,
        mcs_video_resolution,
        mcs_float_resolution,
        mcs_top_left,
        mcs_top_right,
        mcs_bottom_left,
        mcs_bottom_right,
        mcs_action_next,
        mcs_action_cancel,
        mcs_action_retry,
        mcs_action_add,
        mcs_is_add,
        mcs_action_apply,
        mcs_action_config,
        mcs_action_skip,
        mcs_action_ok,
        mcs_action_add_device,
        mcs_action_modify_password,
        mcs_action_config_wifi,
        mcs_state_connect_device,
        mcs_state_connect_device_fail,
        mcs_state_wait_device_online,
        mcs_state_device_online,
        mcs_state_success,
        mcs_fail,
        mcs_delete_success,
        mcs_state_add_device_success,
        mcs_state_add_device_fail,
        mcs_state_modify_pass_success,
        mcs_state_modify_pass_fail,
        mcs_state_config_wifi_success,
        mcs_state_config_wifi_fail,
        mcs_state_connecting_to,
        mcs_network_connect_type,
        mcs_prompt_modify_passwd,
        mcs_prompt_config_wifi,
        mcs_step1_check_connect,
        mcs_first_step_ethernet_connect,
        mcs_step2_check_connect,
        mcs_second_step_ethernet_connect,
        mcs_hint_check_network,
        mcs_the_end,
        mcs_hint_password_expired,
        mcs_hint_remove_ethernet,
        mcs_gateway_format_incorrect,
        mcs_dns_format_incorrect,
        mcs_subnet_mask_format_incorrect,
        mcs_ip_format_incorrect,
        mcs_login_sucess,
        mcs_donot_remind,
        mcs_clear_cache_signout_hint,
        mcs_devlist_adddev_hint,
        mcs_devlist_menu_hint,
        mcs_update_failed,
        mcs_new_small_160x90,
        mcs_new_half_320x180,
        mcs_new_normal_640x360,
        mcs_new_hd_1280x720,
        mcs_local,
        mcs_set_npapi,
        mcs_set_win32k,
        mcs_restart_browser,
        mcs_download_location,
        mcs_Networking_mode,
        mcs_wifi_intelligent_configuration,
        mcs_ethernet_configuration,
        mcs_wifi_connect,
        mcs_hard_disk,
        mcs_wifi_is_connection,
        mcs_wifi_intelligent_configuration_setup_ailure,
        mcs_box_list,
        mcs_repair_disk_prompt,
        mcs_format_disk_prompt,
        mcs_scheduled_alerting,
        mcs_scheduled_alerting_one,
        mcs_scheduled_alerting_two,
        mcs_scheduled_alerting_three,
        mcs_scheduled_alerting_four,
        mcs_wifi_config_cancle,
        mcs_wifi_config_prepare,
        mcs_wifi_config_first,
        mcs_wifi_config_second,
        mcs_wifi_config_third,
        mcs_wifi_config_success,
        mcs_wifi_config_failure,
        mcs_failure_prompt,
        mcs_display_password,
        mcs_action_smart_config_wifi,
        mcs_wifi_invalid,
        mcs_phone_not_connect_wifi,
        mcs_prompt_check_connection,
        mcs_wifi_cfg_ready,
        mcs_reset_complete,
        mcs_how_to_restore_factory_settings,
        mcs_forgetpass_action_wizard,
        mcs_prompt_check_device_connection,
        mcs_prompt_select_device_connection,
        mcs_input_wifi_name,
        mcs_action_previous,
        mcs_io_alert_range_hint,
        mcs_io_alert_time,
        mcs_smart,
        mcs_plan,
        mcs_mute,
        mcs_wind_speed,
        mcs_one,
        mcs_two,
        mcs_three,
        mcs_purify_mode,
        mcs_video_list,
        mcs_wifi_cfg_restore_factory_settings,
        mcs_mask_settings,
        mcs_notification_settings,
        mcs_alarm_settings,
        mcs_motion_detection,
        mcs_io_alarm,
        mcs_connect_status,
        mcs_motion_notification,
        mcs_device_connected,
        mcs_start_spray,
        mcs_available_network,
        mcs_select_wifi_wizard,
        mcs_input_wifi_password,
        mcs_device_admin_password,
        mcs_device_guest_password,
        mcs_user_admin_password,
        mcs_user_guest_password,
        mcs_save_network_set,
        mcs_nickname_not_set,
        mcs_current_wifi,
        mcs_current_password_strength,
        mcs_new_password_strength,
        mcs_needs_to_open_the_DHCP,
        mcs_picture,
        mcs_quality,
        mcs_size,
        mcs_guest_login,
        mcs_audio_and_video,
        mcs_volume,
        mcs_smooth,
        mcs_clear,
        mcs_handsfree,
        mcs_headphone,
        mcs_my,
        mcs_customer_service,
        mcs_firefox_flash_uninstall,
        mcs_plug,
        mcs_plug_load,
        mcs_plug_load_refuse,
        mcs_plug_load_auto,
        mcs_option,
        mcs_option_ok,
        mcs_voice_call_fails,
        mcs_umounted_prompt,
        mcs_mounted_prompt,
        mcs_format_prompt,
        mcs_repair_prompt,
        mcs_signup_prompt,
        mcs_wifi_connect_sucess_prompt,
        mcs_manual_input_prompt,
        mcs_qrscan_prompt,
        mcs_select_network_style,
        mcs_push,
        mcs_connect_power_prompt,
        mcs_fail_microphone,
        mcs_microphone_prompt,
        mcs_super_clear,
        mcs_high_clear,
        mcs_standard_clear,
        mcs_fluent_clear,
        mcs_deleting,
        mcs_event,
        mcs_one_hour,
        mcs_half_hour,
        mcs_five_min,
        mcs_category,
        mcs_time_length,
        mcs_new,
        mcs_week_setting_prompt,
        mcs_time_setting_prompt,
        mcs_today,
        mcs_wifi_password,
        mcs_register_prompt,
        mcs_click_login,
        mcs_not_login_prompt,
        mcs_product_presentation,
        mcs_help_feedback,
        mcs_help_information,
        mcs_feedback,
        mcs_feedback_des,
        mcs_feedback_praise,
        mcs_feedback_title_prompt,
        mcs_feedback_title,
        mcs_feedback_type_prompt,
        mcs_feedback_please_select,
        mcs_feedback_select_option1,
        mcs_feedback_select_option2,
        mcs_feedback_select_option9,
        mcs_feedback_dec_prompt,
        mcs_feedback_dec,
        mcs_feedback_upload_photo,
        mcs_preview_pic,
        mcs_Album,
        mcs_Photograph,
        mcs_camera_unavailable,
        mcs_feedback_submit,
        mcs_feedback_title_alert,
        mcs_feedback_type_alert,
        mcs_feedback_dec_alert,
        mcs_feedback_submit_success,
        mcs_feedback_submit_fail,
        mcs_connect_wifi_prompt,
        mcs_cloud,
        mcs_demo,
        mcs_shortest,
        mcs_no_history,
        mcs_download_pc_client,
        mcs_accounts_bind_email_exist,
        mcs_accounts_bind_email_busy,
        mcs_systemupdatetip_noversionnodetail,
        mcs_systemupdatetip_nodetail,
        mcs_systemupdatetip_updatefrom,
        mcs_systemupdatetip_updateto,
        mcs_systemupdatetip_sureforupdate,
        mcs_systemupdatetip_updatecontent,
        mcs_operate_prompt,
        mcs_operation_prompt,
        mcs_qrcode_prompt_content,
        mcs_qrcode_camera_distance,
        mcs_planvideo_datewizard,
        mcs_planvideo_timewizard,
        mcs_planvideo_wizard,
        mcs_email_unbind,
        mcs_email_unmatch,
        mcs_email_inactive,
        mcs_email_binded,
        mcs_user_binded_bymail,
        mcs_bind_email_fail,
        mcs_diagnosis,
        mcs_delay,
        mcs_packet_loss_rate,
        mcs_timezone_IDL,
        mcs_timezone_China,
        mcs_timezone_Midway,
        mcs_timezone_Niue,
        mcs_timezone_Samoa,
        mcs_timezone_Aleutian,
        mcs_timezone_Hawaii,
        mcs_timezone_Alaska,
        mcs_timezone_PSTUSCanada,
        mcs_timezone_Arizona,
        mcs_timezone_MSTUSCanada,
        mcs_timezone_CSTUSCanada,
        mcs_timezone_ESTUSCanada,
        mcs_timezone_ASTCanada,
        mcs_timezone_Newfoundland,
        mcs_timezone_Brasilia,
        mcs_timezone_BuenosAires,
        mcs_timezone_Santiago,
        mcs_timezone_Noronha,
        mcs_timezone_SouthGeorgia,
        mcs_timezone_Azores,
        mcs_timezone_CapeVerde,
        mcs_timezone_London,
        mcs_timezone_Lisbon,
        mcs_timezone_Dublin,
        mcs_timezone_Berlin,
        mcs_timezone_Amsterdam,
        mcs_timezone_Brussels,
        mcs_timezone_Budapest,
        mcs_timezone_Madrid,
        mcs_timezone_Paris,
        mcs_timezone_Rome,
        mcs_timezone_Sarajevo,
        mcs_timezone_Cairo,
        mcs_timezone_Amman,
        mcs_timezone_Beirut,
        mcs_timezone_Istanbul,
        mcs_timezone_Jerusalem,
        mcs_timezone_Athens,
        mcs_timezone_Baghdad,
        mcs_timezone_Riyadh,
        mcs_timezone_Qatar,
        mcs_timezone_Moscow,
        mcs_timezone_Tehran,
        mcs_timezone_Baku,
        mcs_timezone_Dubai,
        mcs_timezone_Tbilisi,
        mcs_timezone_Kabul,
        mcs_timezone_Karachi,
        mcs_timezone_Yekaterinburg,
        mcs_timezone_Maldives,
        mcs_timezone_Calcutta,
        mcs_timezone_Colombo,
        mcs_timezone_Katmandu,
        mcs_timezone_Almaty,
        mcs_timezone_Dhaka,
        mcs_timezone_Omsk,
        mcs_timezone_Thimbu,
        mcs_timezone_Rangoon,
        mcs_timezone_Bangkok,
        mcs_timezone_Jakarta,
        mcs_timezone_Vientiane,
        mcs_timezone_Harbin,
        mcs_timezone_Shanghai,
        mcs_timezone_Hongkong,
        mcs_timezone_Singapore,
        mcs_timezone_Taipei,
        mcs_timezone_Ulaanbaatar,
        mcs_timezone_Perth,
        mcs_timezone_Seoul,
        mcs_timezone_Tokyo,
        mcs_timezone_Darwin,
        mcs_timezone_Magadan,
        mcs_timezone_Vladivostok,
        mcs_timezone_Guam,
        mcs_timezone_Sydney,
        mcs_timezone_Canberra,
        mcs_timezone_Melbourne,
        mcs_timezone_Queensland,
        mcs_timezone_LordHowe,
        mcs_timezone_Guadalcanal,
        mcs_timezone_Fiji,
        mcs_timezone_Auckland,
        mcs_timezone_Apia,
        mcs_timezone_Fakaofo,
        mcs_timezone_Tongatapu,
        mcs_timezone_Kiritimati,
        mcs_connect_timeout,
        mcs_share,
        mcs_share_prompt_start,
        mcs_share_prompt_end,
        mcs_share_note,
        mcs_video_size,
        mcs_video_duration,
        mcs_my_folder,
        mcs_account_no_contain,
        mcs_edit,
        mcs_video_number,
        mcs_no_local_video,
        mcs_empty_folder,
        mcs_no_history_record,
        mcs_no_local_record,
        mcs_empty_cloud_list_first,
        mcs_empty_cloud_list_second,
        mcs_empty_cloud_list_third,
        mcs_empty_local_list_first,
        mcs_empty_local_list_second,
        mcs_empty_local_list_third,
        mcs_empty_local_list_forth,
        mcs_empty_local_list_fifth,
        mcs_record_prompt,
        mcs_record_download_prompt,
        mcs_register_buton_start,
        mcs_register_buton_end,
        mcs_product,
        mcs_user_or_password_invalid,
        mcs_share_video_prompt,
        mcs_download_video_prompt,
        mcs_hd_720P,
        mcs_hd_960P,
        mcs_hd_1080P,
        mcs_normal,
        mcs_common_problem,
        msc_enter_comment,
        msc_description,
        mcs_parameter,
        mcs_help_and_feedback,
        mcs_personal_center,
        mcs_version,
        mcs_language,
        mcs_new_user,
        mcs_have_account,
        mcs_try_it,
        mcs_sign_up_now,
        mcs_input_confirm_password,
        mcs_warranty_registration,
        mcs_get_more_cameras,
        mcs_user_inactive,
        mcs_format_options,
        mcs_slide_screen,
        mcs_zoom_in_screen,
        mcs_pause,
        mcs_source,
        mcs_magnetic,
        mcs_sos,
        mcs_input_download_path,
        mcs_download_path_name_error,
        mcs_active,
        mcs_out,
        mcs_quiet,
        mcs_scenes,
        mcs_accessory,
        mcs_quiet_mode,
        mcs_active_mode,
        mcs_out_mode,
        mcs_add_accessory,
        mcs_accessory_type,
        mcs_add_successfully,
        mcs_set_scene,
        mcs_to_set,
        mcs_add_accessory_button,
        mcs_auto_monday,
        mcs_auto_tuesday,
        mcs_auto_wednesday,
        mcs_auto_thursday,
        mcs_auto_friday,
        mcs_auto_saturday,
        mcs_auto_sunday,
        mcs_search,
        mcs_format_input,
        mcs_get_accessory_failed,
        mcs_get_scene_failed,
        mcs_search_failed,
        mcs_add_failed,
        mcs_ethernet_connect,
        mcs_action_click_retry,
        mcs_wifi_config_failure_detail,
        mcs_qrcode_connect,
        mcs_close_sound_prompt,
        mcs_qrcode_prompt_title,
        mcs_qrcode_prompt_detail,
        mcs_select_wifi_prompt,
        mcs_select_ethernet_prompt,
        mcs_enter_config_mode_prompt,
        mcs_no_enter_config_mode,
        mcs_record_time,
        mcs_stop_search,
        mcs_smart_wifi_setup,
        mcs_ethernet_setup,
        mcs_wifi_config_restore_start,
        mcs_wifi_config_restore_end,
        mcs_Sense_schedule,
        load_succeed,
        load_fail,
        refresh_succeed,
        refresh_fail,
        mcs_ensure_dev_power,
        all_refresh_complete,
        mcs_synchronize,
        mcs_synchronize_detail,
        mcs_Sense_Schedule_Set,
        mcs_Sence_Schedule_detail,
        mcs_Scene_set,
        mcs_Scene_set_detail,
        mcs_send_message,
        mcs_start_recording,
        mcs_start_capture,
        mcs_turn_on_video,
        mcs_search_press_button,
        mcs_add_fail1,
        mcs_add_fail2,
        mcs_recording_duration,
        mcs_settings_unsaved,
        mcs_want_save,
        mcs_camera,
        mcs_router,
        mcs_start_up,
        mcs_cancle_add,
        mcs_visit_photo_fail,
        mcs_camera_cell,
        mcs_myphoto,
        mcs_select_photo,
        mcs_app_new_version,
        mcs_update_new_version,
        mcs_app_new_version_prompt,
        download_failed,
        mcs_connect_server_prompt,
        mcs_local_search,
        mcs_choose_device_type,
        mcs_wifi_state,
        mcs_sweep,
        mcs_wifi_config_tip,
        mcs_ethernet_config_tip,
        mcs_ethernet_connect_step_one,
        mcs_ethernet_connect_step_two,
        mcs_sweep_qrcode_tip,
        mcs_sound_config_tip,
        mcs_sosalt,
        mcs_dooralt,
        mcs_wifi_config_restore,
        mcs_voice_remind_heard,
        mcs_netWork_prompt,
        mcs_con_netWork,
        mcs_no_netWork,
        mcs_exception_des,
        mcs_exception_prompt,
        mcs_erro_diagnosis,
        mcs_erro_log_des,
        mcs_is_submitting,
        mcs_firmware_version,
        mcs_device_assembly,
        mcs_forgetpass_action_wizard_old,
        mcs_device_assembly_mipc,
        mcs_device_connect_power_prompt,
        mcs_lights_sound,
        mcs_connect_power,
        mcs_search_magnetic,
        mcs_add_magnetic,
        mcs_already_downloaded,
        mcs_my_order,
        mcs_auto_mode,
        mcs_new_small,
        mcs_new_half,
        mcs_new_normal,
        mcs_new_hd,
        mcs_scene_now,
        mcs_please_install_wechat,
        mcs_wechat_not_support,
        mcs_motion_alert,
        mcs_io_alert,
        mcs_valid_user_name,
        mcs_binding_mailbox,
        mcs_send_mailbox_succuess_prev,
        mcs_send_mailbox_succuess_next,
        mcs_all_image,
        mcs_unavailable_image,
        mcs_set_nickname,
        mcs_search_timeout,
        mcs_screen_size,
        mcs_screen_reset,
        mcs_wifi_network_prompt,
        mcs_fault_diagnosis,
        mcs_sever_diagnosis,
        mcs_select_problem,
        mcs_connot_lonin,
        mcs_connot_play,
        mcs_add_problems,
        mcs_encounterer_problems,
        mcs_diagnostic_network,
        mcs_network_diagnostic_prompt,
        mcs_network_diagnostic,
        mcs_connecting_server,
        mcs_diagnostic_process_prompt,
        mcs_diagnostic_results,
        mcs_diagnostic_results_received,
        mcs_diagnostic_results_prompt,
        mcs_results_no_abnormality,
        mcs_no_abnormality_prompt,
        mcs_continue_diagnosis,
        mcs_diagnosis_connot_sent,
        mcs_email_sends,
        mcs_email_sends_prompt,
        mcs_diagnosis_send,
        mcs_diagnosis_email,
        mcs_send_successful,
        mcs_diagnosis_type_select_prompt,
        mcs_stop_diagnosis,
        mcs_detail_diagnosis_prompt,
        mcs_detail_diagnosis_stop_prompt,
        mcs_exit_detail_diagnosis,
        mcs_network_connection_unavailable,
        mcs_Failed_connect_Internet,
        mcs_connect_internet_note,
        mcs_connect_internet_detail_first,
        mcs_connect_internet_detail_second,
        mcs_connect_wifi_note,
        mcs_connect_wifi_detail,
        mcs_device_or_phone_time_zone_not_equals_please_select,
        mcs_phone_timezone,
        mcs_timezone_change,
        mcs_mail_send,
        mcs_yes_verif,
        mcs_no_verif,
        mcs_camera_found_new_version_y_n_upgrade,
        mcs_auto_adapt_split_screen,
        mcs_four_split_screen,
        mcs_nine_split_screen,
        mcs_twelve_split_screen,
        mcs_not_connection_server,
        mcs_more_options,
        mcs_bind_email_prompt,
        mcs_login_now,
        mcs_device_connect_power,
        mcs_device_connect_ethernet,
        mcs_device_connect_ethernet_prompt,
        mcs_pwd_format,
        mcs_client_new,
        mcs_user_guide,
        mcs_ebitcam_download_describe,
        mcs_mipc_download_describe,
        mcs_guide_download,
        mcs_password_admin,
        mcs_already_read,
        mcs_privacy_policy,
        mcs_not_agree_privacy_policy,
        mcs_reload,
        mcs_start_download,
        mcs_video_play_fail,
        mcs_download_app_tips,
        mcs_memo,
        mcs_fencer,
        mcs_focus,
        mcs_mini,
        mcs_shield,
        mcs_snowman,
        mcs_device_type,
        mcs_connect_device_wifi,
        mcs_send_diagnosis_results,
        mcs_local_file,
        mcs_local_device,
        mcs_export_sd_data,
        mcs_shaking,
        mcs_outdoor,
        mcs_card,
        mcs_wifi_connection,
        mcs_home_mode,
        mcs_away_home_mode,
        mcs_auto_switch_mode,
        mcs_select_scene_mode,
        mcs_7x24_hours_prompt,
        mcs_all_day_recording,
        mcs_home_mode_prompt,
        mcs_away_home_mode_prompt,
        mcs_at_home,
        mcs_away_home,
        mcs_set_timezone_prompt_start,
        mcs_set_timezone_prompt_end,
        mcs_set_wifi_remind_head,
        mcs_set_wifi_remind_1,
        mcs_set_wifi_remind_2,
        mcs_set_wifi_remind_3,
        mcs_set_wifi_remind_4,
        mcs_set_wifi_remind_5,
        mcs_record_save_to_my_file,
        mcs_view_now,
        mcs_search_sos_strat,
        mcs_search_sos_end,
        mcs_search_magnetic_start,
        mcs_search_magnetic_end,
        mcs_adding,
        mcs_record_empty_set_sd,
        mcs_video_play_offline,
        mcs_video_play_network_fail,
        mcs_alert_notify_guide1,
        mcs_alert_notify_guide2,
        mcs_alert_notify_guide3,
        mcs_alert_notify_guide4,
        mcs_plan_protect_guide1,
        mcs_plan_protect_guide2,
        mcs_plan_protect_guide3,
        mcs_plan_protect_guide4,
        mcs_plan_record_guide,
        mcs_plan_record_guide1,
        mcs_plan_record_guide2,
        mcs_forgetpass_action_prompt,
        mcs_cloud_box;
    function mcs_init_langs(lang)
    {
        if(lang == "en")
        {
            mcs_name                    = "Name";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "Name";
            mcs_old_nick                = "Nick";
            mcs_linked                  = "Linked";
            mcs_sign_in                 = "Sign in";
            mcs_back                    = "Back";
            mcs_will_back               = "Will back";
            mcs_add                     = "Add";
            mcs_add_device              = "Add Device";
            mcs_device_existed          = "Device already exists.";
            mcs_cancel                  = "Cancel";
            mcs_exit                    = "Exit";
            mcs_remember_password       = "Remember password";
            mcs_password_remembered     = "Password remembered";
            mcs_sign_ining              = "Sign in ...";
            mcs_cloud_server            = "Cloud server";
            mcs_input_device_id         = "Input device ID";
            mcs_input_username          = "Input username";
            mcs_input_email_addr        = "Enter e-mail address";
            mcs_email_address           = "Email address";
            mcs_email                   = "email";
            mcs_binding                 = "Binding";
            mcs_binding_email           = "Binding Email";
            mcs_binding_send_prompt     = "Verification message has been sent, please sign-mail authentication as soon as possible";
            mcs_binding_email_prompt    = "If you forget the password,you can reset by the mailbox.";
            mcs_input_password          = "Input password";
            mcs_access_server_failed    = "Access server failed.";
            mcs_device_offline          = "Device offline";
            mcs_invalid_password        = "Invalid password";
            mcs_invalid_dev             = "Invalid dev";
            mcs_login_faided            = "Login failed.";
            mcs_invalid_qrcode          = "Invalid QR-code.";
            mcs_please_input_username   = "Please input username.";
            mcs_please_input_password   = "Please input password.";
            mcs_qrcode_scan_hint        = "Scan QR code";
            mcs_device_list_empty       = "Device list is empty.";
            mcs_record_list_is_empty    = "The record list is empty.";
            mcs_password_expired        = "Password expired";
            mcs_set_video_size          = "Resolution ";
            mcs_hd_1280x720             = "HD [1280x720]";
            mcs_auto                    = "Auto";
            mcs_normal_640x360          = "Normal [640x360]";
            mcs_half_320x180            = "Half [320x180]";
            mcs_small_160x90            = "Small [160x90]";
            mcs_play                    = "Live";
            mcs_settings                = "Settings";
            mcs_messages                = "Records";
            mcs_alarm                   = "Alarm";
            mcs_delete                  = "Delete";
            mcs_delete_camera           = "Delete device ";
            mcs_apply                   = "Apply";
            mcs_speed                   = "Speed";
            mcs_others                  = "Others";
            mcs_audio                   = "Audio";
            mcs_speaker                 = "Speaker";
            mcs_mic                     = "Mic";
            mcs_power_frequency         = "Power frequency";
            mcs_online_upgrade          = "Online upgrade";
            mcs_restore_the_factory_settings = "Restore to factory settings";
            mcs_restore                 = "Restore";
            mcs_restore_camera          = "Restart device";
            mcs_start_upgrade           = "Start upgrade";
            mcs_system                  = "System";
            mcs_system_settings         = "System Settings";
            mcs_online                  = "Online";
            mcs_offline                 = "Offline";
            mcs_query                   = "Query";
            mcs_begin_time              = "Begin time";
            mcs_end_time                = "End time";
            mcs_mode                    = "Mode";
            mcs_opened                  = "Opened";
            mcs_high                    = "High";
            mcs_middle                  = "Medium";
            mcs_low                     = "Low";
            mcs_io_alert_input          = "I/O input";
            mcs_io_alert_output         = "I/O output";
            mcs_normally_open           = "Normally open";
            mcs_normally_close          = "Normally close";
            mcs_motion_detection_sensitivity = "Motion detection sensitivity";
            mcs_daytime                 = "Day";
            mcs_night                   = "Night";
            mcs_sdcord                  = "SD Card";
            mcs_storage_device          = "Storage Device";
            mcs_set_mask                = "Set Mask";
            mcs_status                  = "Status";
            mcs_capacity                = "Capacity";
            mcs_usage                   = "Usage";
            mcs_format                  = "Format";
            mcs_repair                  = "Fix";
            mcs_formating               = "Formating";
            mcs_repairing               = "Repairing";
            mcs_mounted                 = "Mounted";
            mcs_unmounted               = "Unmounted";
            mcs_mount                   = "Mount";
            mcs_unmount                 = "Unmount";
            mcs_ethernet                = "Ethernet";
            mcs_wifi                    = "Wi-Fi";
            mcs_enabled                 = "Enabled";
            mcs_mac_address             = "MAC address";
            mcs_network_status          = "Network status";
            mcs_wifi_mode               = "Wi-Fi mode";
            mcs_client                  = "Client";
            mcs_ap                      = "AP";
            mcs_start_address           = "Start address";
            mcs_end_address             = "End address";
            mcs_gateway                 = "Gateway";
            mcs_select_network          = "Select network";
            mcs_dhcp_ip                 = "IP : Use DHCP";
            mcs_dhcp_dns                = "DNS : Use DHCP";
            mcs_ip_address              = "IP address";
            mcs_network_mask            = "Network mask";
            mcs_input_secondary_dns     = "Input secondary DNS";
            mcs_secondary_dns           = "Secondary DNS";
            mcs_input_dns               = "Input DNS";
            mcs_input_alternate_dns     = "Input alternate DNS";
            mcs_input_ip                = "Input IP";
            mcs_input_gateway           = "Input gateway";
            mcs_input_network_mask      = "Input network mask";
            mcs_wifi_list               = "Wi-Fi list";
            mcs_display_date            = "Display date";
            mcs_date_format             = "Date format";
            mcs_display_time            = "Display time";
            mcs_time_format             = "Time format";
            mcs_24_hour                 = "24-hour";
            mcs_12_hour                 = "12-hour";
            mcs_display_weeks           = "Display day";
            mcs_date_time               = "Day/Time";
            mcs_set_time                = "Set time";
            mcs_set_week                = "Set week";
            mcs_stream                  = "Stream";
            mcs_encode                  = "Encode";
            mcs_resolution              = "Resolution";
            mcs_frame_fate              = "Frame rate(FPS)";
            mcs_maximum_bitrate         = "Maximum bitrate";
            mcs_minimum_bitrate         = "Minimum bitrate";
            mcs_i_frame_interval        = "I-Frame interval";
            mcs_video                   = "Video";
            mcs_sampling_rate           = "Sampling rate(kHz)";
            mcs_nickname                = "Nickname";
            mcs_old_password            = "Old password";
            mcs_confirm_password        = "Confirm password";
            mcs_modify_password         = "Change Password";
            mcs_password                = "Password";
            mcs_admin_password          = "Admin password";
            mcs_guest_password          = "Guest password";
            mcs_product_info            = "Product info";
            mcs_software_version        = "Software Version";
            mcs_device_id               = "Device ID";
            mcs_operation               = "Operation";
            mcs_record                  = "Record";
            mcs_record_2                = "Playback";
            mcs_upgrade_now             = "Upgrade now";
            mcs_upgrading               = "Upgrading";
            mcs_already_latest_version  = "No update available";
            mcs_sensitivty              = "Sensitivity";
            mcs_user_defined            = "User-defined";
            mcs_time                    = "Time";
            mcs_date                    = "Day";
            mcs_finish                  = "Finish";
            mcs_delete_fail             = "Delete failed";
            mcs_motion                  = "Motion";
            mcs_start                   = "Start";
            mcs_talk                    = "Talk";
            mcs_password_input_inconsistent = "Password input inconsistent.";
            mcs_input_6_to_20_litters   = "Input 6-20 letters(a-z、A-Z) or numbers(0-9)";
            mcs_user_letter_range_hint  = "Username is 6-32 letters(a-z、A-Z) or numbers(0-9) and begin with a letter";
            mcs_password_range_hint     = "Password is 6-32 characters - letters/numbers.";
            mcs_begin_with_the_letters  = "Begin with the letters.";
            mcs_sign_up                 = "Sign up";
            mcs_sign_up_failed          = "Sign up failed.";
            mcs_successful_sign_up      = "Sign up successfully.";
            mcs_are_you_sure_delete     = "Confirm delete?";
            mcs_failed_to_set_the       = "Set failed.";
            mcs_set_successfully        = "Set successfully";
            mcs_downloading             = "Downloading";
            mcs_wrote                   = "Wrote";
            mcs_visit_again_later       = "Please visit again later";
            mcs_restart_failed          = "Restart failed";
            mcs_upgrade_failed          = "Upgrade failed";
            mcs_connnected              = "Connected";
            mcs_connnected_to           = "Connected to";
            mcs_not_select              = "not selected";
            mcs_message_list            = "Message list";
            mcs_saved_password          = "Saved password";
            mcs_alert                   = "Alert";
            mcs_no_record               = "No record";
            mcs_new_about               = "New : about";
            mcs_device                  = "Device";
            mcs_config                  = "Config";
            mcs_change_password_failed  = "Change password failed";
            mcs_do_you_want_restart     = "Do you want to restart?";
            mcs_do_you_want_restore     = "Confirm restore?";
            mcs_do_you_want_upgrade     = "Do you want to upgrade?";
            mcs_load_end                = "End of videos";
            mcs_loading                 = "Loading...";
            mcs_down_refresh            = "Pull down to refresh";
            mcs_release_refresh         = "Refresh release";
            mcs_refreshing              = "Refreshing";
            mcs_release_then_loading_data_hint = "Release to load";
            mcs_pull_refresh_hint       = "Pull to refresh";
            mcs_restarting              = "Restarting";
            mcs_upgraded_time           = "Upgraded time : ";
            mcs_done                    = "Done";
            mcs_playback                = "Playback";
            mcs_i_o_alarm               = "I/O alarm";
            mcs_alarm_action            = "Motion detection";
            mcs_alarm_sources           = "Alarm sources";
            mcs_io_output               = "Relay output";
            mcs_snapshots               = "Snapshots";
            mcs_snapshot                = "Snapshot";
            mcs_snapshot_interval       = "Snapshot interval(s)";
            mcs_pre_record_length       = "Pre-record length(s)";
            mcs_nick_range_hint         = "Camera name must contain less than 20 characters.";
            mcs_save                    = "Save";
            mcs_close                   = "Close";
            mcs_snapshoting             = "Snapshoting";
            mcs_snapshot_failed         = "Snapshot failed";
            mcs_record_failed           = "Record failed";
            mcs_saved_successfully      = "Saved successfully";
            mcs_save_failed             = "Save failed";
            mcs_restart_to_take_effect  = "Restart to take effect.";
            mcs_please_allow_access_album = "Please allow MIPC to access your photo album.";
            mcs_please_allow            = "Please allow ";
            mcs_access_album            = " to access your photo album.";
            mcs_ios_privacy_setting_for_photo_prompt = "You can change settings in the iPhone \"Settings->Privacy->Photos\", find the application \"";
            mcs_execute_change          = "\" change.";
            mcs_access_camera           = " to access your camera.";
            mcs_please_allow_access_camera = "Please allow MIPC to access your camera.";
            mcs_ios_privacy_setting_for_camera_prompt = "You can change settings in the iPhone \"Settings->Privacy->Camera\", find the application \"";
            mcs_busy_when_write         = "Busy writing";
            mcs_unknown_error           = "Unknown error";
            mcs_i_know                  = "I know";
            mcs_segment                 = "Segment";
            mcs_please_relogin          = "Please relogin";
            mcs_change_password_succeed = "Password changed successfully";
            mcs_upgrade_to_ver          = "Upgrade to ver";
            mcs_restore_failed          = "Restore failed";
            mcs_please_restart          = "Please restart";
            mcs_keep_network_settings   = "Keep network settings and password";
            mcs_not_connected           = "Not connected";
            mcs_sdcard_not_ready        = "SD card not ready.";
            mcs_device_not_exist        = "Device doesn\'t exist.";
            mcs_disable                 = "Disable";
            mcs_to_determine_the        = "To determine the";
            mcs_alert_on                = "Turn alert on";
            mcs_alert_off               = "Turn alert off";
            mcs_alert_onoff             = "Alert on/off";
            mcs_monday                  = "Monday";
            mcs_tuesday                 = "Tuesday";
            mcs_wednesday               = "Wednesday";
            mcs_thursday                = "Thursday";
            mcs_friday                  = "Friday";
            mcs_saturday                = "Saturday";
            mcs_sunday                  = "Sunday";
            mcs_mon                     = "Mon";
            mcs_tue                     = "Tue";
            mcs_wed                     = "Wed";
            mcs_thu                     = "Thu";
            mcs_fri                     = "Fri";
            mcs_sat                     = "Sat";
            mcs_sun                     = "Sun";
            mcs_scheduled_recording     = "Schedule Recording";
            mcs_schedule                = "Schedule";
            mcs_scheduled_recording_status = "Scheduled recording status";
            mcs_folding                 = "Folding";
            mcs_unfolding               = "Unfolding";
            mcs_end_time_should_lt_begin = "End time must be greater than the start time.";
            mcs_recording               = "Recording";
            mcs_prerecord_interval_range_hint = "Pre-record interval should be less than 6 seconds.";
            mcs_snapshot_interval_range_hint = "Snapshot interval should be 0 or greater than 60.";
            mcs_not_ready               = "Not ready";
            mcs_availablesize           = "Available size";
            mcs_reboot                  = "Restart";
            mcs_alerter                 = "Alert";
            mcs_pir                     = "PIR";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "Encoder";
            mcs_ok                      = "OK";
            mcs_fault                   = "Fault";
            mcs_sensor_status           = "Sensor status";
            mcs_about                   = "About";
            mcs_reset_now               = "Restart now";
            mcs_reset_later             = "Restart later";
            mcs_prompt                  = "Prompt";
            mcs_select                  = "Select";
            mcs_available_netword       = "Network is not available, config it?";
            mcs_request_send            = "Sending request...";
            mcs_blank_device_id         = "Device ID can not be empty.";
            mcs_blank_username          = "Username can not be empty.";
            mcs_blank_password          = "Password can not be empty.";
            mcs_exist_user              = "User already exists";
            mcs_invalid_user            = "Invalid user";
            mcs_invalid_email_addr      = "Invalid e-mail address.";
            mcs_system_err              = "System error";
            mcs_exceed_device           = "Users of the device overrun.";
            mcs_continue                = "Continue";
            mcs_prompt_exit             = "Would you like to exit?";
            mcs_device_list             = "Device list";
            mcs_no_sdcard               = "No SD card";
            mcs_no_hard_disk            = "No Hard Disk ";
            mcs_show_more               = "More...";
            mcs_shotsnop_exists         = "Photo already exists";
            mcs_input_nick              = "Input device name";
            mcs_nick_not_empty          = "Device name cannot be empty.";
            mcs_input_new_pass          = "Input new password";
            mcs_input_new_pass_again    = "Input new password again";
            mcs_new_password            = "New password";
            mcs_modify_network_prompt   = "Network modifications may cause network failure, proceed anyway?";
            mcs_wifi_disable_prompt     = "Disable Wi-Fi，Continue?";
            mcs_eth_disable_prompt      = "Disable ethernet. Continue?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "Use DHCP";
            mcs_manually_set            = "Use static";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "Primary DNS";
            mcs_client_mode             = "Client";
            mcs_adhoc_mode              = "Adhoc";
            mcs_connect_fail            = "Connect failed";
            mcs_dhcp_server             = "DHCP server";
            mcs_display_text            = "Display text";
            mcs_repair_prompt_detail    = "Repair may cause some data loss. Continue?";
            mcs_format_prompt_detail    = "Format will erase all data on SD card. Continue?";
            mcs_mount_prompt            = "Mount SD card. Continue?";
            mcs_umount_prompt           = "Video and photo cannot be saved after SD card is unmounted. Continue?";
            mcs_sdcard_reset            = "Success. Restart to activate. Continue?";
            mcs_sdcard_repairing        = "Repairing, wait to restart.";
            mcs_sdcard_formating        = "Formatting, wait to restart.";
            mcs_sdcard_umount           = "Unmount";
            mcs_valid                   = "Valid";
            mcs_io                      = "IO alarm";
            mcs_input                   = "Input";
            mcs_outinput                = "Output";
            mcs_prompt_alert_on         = "Alert on，Continue?";
            mcs_auto_sync_date_time     = "Auto sync";
            mcs_alarm_record            = "Alarm record";
            mcs_username                = "User name";
            mcs_re_enter_the_password   = "Input the password again";
            mcs_remember_me             = "Stay signed in";
            mcs_home                    = "Home";
            mcs_install_the_plug        = "Install plug-in";
            mcs_install_the_video_plug  = "Install video plug-in";
            mcs_install_now             = "Install now";
            mcs_temporarily_installed_use_ordinary_video = "No, install later";
            mcs_brightness              = "Brightness";
            mcs_contrast                = "Contrast";
            mcs_color_saturation        = "Saturation";
            mcs_sharpness               = "Sharpness";
            mcs_duration                = "Duration";
            mcs_index                   = "Index";
            mcs_remark                  = "Remark";
            mcs_media_stream            = "Media";
            mcs_server                  = "Server";
            mcs_media_transfer          = "Transfer media";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "Manufacturer";
            mcs_model                   = "Model";
            mcs_plugin_version          = "Plug-in version";
            mcs_network_interface       = "Network interface";
            mcs_transfer_protocol       = "Transfer protocol";
            mcs_year                    = "Year";
            mcs_month                   = "Month";
            mcs_day                     = "Day";
            mcs_hour                    = "Hour";
            mcs_minute                  = "Minute";
            mcs_second                  = "Second";
            mcs_millisec                = "Millisec";
            mcs_ntp                     = "Time server";
            mcs_upload_upgrade          = "Upload upgrade";
            mcs_stop                    = "Stop";
            mcs_info_rewind             = "Rewind";
            mcs_fast_forward            = "Fast forward";
            mcs_previous_frame          = "Previous frame";
            mcs_next_frame              = "Next frame";
            mcs_record_audio            = "Record audio";
            mcs_week                    = "Week";
            mcs_all                     = "All";
            mcs_id                      = "ID";
            mcs_select_all              = "Select all";
            mcs_call                    = "Call";
            mcs_activation              = "Activation";
            mcs_caption                 = "Upload file";
            mcs_alarm_device            = "Motion sensitivity";
            mcs_not_installed           = "Not installed";
            mcs_join_us_now             = "Join us now";
            mcs_reconnect_please_wait   = "Reconnect, please wait";
            mcs_erasing                 = "Erasing";
            mcs_writing                 = "Writing";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "Have new version";
            mcs_equipment_flip          = "Flip";
            mcs_device_status           = "Device status";
            mcs_audio_setting           = "Audio setting";
            mcs_nick_modify             = "Modify camera name";
            mcs_ready                   = "Ready";
            mcs_full                    = "Full";
            mcs_connecting              = "Connecting";
            mcs_message_buffering       = "Message buffering";
            mcs_upgrade_finish          = "Upgrade finish";
            mcs_image                   = "Image";
            mcs_bar                     = "Records";
            mcs_init                    = "Init";
            mcs_confirm_new_password    = "Confirm new password";
            mcs_continue_switch_wireless_network = "Switch network maybe cause network failure. Continue?";
            mcs_restore_factory_settings_prompt = "Device will restart after restore. Restore to factory settings?";
            mcs_username_does_not_exis  = "Username does not exist.";
            mcs_username_already_exists = "Username already exists.";
            mcs_successful_whether_login = "Sign up successfully, sign in now?";
            mcs_username_demand         = "6-20 letters or numbers begin with letters.";
            mcs_the_password_is_empty   = "The password is empty";
            mcs_password_demand         = "6-20 letters or numbers begin with the letters.";
            mcs_password_empty          = "Retype password";
            mcs_two_password_input_inconsistent = "Passwords do not match.";
            mcs_the_user_name_is_empty  = "The user name is empty.";
            mcs_upgrade_to_the_latest_version = "Upgrade to the latest version";
            mcs_subnet_mask_wrong_format = "Network mask invalid format.";
            mcs_upgrade_successful_restart_to_take_effect = "Upgrade successful, restart the device.";
            mcs_need_to_restart_the_camera_to_take_effect = "Need to restart the device to take effect.";
            mcs_not_allowed_close_two_network_cards = "Ethernet and Wi-Fi can not be disabled simultaneously.";
            mcs_modified_successfully   = "Modified successfully";
            mcs_connection_successfully = "Connected";
            mcs_connection_is_interrupted = "Lost connection";
            mcs_devices_in_the_account_overrun = "Devices in the account overrun.";
            mcs_format_error            = "Format error";
            mcs_change                  = "Change";
            mcs_refresh                 = "Refresh";
            mcs_connect                 = "Connect";
            mcs_upgrade                 = "Upgrade";
            mcs_activate                = "Activate";
            mcs_filter                  = "Filter";
            mcs_reset                   = "Reset";
            mcs_prompt_alert_off        = "Alert off，Continue?";
            mcs_invalid_server          = "Invalid time server.";
            mcs_upgrade_prompt          = "Upgrade device software. Continue?";
            mcs_restart_prompt          = "Restart device,continue?";
            mcs_repeat                  = "Repeat";
            mcs_scheduled_one           = "Schedule 1";
            mcs_scheduled_two           = "Schedule 2";
            mcs_scheduled_three         = "Schedule 3";
            mcs_scheduled_four          = "Schedule 4";
            mcs_more                    = "More";
            mcs_leave                   = "Release to load more";
            mcs_qrcode_scan             = "QR Code Scan";
            mcs_inserted                = "Inserted";
            mcs_removed                 = "Removed";
            mcs_upgrade_init            = "Start upgrade";
            mcs_upgrade_download        = "Download upgrade";
            mcs_check                   = "Check";
            mcs_audio_encoder_config    = "Audio codec";
            mcs_video_codec             = "Video codec";
            mcs_download                = "Download";
            mcs_client_download         = "Client download";
            mcs_for_more_clarity_smooth_video_experience = "For more clarity, smooth video experience.";
            mcs_network                 = "Network";
            mcs_mobile_client_download  = "Mobile client download";
            mcs_readonly                = "Read only";
            mcs_please_exit_and_relogin = "Please exit and relogin.";
            mcs_add_device_failed       = "Add device failed";
            mcs_set_password            = "Set password";
            mcs_7x24_hours              = "24/7";
            mcs_mtalt                   = "%@ : Motion alert";
            mcs_ioalt                   = "%@ : I/O alert";
            mcs_time_zone               = "Time zone";
            mcs_select_time             = "Select time";
            mcs_now                     = "Now";
            mcs_mipc_have_alert_notification = "maxCam alert notification";
            mcs_notification_center     = "Notification center";
            mcs_sound                   = "Sound";
            mcs_vibration               = "Vibration";
            mcs_clear_cache             = "Clear Cache";
            mcs_clear_cache_hint        = "Are you sure you want to clear the cache?";
            mcs_successfully_cleared_cache = "Cleared the cache successfully.";
            mcs_app_except_exit_hint    = "Sorry, the application has encountered an exception and will exit.";
            mcs_rate_us                 = "Rate us";
            mcs_password_too_simple_hint = "Password is too simple, change it to improve security.";
            mcs_check_for_new_version   = "Check for new version";
            mcs_contact_us              = "Contact us";
            mcs_buffer_time             = "Buffer time";
            mcs_default                 = "Default";
            mcs_alarmed_devices         = "Alarmed devices";
            mcs_aec                     = "Echo cancellation";
            mcs_permission_denied       = "No authorization ";
            mcs_full_screen             = "Full screen";
            mcs_forgot_your_password    = "Forgot password";
            mcs_your_email              = "Your email";
            mcs_sign_up_confirmation    = "A confirmation email is being sent to verify your email address. Click the link to activate your account.";
            mcs_recovery_prompt         = "Enter your email address (user name) below, we will send you an email with instructions on how to reset your password.";
            mcs_password_reset_confirmation = "Follow the directions in the email being sent to the submitted email address to reset password.";
            mcs_recovery_fail_no_mail   = "Password recovery fail, no email connected with this account.";
            mcs_recovery_fail_invalid_link = "Password recovery fail, please follow instructions in recovery email.";
            mcs_recovery_ok_login       = "Password recovery success. Sign in now.";
            mcs_active_ok_login         = "Account activation successfully. Sign in now.";
            mcs_active_fail_invalid_link = "Account activation fail. Try again.";
            mcs_login_fail_inactive     = "Inactive account. Please follow the instructions of active email to activate new account.";
            mcs_sign_up_again           = "Sign up again";
            mcs_press_start_talk        = "Press to speak";
            mcs_release_stop_talk       = "Release to stop";
            mcs_delete_device           = "Delete";
            mcs_success_removed_equipment = "Delete device successfully";
            mcs_remove_equipment_failure = "Remove equipment failure";
            mcs_device_busy             = "Device is busy now";
            mcs_keep_testing            = "Continue test";
            mcs_notify_tone             = "Notification Ringtone";
            mcs_float_video             = "Enable floating video";
            mcs_float_position          = "Floating video position";
            mcs_video_resolution        = "Video resolution";
            mcs_float_resolution        = "Floating video resolution";
            mcs_top_left                = "Top left";
            mcs_top_right               = "Top right";
            mcs_bottom_left             = "Bottom left";
            mcs_bottom_right            = "Bottom right";
            mcs_action_next             = "Next";
            mcs_action_cancel           = "Cancel";
            mcs_action_retry            = "Retry ";
            mcs_action_add              = "Add";
            mcs_is_add                  = "Whether to add";
            mcs_action_apply            = "Apply";
            mcs_action_config           = "Config";
            mcs_action_skip             = "Skip";
            mcs_action_ok               = "Ok";
            mcs_action_add_device       = "Add device";
            mcs_action_modify_password  = "Modify password";
            mcs_action_config_wifi      = "Config Wi-Fi";
            mcs_state_connect_device    = "Connecting device";
            mcs_state_connect_device_fail = "Fail to connect the device.";
            mcs_state_wait_device_online = "Waiting for device to be online.";
            mcs_state_device_online     = "Online";
            mcs_state_success           = "Success";
            mcs_fail                    = "Failed";
            mcs_delete_success          = "Delete success";
            mcs_state_add_device_success = "Add device successfully.";
            mcs_state_add_device_fail   = "Fail to add device.";
            mcs_state_modify_pass_success = "Modify password successfully";
            mcs_state_modify_pass_fail  = "Fail to modify password.";
            mcs_state_config_wifi_success = "Set Wi-Fi successfully.";
            mcs_state_config_wifi_fail  = "Connect fail";
            mcs_state_connecting_to     = "Connecting to";
            mcs_network_connect_type    = "Your device is offline, please make sure your device is powered on, then choose network connection type:";
            mcs_prompt_modify_passwd    = "For security, change the device default password.The new password should not be less than six characters.";
            mcs_prompt_config_wifi      = "Your device is still not connected to your Wi-Fi, please configure your Wi-Fi.";
            mcs_step1_check_connect     = "Step 1 : Connect the camera to your router using wire.";
            mcs_first_step_ethernet_connect = "Step 2 : Connect one end of a network cable to connect to your router and the other end of the access device network port.";
            mcs_step2_check_connect     = "Step 2 : Power on your camera.";
            mcs_second_step_ethernet_connect = "Step 1 : Power on your device.";
            mcs_hint_check_network      = "Note : the camera takes about 50 seconds to start. LED will flash green 3 times every 3 seconds after start up, which means that the camera has been online. The wizard will automatically go to the next step after this.";
            mcs_the_end                 = "The end";
            mcs_hint_password_expired   = "Password has expired, please re-add the device.";
            mcs_hint_remove_ethernet    = "Note : Wi-Fi working properly, you can disconnect the wire now.";
            mcs_gateway_format_incorrect = "Gateway address format is incorrect";
            mcs_dns_format_incorrect    = "DNS address format is incorrect";
            mcs_subnet_mask_format_incorrect = "Subnet mask address format is incorrect";
            mcs_ip_format_incorrect     = "IP address format is incorrect";
            mcs_login_sucess            = "Successful login";
            mcs_donot_remind            = "Don\'t remind";
            mcs_clear_cache_signout_hint = "You should log in again after clear the cache. Continue?";
            mcs_devlist_adddev_hint     = "Click here to add device.";
            mcs_devlist_menu_hint       = "Click here to set the resolution.";
            mcs_update_failed           = "Upgrade failed";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "Local";
            mcs_set_npapi               = "If the plugin has been installed, please visit \'chrome://flags/#enable-npapi\', enable NPAPI,";
            mcs_set_win32k              = "visit \'chrome://flags/#enable-win32k-renderer-lockdown\', disabled win32k renderer lockdown,";
            mcs_restart_browser         = "restart the browser";
            mcs_download_location       = "Download location";
            mcs_Networking_mode         = "Network mode";
            mcs_wifi_intelligent_configuration = "WiFi Connection";
            mcs_ethernet_configuration  = "Ethernet Connection";
            mcs_wifi_connect            = "Connection";
            mcs_hard_disk               = "Hard disk";
            mcs_wifi_is_connection      = "Connecting, please wait...";
            mcs_wifi_intelligent_configuration_setup_ailure = "Wi-Fi configuration failure ";
            mcs_box_list                = "lista box";
            mcs_repair_disk_prompt      = "Repair disk may lost some data,continue?";
            mcs_format_disk_prompt      = "Format disk will delete all data,continue?";
            mcs_scheduled_alerting      = "Schedule Alerting";
            mcs_scheduled_alerting_one  = "Schedule 1";
            mcs_scheduled_alerting_two  = "Schedule 2";
            mcs_scheduled_alerting_three = "Schedule 3";
            mcs_scheduled_alerting_four = "Schedule 4";
            mcs_wifi_config_cancle      = "Wi-Fi config cancle";
            mcs_wifi_config_prepare     = "config Prerequisites";
            mcs_wifi_config_first       = "The devices and mobile phones and routers kept in the range of 1 m";
            mcs_wifi_config_second      = "When configuring Wi-Fi, the device can not plug the network cable";
            mcs_wifi_config_third       = "Press the RESET reset hole one second and then release";
            mcs_wifi_config_success     = "Configuration success";
            mcs_wifi_config_failure     = "Configuration failed";
            mcs_failure_prompt          = "Please try again or return to check if Wi-Fi password is entered correctly";
            mcs_display_password        = "Show password";
            mcs_action_smart_config_wifi = "Configuration Wizard";
            mcs_wifi_invalid            = "Please connect to Wi-Fi for your cellphone firstly";
            mcs_phone_not_connect_wifi  = "Wi-Fi network is not connected";
            mcs_prompt_check_connection = "Your camera is not online, please check the camera\'s line connection.";
            mcs_wifi_cfg_ready          = "Ready";
            mcs_reset_complete          = "Reset is complete";
            mcs_how_to_restore_factory_settings = "How to restore factory settings: use the RESET pin pressing the RESET hole at the bottom of camera for more than 10 seconds";
            mcs_forgetpass_action_wizard = "Please long press the device Reset reset hole 10 seconds after the release, you will hear the device voice prompt \"to restore the factory settings\".";
            mcs_prompt_check_device_connection = "Your device is offline, please check the device\'s line connection.";
            mcs_prompt_select_device_connection = "Your device is not online, please select the Internet connection method";
            mcs_input_wifi_name         = "Please input Wi-Fi name";
            mcs_action_previous         = "Previous";
            mcs_io_alert_range_hint     = "IO alert time should be less than 60 seconds";
            mcs_io_alert_time           = "IO alert time(s)";
            mcs_smart                   = "smart";
            mcs_plan                    = "plan";
            mcs_mute                    = "mute";
            mcs_wind_speed              = "wind speed";
            mcs_one                     = "One gear";
            mcs_two                     = "Two gear";
            mcs_three                   = "Three gear";
            mcs_purify_mode             = "purify mode";
            mcs_video_list              = "Video list";
            mcs_wifi_cfg_restore_factory_settings = "Hold the cellphone close to device, if device has configured Wi-Fi, press the RESET hole for one second then release, the device will restore to factory settings and restart automatically.";
            mcs_mask_settings           = "Mask settings";
            mcs_notification_settings   = "Notification settings";
            mcs_alarm_settings          = "Alarm settings";
            mcs_motion_detection        = "Motion Detection";
            mcs_io_alarm                = "I/O Alarm";
            mcs_connect_status          = "Connection Status";
            mcs_motion_notification     = "Motion And Notification";
            mcs_device_connected        = "Device is connected";
            mcs_start_spray             = "Start spraying?";
            mcs_available_network       = "Network unavailable，check network";
            mcs_select_wifi_wizard      = "Please select Wi-Fi network firstly";
            mcs_input_wifi_password     = "Input Wi-Fi password";
            mcs_device_admin_password   = "Device Admin Password";
            mcs_device_guest_password   = "Device Guest Password";
            mcs_user_admin_password     = "Account Admin Password";
            mcs_user_guest_password     = "Account Guest Password";
            mcs_save_network_set        = "Save network set and password";
            mcs_nickname_not_set        = "Camera nickname is not set";
            mcs_current_wifi            = "Current Wi-Fi";
            mcs_current_password_strength = "The current password strength";
            mcs_new_password_strength   = "New password strength";
            mcs_needs_to_open_the_DHCP  = "Your router needs to open the DHCP (automatically obtain IP) function, if the attempt is unsuccessful, please contact the administrator.";
            mcs_picture                 = "Picture";
            mcs_quality                 = "Quality";
            mcs_size                    = "Size";
            mcs_guest_login             = "Guest Login";
            mcs_audio_and_video         = "Audio / Video";
            mcs_volume                  = "Volume";
            mcs_smooth                  = "Smooth";
            mcs_clear                   = "Clear";
            mcs_handsfree               = "HF";
            mcs_headphone               = "Headset";
            mcs_my                      = "Account";
            mcs_customer_service        = "Customer Service";
            mcs_firefox_flash_uninstall = "Your flash plugin is not available, the solution please refer to the https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "Plugins";
            mcs_plug_load               = "Load plugins";
            mcs_plug_load_refuse        = "Do not load plugins";
            mcs_plug_load_auto          = "Automatic";
            mcs_option                  = "Options";
            mcs_option_ok               = "Determine";
            mcs_voice_call_fails        = "Voice call fails, check the network";
            mcs_umounted_prompt         = "Whether to unmount?";
            mcs_mounted_prompt          = "Whether to mount?";
            mcs_format_prompt           = "Whether to format? ";
            mcs_repair_prompt           = "Whether to repair?";
            mcs_signup_prompt           = "New here?";
            mcs_wifi_connect_sucess_prompt = "Note: Wi-Fi normal work, you can disconnect the network now";
            mcs_manual_input_prompt     = "Manual input device ID";
            mcs_qrscan_prompt           = "You have not yet allowed this application to access your camera, and you can find the application of the name \'Vimtag\' in the iPhone\'s \'setting\' - \'privacy\' - \'camera\' feature.";
            mcs_select_network_style    = "Select network connection mode:";
            mcs_push                    = "Announcement";
            mcs_connect_power_prompt    = "Note: the device is not online, please ensure that the power is connected";
            mcs_fail_microphone         = "Unable to access the microphone";
            mcs_microphone_prompt       = "You are not to allow this application to access your microphone, in the \'set\' iPhone - the \'privacy\' - \'microphone\' feature, find the name of \'Vimtag\' application to be modified";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "HD";
            mcs_standard_clear          = "Standard";
            mcs_fluent_clear            = "Smooth";
            mcs_deleting                = "Deleting...";
            mcs_event                   = "Event";
            mcs_one_hour                = "1 hour";
            mcs_half_hour               = "30 min";
            mcs_five_min                = "5 min";
            mcs_category                = "Category";
            mcs_time_length             = "Duration";
            mcs_new                     = "New";
            mcs_week_setting_prompt     = "Week setting can not be empty";
            mcs_time_setting_prompt     = "Time settings can not be empty";
            mcs_today                   = "Today";
            mcs_wifi_password           = "WiFi Password";
            mcs_register_prompt         = "Please register your account first";
            mcs_click_login             = "Click here to login";
            mcs_not_login_prompt        = "You have not logged in, please click here to login!";
            mcs_product_presentation    = "Home";
            mcs_help_feedback           = "FAQ";
            mcs_help_information        = "FAQ";
            mcs_feedback                = "Feedback";
            mcs_feedback_des            = "Thanks for using our app, please give us your valuable advice";
            mcs_feedback_praise         = "Praise";
            mcs_feedback_title_prompt   = "Feedback title";
            mcs_feedback_title          = "Please enter the title (18 words or less)";
            mcs_feedback_type_prompt    = "Problem types";
            mcs_feedback_please_select  = "Please select type";
            mcs_feedback_select_option1 = "Interface problem";
            mcs_feedback_select_option2 = "Camera problem";
            mcs_feedback_select_option9 = "Other issues";
            mcs_feedback_dec_prompt     = "Specific description";
            mcs_feedback_dec            = "Please enter your comments";
            mcs_feedback_upload_photo   = "Upload photos";
            mcs_preview_pic             = "Preview";
            mcs_Album                   = "Select from Album";
            mcs_Photograph              = "Photograph";
            mcs_camera_unavailable      = "Unavailable with your camera";
            mcs_feedback_submit         = "Submit";
            mcs_feedback_title_alert    = "Title does not conform to the rules";
            mcs_feedback_type_alert     = "Please select the correct type";
            mcs_feedback_dec_alert      = "Please enter your comments";
            mcs_feedback_submit_success = "Submit successfully";
            mcs_feedback_submit_fail    = "Submission failed";
            mcs_connect_wifi_prompt     = "Connect Wi-Fi";
            mcs_cloud                   = "Cloud";
            mcs_demo                    = "Demo";
            mcs_shortest                = "Shortest";
            mcs_no_history              = "No history";
            mcs_download_pc_client      = "Click to download the PC client";
            mcs_accounts_bind_email_exist = "The account has been bound to the mailbox";
            mcs_accounts_bind_email_busy = "The mailbox has been bound to account";
            mcs_systemupdatetip_noversionnodetail = "Have new version for upgrade but no detail describe";
            mcs_systemupdatetip_nodetail = "no detail describe";
            mcs_systemupdatetip_updatefrom = "Your current version";
            mcs_systemupdatetip_updateto = "can upgrade to";
            mcs_systemupdatetip_sureforupdate = "sure for this upgrade?";
            mcs_systemupdatetip_updatecontent = "detail for this upgrade";
            mcs_operate_prompt          = "Please operate according to the diagram";
            mcs_operation_prompt        = "Operation prompt";
            mcs_qrcode_prompt_content   = "Use the device camera to scan mobile qrcode";
            mcs_qrcode_camera_distance  = "Qrcode with the camera distance 12 ~ 14cm";
            mcs_planvideo_datewizard    = "Please set date";
            mcs_planvideo_timewizard    = "Please set time";
            mcs_planvideo_wizard        = "Please set time and date";
            mcs_email_unbind            = "Mail account does not bind";
            mcs_email_unmatch           = "Mailbox mismatch";
            mcs_email_inactive          = "E-mail is not activated";
            mcs_email_binded            = "E-mail has been bound";
            mcs_user_binded_bymail      = "The user has been bound";
            mcs_bind_email_fail         = "Mailbox binding failed";
            mcs_diagnosis               = "Diagnosis";
            mcs_delay                   = "Delay";
            mcs_packet_loss_rate        = "Packet Loss Rate";
            mcs_timezone_IDL            = "International Date Line";
            mcs_timezone_China          = "China";
            mcs_timezone_Midway         = "Midway Islands";
            mcs_timezone_Niue           = "Island of Niue";
            mcs_timezone_Samoa          = "American Samoa";
            mcs_timezone_Aleutian       = "Aleutian Islands";
            mcs_timezone_Hawaii         = "Hawaiian Islands";
            mcs_timezone_Alaska         = "Alaska";
            mcs_timezone_PSTUSCanada    = "PST(US&Canada)";
            mcs_timezone_Arizona        = "Arizona";
            mcs_timezone_MSTUSCanada    = "Mountain Standard Time(US&Canada)";
            mcs_timezone_CSTUSCanada    = "Central Standard Time(US&Canada)";
            mcs_timezone_ESTUSCanada    = "Eastern Standard Time(US&Canada)";
            mcs_timezone_ASTCanada      = "AST(Canada)";
            mcs_timezone_Newfoundland   = "Newfoundland";
            mcs_timezone_Brasilia       = "Brasilia";
            mcs_timezone_BuenosAires    = "Buenos Aires";
            mcs_timezone_Santiago       = "Santiago";
            mcs_timezone_Noronha        = "Noronha";
            mcs_timezone_SouthGeorgia   = "South Georgia";
            mcs_timezone_Azores         = "Azores";
            mcs_timezone_CapeVerde      = "Cape Verde";
            mcs_timezone_London         = "London";
            mcs_timezone_Lisbon         = "Lisbon";
            mcs_timezone_Dublin         = "Dublin";
            mcs_timezone_Berlin         = "Berlin";
            mcs_timezone_Amsterdam      = "Amsterdam";
            mcs_timezone_Brussels       = "Brussels";
            mcs_timezone_Budapest       = "Budapest";
            mcs_timezone_Madrid         = "Madrid";
            mcs_timezone_Paris          = "Paris";
            mcs_timezone_Rome           = "Rome";
            mcs_timezone_Sarajevo       = "Sarajevo";
            mcs_timezone_Cairo          = "Cairo";
            mcs_timezone_Amman          = "Amman";
            mcs_timezone_Beirut         = "Beirut";
            mcs_timezone_Istanbul       = "Istanbul";
            mcs_timezone_Jerusalem      = "Jerusalem";
            mcs_timezone_Athens         = "Athens";
            mcs_timezone_Baghdad        = "Baghdad";
            mcs_timezone_Riyadh         = "Riyadh";
            mcs_timezone_Qatar          = "Qatar";
            mcs_timezone_Moscow         = "Moscow";
            mcs_timezone_Tehran         = "Tehran";
            mcs_timezone_Baku           = "Baku";
            mcs_timezone_Dubai          = "Dubai";
            mcs_timezone_Tbilisi        = "Tbilisi";
            mcs_timezone_Kabul          = "Kabul";
            mcs_timezone_Karachi        = "Karachi";
            mcs_timezone_Yekaterinburg  = "Yekaterinburg";
            mcs_timezone_Maldives       = "Maldives";
            mcs_timezone_Calcutta       = "Calcutta";
            mcs_timezone_Colombo        = "Colombo";
            mcs_timezone_Katmandu       = "Katmandu";
            mcs_timezone_Almaty         = "Almaty";
            mcs_timezone_Dhaka          = "Dhaka";
            mcs_timezone_Omsk           = "Omsk";
            mcs_timezone_Thimbu         = "Thimbu";
            mcs_timezone_Rangoon        = "Rangoon";
            mcs_timezone_Bangkok        = "Bangkok";
            mcs_timezone_Jakarta        = "Jakarta";
            mcs_timezone_Vientiane      = "Vientiane";
            mcs_timezone_Harbin         = "Harbin";
            mcs_timezone_Shanghai       = "Shanghai";
            mcs_timezone_Hongkong       = "Hong Kong";
            mcs_timezone_Singapore      = "Singapore";
            mcs_timezone_Taipei         = "Taipei";
            mcs_timezone_Ulaanbaatar    = "Ulaanbaatar";
            mcs_timezone_Perth          = "Perth";
            mcs_timezone_Seoul          = "Seoul";
            mcs_timezone_Tokyo          = "Tokyo";
            mcs_timezone_Darwin         = "Darwin";
            mcs_timezone_Magadan        = "Magadan";
            mcs_timezone_Vladivostok    = "Vladivostok";
            mcs_timezone_Guam           = "Guam";
            mcs_timezone_Sydney         = "Sydney";
            mcs_timezone_Canberra       = "Canberra";
            mcs_timezone_Melbourne      = "Melbourne";
            mcs_timezone_Queensland     = "Queensland";
            mcs_timezone_LordHowe       = "Lord Howe";
            mcs_timezone_Guadalcanal    = "Guadalcanal";
            mcs_timezone_Fiji           = "Fiji";
            mcs_timezone_Auckland       = "Auckland";
            mcs_timezone_Apia           = "Apia";
            mcs_timezone_Fakaofo        = "Fakaofo";
            mcs_timezone_Tongatapu      = "Tongatapu";
            mcs_timezone_Kiritimati     = "Kiritimati";
            mcs_connect_timeout         = "Connection timeout";
            mcs_share                   = "Share";
            mcs_share_prompt_start      = "You can access";
            mcs_share_prompt_end        = "to download the video through browser on pc or  android phone that in the same network";
            mcs_share_note              = "Please don\'t leave the page when downloading.";
            mcs_video_size              = "Size";
            mcs_video_duration          = "Duration";
            mcs_my_folder               = "My Folder";
            mcs_account_no_contain      = "The account don’t contain";
            mcs_edit                    = "Edit";
            mcs_video_number            = " Video";
            mcs_no_local_video          = "No record";
            mcs_empty_folder            = "Folder is empty";
            mcs_no_history_record       = "You don’t have record";
            mcs_no_local_record         = "Your local record is empty";
            mcs_empty_cloud_list_first  = "Your camera list is empty,";
            mcs_empty_cloud_list_second = "Click on the upper left corner on the";
            mcs_empty_cloud_list_third  = "to add a device!";
            mcs_empty_local_list_first  = "Your local list is empty,";
            mcs_empty_local_list_second = "try";
            mcs_empty_local_list_third  = "Pull down the screen";
            mcs_empty_local_list_forth  = "refresh!";
            mcs_empty_local_list_fifth  = "（Search for devices within the LAN）";
            mcs_record_prompt           = "You can view the record in \"Account->My Folder\"";
            mcs_record_download_prompt  = "You can view the record in \"My Folder\"";
            mcs_register_buton_start    = "No account? ";
            mcs_register_buton_end      = "Tap to sign up";
            mcs_product                 = "Product";
            mcs_user_or_password_invalid = "Invalid username or password";
            mcs_share_video_prompt      = "You are using non WiFi network, please switch to WiFi network to share again";
            mcs_download_video_prompt   = "You are using non WiFi network, download will generate traffic costs, continue?";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "Normal";
            mcs_common_problem          = "Common problem";
            msc_enter_comment           = "Enter your comments";
            msc_description             = "description";
            mcs_parameter               = "parameter";
            mcs_help_and_feedback       = "Help and Feedback";
            mcs_personal_center         = "Personal Center";
            mcs_version                 = "version";
            mcs_language                = "language";
            mcs_new_user                = "I am a new user";
            mcs_have_account            = "Existing account";
            mcs_try_it                  = "Try it";
            mcs_sign_up_now             = "Sign up";
            mcs_input_confirm_password  = "Confirm password";
            mcs_warranty_registration   = "warranty registration";
            mcs_get_more_cameras        = "get more cameras";
            mcs_user_inactive           = "User not active";
            mcs_format_options          = "Format";
            mcs_slide_screen            = "Slide the screen to adjust the video angle";
            mcs_zoom_in_screen          = "See more details according to zoom in";
            mcs_pause                   = "Pause";
            mcs_source                  = "Source";
            mcs_magnetic                = "Magnetic";
            mcs_sos                     = "SOS";
            mcs_input_download_path     = "Download path";
            mcs_download_path_name_error = "Download the file path name can contain only letters (a-z, A-Z) or numeric (0-9)";
            mcs_active                  = "Active";
            mcs_out                     = "Out";
            mcs_quiet                   = "Quiet";
            mcs_scenes                  = "Scene";
            mcs_accessory               = "Accessory";
            mcs_quiet_mode              = "Quiet Mode";
            mcs_active_mode             = "Active Mode";
            mcs_out_mode                = "Out Mode";
            mcs_add_accessory           = "Add Accessory";
            mcs_accessory_type          = "Accessory Type";
            mcs_add_successfully        = "Add Successfully";
            mcs_set_scene               = "Your accessory have not yet set the scene , please click";
            mcs_to_set                  = "to set";
            mcs_add_accessory_button    = "When you see the red light flashes, press the button to complete";
            mcs_auto_monday             = "Monday";
            mcs_auto_tuesday            = "Tuesday";
            mcs_auto_wednesday          = "Wednesday";
            mcs_auto_thursday           = "Thursday";
            mcs_auto_friday             = "Friday";
            mcs_auto_saturday           = "Saturday";
            mcs_auto_sunday             = "Sunday";
            mcs_search                  = "Search";
            mcs_format_input            = "formatting the hard drive";
            mcs_get_accessory_failed    = "get accessory failed";
            mcs_get_scene_failed        = "get scene failed";
            mcs_search_failed           = "search failed";
            mcs_add_failed              = "add failed";
            mcs_ethernet_connect        = "Ethernet";
            mcs_action_click_retry      = "Click Retry";
            mcs_wifi_config_failure_detail = "Or You can try";
            mcs_qrcode_connect          = "QR code connection";
            mcs_close_sound_prompt      = "Sound is needed for the WiFi connection. Increase your phone volume and place the phone speaker close to the camera\'s mic.";
            mcs_qrcode_prompt_title     = "Please operations shown in FIG";
            mcs_qrcode_prompt_detail    = "Place the QR code on your phone screen approximately 10 to 12 inches in front of the camera.";
            mcs_select_wifi_prompt      = "Wireless connection";
            mcs_select_ethernet_prompt  = "Ethernet cable needed for setup only";
            mcs_enter_config_mode_prompt = "Check the Wireless Network Status Light to see if it flashes three red lights and three green lights. If yes,press the \'Next\' button to continue the setup process. If not, push the \'Reset\' button on the bottom of the camera. Then Check the Wireless Network Status Light again.";
            mcs_no_enter_config_mode    = "Not in configuration mode";
            mcs_record_time             = "Record time(s)";
            mcs_stop_search             = "Stop Search";
            mcs_smart_wifi_setup        = "WiFi Setup";
            mcs_ethernet_setup          = "Ethernet Cable Setup";
            mcs_wifi_config_restore_start = "1) Power on your device";
            mcs_wifi_config_restore_end = "2) Press the reset hole for one second,the device will restore and restart after 60 seconds,then will enter configuration mode automatically";
            mcs_Sense_schedule          = "Scene Schedule";
            load_succeed                = "Loading success";
            load_fail                   = "Failed to load";
            refresh_succeed             = "Refresh success";
            refresh_fail                = "Refresh failed";
            mcs_ensure_dev_power        = "1) Power on your device";
            all_refresh_complete        = "All data is refreshed";
            mcs_synchronize             = "Synchronize";
            mcs_synchronize_detail      = "The following devices are not in line with the scenario mode and settings, which need to be synchronized to work";
            mcs_Sense_Schedule_Set      = "Scene schedule set";
            mcs_Sence_Schedule_detail   = "If you enable the automatic scenario mode, the system will automatically switch the scene at different times according to the scenario";
            mcs_Scene_set               = "Scene set";
            mcs_Scene_set_detail        = "If you enable the scenario mode, the device will appear on the following page in the context of the scenario mode";
            mcs_send_message            = "send msg";
            mcs_start_recording         = "start record";
            mcs_start_capture           = "start capture";
            mcs_turn_on_video           = "To continue recording in the mode of departure, please turn on the video";
            mcs_search_press_button     = "Press the hole in the back for 1 second, the indicator light will flash";
            mcs_add_fail1               = "The equipment has been cancelled to be added, please click retry button to add  again";
            mcs_add_fail2               = "The equipment has been failed to be added , please click retry button to add  again";
            mcs_recording_duration      = "Recording duration(second)";
            mcs_settings_unsaved        = "Your settings were not saved";
            mcs_want_save               = "Do you keep it?";
            mcs_camera                  = "Camera";
            mcs_router                  = "Router";
            mcs_start_up                = "Start up";
            mcs_cancle_add              = "Device has been canceled adding due to the short press";
            mcs_visit_photo_fail        = "Failed to visit album";
            mcs_camera_cell             = "Camera";
            mcs_myphoto                 = "My Photo";
            mcs_select_photo            = "Select album";
            mcs_app_new_version         = "New version";
            mcs_update_new_version      = "Upgrade now";
            mcs_app_new_version_prompt  = "App has a new version, select Upgrade Download Update Now";
            download_failed             = "download failed";
            mcs_connect_server_prompt   = "WiFi connected,connecting to server";
            mcs_local_search            = "Local Search";
            mcs_choose_device_type      = "choose device type";
            mcs_wifi_state              = "Note: WIFI work is normal, you can now disconnect the network cable (off the line may appear after the device is not online, please wait for 20s will automatically on-line)";
            mcs_sweep                   = "Sweep";
            mcs_wifi_config_tip         = "There are routers and WIFI, to avoid wiring trouble";
            mcs_ethernet_config_tip     = "No router to plug the network cable";
            mcs_ethernet_connect_step_one = "The first step: to ensure that the power line 1 is connected with a power supply socket 2";
            mcs_ethernet_connect_step_two = "The second step: through the network cable 4 connecting the router port and the camera network port";
            mcs_sweep_qrcode_tip        = "The camera is on the phone to scan the two-dimensional code to maintain a distance of about 12 inches";
            mcs_sound_config_tip        = "Play sounds to help Wi-Fi connection. (can also choose to close)";
            mcs_sosalt                  = "%@ : SOS alert(%@)";
            mcs_dooralt                 = "%@ : Magnetic alert(%@)";
            mcs_wifi_config_restore     = "Please press RESET button 1 second and then take off, listen the voice hint, WI-FI \"the device into the WiFi configuration mode.\"";
            mcs_voice_remind_heard      = "Already heard the voice hint";
            mcs_netWork_prompt          = "Network tips";
            mcs_con_netWork             = "Network currently in use for the data connection, it may consume a lot of traffic, if the network interface settings set to jump";
            mcs_no_netWork              = "Currently no network connection, whether the jump to set up the network settings interface";
            mcs_exception_des           = "Your app last exception exit, whether to send an error report to the server";
            mcs_exception_prompt        = "Tip abnormal";
            mcs_erro_diagnosis          = "Troubleshooting";
            mcs_erro_log_des            = "App recent record error log, select the submit button to upload an error log, thank you for your cooperation!";
            mcs_is_submitting           = "is submitting";
            mcs_firmware_version        = "Firmware version";
            mcs_device_assembly         = "1.Power adaptor  2.Power slot  3.Ethernet slot  4.Ethernet  5.Connector";
            mcs_forgetpass_action_wizard_old = "Press the RESET hole for one second then release,the device will restore to factory settings and restart automatically after 60 seconds.Password recovery is admin.";
            mcs_device_assembly_mipc    = "1.Power adaptor  2.Power slot  3.Ethernet slot  4.Ethernet";
            mcs_device_connect_power_prompt = "Equipment is not online, please see the power of your device access to the power supply, has seen the red light is often light, the device is started to complete.";
            mcs_lights_sound            = "Have seen the lights";
            mcs_connect_power           = "Connecting power";
            mcs_search_magnetic         = "As shown in the figure, combine the door magnet and press the hole in the right side for 1 second, the indicator light will flash";
            mcs_add_magnetic            = "Open the door magnet and colse later.The door magnet can be add when the light flicker quickly.";
            mcs_already_downloaded      = "downloaded";
            mcs_my_order                = "My Order";
            mcs_auto_mode               = "Auto Mode";
            mcs_new_small               = "Small";
            mcs_new_half                = "Half";
            mcs_new_normal              = "Normal";
            mcs_new_hd                  = "HD";
            mcs_scene_now               = "Current scene";
            mcs_please_install_wechat   = "Please install WeChat";
            mcs_wechat_not_support      = "WeChat version is not supported, please update WeChat";
            mcs_motion_alert            = "Motion alert";
            mcs_io_alert                = "I/O alert";
            mcs_valid_user_name         = "step1:Input valid user ID";
            mcs_binding_mailbox         = "Step2:Input your email bound with account";
            mcs_send_mailbox_succuess_prev = "We already sent a email to your bound email address ";
            mcs_send_mailbox_succuess_next = "; for retrieving password,please pay attention to receive email.";
            mcs_all_image               = "All Image";
            mcs_unavailable_image       = "The picture is not available. Please select again.";
            mcs_set_nickname            = "Set Nickname";
            mcs_search_timeout          = "Search timeout, please click Search again";
            mcs_screen_size             = "Screen settings";
            mcs_screen_reset            = "Success. Restart to activate.";
            mcs_wifi_network_prompt     = "Check whether the router is a 5 GHz band router，the camera connects at the 2.4 GHz band";
            mcs_fault_diagnosis         = "Network Diagnosis";
            mcs_sever_diagnosis         = "May be due to server failure, resulting in normal use";
            mcs_select_problem          = "Please select a question";
            mcs_connot_lonin            = "Can not sign in";
            mcs_connot_play             = "Can not play";
            mcs_add_problems            = "Additional problems";
            mcs_encounterer_problems    = "Please enter a question";
            mcs_diagnostic_network      = "Start diagnosis";
            mcs_network_diagnostic_prompt = "Enter the network diagnosis can help us better address the problems you are experiencing, the length required for diagnosis of minutes";
            mcs_network_diagnostic      = "Fault diagnosis";
            mcs_connecting_server       = "Connecting server...";
            mcs_diagnostic_process_prompt = "The diagnostic process may take several minutes. Do not perform any other operations during the diagnosis, but you can stop the diagnostics at any time";
            mcs_diagnostic_results      = "Diagnostic results";
            mcs_diagnostic_results_received = "Diagnostics completed and diagnostic results received";
            mcs_diagnostic_results_prompt = "Thank you for participating in this diagnostic. The results will help us resolve your issue as quickly as possible.";
            mcs_results_no_abnormality  = "Diagnostic results without exception";
            mcs_no_abnormality_prompt   = "No abnormality was found in this diagnosis. You can choose the depth of diagnosis, start the log collection function, will help us to better solve your problems";
            mcs_continue_diagnosis      = "Depth Diagnosis";
            mcs_diagnosis_connot_sent   = "Diagnostic results cannot be sent";
            mcs_email_sends             = "E-mail send";
            mcs_email_sends_prompt      = "Sending the diagnostic results to us via email will help us resolve your issue as quickly as possible";
            mcs_diagnosis_send          = "Send";
            mcs_diagnosis_email         = "E-mail";
            mcs_send_successful         = "Sending successful";
            mcs_diagnosis_type_select_prompt = "Please select the type of diagnosis";
            mcs_stop_diagnosis          = "Stop diagnosis";
            mcs_detail_diagnosis_prompt = "Depth diagnostics,You can turn it off on the \"Devices\" page";
            mcs_detail_diagnosis_stop_prompt = "Deep diagnosis is in progress and you can abort at any time";
            mcs_exit_detail_diagnosis   = "Depth diagnosis is in progress, whether to stop?";
            mcs_network_connection_unavailable = "Network unavailable";
            mcs_Failed_connect_Internet = "Failed to connect to the Internet";
            mcs_connect_internet_note   = "If you need to connect to the Internet, please note the following:";
            mcs_connect_internet_detail_first = "Check the wireless LAN settings in your phone to see if you have an incoming wireless LAN signal";
            mcs_connect_internet_detail_second = "Check that your phone is connected to the mobile network and that your phone is not inactive";
            mcs_connect_wifi_note       = "If you have access to the wireless LAN:";
            mcs_connect_wifi_detail     = "Please check your wireless LAN hotspot connected to the Internet, or whether the hotspot has allowed your device to access the local area network";
            mcs_device_or_phone_time_zone_not_equals_please_select = "The device\'s current time zone does not match the phone\'s time zone. Please select a correct time zone";
            mcs_phone_timezone          = "Phone time zone";
            mcs_timezone_change         = "Change Time Zone";
            mcs_mail_send               = "Email sent";
            mcs_yes_verif               = "Yes";
            mcs_no_verif                = "No";
            mcs_camera_found_new_version_y_n_upgrade = "Found a new version of the camera, whether to upgrade?";
            mcs_auto_adapt_split_screen = "self-adaption";
            mcs_four_split_screen       = "Four split screen";
            mcs_nine_split_screen       = "Nine split screen";
            mcs_twelve_split_screen     = "Twelve split screen";
            mcs_not_connection_server   = "Unable to connect to the server";
            mcs_more_options            = "More";
            mcs_bind_email_prompt       = "For account security, please bind your mailbox";
            mcs_login_now               = "Sign in now";
            mcs_device_connect_power    = "1.Power adaptor   2.Power slot";
            mcs_device_connect_ethernet = "1.Network port      2.Cable";
            mcs_device_connect_ethernet_prompt = "One end of the network cable access network, the other end of access to the router, has seen the green light flashing lights, cable connection is completed.";
            mcs_pwd_format              = "Password format: the length between 8 to 16 characters, the number, the size of the letters and special symbols contain at least three";
            mcs_client_new              = "Client";
            mcs_user_guide              = "User\'s Manual";
            mcs_ebitcam_download_describe = "EBITCAM is a cloud monitoring service software, this software with the use of cloud camera, allowing users to view video information whenever and wherever possible for you, we provide a clear, smooth viewing experience, intelligent control will allow you to care for their family, love the users come to download it!";
            mcs_mipc_download_describe  = "MIPC is a cloud monitoring service software, this software with the use of cloud camera, allowing users to view video information whenever and wherever possible for you, we provide a clear, smooth viewing experience, intelligent control will allow you to care for their family, love the users come to download it!";
            mcs_guide_download          = "Manual Download";
            mcs_password_admin          = "Password Admin";
            mcs_already_read            = "I have read and agreed to the";
            mcs_privacy_policy          = "privacy policy";
            mcs_not_agree_privacy_policy = "You have not agreed to the privacy policy";
            mcs_reload                  = "Reload";
            mcs_start_download          = "Start Downloading";
            mcs_video_play_fail         = "Video play failed";
            mcs_download_app_tips       = "You can also try to use the PC client";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = "Device type";
            mcs_connect_device_wifi     = "Camera does not support the 5GHz band WiFi";
            mcs_send_diagnosis_results  = "Send the diagnosis results...";
            mcs_local_file              = "Local file";
            mcs_local_device            = "Local device";
            mcs_export_sd_data          = "Export SD card data";
            mcs_shaking                 = "PTZ Cameras";
            mcs_outdoor                 = "Outdoor Cameras";
            mcs_card                    = "Stationary Cameras";
            mcs_wifi_connection         = "WiFi connection";
            mcs_home_mode               = "Home mode";
            mcs_away_home_mode          = "Out mode";
            mcs_auto_switch_mode        = "Auto switch";
            mcs_select_scene_mode       = "Select scene mode";
            mcs_7x24_hours_prompt       = "Enable 24/7 recording";
            mcs_all_day_recording       = "All day record";
            mcs_home_mode_prompt        = "Home mode:Turn off the alarm on all devices";
            mcs_away_home_mode_prompt   = "Out mode:Turn on the alarm on all devices";
            mcs_at_home                 = "Home";
            mcs_away_home               = "Out";
            mcs_set_timezone_prompt_start = "Your time zone is";
            mcs_set_timezone_prompt_end = "pls modify the timezone in the setting of \"Day/Time\"";
            mcs_set_wifi_remind_head    = "The following problems may lead to failure of the camera networking, advice to avoid";
            mcs_set_wifi_remind_1       = "Check whether the open WIFI rub network, this setting may cause the camera to networking. You can temporarily shut off anti rub network, camera networking successfully restored router settings can be";
            mcs_set_wifi_remind_2       = "If your home is a dual band router, please check whether the WIFI camera connection is 5GHz band WIFI, please allow the camera to connect the 2.4GHz band WIFI";
            mcs_set_wifi_remind_3       = "Camera temporarily does not support WPA/WPA2 enterprise class WIFI, please select other WIFI";
            mcs_set_wifi_remind_4       = "If your home WIFI is bridged because the bridging causes could cause your network to be very unstable, it is recommended to connect non bridged WIFI";
            mcs_set_wifi_remind_5       = "What camera requirements for WIFI";
            mcs_record_save_to_my_file  = "The video has been saved to My Folder";
            mcs_view_now                = "View Now";
            mcs_search_sos_strat        = "As shown in the figure, press the hole in the back";
            mcs_search_sos_end          = "for 1 second, the indicator light will flash";
            mcs_search_magnetic_start   = "As shown in the figure, combine the door magnet and press the hole in the right side";
            mcs_search_magnetic_end     = "for 1 second, the indicator light will flash";
            mcs_adding                  = "Adding";
            mcs_record_empty_set_sd     = "Insert an SD card to store the history video";
            mcs_video_play_offline      = "The device is offline";
            mcs_video_play_network_fail = "Network connection failed, try again later";
            mcs_alert_notify_guide1     = "The original [Motion] operation migrated to [Accessory] can be set by [Scene Mode]";
            mcs_alert_notify_guide2     = "The operation is as follows:";
            mcs_alert_notify_guide3     = "select the [Scene], you need to open the exit mode and disarm to open the home mode;";
            mcs_alert_notify_guide4     = "select [Accessory] - [Accessory List] - [Motion] to open the exit mode alarm, video, camera, IO alarm function, turn off the home mode alarm, video and other functions.";
            mcs_plan_protect_guide1     = "Original [Schedule Alerting] operation has been moved to the [Scene]";
            mcs_plan_protect_guide2     = "select the [Scene], open the scene mode of automatic switching;";
            mcs_plan_protect_guide3     = "choose";
            mcs_plan_protect_guide4     = ", set The period that needs to be alert(Such as: Tuesday 7: 00-18: 00) as out mode;  after the save, return to the [Settings] interface;";
            mcs_plan_record_guide       = "Select [Record], open the video function of the out mode.";
            mcs_plan_record_guide1      = "Original [Schedule Recording] operation has been moved to the [Record]";
            mcs_plan_record_guide2      = ", set The period that needs to be recorded(Such as: Tuesday 7: 00-18: 00) as out mode;  after the save, return to the [Settings] interface;";
            mcs_forgetpass_action_prompt = "Press and hold the Reset button for 10 seconds to release the device. The IR light is on and the factory settings are reset";
            mcs_cloud_box               = "Cloud Box";
        }/* en */
        else if(lang == "zh")
        {
            mcs_name                    = "名称";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "名称";
            mcs_old_nick                = "昵称";
            mcs_linked                  = "已直连";
            mcs_sign_in                 = "登录";
            mcs_back                    = "返回";
            mcs_will_back               = "返回";
            mcs_add                     = "添加";
            mcs_add_device              = "添加设备";
            mcs_device_existed          = "设备已存在";
            mcs_cancel                  = "取消";
            mcs_exit                    = "退出";
            mcs_remember_password       = "记住密码";
            mcs_password_remembered     = "已记住密码";
            mcs_sign_ining              = "正在登录...";
            mcs_cloud_server            = "云服务器";
            mcs_input_device_id         = "输入设备ID";
            mcs_input_username          = "输入用户名";
            mcs_input_email_addr        = "输入邮箱地址";
            mcs_email_address           = "邮箱地址";
            mcs_email                   = "邮箱";
            mcs_binding                 = "绑定";
            mcs_binding_email           = "绑定邮箱";
            mcs_binding_send_prompt     = "验证邮件已发送，请尽快登录邮箱验证";
            mcs_binding_email_prompt    = "忘记密码时，可以通过该邮箱重新设置。";
            mcs_input_password          = "输入密码";
            mcs_access_server_failed    = "访问服务器失败";
            mcs_device_offline          = "设备不在线";
            mcs_invalid_password        = "密码错误";
            mcs_invalid_dev             = "设备不存在";
            mcs_login_faided            = "登录失败";
            mcs_invalid_qrcode          = "无效二维码";
            mcs_please_input_username   = "请输入用户名";
            mcs_please_input_password   = "请输入密码!";
            mcs_qrcode_scan_hint        = "请将方框对准设备底部的二维码";
            mcs_device_list_empty       = "设备列表为空";
            mcs_record_list_is_empty    = "录像列表为空";
            mcs_password_expired        = "密码已失效";
            mcs_set_video_size          = "设置视频大小";
            mcs_hd_1280x720             = "高清 [1280x720]";
            mcs_auto                    = "自动";
            mcs_normal_640x360          = "标清 [640x360]";
            mcs_half_320x180            = "较小 [320x180]";
            mcs_small_160x90            = "最小 [160x90]";
            mcs_play                    = "预览";
            mcs_settings                = "设置";
            mcs_messages                = "历史";
            mcs_alarm                   = "报警";
            mcs_delete                  = "删除";
            mcs_delete_camera           = "删除";
            mcs_apply                   = "应用";
            mcs_speed                   = "速度";
            mcs_others                  = "其他";
            mcs_audio                   = "音频";
            mcs_speaker                 = "扬声器";
            mcs_mic                     = "麦克风";
            mcs_power_frequency         = "电源频率";
            mcs_online_upgrade          = "在线升级";
            mcs_restore_the_factory_settings = "恢复出厂设置";
            mcs_restore                 = "恢复";
            mcs_restore_camera          = "设备重启";
            mcs_start_upgrade           = "有新的版本可以更新";
            mcs_system                  = "系统";
            mcs_system_settings         = "系统设置";
            mcs_online                  = "设备上线";
            mcs_offline                 = "设备离线";
            mcs_query                   = "查询";
            mcs_begin_time              = "开始时间";
            mcs_end_time                = "结束时间";
            mcs_mode                    = "模式";
            mcs_opened                  = "是否开启";
            mcs_high                    = "高";
            mcs_middle                  = "中";
            mcs_low                     = "低";
            mcs_io_alert_input          = "I/O报警输入";
            mcs_io_alert_output         = "I/O报警输出";
            mcs_normally_open           = "常开";
            mcs_normally_close          = "常闭";
            mcs_motion_detection_sensitivity = "移动侦测灵敏度";
            mcs_daytime                 = "白天";
            mcs_night                   = "夜间";
            mcs_sdcord                  = "SD卡";
            mcs_storage_device          = "存储设备";
            mcs_set_mask                = "设置遮罩";
            mcs_status                  = "状态";
            mcs_capacity                = "容量";
            mcs_usage                   = "已使用";
            mcs_format                  = "格式化";
            mcs_repair                  = "修复";
            mcs_formating               = "格式化中";
            mcs_repairing               = "修复中";
            mcs_mounted                 = "已加载";
            mcs_unmounted               = "已卸载";
            mcs_mount                   = "加载";
            mcs_unmount                 = "卸载";
            mcs_ethernet                = "以太网";
            mcs_wifi                    = "Wi-Fi";
            mcs_enabled                 = "启用状态";
            mcs_mac_address             = "MAC地址";
            mcs_network_status          = "连接状态";
            mcs_wifi_mode               = "无线模式";
            mcs_client                  = "终端";
            mcs_ap                      = "热点";
            mcs_start_address           = "开始地址";
            mcs_end_address             = "结束地址";
            mcs_gateway                 = "网关";
            mcs_select_network          = "选择网络";
            mcs_dhcp_ip                 = "自动获得IP";
            mcs_dhcp_dns                = "自动获得DNS";
            mcs_ip_address              = "IP地址";
            mcs_network_mask            = "子网掩码";
            mcs_input_secondary_dns     = "输入备用DNS";
            mcs_secondary_dns           = "备用DNS";
            mcs_input_dns               = "请输入DNS";
            mcs_input_alternate_dns     = "请输入备用DNS";
            mcs_input_ip                = "请输入IP地址";
            mcs_input_gateway           = "请输入网关";
            mcs_input_network_mask      = "请输入子网掩码";
            mcs_wifi_list               = "Wi-Fi列表";
            mcs_display_date            = "显示日期";
            mcs_date_format             = "日期格式";
            mcs_display_time            = "显示时间";
            mcs_time_format             = "时间格式";
            mcs_24_hour                 = "24小时制";
            mcs_12_hour                 = "12小时制";
            mcs_display_weeks           = "显示星期";
            mcs_date_time               = "日期/时间";
            mcs_set_time                = "时间设置";
            mcs_set_week                = "星期设置";
            mcs_stream                  = "码流";
            mcs_encode                  = "编码类型";
            mcs_resolution              = "分辨率";
            mcs_frame_fate              = "帧率";
            mcs_maximum_bitrate         = "最大码率";
            mcs_minimum_bitrate         = "最小码率";
            mcs_i_frame_interval        = "I帧间隔";
            mcs_video                   = "视频";
            mcs_sampling_rate           = "采样率(kHz)";
            mcs_nickname                = "设备昵称";
            mcs_old_password            = "当前密码";
            mcs_confirm_password        = "确认密码";
            mcs_modify_password         = "修改密码";
            mcs_password                = "密码";
            mcs_admin_password          = "管理密码";
            mcs_guest_password          = "访客密码";
            mcs_product_info            = "产品信息";
            mcs_software_version        = "软件版本";
            mcs_device_id               = "设备ID";
            mcs_operation               = "操作";
            mcs_record                  = "录像";
            mcs_record_2                = "录像";
            mcs_upgrade_now             = "立即升级";
            mcs_upgrading               = "正在升级";
            mcs_already_latest_version  = "已是最新版本";
            mcs_sensitivty              = "灵敏度";
            mcs_user_defined            = "自定义";
            mcs_time                    = "时间";
            mcs_date                    = "日期";
            mcs_finish                  = "完成";
            mcs_delete_fail             = "删除失败";
            mcs_motion                  = "移动侦测";
            mcs_start                   = "开始";
            mcs_talk                    = "对讲";
            mcs_password_input_inconsistent = "密码不一致";
            mcs_input_6_to_20_litters   = "输入6-20位数字(0-9)或字母(a-z、A-Z)";
            mcs_user_letter_range_hint  = "账号为6-32位数字(0-9)或字母(a-z、A-Z)，需以字母开头";
            mcs_password_range_hint     = "密码为6-32位数字和字母";
            mcs_begin_with_the_letters  = "以字母开始，只能包含数字字母";
            mcs_sign_up                 = "注册";
            mcs_sign_up_failed          = "注册失败";
            mcs_successful_sign_up      = "注册成功";
            mcs_are_you_sure_delete     = "是否删除?";
            mcs_failed_to_set_the       = "设置失败";
            mcs_set_successfully        = "设置成功";
            mcs_downloading             = "升级中，正在下载";
            mcs_wrote                   = "已写入";
            mcs_visit_again_later       = "请稍后再访问";
            mcs_restart_failed          = "重启失败";
            mcs_upgrade_failed          = "更新失败";
            mcs_connnected              = "已连接";
            mcs_connnected_to           = "已连接到";
            mcs_not_select              = "未选择";
            mcs_message_list            = "信息列表";
            mcs_saved_password          = "已存密码";
            mcs_alert                   = "告警";
            mcs_no_record               = "暂无录像";
            mcs_new_about               = "新 : 约";
            mcs_device                  = "设备";
            mcs_config                  = "配置";
            mcs_change_password_failed  = "修改密码失败";
            mcs_do_you_want_restart     = "是否重启?";
            mcs_do_you_want_restore     = "是否恢复出厂设置?";
            mcs_do_you_want_upgrade     = "是否升级?";
            mcs_load_end                = "已加载全部数据";
            mcs_loading                 = "正在加载...";
            mcs_down_refresh            = "下拉可以刷新";
            mcs_release_refresh         = "释放刷新";
            mcs_refreshing              = "正在刷新";
            mcs_release_then_loading_data_hint = "释放加载数据";
            mcs_pull_refresh_hint       = "上拉可以加载";
            mcs_restarting              = "重启中";
            mcs_upgraded_time           = "更新于 : ";
            mcs_done                    = "完成";
            mcs_playback                = "回放";
            mcs_i_o_alarm               = "I/O报警";
            mcs_alarm_action            = "报警联动";
            mcs_alarm_sources           = "报警源";
            mcs_io_output               = "I/O 输出";
            mcs_snapshots               = "快照";
            mcs_snapshot                = "快照";
            mcs_snapshot_interval       = "拍照间隔(秒)";
            mcs_pre_record_length       = "预录时间(秒)";
            mcs_nick_range_hint         = "昵称为最多20位的数字和字母";
            mcs_save                    = "保存";
            mcs_close                   = "关闭";
            mcs_snapshoting             = "拍照中";
            mcs_snapshot_failed         = "拍照失败";
            mcs_record_failed           = "操作录像失败";
            mcs_saved_successfully      = "成功保存到相册";
            mcs_save_failed             = "保存失败";
            mcs_restart_to_take_effect  = "重启后生效";
            mcs_please_allow_access_album = "请允许MIPC求访问您的相册";
            mcs_please_allow            = "请允许";
            mcs_access_album            = "访问您的相册";
            mcs_ios_privacy_setting_for_photo_prompt = "您可以在iPhone的\"设置->隐私->照片\"中,找到应用程序\"";
            mcs_execute_change          = "\"进行更改";
            mcs_access_camera           = "访问您的相机";
            mcs_please_allow_access_camera = "请允许MIPC求访问您的相机";
            mcs_ios_privacy_setting_for_camera_prompt = "您可以在iPhone的\"设置->隐私->相机\"中,找到应用程序\"";
            mcs_busy_when_write         = "写入忙";
            mcs_unknown_error           = "未知错误";
            mcs_i_know                  = "我知道了";
            mcs_segment                 = "片段";
            mcs_please_relogin          = "请从新登录";
            mcs_change_password_succeed = "修改密码成功";
            mcs_upgrade_to_ver          = "升级到新版本";
            mcs_restore_failed          = "恢复失败";
            mcs_please_restart          = "请重启";
            mcs_keep_network_settings   = "保留网络设置和密码";
            mcs_not_connected           = "未连接";
            mcs_sdcard_not_ready        = "SD卡未准备好！";
            mcs_device_not_exist        = "设备不存在";
            mcs_disable                 = "禁用";
            mcs_to_determine_the        = "是否确定";
            mcs_alert_on                = "布防";
            mcs_alert_off               = "撤防";
            mcs_alert_onoff             = "布防/撤防";
            mcs_monday                  = "星期一";
            mcs_tuesday                 = "星期二";
            mcs_wednesday               = "星期三";
            mcs_thursday                = "星期四";
            mcs_friday                  = "星期五";
            mcs_saturday                = "星期六";
            mcs_sunday                  = "星期日";
            mcs_mon                     = "一";
            mcs_tue                     = "二";
            mcs_wed                     = "三";
            mcs_thu                     = "四";
            mcs_fri                     = "五";
            mcs_sat                     = "六";
            mcs_sun                     = "日";
            mcs_scheduled_recording     = "计划录像";
            mcs_schedule                = "计划";
            mcs_scheduled_recording_status = "计划录像状态";
            mcs_folding                 = "收起";
            mcs_unfolding               = "展开";
            mcs_end_time_should_lt_begin = "结束时间必须大于开始时间";
            mcs_recording               = "录像中";
            mcs_prerecord_interval_range_hint = "预录时间需小于6秒";
            mcs_snapshot_interval_range_hint = "拍照间隔需为0或大于60";
            mcs_not_ready               = "未就绪";
            mcs_availablesize           = "可用容量";
            mcs_reboot                  = "重启";
            mcs_alerter                 = "布防";
            mcs_pir                     = "人体感应";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "编码器";
            mcs_ok                      = "确定";
            mcs_fault                   = "故障";
            mcs_sensor_status           = "Sensor状态";
            mcs_about                   = "关于";
            mcs_reset_now               = "现在重启";
            mcs_reset_later             = "以后再说";
            mcs_prompt                  = "提示";
            mcs_select                  = "请选择";
            mcs_available_netword       = "网络不可用,进行设置网络?";
            mcs_request_send            = "正在发送请求...";
            mcs_blank_device_id         = "设备ID不能为空";
            mcs_blank_username          = "用户名不能为空";
            mcs_blank_password          = "密码不能为空";
            mcs_exist_user              = "用户已存在";
            mcs_invalid_user            = "用户名无效";
            mcs_invalid_email_addr      = "邮箱地址无效";
            mcs_system_err              = "系统错误";
            mcs_exceed_device           = "设备的用户数超限";
            mcs_continue                = "继续";
            mcs_prompt_exit             = "是否退出?";
            mcs_device_list             = "设备列表";
            mcs_no_sdcard               = "没有SD卡";
            mcs_no_hard_disk            = "没有硬盘";
            mcs_show_more               = "显示更多...";
            mcs_shotsnop_exists         = "图片已存在";
            mcs_input_nick              = "输入昵称";
            mcs_nick_not_empty          = "昵称不能为空";
            mcs_input_new_pass          = "输入新密码";
            mcs_input_new_pass_again    = "再次输入新密码";
            mcs_new_password            = "新密码";
            mcs_modify_network_prompt   = "网络参数修改可能造成网络中断,确认修改?";
            mcs_wifi_disable_prompt     = "禁用Wi-Fi，继续?";
            mcs_eth_disable_prompt      = "禁用以太网卡，继续?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "自动获取";
            mcs_manually_set            = "手动设置";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "首选DNS";
            mcs_client_mode             = "终端模式";
            mcs_adhoc_mode              = "热点模式";
            mcs_connect_fail            = "连接失败";
            mcs_dhcp_server             = "DHCP服务器";
            mcs_display_text            = "显示名称";
            mcs_repair_prompt_detail    = "修复SD卡可能导致部分数据丢失，继续？";
            mcs_format_prompt_detail    = "格式化将删除SD卡上所有数据，继续？";
            mcs_mount_prompt            = "加载SD卡，继续？";
            mcs_umount_prompt           = "卸载SD卡将导致录像和图片等数据无法保存，继续？";
            mcs_sdcard_reset            = "设置成功，需要重启摄像机才能生效,继续？";
            mcs_sdcard_repairing        = "修复待重启";
            mcs_sdcard_formating        = "格式化待重启";
            mcs_sdcard_umount           = "未加载";
            mcs_valid                   = "可使用";
            mcs_io                      = "IO报警";
            mcs_input                   = "输入";
            mcs_outinput                = "输出";
            mcs_prompt_alert_on         = "打开布防，继续？";
            mcs_auto_sync_date_time     = "自动同步";
            mcs_alarm_record            = "报警录像";
            mcs_username                = "用户名";
            mcs_re_enter_the_password   = "重新输入密码";
            mcs_remember_me             = "保持登录";
            mcs_home                    = "首页";
            mcs_install_the_plug        = "安装插件";
            mcs_install_the_video_plug  = "安装视频插件";
            mcs_install_now             = "立即安装";
            mcs_temporarily_installed_use_ordinary_video = "暂不安装，使用普通视";
            mcs_brightness              = "亮度";
            mcs_contrast                = "对比度";
            mcs_color_saturation        = "饱和度";
            mcs_sharpness               = "锐度";
            mcs_duration                = "持续时长";
            mcs_index                   = "索引";
            mcs_remark                  = "备注";
            mcs_media_stream            = "媒体流";
            mcs_server                  = "服务器";
            mcs_media_transfer          = "媒体传输";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "厂商";
            mcs_model                   = "型号";
            mcs_plugin_version          = "插件版本";
            mcs_network_interface       = "网卡";
            mcs_transfer_protocol       = "传输协议";
            mcs_year                    = "年";
            mcs_month                   = "月";
            mcs_day                     = "日";
            mcs_hour                    = "小时";
            mcs_minute                  = "分";
            mcs_second                  = "秒";
            mcs_millisec                = "毫秒";
            mcs_ntp                     = "时间服务器地址";
            mcs_upload_upgrade          = "上传升级";
            mcs_stop                    = "停止";
            mcs_info_rewind             = "快退";
            mcs_fast_forward            = "快进";
            mcs_previous_frame          = "上一帧";
            mcs_next_frame              = "下一帧";
            mcs_record_audio            = "录制音频";
            mcs_week                    = "星期";
            mcs_all                     = "全选";
            mcs_id                      = "序号";
            mcs_select_all              = "选择所有";
            mcs_call                    = "呼叫";
            mcs_activation              = "激活码";
            mcs_caption                 = "上传文件";
            mcs_alarm_device            = "报警设备";
            mcs_not_installed           = "未安装";
            mcs_join_us_now             = "现在就加入我们";
            mcs_reconnect_please_wait   = "重新连接中,请稍候";
            mcs_erasing                 = "正在擦除";
            mcs_writing                 = "正在写入";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "有新版本";
            mcs_equipment_flip          = "设备翻转";
            mcs_device_status           = "设备状态";
            mcs_audio_setting           = "音频设置";
            mcs_nick_modify             = "修改昵称";
            mcs_ready                   = "就绪";
            mcs_full                    = "写满";
            mcs_connecting              = "连接中";
            mcs_message_buffering       = "消息缓存";
            mcs_upgrade_finish          = "升级完成";
            mcs_image                   = "图片";
            mcs_bar                     = "条";
            mcs_init                    = "初始化";
            mcs_confirm_new_password    = "新密码确认";
            mcs_continue_switch_wireless_network = "切换网络可能导致网络中断,继续？";
            mcs_restore_factory_settings_prompt = "恢复出厂设置，系统将重新启动，继续？";
            mcs_username_does_not_exis  = "用户名不存在";
            mcs_username_already_exists = "用户名已存在";
            mcs_successful_whether_login = "注册成功,现在登录?";
            mcs_username_demand         = "由字母开头的6-20位字母或数字";
            mcs_the_password_is_empty   = "密码为空";
            mcs_password_demand         = "6-20位的字母或数字";
            mcs_password_empty          = "确认密码为空";
            mcs_two_password_input_inconsistent = "两次密码输入不一致";
            mcs_the_user_name_is_empty  = "用户名为空";
            mcs_upgrade_to_the_latest_version = "升级到最新版本";
            mcs_subnet_mask_wrong_format = "子网掩码格式错误";
            mcs_upgrade_successful_restart_to_take_effect = "升级成功，需要重启设备才能生效";
            mcs_need_to_restart_the_camera_to_take_effect = "需要重启设备才能生效";
            mcs_not_allowed_close_two_network_cards = "不能同时禁用以太网卡和Wi-Fi";
            mcs_modified_successfully   = "修改成功";
            mcs_connection_successfully = "连接成功";
            mcs_connection_is_interrupted = "连接中断";
            mcs_devices_in_the_account_overrun = "用户设备数超限";
            mcs_format_error            = "格式错误";
            mcs_change                  = "修改";
            mcs_refresh                 = "刷新";
            mcs_connect                 = "连接";
            mcs_upgrade                 = "升级";
            mcs_activate                = "激活";
            mcs_filter                  = "过滤";
            mcs_reset                   = "重置";
            mcs_prompt_alert_off        = "撤销布防，继续？";
            mcs_invalid_server          = "时间服务器地址无效";
            mcs_upgrade_prompt          = "升级设备程序，继续？";
            mcs_restart_prompt          = "重启设备，继续？";
            mcs_repeat                  = "重复";
            mcs_scheduled_one           = "计划录像一";
            mcs_scheduled_two           = "计划录像二";
            mcs_scheduled_three         = "计划录像三";
            mcs_scheduled_four          = "计划录像四";
            mcs_more                    = "查看更多";
            mcs_leave                   = "松开载入更多";
            mcs_qrcode_scan             = "二维码扫描";
            mcs_inserted                = "已插入";
            mcs_removed                 = "已移除";
            mcs_upgrade_init            = "开始升级";
            mcs_upgrade_download        = "升级下载";
            mcs_check                   = "升级检查";
            mcs_audio_encoder_config    = "音频编码设置";
            mcs_video_codec             = "视频编码";
            mcs_download                = "下载";
            mcs_client_download         = "客户端下载";
            mcs_for_more_clarity_smooth_video_experience = "获取更清晰、流畅的视频体验";
            mcs_network                 = "网络";
            mcs_mobile_client_download  = "手机客户端下载";
            mcs_readonly                = "只读";
            mcs_please_exit_and_relogin = "请退出重新登录";
            mcs_add_device_failed       = "添加设备失败";
            mcs_set_password            = "修改密码";
            mcs_7x24_hours              = "7x24(小时)";
            mcs_mtalt                   = "%@ : 移动侦测警报";
            mcs_ioalt                   = "%@ : I/O 警報";
            mcs_time_zone               = "时区";
            mcs_select_time             = "选择时间";
            mcs_now                     = "现在";
            mcs_mipc_have_alert_notification = "MIPC告警通知";
            mcs_notification_center     = "通知中心";
            mcs_sound                   = "声音";
            mcs_vibration               = "振动";
            mcs_clear_cache             = "清除缓存";
            mcs_clear_cache_hint        = "你确定要清除缓存？";
            mcs_successfully_cleared_cache = "缓存成功清除";
            mcs_app_except_exit_hint    = "很抱歉，该应用程序遇到异常，将退出";
            mcs_rate_us                 = "给我们打分";
            mcs_password_too_simple_hint = "密码太简单，修改以提高安全性";
            mcs_check_for_new_version   = "检查是否有新版本";
            mcs_contact_us              = "联系我们";
            mcs_buffer_time             = "缓冲时间";
            mcs_default                 = "默认";
            mcs_alarmed_devices         = "报警设备数";
            mcs_aec                     = "回声消除";
            mcs_permission_denied       = "操作无权限";
            mcs_full_screen             = "全屏";
            mcs_forgot_your_password    = "忘记密码";
            mcs_your_email              = "您的电子邮件";
            mcs_sign_up_confirmation    = "注册成功，已发送激活邮件到你提交的邮件地址，请参考邮件内容激活帐号";
            mcs_recovery_prompt         = "请输入您的邮箱（用户名），我们将发送邮件告诉您如何重置密码";
            mcs_password_reset_confirmation = "提交成功，已发送重置邮件到你提交的邮件地址，请参考邮件内容重置密码";
            mcs_recovery_fail_no_mail   = "密码重置失败，本账号未绑定邮件地址";
            mcs_recovery_fail_invalid_link = "密码重置失败, 请确认重置链接内容或者重新重置";
            mcs_recovery_ok_login       = "密码重置成功，马上登录";
            mcs_active_ok_login         = "帐号激活成功,马上登录";
            mcs_active_fail_invalid_link = "帐号激活失败，请确认激活链接内容或者重新注册帐号";
            mcs_login_fail_inactive     = "帐号未激活,请查收激活邮件进行激活";
            mcs_sign_up_again           = "重新注册";
            mcs_press_start_talk        = "按住 说话";
            mcs_release_stop_talk       = "松开 结束";
            mcs_delete_device           = "删除设备";
            mcs_success_removed_equipment = "成功删除设备";
            mcs_remove_equipment_failure = "删除设备失败";
            mcs_device_busy             = "设备现在正忙";
            mcs_keep_testing            = "持续测试";
            mcs_notify_tone             = "通知铃声";
            mcs_float_video             = "启用悬浮视频";
            mcs_float_position          = "悬浮视频位置";
            mcs_video_resolution        = "视频分辨率";
            mcs_float_resolution        = "悬浮视频分辨率";
            mcs_top_left                = "左上角";
            mcs_top_right               = "右上角";
            mcs_bottom_left             = "左下角";
            mcs_bottom_right            = "右下角";
            mcs_action_next             = "下一步";
            mcs_action_cancel           = "取消";
            mcs_action_retry            = "重试";
            mcs_action_add              = "添加";
            mcs_is_add                  = "是否添加";
            mcs_action_apply            = "应用";
            mcs_action_config           = "配置";
            mcs_action_skip             = "跳过";
            mcs_action_ok               = "确定";
            mcs_action_add_device       = "添加设备";
            mcs_action_modify_password  = "修改密码";
            mcs_action_config_wifi      = "设置Wi-Fi";
            mcs_state_connect_device    = "正在连接设备";
            mcs_state_connect_device_fail = "连接设备失败";
            mcs_state_wait_device_online = "等待设备上线";
            mcs_state_device_online     = "在线";
            mcs_state_success           = "成功";
            mcs_fail                    = "失败";
            mcs_delete_success          = "删除成功";
            mcs_state_add_device_success = "添加设备成功";
            mcs_state_add_device_fail   = "添加设备失败";
            mcs_state_modify_pass_success = "密码修改成功";
            mcs_state_modify_pass_fail  = "密码修改失败";
            mcs_state_config_wifi_success = "设置Wi-Fi成功";
            mcs_state_config_wifi_fail  = "连接失败";
            mcs_state_connecting_to     = "正在连接到";
            mcs_network_connect_type    = "设备不在线，请你确保设备已连接电源，然后选择网络连接方式:";
            mcs_prompt_modify_passwd    = "为了安全起见，请更改设备默认密码。新密码不得少于六个字符";
            mcs_prompt_config_wifi      = "您的设备没有连接上Wi-Fi，请配置Wi-Fi.";
            mcs_step1_check_connect     = "第一步 : 将网线的一端接入您的路由器，另一端接入摄像机的网口。";
            mcs_first_step_ethernet_connect = "第二步：通过网线连接路由器和摄像头。";
            mcs_step2_check_connect     = "第二步 : 将您的摄像机上电，启动摄像机。";
            mcs_second_step_ethernet_connect = "第一步：确保设备已连接电源。";
            mcs_hint_check_network      = "备注 : 摄像机启动大约需要50秒, 启动完成后，LED信号灯每隔3秒绿灯闪烁3次,表示摄像机已经在线，向导将自动进入下一步。";
            mcs_the_end                 = "结束";
            mcs_hint_password_expired   = "密码已失效,请重新添加设备";
            mcs_hint_remove_ethernet    = "备注 : Wi-Fi工作正常，您现在可以断开网线。";
            mcs_gateway_format_incorrect = "网关地址格式不正确";
            mcs_dns_format_incorrect    = "DNS地址格式不正确";
            mcs_subnet_mask_format_incorrect = "子网掩码地址格式不正确";
            mcs_ip_format_incorrect     = "IP地址格式不正确";
            mcs_login_sucess            = "登录成功";
            mcs_donot_remind            = "不再提醒";
            mcs_clear_cache_signout_hint = "清除缓存将退出重新登录,继续？";
            mcs_devlist_adddev_hint     = "点击此处添加设备";
            mcs_devlist_menu_hint       = "点击此处设置分辨率";
            mcs_update_failed           = "升级失败";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "本地";
            mcs_set_npapi               = "如果插件已安装，请访问 \'chrome://flags/#enable-npapi\'，启用NPAPI，";
            mcs_set_win32k              = "访问 \'chrome://flags/#enable-win32k-renderer-lockdown\'，停用 win32k 渲染程序锁定功能，";
            mcs_restart_browser         = "重启浏览器";
            mcs_download_location       = "下载内容保存位置";
            mcs_Networking_mode         = "联网方式";
            mcs_wifi_intelligent_configuration = "Wi-Fi连接";
            mcs_ethernet_configuration  = "以太网连接";
            mcs_wifi_connect            = "连接";
            mcs_hard_disk               = "硬盘";
            mcs_wifi_is_connection      = "正在连接中，请稍候...";
            mcs_wifi_intelligent_configuration_setup_ailure = "Wi-Fi智能配置建立失败";
            mcs_box_list                = "盒子列表";
            mcs_repair_disk_prompt      = "修复硬盘可能导致部分数据丢失，继续？";
            mcs_format_disk_prompt      = "格式化将删除硬盘上所有数据，继续？";
            mcs_scheduled_alerting      = "计划布防";
            mcs_scheduled_alerting_one  = "计划布防一";
            mcs_scheduled_alerting_two  = "计划布防二";
            mcs_scheduled_alerting_three = "计划布防三";
            mcs_scheduled_alerting_four = "计划布防四";
            mcs_wifi_config_cancle      = "Wi-Fi配置取消";
            mcs_wifi_config_prepare     = "配置准备";
            mcs_wifi_config_first       = "将设备和手机与路由器保持在1米范围内";
            mcs_wifi_config_second      = "在配置Wi-Fi时，设备不能插网线";
            mcs_wifi_config_third       = "按RESET复位孔1秒后再松开";
            mcs_wifi_config_success     = "配置成功";
            mcs_wifi_config_failure     = "配置失败";
            mcs_failure_prompt          = "请重试或返回检查Wi-Fi密码是否输入正确";
            mcs_display_password        = "显示密码";
            mcs_action_smart_config_wifi = "配置向导";
            mcs_wifi_invalid            = "请先将手机连接上Wi-Fi网络";
            mcs_phone_not_connect_wifi  = "手机未连接上Wi-Fi网络";
            mcs_prompt_check_connection = "您的摄像机不在线，请检查摄像机的线路连接";
            mcs_wifi_cfg_ready          = "准备好了";
            mcs_reset_complete          = "复位好了";
            mcs_how_to_restore_factory_settings = "怎样恢复出厂设置：使用重置针长按摄像机底部的RESET重置孔10s以上";
            mcs_forgetpass_action_wizard = "请长按设备Reset复位孔10秒后松开，您将听到设备语音提示“恢复出厂设置”。";
            mcs_prompt_check_device_connection = "您的设备不在线，请检查设备的线路连接";
            mcs_prompt_select_device_connection = "您的设备不在线，请选择联网方式";
            mcs_input_wifi_name         = "请输入Wi-Fi名称";
            mcs_action_previous         = "上一步";
            mcs_io_alert_range_hint     = "IO报警时间应小于60秒";
            mcs_io_alert_time           = "IO报警时长(秒)";
            mcs_smart                   = "移动智能";
            mcs_plan                    = "定点净化";
            mcs_mute                    = "静音";
            mcs_wind_speed              = "风速";
            mcs_one                     = "一档";
            mcs_two                     = "二档";
            mcs_three                   = "三档";
            mcs_purify_mode             = "净化模式";
            mcs_video_list              = "视频列表";
            mcs_wifi_cfg_restore_factory_settings = "请将手机靠近设备，如果设备已配置过Wi-Fi，请按RESET复位键1秒后松开，设备将恢复出厂设置并自动重启";
            mcs_mask_settings           = "遮罩设置";
            mcs_notification_settings   = "通知设置";
            mcs_alarm_settings          = "报警设置";
            mcs_motion_detection        = "移动侦测";
            mcs_io_alarm                = "I/O报警";
            mcs_connect_status          = "连接状态";
            mcs_motion_notification     = "报警和通知";
            mcs_device_connected        = "设备已连接";
            mcs_start_spray             = "开始喷雾?";
            mcs_available_network       = "当前网络不可用，请检查您的网络设置";
            mcs_select_wifi_wizard      = "请你先选择Wi-Fi网络";
            mcs_input_wifi_password     = "输入Wi-Fi密码";
            mcs_device_admin_password   = "设备管理密码";
            mcs_device_guest_password   = "设备访客密码";
            mcs_user_admin_password     = "用户管理密码";
            mcs_user_guest_password     = "用户访客密码";
            mcs_save_network_set        = "保存网络设置和密码";
            mcs_nickname_not_set        = "摄像机昵称未设置";
            mcs_current_wifi            = "当前Wi-Fi";
            mcs_current_password_strength = "当前密码强度";
            mcs_new_password_strength   = "新密码强度";
            mcs_needs_to_open_the_DHCP  = "你的路由器需要开启DHCP（自动获取IP）的功能，如果尝试不成功请联系管理员。";
            mcs_picture                 = "图像";
            mcs_quality                 = "质量";
            mcs_size                    = "尺寸";
            mcs_guest_login             = "访客登录";
            mcs_audio_and_video         = "音频/视频";
            mcs_volume                  = "音量";
            mcs_smooth                  = "流畅";
            mcs_clear                   = "清晰";
            mcs_handsfree               = "免提";
            mcs_headphone               = "耳机";
            mcs_my                      = "我";
            mcs_customer_service        = "客服";
            mcs_firefox_flash_uninstall = "您的flash插件不可用，解决方法请参考https://support.mozilla.org/zh-CN/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "插件";
            mcs_plug_load               = "加载插件";
            mcs_plug_load_refuse        = "不加载插件";
            mcs_plug_load_auto          = "自动";
            mcs_option                  = "选项";
            mcs_option_ok               = "确定";
            mcs_voice_call_fails        = "语音通话失败，请检查网络";
            mcs_umounted_prompt         = "是否卸载？";
            mcs_mounted_prompt          = "是否加载？";
            mcs_format_prompt           = "是否格式化？";
            mcs_repair_prompt           = "是否修复?";
            mcs_signup_prompt           = "新的？";
            mcs_wifi_connect_sucess_prompt = "备注：Wi-Fi正常工作，您现在可以断开网络";
            mcs_manual_input_prompt     = "手动输入设备ID";
            mcs_qrscan_prompt           = "您尚未允许此应用程序访问您的相机，请在iPhone的\'设置\'-\'隐私\'-\'相机\'功能中，找到名字为\'Vimtag\'的应用程序进行修改。";
            mcs_select_network_style    = "选择网络连接方式：";
            mcs_push                    = "公告栏";
            mcs_connect_power_prompt    = "备注：设备不在线，请先确保已连接电源";
            mcs_fail_microphone         = "无法访问麦克风";
            mcs_microphone_prompt       = "您尚未允许此应用程序访问您的麦克风，请在iPhone的 ’设置’－’隐私’－’麦克风’功能中，找到名字为’Vimtag‘的应用程序进行修改";
            mcs_super_clear             = "超清";
            mcs_high_clear              = "高清";
            mcs_standard_clear          = "标清";
            mcs_fluent_clear            = "流畅";
            mcs_deleting                = "正在删除...";
            mcs_event                   = "事件";
            mcs_one_hour                = "一小时";
            mcs_half_hour               = "半小时";
            mcs_five_min                = "五分钟";
            mcs_category                = "类 别 :";
            mcs_time_length             = "时 长 :";
            mcs_new                     = "新";
            mcs_week_setting_prompt     = "星期不能为空";
            mcs_time_setting_prompt     = "时间设置不能为空";
            mcs_today                   = "今天";
            mcs_wifi_password           = "Wi-Fi 密码";
            mcs_register_prompt         = "请您先注册账号";
            mcs_click_login             = "点击登录";
            mcs_not_login_prompt        = "您还没登录，请点击登录！";
            mcs_product_presentation    = "首页";
            mcs_help_feedback           = "帮助";
            mcs_help_information        = "帮助";
            mcs_feedback                = "意见反馈";
            mcs_feedback_des            = "感谢使用我们app,欢迎给我们提出您宝贵的意见";
            mcs_feedback_praise         = "给个好评";
            mcs_feedback_title_prompt   = "反馈标题";
            mcs_feedback_title          = "请输入标题(18字以内)";
            mcs_feedback_type_prompt    = "问题类型";
            mcs_feedback_please_select  = "- -请选择类型- -";
            mcs_feedback_select_option1 = "界面问题";
            mcs_feedback_select_option2 = "摄像机问题";
            mcs_feedback_select_option9 = "其他问题";
            mcs_feedback_dec_prompt     = "具体描述";
            mcs_feedback_dec            = "请输入您的意见";
            mcs_feedback_upload_photo   = "上传照片";
            mcs_preview_pic             = "预览";
            mcs_Album                   = "从相册中选取";
            mcs_Photograph              = "拍照";
            mcs_camera_unavailable      = "相机不可用";
            mcs_feedback_submit         = "提交";
            mcs_feedback_title_alert    = "标题不符合规则";
            mcs_feedback_type_alert     = "请选择正确的类型";
            mcs_feedback_dec_alert      = "请输入您的意见";
            mcs_feedback_submit_success = "提交成功";
            mcs_feedback_submit_fail    = "提交失败";
            mcs_connect_wifi_prompt     = "连接Wi-Fi";
            mcs_cloud                   = "云端";
            mcs_demo                    = "体验";
            mcs_shortest                = "最短";
            mcs_no_history              = "无历史记录";
            mcs_download_pc_client      = "点击下载PC客户端";
            mcs_accounts_bind_email_exist = "该账号已经绑定过邮箱";
            mcs_accounts_bind_email_busy = "该邮箱已经绑定过账号";
            mcs_systemupdatetip_noversionnodetail = "当前版本有可用的更新，暂无详细更新信息";
            mcs_systemupdatetip_nodetail = "暂无详细更新信息";
            mcs_systemupdatetip_updatefrom = "当前版本";
            mcs_systemupdatetip_updateto = "可以升级到";
            mcs_systemupdatetip_sureforupdate = "确定升级？";
            mcs_systemupdatetip_updatecontent = "本次更新的内容";
            mcs_operate_prompt          = "请根据图示操作";
            mcs_operation_prompt        = "操作提示";
            mcs_qrcode_prompt_content   = "用设备摄像头扫描手机二维码";
            mcs_qrcode_camera_distance  = "二维码与摄像头距离12~14cm";
            mcs_planvideo_datewizard    = "请设置日期";
            mcs_planvideo_timewizard    = "请设置时间";
            mcs_planvideo_wizard        = "请设置时间和日期";
            mcs_email_unbind            = "帐号没有绑定邮箱";
            mcs_email_unmatch           = "邮箱不匹配";
            mcs_email_inactive          = "邮箱没有激活";
            mcs_email_binded            = "邮箱已被绑定";
            mcs_user_binded_bymail      = "用户已被绑定";
            mcs_bind_email_fail         = "邮箱绑定失败";
            mcs_diagnosis               = "诊断";
            mcs_delay                   = "时延";
            mcs_packet_loss_rate        = "丢包率";
            mcs_timezone_IDL            = "国际日期变更线";
            mcs_timezone_China          = "中国";
            mcs_timezone_Midway         = "中途岛";
            mcs_timezone_Niue           = "纽埃岛";
            mcs_timezone_Samoa          = "美属萨摩亚";
            mcs_timezone_Aleutian       = "阿留申群岛";
            mcs_timezone_Hawaii         = "夏威夷群岛";
            mcs_timezone_Alaska         = "阿拉斯加州";
            mcs_timezone_PSTUSCanada    = "太平洋标准时间（美国和加拿大）";
            mcs_timezone_Arizona        = "亚利桑那州";
            mcs_timezone_MSTUSCanada    = "山地标准时间（美国和加拿大）";
            mcs_timezone_CSTUSCanada    = "中部标准时间（美国和加拿大）";
            mcs_timezone_ESTUSCanada    = "东部标准时间（美国和加拿大）";
            mcs_timezone_ASTCanada      = "大西洋标准时间（加拿大）";
            mcs_timezone_Newfoundland   = "纽芬兰";
            mcs_timezone_Brasilia       = "巴西利亚";
            mcs_timezone_BuenosAires    = "布宜诺斯艾利斯";
            mcs_timezone_Santiago       = "圣地亚哥";
            mcs_timezone_Noronha        = "迪诺罗尼亚";
            mcs_timezone_SouthGeorgia   = "南乔治亚";
            mcs_timezone_Azores         = "亚速尔群岛";
            mcs_timezone_CapeVerde      = "佛得角";
            mcs_timezone_London         = "伦敦";
            mcs_timezone_Lisbon         = "里斯本";
            mcs_timezone_Dublin         = "都柏林";
            mcs_timezone_Berlin         = "柏林";
            mcs_timezone_Amsterdam      = "阿姆斯特丹";
            mcs_timezone_Brussels       = "布鲁塞尔";
            mcs_timezone_Budapest       = "布达佩斯";
            mcs_timezone_Madrid         = "马德里";
            mcs_timezone_Paris          = "巴黎";
            mcs_timezone_Rome           = "罗马";
            mcs_timezone_Sarajevo       = "萨拉热窝";
            mcs_timezone_Cairo          = "开罗";
            mcs_timezone_Amman          = "安曼";
            mcs_timezone_Beirut         = "贝鲁特";
            mcs_timezone_Istanbul       = "伊斯坦布尔";
            mcs_timezone_Jerusalem      = "耶路撒冷";
            mcs_timezone_Athens         = "雅典";
            mcs_timezone_Baghdad        = "巴格达";
            mcs_timezone_Riyadh         = "利雅得";
            mcs_timezone_Qatar          = "卡塔尔";
            mcs_timezone_Moscow         = "莫斯科";
            mcs_timezone_Tehran         = "德黑兰";
            mcs_timezone_Baku           = "巴库";
            mcs_timezone_Dubai          = "迪拜";
            mcs_timezone_Tbilisi        = "第比利斯";
            mcs_timezone_Kabul          = "喀布尔";
            mcs_timezone_Karachi        = "卡拉奇";
            mcs_timezone_Yekaterinburg  = "叶卡捷琳堡";
            mcs_timezone_Maldives       = "马尔代夫";
            mcs_timezone_Calcutta       = "加尔各答";
            mcs_timezone_Colombo        = "科伦坡";
            mcs_timezone_Katmandu       = "加德满都";
            mcs_timezone_Almaty         = "阿拉木图";
            mcs_timezone_Dhaka          = "达卡";
            mcs_timezone_Omsk           = "鄂木斯克";
            mcs_timezone_Thimbu         = "廷布";
            mcs_timezone_Rangoon        = "仰光";
            mcs_timezone_Bangkok        = "曼谷";
            mcs_timezone_Jakarta        = "雅加达";
            mcs_timezone_Vientiane      = "万象";
            mcs_timezone_Harbin         = "哈尔滨市";
            mcs_timezone_Shanghai       = "上海";
            mcs_timezone_Hongkong       = "香港";
            mcs_timezone_Singapore      = "新加坡";
            mcs_timezone_Taipei         = "台北";
            mcs_timezone_Ulaanbaatar    = "乌兰巴托";
            mcs_timezone_Perth          = "珀斯";
            mcs_timezone_Seoul          = "汉城";
            mcs_timezone_Tokyo          = "东京";
            mcs_timezone_Darwin         = "达尔文";
            mcs_timezone_Magadan        = "马加丹";
            mcs_timezone_Vladivostok    = "符拉迪沃斯托克";
            mcs_timezone_Guam           = "关岛";
            mcs_timezone_Sydney         = "悉尼";
            mcs_timezone_Canberra       = "堪培拉";
            mcs_timezone_Melbourne      = "墨尔本";
            mcs_timezone_Queensland     = "昆士兰";
            mcs_timezone_LordHowe       = "豪勋爵";
            mcs_timezone_Guadalcanal    = "瓜达尔卡纳尔岛";
            mcs_timezone_Fiji           = "斐济";
            mcs_timezone_Auckland       = "奥克兰";
            mcs_timezone_Apia           = "阿皮亚";
            mcs_timezone_Fakaofo        = "法考福";
            mcs_timezone_Tongatapu      = "汤加塔布";
            mcs_timezone_Kiritimati     = "克里斯马斯";
            mcs_connect_timeout         = "连接超时";
            mcs_share                   = "分享";
            mcs_share_prompt_start      = "你可以访问";
            mcs_share_prompt_end        = "通过同一网络的PC或Android手机的浏览器下载的该视频";
            mcs_share_note              = "下载过程中请不要离开此页面。";
            mcs_video_size              = "大小";
            mcs_video_duration          = "时长";
            mcs_my_folder               = "我的文件";
            mcs_account_no_contain      = "该帐号不包含";
            mcs_edit                    = "编辑";
            mcs_video_number            = "个视频";
            mcs_no_local_video          = "暂无录像";
            mcs_empty_folder            = "文件夹为空";
            mcs_no_history_record       = "您还没有历史记录";
            mcs_no_local_record         = "您的本地记录为空";
            mcs_empty_cloud_list_first  = "您的设备列表还是空空的，";
            mcs_empty_cloud_list_second = "点击左上角的";
            mcs_empty_cloud_list_third  = "添加设备吧！";
            mcs_empty_local_list_first  = "您的本地列表还是空空的，";
            mcs_empty_local_list_second = "尝试";
            mcs_empty_local_list_third  = "下拉屏幕";
            mcs_empty_local_list_forth  = "刷新吧！";
            mcs_empty_local_list_fifth  = "（搜索所在局域网内的设备）";
            mcs_record_prompt           = "您可以在\"我->我的文件\"中查看该录像";
            mcs_record_download_prompt  = "您可以在\"我的文件\"中查看该录像";
            mcs_register_buton_start    = "还没有账号，";
            mcs_register_buton_end      = "立即注册";
            mcs_product                 = "产品";
            mcs_user_or_password_invalid = "用户名或密码错误";
            mcs_share_video_prompt      = "您正在使用非WiFi网络，请切换到WiFi网络下再分享";
            mcs_download_video_prompt   = "您正在使用非WiFi网络，下载将产生流量费用，继续？";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "普通";
            mcs_common_problem          = "常见问题";
            msc_enter_comment           = "输入你的意见";
            msc_description             = "概述";
            mcs_parameter               = "参数";
            mcs_help_and_feedback       = "帮助和反馈";
            mcs_personal_center         = "个人中心";
            mcs_version                 = "版本";
            mcs_language                = "语言";
            mcs_new_user                = "我是新用户";
            mcs_have_account            = "已有账号";
            mcs_try_it                  = "体验一下";
            mcs_sign_up_now             = "立即注册";
            mcs_input_confirm_password  = "确认密码";
            mcs_warranty_registration   = "保修登记";
            mcs_get_more_cameras        = "得到更多的摄像机";
            mcs_user_inactive           = "用户未激活";
            mcs_format_options          = "格 式 :";
            mcs_slide_screen            = "滑动屏幕可以调节视频角度";
            mcs_zoom_in_screen          = "捏合屏幕可以放大视频细节";
            mcs_pause                   = "暂停";
            mcs_source                  = "来源";
            mcs_magnetic                = "门磁";
            mcs_sos                     = "紧急按钮";
            mcs_input_download_path     = "下载路径";
            mcs_download_path_name_error = "下载路径文件名只能包含英文字母（a-z、A-Z）或者数字（0-9）";
            mcs_active                  = "活动";
            mcs_out                     = "离开";
            mcs_quiet                   = "安静";
            mcs_scenes                  = "情景";
            mcs_accessory               = "附件";
            mcs_quiet_mode              = "安静模式";
            mcs_active_mode             = "活动模式";
            mcs_out_mode                = "离开模式";
            mcs_add_accessory           = "添加附件";
            mcs_accessory_type          = "附件类型";
            mcs_add_successfully        = "添加成功";
            mcs_set_scene               = "你的附件还未设置情景，请点击";
            mcs_to_set                  = "去设置";
            mcs_add_accessory_button    = "长按按钮直到红灯再次熄灭完成添加";
            mcs_auto_monday             = "一";
            mcs_auto_tuesday            = "二";
            mcs_auto_wednesday          = "三";
            mcs_auto_thursday           = "四";
            mcs_auto_friday             = "五";
            mcs_auto_saturday           = "六";
            mcs_auto_sunday             = "日";
            mcs_search                  = "搜索";
            mcs_format_input            = "格式化";
            mcs_get_accessory_failed    = "获取附件失败";
            mcs_get_scene_failed        = "获取情景失败";
            mcs_search_failed           = "搜索失败";
            mcs_add_failed              = "添加失败";
            mcs_ethernet_connect        = "以太网连接";
            mcs_action_click_retry      = "点击重试";
            mcs_wifi_config_failure_detail = "或者您可以尝试";
            mcs_qrcode_connect          = "二维码连接";
            mcs_close_sound_prompt      = "打开声音有助于Wi-Fi连接，请将手机扬声器紧贴摄像头的麦克风";
            mcs_qrcode_prompt_title     = "请如图所示操作";
            mcs_qrcode_prompt_detail    = "摄像机正对手机二维码进行扫描，保持30厘米左右的距离";
            mcs_select_wifi_prompt      = "无需连接网线";
            mcs_select_ethernet_prompt  = "只能通过网线连接";
            mcs_enter_config_mode_prompt = "请检查Wi-Fi指示灯是否是三红三绿交替闪烁。如果是，请点击\'下一步\'按钮。如果不是，请按下相机的\'RESET\'按钮。然后再次检查Wi-Fi指示灯";
            mcs_no_enter_config_mode    = "没有进入配置模式";
            mcs_record_time             = "录像时长(秒)";
            mcs_stop_search             = "停止搜索";
            mcs_smart_wifi_setup        = "WiFi智能配置";
            mcs_ethernet_setup          = "以太网设置";
            mcs_wifi_config_restore_start = "1）确保设备已连接电源";
            mcs_wifi_config_restore_end = "2）按住复位键一秒钟，该设备将恢复出厂设置并在60秒后重新启动，而且会自动进入配置模式";
            mcs_Sense_schedule          = "情景计划";
            load_succeed                = "加载成功";
            load_fail                   = "加载失败";
            refresh_succeed             = "刷新成功";
            refresh_fail                = "刷新失败";
            mcs_ensure_dev_power        = "1) 确保设备已连接电源";
            all_refresh_complete        = "已刷新全部数据";
            mcs_synchronize             = "同步";
            mcs_synchronize_detail      = "下列设备的情景模式和设置不一致，需要同步后才能工作";
            mcs_Sense_Schedule_Set      = "情景计划设置";
            mcs_Sence_Schedule_detail   = "如果您启用了自动情景模式，系统将按照情景计划在不同的时间自动切换情景";
            mcs_Scene_set               = "情景设置";
            mcs_Scene_set_detail        = "如果你启用了情景模式，设备将按照情景模式的设置在以下页面呈现";
            mcs_send_message            = "发送消息";
            mcs_start_recording         = "开始录像";
            mcs_start_capture           = "开始抓拍";
            mcs_turn_on_video           = "要在离开模式进行持续录像，请开启录像";
            mcs_search_press_button     = "短按背部按钮1秒后松开，指示灯缓慢闪烁";
            mcs_add_fail1               = "设备由于短按已取消添加，请点击重试重新添加";
            mcs_add_fail2               = "设备添加失敗，请点击重试重新添加";
            mcs_recording_duration      = "录像时长（秒）";
            mcs_settings_unsaved        = "你的设置未保存";
            mcs_want_save               = "请问保存吗？";
            mcs_camera                  = "摄像机";
            mcs_router                  = "路由器";
            mcs_start_up                = "启动";
            mcs_cancle_add              = "设备由于短按已经取消添加";
            mcs_visit_photo_fail        = "访问相册失败";
            mcs_camera_cell             = "相机";
            mcs_myphoto                 = "我的照片";
            mcs_select_photo            = "选择相册";
            mcs_app_new_version         = "新版本";
            mcs_update_new_version      = "立即升级";
            mcs_app_new_version_prompt  = "App有新版本，请选择立即升级下载更新";
            download_failed             = "下载失败";
            mcs_connect_server_prompt   = "WiFi已连接，正在连接服务器";
            mcs_local_search            = "本地搜索";
            mcs_choose_device_type      = "选择设备类型";
            mcs_wifi_state              = "备注：WIFI工作正常，您现在可以断开网线（断开网线后可能会出现设备不在线的情况，请等待20s会自动上线）";
            mcs_sweep                   = "扫一扫";
            mcs_wifi_config_tip         = "有路由器,有WIFI,避免布线麻烦";
            mcs_ethernet_config_tip     = "没有路由器方便插网线";
            mcs_ethernet_connect_step_one = "第一步:确保电源线1连接电源插口2";
            mcs_ethernet_connect_step_two = "第二步:通过网线4连接路由器端口和摄像头网口";
            mcs_sweep_qrcode_tip        = "摄像头正对手机二维码进行扫描,保持30厘米左右的距离";
            mcs_sound_config_tip        = "播放声音有助于Wi-Fi连接。(也可选择关闭)";
            mcs_sosalt                  = "%@ : 紧急按钮警报(%@)";
            mcs_dooralt                 = "%@ : 门磁警报(%@)";
            mcs_wifi_config_restore     = "请按RESET键1秒后松开，“设备进入wifi配置模式”。";
            mcs_voice_remind_heard      = "已听到语音提示";
            mcs_netWork_prompt          = "网络提示";
            mcs_con_netWork             = "当前使用的网络为数据连接，可能消耗大量流量，是否跳转设置界面设置网络";
            mcs_no_netWork              = "当前为无网络连接，是否跳转到设置界面设置网络";
            mcs_exception_des           = "您的app上次异常退出，是否向服务器发送错误报告";
            mcs_exception_prompt        = "异常提示";
            mcs_erro_diagnosis          = "错误诊断";
            mcs_erro_log_des            = "App记录了近期的错误日志，请选择提交按钮上传错误日志，感谢您的配合！";
            mcs_is_submitting           = "正在提交";
            mcs_firmware_version        = "固件版本";
            mcs_device_assembly         = "1.电源线  2.电源口  3.网口  4.网线  5.转接头";
            mcs_forgetpass_action_wizard_old = "按住复位键一秒钟，该设备将恢复出厂设置并在60秒后重新启动，密码恢复为admin";
            mcs_device_assembly_mipc    = "1.电源线  2.电源口  3.网口  4.网线";
            mcs_device_connect_power_prompt = "设备不在线，请如图所示将您的设备接入电源，已看到电源灯红灯常亮，设备启动完成。";
            mcs_lights_sound            = "已看到灯亮";
            mcs_connect_power           = "连接电源";
            mcs_search_magnetic         = "如图所示，合并门磁并短按侧面按钮1秒后松开，指示灯缓慢闪烁";
            mcs_add_magnetic            = "打开门磁再合并，看到指示灯快闪后熄灭完成添加";
            mcs_already_downloaded      = "已下载";
            mcs_my_order                = "我的订单";
            mcs_auto_mode               = "自动模式";
            mcs_new_small               = "最小";
            mcs_new_half                = "较小";
            mcs_new_normal              = "标清";
            mcs_new_hd                  = "高清";
            mcs_scene_now               = "当前情景";
            mcs_please_install_wechat   = "请安装微信";
            mcs_wechat_not_support      = "微信版本不支持请更新微信";
            mcs_motion_alert            = "移动侦测警报";
            mcs_io_alert                = "I/O 警報";
            mcs_valid_user_name         = "第一步：请输入有效用户名";
            mcs_binding_mailbox         = "第二步：请输入绑定的邮箱";
            mcs_send_mailbox_succuess_prev = "我们已向您传传绑定的邮箱";
            mcs_send_mailbox_succuess_next = "发送了一封密码找回邮件，请您注意接收邮件。";
            mcs_all_image               = "所有图片";
            mcs_unavailable_image       = "图片不可用，请重新选取";
            mcs_set_nickname            = "设置昵称";
            mcs_search_timeout          = "搜索时间到，请重新点击搜索";
            mcs_screen_size             = "画面设置";
            mcs_screen_reset            = "设置成功，需要重启摄像机才能生效";
            mcs_wifi_network_prompt     = "请检查摄像机连接的WiFi是否是5GHz频段的WiFi，请让摄像机连接2.4GHz频段的WiFi";
            mcs_fault_diagnosis         = "网络诊断";
            mcs_sever_diagnosis         = "可能由于服务器故障，导致无法正常使用";
            mcs_select_problem          = "请选择问题";
            mcs_connot_lonin            = "不能登录";
            mcs_connot_play             = "不能播放";
            mcs_add_problems            = "附加问题";
            mcs_encounterer_problems    = "请输入遇到的问题";
            mcs_diagnostic_network      = "开始诊断";
            mcs_network_diagnostic_prompt = "进入网络诊断可以帮助我们更好地解决您所遇到的问题，诊断所需时长大约几分钟";
            mcs_network_diagnostic      = "故障诊断中";
            mcs_connecting_server       = "正在连接服务器 。。。";
            mcs_diagnostic_process_prompt = "诊断过程可能需要几分钟，诊断期间请不要进行其他操作，但您可以随时停止诊断";
            mcs_diagnostic_results      = "诊断结果";
            mcs_diagnostic_results_received = "诊断完成，诊断结果已收到";
            mcs_diagnostic_results_prompt = "感谢您参与本次诊断，诊断结果将有助于我们尽快地解决您所遇到的问题";
            mcs_results_no_abnormality  = "诊断结果无异常";
            mcs_no_abnormality_prompt   = "本次诊断暂无发现异常情况。您可以选择深度诊断，启动日志收集功能，将有助于我们更好地解决您所遇到的问题";
            mcs_continue_diagnosis      = "深度诊断";
            mcs_diagnosis_connot_sent   = "诊断结果无法发送";
            mcs_email_sends             = "发送电子邮件";
            mcs_email_sends_prompt      = "通过电子邮件发送诊断结果给我们，将有助于我们尽快地解决您所遇到的问题";
            mcs_diagnosis_send          = "发送";
            mcs_diagnosis_email         = "电子邮件";
            mcs_send_successful         = "发送成功";
            mcs_diagnosis_type_select_prompt = "请先选择诊断类型";
            mcs_stop_diagnosis          = "停止诊断";
            mcs_detail_diagnosis_prompt = "深度诊断进行中，您可以在\"设备\"页面关闭";
            mcs_detail_diagnosis_stop_prompt = "深度诊断正在进行中，您可以随时中止";
            mcs_exit_detail_diagnosis   = "深度诊断正在进行中，是否停止？";
            mcs_network_connection_unavailable = "网络连接不可用";
            mcs_Failed_connect_Internet = "未能连接到互联网";
            mcs_connect_internet_note   = "如需要连接到互联网，请注意以下几点：";
            mcs_connect_internet_detail_first = "检查手机中的无线局域网设置，查看是否有接入的无线局域网信号";
            mcs_connect_internet_detail_second = "检查手机是否已经接入移动网络，并且手机没有被停用";
            mcs_connect_wifi_note       = "如果你已接入了无线局域网：";
            mcs_connect_wifi_detail     = "请检查你连接的无线局域网热点是否已接入互联网，或该热点是否已允许你的设备访问局域网";
            mcs_device_or_phone_time_zone_not_equals_please_select = "设备当前时区与手机的时区不一致,请选择一个正确的时区";
            mcs_phone_timezone          = "手机时区";
            mcs_timezone_change         = "修改时区";
            mcs_mail_send               = "邮件已发送";
            mcs_yes_verif               = "是";
            mcs_no_verif                = "否";
            mcs_camera_found_new_version_y_n_upgrade = "发现摄像机有新版本，是否前往升级？";
            mcs_auto_adapt_split_screen = "自适应";
            mcs_four_split_screen       = "四分屏";
            mcs_nine_split_screen       = "九分屏";
            mcs_twelve_split_screen     = "十二分屏";
            mcs_not_connection_server   = "无法连接服务器";
            mcs_more_options            = "更多";
            mcs_bind_email_prompt       = "为了账号的安全，请绑定您的邮箱";
            mcs_login_now               = "立即登录";
            mcs_device_connect_power    = "1.电源线     2.电源口";
            mcs_device_connect_ethernet = "1.网口     2.网线";
            mcs_device_connect_ethernet_prompt = "将网线的一端接入网口，另一端接入路由器，已看到网口灯绿灯闪烁，网线连接完成。";
            mcs_pwd_format              = "密码格式:长度在8到16位字符之间,数字,大小写字母和特殊符号至少包含三种";
            mcs_client_new              = "客户端";
            mcs_user_guide              = "用户手册";
            mcs_ebitcam_download_describe = "ebitcam是一款云端监控服务软件,本软件配合云端摄像头使用,让用户随时随地查看视频资讯,我们为你提供清晰,流畅的观看体验,智能的控制让你随时关爱自己的家人,喜欢的用户快来下载吧!";
            mcs_mipc_download_describe  = "mipc是一款云端监控服务软件,本软件配合云端摄像头使用,让用户随时随地查看视频资讯,我们为你提供清晰,流畅的观看体验,智能的控制让你随时关爱自己的家人,喜欢的用户快来下载吧!";
            mcs_guide_download          = "手册下载";
            mcs_password_admin          = "密码管理";
            mcs_already_read            = "我已阅读并同意";
            mcs_privacy_policy          = "隐私政策";
            mcs_not_agree_privacy_policy = "您还未同意隐私政策";
            mcs_reload                  = "重新加载";
            mcs_start_download          = "立即下载";
            mcs_video_play_fail         = "视频播放失败";
            mcs_download_app_tips       = "您还可以尝试使用 PC客户端";
            mcs_memo                    = "记忆";
            mcs_fencer                  = "剑客";
            mcs_focus                   = "焦点";
            mcs_mini                    = "迷你";
            mcs_shield                  = "小盾牌";
            mcs_snowman                 = "小雪人";
            mcs_device_type             = "设备类型";
            mcs_connect_device_wifi     = "摄像机暂不支持5GHz频段的WiFi";
            mcs_send_diagnosis_results  = "诊断结果发送中...";
            mcs_local_file              = "本地文件";
            mcs_local_device            = "本地设备";
            mcs_export_sd_data          = "导出SD卡数据";
            mcs_shaking                 = "摇头机系列";
            mcs_outdoor                 = "室外枪机系列";
            mcs_card                    = "卡片机系列";
            mcs_wifi_connection         = "WiFi连接";
            mcs_home_mode               = "在家模式";
            mcs_away_home_mode          = "外出模式";
            mcs_auto_switch_mode        = "自动切换";
            mcs_select_scene_mode       = "请选择情景模式";
            mcs_7x24_hours_prompt       = "开启7x24(小时)录像";
            mcs_all_day_recording       = "全天录像";
            mcs_home_mode_prompt        = "在家模式:所有设备关闭报警";
            mcs_away_home_mode_prompt   = "外出模式:所有设备开启报警";
            mcs_at_home                 = "在家";
            mcs_away_home               = "外出";
            mcs_set_timezone_prompt_start = "您的时区是";
            mcs_set_timezone_prompt_end = "请在设置中\"日期/时间\"切换时区";
            mcs_set_wifi_remind_head    = "以下问题可能导致摄像机连网失败，建议避免";
            mcs_set_wifi_remind_1       = "检查是否开启了WIFI放蹭网，此设置可能会导致摄像机无法正常连网。您可以临时关闭防蹭网，摄像机成功联网后再恢复路由器设置即可";
            mcs_set_wifi_remind_2       = "如果您家是双频路由器，请检查摄像机连接的WIFI是否是5GHz频段的WIFI，请让摄像机连接2.4GHz频段的WIFI";
            mcs_set_wifi_remind_3       = "摄像机暂时不支持WPA/WPA2企业级的WIFI，请选择其他WIFI";
            mcs_set_wifi_remind_4       = "如果您家的WIFI是桥接的，因为桥接的原因可能会导致您的网络非常不稳定，建议连接非桥接的WIFI";
            mcs_set_wifi_remind_5       = "摄像机对WIFI有什么要求";
            mcs_record_save_to_my_file  = "录像已保存至我的文件";
            mcs_view_now                = "立即查看";
            mcs_search_sos_strat        = "如图所示，短按底部按钮";
            mcs_search_sos_end          = "1秒后，设备指示灯闪烁即可松开";
            mcs_search_magnetic_start   = "如图所示，合并门磁后，短按侧面按钮";
            mcs_search_magnetic_end     = "1秒后，设备指示灯闪烁即可松开";
            mcs_adding                  = "正在添加";
            mcs_record_empty_set_sd     = "插入SD卡可存储历史视频";
            mcs_video_play_offline      = "该设备离线了";
            mcs_video_play_network_fail = "网络连接失败，稍后再试";
            mcs_alert_notify_guide1     = "原【移动侦测】操作迁移至【附件】，可通过【情景模式】进行设置";
            mcs_alert_notify_guide2     = "操作方式如下：";
            mcs_alert_notify_guide3     = "选择【情景】，需要布防开启外出模式，需要撤防开启在家模式；";
            mcs_alert_notify_guide4     = "选择【附件】-【附件列表】-【移动侦测】开启外出模式的报警、录像、拍照、IO报警功能，关闭在家模式的报警、录像等功能。";
            mcs_plan_protect_guide1     = "原【计划布防】操作迁移到【情景】";
            mcs_plan_protect_guide2     = "选择【情景】，开启情景模式的自动切换；";
            mcs_plan_protect_guide3     = "选择";
            mcs_plan_protect_guide4     = ", 对需要布防的时间段（如：星期二 7：00-18：00）设置为外出模式；确定后保存，返回到【设置】界面；";
            mcs_plan_record_guide       = "选择【录像】，开启外出模式的录像功能。";
            mcs_plan_record_guide1      = "原【计划录像】操作迁移到【录像】";
            mcs_plan_record_guide2      = ", 对需要录像的时间段（如：星期二 7：00-18：00）设置为外出模式；确定后保存，返回到【设置】界面；";
            mcs_forgetpass_action_prompt = "请长按设备Reset复位孔10秒后松开，设备红外灯亮起并恢复出厂设置";
            mcs_cloud_box               = "云盒子";
        }/* zh */
        else if(lang == "tw")
        {
            mcs_name                    = "名稱";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "名稱";
            mcs_old_nick                = "昵稱";
            mcs_linked                  = "已直連";
            mcs_sign_in                 = "登錄";
            mcs_back                    = "返回";
            mcs_will_back               = "将返回";
            mcs_add                     = "添加";
            mcs_add_device              = "添加設備";
            mcs_device_existed          = "設備已存在";
            mcs_cancel                  = "取消";
            mcs_exit                    = "退出";
            mcs_remember_password       = "記住密碼";
            mcs_password_remembered     = "已記住密碼";
            mcs_sign_ining              = "正在登錄...";
            mcs_cloud_server            = "雲伺服器";
            mcs_input_device_id         = "輸入設備ID";
            mcs_input_username          = "輸入用戶名";
            mcs_input_email_addr        = "輸入email地址";
            mcs_email_address           = "email地址";
            mcs_email                   = "email";
            mcs_binding                 = "綁定";
            mcs_binding_email           = "綁定郵箱";
            mcs_binding_send_prompt     = "驗證郵件已發送，請盡快登錄郵箱驗證";
            mcs_binding_email_prompt    = "忘記密碼時，可以通過該郵箱重新設置。";
            mcs_input_password          = "輸入密碼";
            mcs_access_server_failed    = "連接伺服器失敗";
            mcs_device_offline          = "設備不在線";
            mcs_invalid_password        = "密碼錯誤";
            mcs_invalid_dev             = "設備不存在";
            mcs_login_faided            = "登錄失敗";
            mcs_invalid_qrcode          = "無效二維碼";
            mcs_please_input_username   = "請輸入用戶名";
            mcs_please_input_password   = "請輸入密碼!";
            mcs_qrcode_scan_hint        = "請將方框對准設備底部的二維碼";
            mcs_device_list_empty       = "設備列表為空";
            mcs_record_list_is_empty    = "錄影列表為空";
            mcs_password_expired        = "密碼已失效";
            mcs_set_video_size          = "設置影像大小";
            mcs_hd_1280x720             = "高清 [1280x720]";
            mcs_auto                    = "自動";
            mcs_normal_640x360          = "標清 [640x360]";
            mcs_half_320x180            = "較小 [320x180]";
            mcs_small_160x90            = "最小 [160x90]";
            mcs_play                    = "觀看";
            mcs_settings                = "設置";
            mcs_messages                = "紀錄";
            mcs_alarm                   = "警報";
            mcs_delete                  = "刪除";
            mcs_delete_camera           = "刪除";
            mcs_apply                   = "應用";
            mcs_speed                   = "速度";
            mcs_others                  = "其他";
            mcs_audio                   = "聲音";
            mcs_speaker                 = "揚聲器";
            mcs_mic                     = "麥克風";
            mcs_power_frequency         = "電源頻率";
            mcs_online_upgrade          = "線上升級";
            mcs_restore_the_factory_settings = "恢復出廠設置";
            mcs_restore                 = "恢復";
            mcs_restore_camera          = "設備重啟";
            mcs_start_upgrade           = "開始升級";
            mcs_system                  = "系統";
            mcs_system_settings         = "系統設置";
            mcs_online                  = "設備上線";
            mcs_offline                 = "設備離線";
            mcs_query                   = "查詢";
            mcs_begin_time              = "開始時間";
            mcs_end_time                = "結束時間";
            mcs_mode                    = "模式";
            mcs_opened                  = "是否開啟";
            mcs_high                    = "高";
            mcs_middle                  = "中";
            mcs_low                     = "低";
            mcs_io_alert_input          = "I/O警報輸入";
            mcs_io_alert_output         = "I/O警報輸出";
            mcs_normally_open           = "常開";
            mcs_normally_close          = "常閉";
            mcs_motion_detection_sensitivity = "移動偵测靈敏度";
            mcs_daytime                 = "白天";
            mcs_night                   = "夜間";
            mcs_sdcord                  = "SD卡";
            mcs_storage_device          = "存儲設備";
            mcs_set_mask                = "設置遮罩";
            mcs_status                  = "狀態";
            mcs_capacity                = "容量";
            mcs_usage                   = "已使用";
            mcs_format                  = "格式化";
            mcs_repair                  = "修復";
            mcs_formating               = "格式化中";
            mcs_repairing               = "修復中";
            mcs_mounted                 = "已加載";
            mcs_unmounted               = "已卸載";
            mcs_mount                   = "加載";
            mcs_unmount                 = "卸載";
            mcs_ethernet                = "以太網";
            mcs_wifi                    = "Wi-Fi";
            mcs_enabled                 = "啟用狀態";
            mcs_mac_address             = "MAC地址";
            mcs_network_status          = "網路狀態";
            mcs_wifi_mode               = "Wi-Fi模式";
            mcs_client                  = "終端";
            mcs_ap                      = "熱點";
            mcs_start_address           = "開始地址";
            mcs_end_address             = "結束地址";
            mcs_gateway                 = "網關";
            mcs_select_network          = "選擇網路";
            mcs_dhcp_ip                 = "自動獲得IP";
            mcs_dhcp_dns                = "自動獲得DNS";
            mcs_ip_address              = "IP地址";
            mcs_network_mask            = "子網掩碼";
            mcs_input_secondary_dns     = "輸入備用DNS";
            mcs_secondary_dns           = "備用DNS";
            mcs_input_dns               = "請輸入DNS";
            mcs_input_alternate_dns     = "請輸入備用DNS";
            mcs_input_ip                = "請輸入IP地址";
            mcs_input_gateway           = "請輸入網關";
            mcs_input_network_mask      = "請輸入子網掩碼";
            mcs_wifi_list               = "Wi-Fi列表";
            mcs_display_date            = "顯示日期";
            mcs_date_format             = "日期格式";
            mcs_display_time            = "顯示時間";
            mcs_time_format             = "時間格式";
            mcs_24_hour                 = "24小時制";
            mcs_12_hour                 = "12小時制";
            mcs_display_weeks           = "顯示星期";
            mcs_date_time               = "日期/時間";
            mcs_set_time                = "時間設置";
            mcs_set_week                = "星期設置";
            mcs_stream                  = "碼流";
            mcs_encode                  = "編碼類型";
            mcs_resolution              = "解析度";
            mcs_frame_fate              = "幀率";
            mcs_maximum_bitrate         = "最大碼率";
            mcs_minimum_bitrate         = "最小碼率";
            mcs_i_frame_interval        = "I幀間隔";
            mcs_video                   = "影像";
            mcs_sampling_rate           = "採樣率(kHz)";
            mcs_nickname                = "設備昵稱";
            mcs_old_password            = "當前密碼";
            mcs_confirm_password        = "確認密碼";
            mcs_modify_password         = "修改密碼";
            mcs_password                = "密碼";
            mcs_admin_password          = "管理密碼";
            mcs_guest_password          = "訪客密碼";
            mcs_product_info            = "產品訊息";
            mcs_software_version        = "軟體版本";
            mcs_device_id               = "設備ID";
            mcs_operation               = "操作";
            mcs_record                  = "錄影";
            mcs_record_2                = "錄影";
            mcs_upgrade_now             = "立即升級";
            mcs_upgrading               = "正在升級";
            mcs_already_latest_version  = "已是最新版本";
            mcs_sensitivty              = "靈敏度";
            mcs_user_defined            = "自定義";
            mcs_time                    = "時間";
            mcs_date                    = "日期";
            mcs_finish                  = "完成";
            mcs_delete_fail             = "删除失敗";
            mcs_motion                  = "移動偵測";
            mcs_start                   = "開始";
            mcs_talk                    = "對講";
            mcs_password_input_inconsistent = "密碼不一致";
            mcs_input_6_to_20_litters   = "輸入6-20位數字(0-9)或字母(a-z、A-Z)";
            mcs_user_letter_range_hint  = "帳號為6-32比特數位（0-9）或字母（a-z、A-Z），需以字母開頭";
            mcs_password_range_hint     = "密碼為6-32位數字和字母";
            mcs_begin_with_the_letters  = "以字母開始，只能包含數字字母";
            mcs_sign_up                 = "註冊";
            mcs_sign_up_failed          = "註冊失敗";
            mcs_successful_sign_up      = "註冊成功";
            mcs_are_you_sure_delete     = "是否刪除?";
            mcs_failed_to_set_the       = "設置失敗";
            mcs_set_successfully        = "設置成功";
            mcs_downloading             = "升級中，正在下載";
            mcs_wrote                   = "已寫入";
            mcs_visit_again_later       = "請稍後再訪問";
            mcs_restart_failed          = "重啟失敗";
            mcs_upgrade_failed          = "更新失敗";
            mcs_connnected              = "已連接";
            mcs_connnected_to           = "已連接到";
            mcs_not_select              = "未選擇";
            mcs_message_list            = "信息列表";
            mcs_saved_password          = "已存密碼";
            mcs_alert                   = "警報";
            mcs_no_record               = "暫無錄影";
            mcs_new_about               = "新 : 約";
            mcs_device                  = "設備";
            mcs_config                  = "配置";
            mcs_change_password_failed  = "修改密碼失敗";
            mcs_do_you_want_restart     = "是否重啟?";
            mcs_do_you_want_restore     = "是否恢復出廠設置?";
            mcs_do_you_want_upgrade     = "是否升級?";
            mcs_load_end                = "已加載全部數據";
            mcs_loading                 = "正在加載...";
            mcs_down_refresh            = "下拉可以刷新";
            mcs_release_refresh         = "釋放刷新";
            mcs_refreshing              = "正在刷新";
            mcs_release_then_loading_data_hint = "釋放加載數據";
            mcs_pull_refresh_hint       = "上拉可以加載";
            mcs_restarting              = "重啟中";
            mcs_upgraded_time           = "更新於 : ";
            mcs_done                    = "完成";
            mcs_playback                = "回放";
            mcs_i_o_alarm               = "I/O警報";
            mcs_alarm_action            = "警報聯動";
            mcs_alarm_sources           = "警報源";
            mcs_io_output               = "I/O 輸出";
            mcs_snapshots               = "快照";
            mcs_snapshot                = "快照";
            mcs_snapshot_interval       = "拍照間隔(秒)";
            mcs_pre_record_length       = "預錄時間(秒)";
            mcs_nick_range_hint         = "昵稱為最多20位的數字和字母";
            mcs_save                    = "儲存";
            mcs_close                   = "關閉";
            mcs_snapshoting             = "拍照中";
            mcs_snapshot_failed         = "拍照失敗";
            mcs_record_failed           = "操作錄影失敗";
            mcs_saved_successfully      = "成功儲存到相簿";
            mcs_save_failed             = "儲存失敗";
            mcs_restart_to_take_effect  = "重啟後生效";
            mcs_please_allow_access_album = "請允許MIPC使用您的相簿";
            mcs_please_allow            = "請允許";
            mcs_access_album            = "使用您的相簿";
            mcs_ios_privacy_setting_for_photo_prompt = "您可以在iPhone的\"設置->隱私->照片\"中,找到應用程式\"";
            mcs_execute_change          = "\"進行更改";
            mcs_access_camera           = "使用您的相機";
            mcs_please_allow_access_camera = "請允許MIPC使用您的相機";
            mcs_ios_privacy_setting_for_camera_prompt = "您可以在iPhone的\"設置->隱私->相機\"中,找到應用程式\"";
            mcs_busy_when_write         = "寫入忙";
            mcs_unknown_error           = "未知錯誤";
            mcs_i_know                  = "我知道了";
            mcs_segment                 = "片段";
            mcs_please_relogin          = "請重新登錄";
            mcs_change_password_succeed = "修改密碼成功";
            mcs_upgrade_to_ver          = "升級到新版本";
            mcs_restore_failed          = "復原失敗";
            mcs_please_restart          = "請重啟";
            mcs_keep_network_settings   = "保留網絡設置和密碼";
            mcs_not_connected           = "未連接";
            mcs_sdcard_not_ready        = "SD卡未準備好！";
            mcs_device_not_exist        = "設備不存在";
            mcs_disable                 = "停用";
            mcs_to_determine_the        = "是否確定";
            mcs_alert_on                = "佈防";
            mcs_alert_off               = "撤防";
            mcs_alert_onoff             = "佈防/撤防";
            mcs_monday                  = "星期一";
            mcs_tuesday                 = "星期二";
            mcs_wednesday               = "星期三";
            mcs_thursday                = "星期四";
            mcs_friday                  = "星期五";
            mcs_saturday                = "星期六";
            mcs_sunday                  = "星期日";
            mcs_mon                     = "一";
            mcs_tue                     = "二";
            mcs_wed                     = "三";
            mcs_thu                     = "四";
            mcs_fri                     = "五";
            mcs_sat                     = "六";
            mcs_sun                     = "日";
            mcs_scheduled_recording     = "預約錄影";
            mcs_schedule                = "預約";
            mcs_scheduled_recording_status = "預約錄影狀態";
            mcs_folding                 = "收起";
            mcs_unfolding               = "展開";
            mcs_end_time_should_lt_begin = "結束時間必須大於開始時間";
            mcs_recording               = "錄影中";
            mcs_prerecord_interval_range_hint = "預錄時間需小於6秒";
            mcs_snapshot_interval_range_hint = "拍照間隔需為0或大於60";
            mcs_not_ready               = "未就緒";
            mcs_availablesize           = "可用容量";
            mcs_reboot                  = "重啟";
            mcs_alerter                 = "佈防";
            mcs_pir                     = "人體感應";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "編碼器";
            mcs_ok                      = "確定";
            mcs_fault                   = "錯誤";
            mcs_sensor_status           = "Sensor狀態";
            mcs_about                   = "關於";
            mcs_reset_now               = "現在重啟";
            mcs_reset_later             = "以後再說";
            mcs_prompt                  = "提示";
            mcs_select                  = "請選擇";
            mcs_available_netword       = "網路不可用,進行設置網路?";
            mcs_request_send            = "正在發送請求...";
            mcs_blank_device_id         = "設備ID不能為空";
            mcs_blank_username          = "用戶名不能為空";
            mcs_blank_password          = "密碼不能為空";
            mcs_exist_user              = "用戶已存在";
            mcs_invalid_user            = "用戶名無效";
            mcs_invalid_email_addr      = "email地址無效";
            mcs_system_err              = "系統錯誤";
            mcs_exceed_device           = "設備的用戶數超限";
            mcs_continue                = "繼續";
            mcs_prompt_exit             = "是否退出?";
            mcs_device_list             = "設備列表";
            mcs_no_sdcard               = "沒有SD卡";
            mcs_no_hard_disk            = "沒有硬盤";
            mcs_show_more               = "顯示更多...";
            mcs_shotsnop_exists         = "圖片已存在";
            mcs_input_nick              = "輸入昵稱";
            mcs_nick_not_empty          = "昵稱不能為空";
            mcs_input_new_pass          = "輸入新密碼";
            mcs_input_new_pass_again    = "再次輸入新密碼";
            mcs_new_password            = "新密碼";
            mcs_modify_network_prompt   = "網路參數修改可能造成網路中斷,確認修改?";
            mcs_wifi_disable_prompt     = "停用Wi-Fi，繼續?";
            mcs_eth_disable_prompt      = "停用以太網卡，繼續?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "自動獲取";
            mcs_manually_set            = "手動設置";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "首選DNS";
            mcs_client_mode             = "終端模式";
            mcs_adhoc_mode              = "熱點模式";
            mcs_connect_fail            = "連接失敗";
            mcs_dhcp_server             = "DHCP伺服器";
            mcs_display_text            = "顯示名稱";
            mcs_repair_prompt_detail    = "修復SD卡可能導致部分數據丟失，繼續？";
            mcs_format_prompt_detail    = "格式化將刪除SD卡上所有數據，繼續？";
            mcs_mount_prompt            = "加載SD卡，繼續？";
            mcs_umount_prompt           = "卸載SD卡將導致錄影和圖片等數據無法保存，繼續？";
            mcs_sdcard_reset            = "設置成功，需要重啟攝影機才能生效,繼續？";
            mcs_sdcard_repairing        = "修復待重啟";
            mcs_sdcard_formating        = "格式化待重啟";
            mcs_sdcard_umount           = "未加載";
            mcs_valid                   = "可使用";
            mcs_io                      = "IO警報";
            mcs_input                   = "輸入";
            mcs_outinput                = "輸出";
            mcs_prompt_alert_on         = "打開佈防，繼續？";
            mcs_auto_sync_date_time     = "自動同步";
            mcs_alarm_record            = "警報錄影";
            mcs_username                = "用戶名";
            mcs_re_enter_the_password   = "重新輸入密碼";
            mcs_remember_me             = "保持登錄";
            mcs_home                    = "首頁";
            mcs_install_the_plug        = "安裝插件";
            mcs_install_the_video_plug  = "安裝影像插件";
            mcs_install_now             = "立即安裝";
            mcs_temporarily_installed_use_ordinary_video = "暫不安裝，使用普通視";
            mcs_brightness              = "亮度";
            mcs_contrast                = "對比度";
            mcs_color_saturation        = "飽和度";
            mcs_sharpness               = "銳度";
            mcs_duration                = "持續時間";
            mcs_index                   = "索引";
            mcs_remark                  = "備註";
            mcs_media_stream            = "媒體流";
            mcs_server                  = "伺服器";
            mcs_media_transfer          = "媒體傳輸";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "廠商";
            mcs_model                   = "型號";
            mcs_plugin_version          = "插件版本";
            mcs_network_interface       = "網卡";
            mcs_transfer_protocol       = "傳輸協議";
            mcs_year                    = "年";
            mcs_month                   = "月";
            mcs_day                     = "日";
            mcs_hour                    = "小時";
            mcs_minute                  = "分";
            mcs_second                  = "秒";
            mcs_millisec                = "毫秒";
            mcs_ntp                     = "時間伺服器地址";
            mcs_upload_upgrade          = "上傳升級";
            mcs_stop                    = "停止";
            mcs_info_rewind             = "快退";
            mcs_fast_forward            = "快進";
            mcs_previous_frame          = "上一幀";
            mcs_next_frame              = "下一幀";
            mcs_record_audio            = "錄音";
            mcs_week                    = "星期";
            mcs_all                     = "全選";
            mcs_id                      = "序號";
            mcs_select_all              = "全選";
            mcs_call                    = "呼叫";
            mcs_activation              = "啟動碼";
            mcs_caption                 = "上傳檔案";
            mcs_alarm_device            = "警報設備";
            mcs_not_installed           = "未安裝";
            mcs_join_us_now             = "現在就加入我們";
            mcs_reconnect_please_wait   = "重新連接中,請稍候";
            mcs_erasing                 = "正在刪除";
            mcs_writing                 = "正在寫入";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "有新版本";
            mcs_equipment_flip          = "設備翻轉";
            mcs_device_status           = "設備狀態";
            mcs_audio_setting           = "聲音設置";
            mcs_nick_modify             = "修改昵稱";
            mcs_ready                   = "就緒";
            mcs_full                    = "寫滿";
            mcs_connecting              = "連接中";
            mcs_message_buffering       = "信息緩存";
            mcs_upgrade_finish          = "升級完成";
            mcs_image                   = "圖片";
            mcs_bar                     = "條";
            mcs_init                    = "初始化";
            mcs_confirm_new_password    = "新密碼確認";
            mcs_continue_switch_wireless_network = "切換網路可能導致網路中斷,繼續？";
            mcs_restore_factory_settings_prompt = "恢復出廠設置，系統將重新啟動，繼續？";
            mcs_username_does_not_exis  = "用戶名不存在";
            mcs_username_already_exists = "用戶名已存在";
            mcs_successful_whether_login = "註冊成功,現在登錄?";
            mcs_username_demand         = "6-20位的字母或數字";
            mcs_the_password_is_empty   = "密碼為空";
            mcs_password_demand         = "6-20位的字母或數字";
            mcs_password_empty          = "確認密碼為空";
            mcs_two_password_input_inconsistent = "兩次密碼輸入不一致";
            mcs_the_user_name_is_empty  = "用戶名為空";
            mcs_upgrade_to_the_latest_version = "升級到最新版本";
            mcs_subnet_mask_wrong_format = "子網掩碼格式錯誤";
            mcs_upgrade_successful_restart_to_take_effect = "升級成功，需要重啟設備才能生效";
            mcs_need_to_restart_the_camera_to_take_effect = "需要重啟設備才能生效";
            mcs_not_allowed_close_two_network_cards = "不能同時停用以太網卡和Wi-Fi";
            mcs_modified_successfully   = "修改成功";
            mcs_connection_successfully = "連接成功";
            mcs_connection_is_interrupted = "連接中斷";
            mcs_devices_in_the_account_overrun = "用戶設備數超限";
            mcs_format_error            = "格式錯誤";
            mcs_change                  = "修改";
            mcs_refresh                 = "刷新";
            mcs_connect                 = "連接";
            mcs_upgrade                 = "升級";
            mcs_activate                = "啟動";
            mcs_filter                  = "篩選";
            mcs_reset                   = "重置";
            mcs_prompt_alert_off        = "撤銷佈防，繼續？";
            mcs_invalid_server          = "時間伺服器地址無效";
            mcs_upgrade_prompt          = "升級設備程式，繼續？";
            mcs_restart_prompt          = "重啟設備，繼續？";
            mcs_repeat                  = "重複";
            mcs_scheduled_one           = "預約錄影一";
            mcs_scheduled_two           = "預約錄影二";
            mcs_scheduled_three         = "預約錄影三";
            mcs_scheduled_four          = "預約錄影四";
            mcs_more                    = "查看更多";
            mcs_leave                   = "鬆開載入更多";
            mcs_qrcode_scan             = "二維碼掃描";
            mcs_inserted                = "已插入";
            mcs_removed                 = "已移除";
            mcs_upgrade_init            = "開始升級";
            mcs_upgrade_download        = "升級下載";
            mcs_check                   = "升級檢查";
            mcs_audio_encoder_config    = "聲音編碼設置";
            mcs_video_codec             = "影像編碼";
            mcs_download                = "下載";
            mcs_client_download         = "客戶端下載";
            mcs_for_more_clarity_smooth_video_experience = "獲取更清晰、流暢的影像體驗";
            mcs_network                 = "網路";
            mcs_mobile_client_download  = "手機客戶端下載";
            mcs_readonly                = "唯讀";
            mcs_please_exit_and_relogin = "請退出重新登錄";
            mcs_add_device_failed       = "添加設備失敗";
            mcs_set_password            = "修改密碼";
            mcs_7x24_hours              = "7x24(小時)";
            mcs_mtalt                   = "%@ : 移動偵測警報";
            mcs_ioalt                   = "%@ : I/O 警報";
            mcs_time_zone               = "時區";
            mcs_select_time             = "選擇時間";
            mcs_now                     = "現在";
            mcs_mipc_have_alert_notification = "MIPC警報通知";
            mcs_notification_center     = "通知中心";
            mcs_sound                   = "聲音";
            mcs_vibration               = "振動";
            mcs_clear_cache             = "清除緩存";
            mcs_clear_cache_hint        = "你確定要清除緩存？";
            mcs_successfully_cleared_cache = "緩存成功清除";
            mcs_app_except_exit_hint    = "很抱歉，該應用程式遇到異常，將退出";
            mcs_rate_us                 = "給我們評分";
            mcs_password_too_simple_hint = "密碼太簡單，修改以提高安全性";
            mcs_check_for_new_version   = "檢查是否有新版本";
            mcs_contact_us              = "聯繫我們";
            mcs_buffer_time             = "緩衝時間";
            mcs_default                 = "出廠值";
            mcs_alarmed_devices         = "警報設備數";
            mcs_aec                     = "迴音消除";
            mcs_permission_denied       = "操作無權限";
            mcs_full_screen             = "全屏";
            mcs_forgot_your_password    = "忘記密碼";
            mcs_your_email              = "您的電子郵件";
            mcs_sign_up_confirmation    = "註冊成功，已發送啟動郵件到你提交的郵件地址，請參考郵件內容啟動帳號";
            mcs_recovery_prompt         = "請輸入您的郵箱（用戶名），我們將發送郵件告訴您如何重置密碼";
            mcs_password_reset_confirmation = "提交成功，已發送重置郵件到你提交的郵件地址，請參考郵件內容重置密碼";
            mcs_recovery_fail_no_mail   = "密碼重置失敗，本帳號未綁定郵件地址";
            mcs_recovery_fail_invalid_link = "密碼重置失敗, 請確認重置鏈接內容或者重新重置";
            mcs_recovery_ok_login       = "密碼重置成功，馬上登錄";
            mcs_active_ok_login         = "帳號啟動成功,馬上登錄";
            mcs_active_fail_invalid_link = "帳號啟動失敗，請確認啟動鏈接內容或者重新註冊帳號";
            mcs_login_fail_inactive     = "帳號未啟動,請查收啟動郵件進行啟動";
            mcs_sign_up_again           = "重新註冊";
            mcs_press_start_talk        = "按住 說話";
            mcs_release_stop_talk       = "鬆開 結束";
            mcs_delete_device           = "刪除設備";
            mcs_success_removed_equipment = "成功刪除設備";
            mcs_remove_equipment_failure = "刪除設備失敗";
            mcs_device_busy             = "設備現在正忙";
            mcs_keep_testing            = "持續測試";
            mcs_notify_tone             = "通知鈴聲";
            mcs_float_video             = "啟用懸浮影像";
            mcs_float_position          = "懸浮影像位置";
            mcs_video_resolution        = "影像解析度";
            mcs_float_resolution        = "懸浮影像解析度";
            mcs_top_left                = "左上角";
            mcs_top_right               = "右上角";
            mcs_bottom_left             = "左下角";
            mcs_bottom_right            = "右下角";
            mcs_action_next             = "下一步";
            mcs_action_cancel           = "取消";
            mcs_action_retry            = "重試";
            mcs_action_add              = "添加";
            mcs_is_add                  = "是否添加";
            mcs_action_apply            = "應用";
            mcs_action_config           = "配置";
            mcs_action_skip             = "跳過";
            mcs_action_ok               = "確定";
            mcs_action_add_device       = "添加設備";
            mcs_action_modify_password  = "修改密碼";
            mcs_action_config_wifi      = "設置Wi-Fi";
            mcs_state_connect_device    = "正在連接設備";
            mcs_state_connect_device_fail = "連接設備失敗";
            mcs_state_wait_device_online = "等待設備上線";
            mcs_state_device_online     = "上線";
            mcs_state_success           = "成功";
            mcs_fail                    = "失敗";
            mcs_delete_success          = "删除成功";
            mcs_state_add_device_success = "添加設備成功";
            mcs_state_add_device_fail   = "添加設備失敗";
            mcs_state_modify_pass_success = "密碼修改成功";
            mcs_state_modify_pass_fail  = "密碼修改失敗";
            mcs_state_config_wifi_success = "設置Wi-Fi成功";
            mcs_state_config_wifi_fail  = "連接失敗";
            mcs_state_connecting_to     = "正在連接到";
            mcs_network_connect_type    = "設備不在線，請你確保設備已連接電源，然後選擇網絡連接方式:";
            mcs_prompt_modify_passwd    = "為了安全起見，請更改設備默認密碼。新密碼不得少於六個字符";
            mcs_prompt_config_wifi      = "您的設備沒有連接上無線網絡，請配置Wi-Fi.";
            mcs_step1_check_connect     = "第一步 : 將網線的一端接入您的路由器，另一端接入攝影機的網口。";
            mcs_first_step_ethernet_connect = "第二步：通過網線連接路由器和攝像頭。";
            mcs_step2_check_connect     = "第二步 : 將您的攝影機上電，啟動攝影機。";
            mcs_second_step_ethernet_connect = "第一步：確保設備已連接電源。";
            mcs_hint_check_network      = "備註 : 攝影機啟動大約需要50秒, 啟動完成後，LED信號燈每隔3秒綠燈閃爍3次,表示攝影機已經在線，嚮導將自動進入下一步。";
            mcs_the_end                 = "結束";
            mcs_hint_password_expired   = "密碼已失效,請重新添加設備";
            mcs_hint_remove_ethernet    = "備註 : Wi-Fi工作正常，您現在可以斷開網線。";
            mcs_gateway_format_incorrect = "閘道地址格式不正確";
            mcs_dns_format_incorrect    = "DNS地址格式不正確";
            mcs_subnet_mask_format_incorrect = "子網路遮罩地址格式不正確";
            mcs_ip_format_incorrect     = "IP地址格式不正確";
            mcs_login_sucess            = "登錄成功";
            mcs_donot_remind            = "不再提醒";
            mcs_clear_cache_signout_hint = "清除緩存將退出重新登錄,繼續？";
            mcs_devlist_adddev_hint     = "點擊此處添加設備";
            mcs_devlist_menu_hint       = "點擊此處設置解析度";
            mcs_update_failed           = "升級失敗";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "本地";
            mcs_set_npapi               = "如果插件已安裝，請訪問 \'chrome://flags/#enable-npapi\'，啟用NPAPI，";
            mcs_set_win32k              = "訪問 \'chrome://flags/#enable-win32k-renderer-lockdown\'，停用 win32k 渲染程序鎖定功能，";
            mcs_restart_browser         = "重啟瀏覽器";
            mcs_download_location       = "檔案下載儲存位置";
            mcs_Networking_mode         = "聯網方式";
            mcs_wifi_intelligent_configuration = "Wi-Fi連接";
            mcs_ethernet_configuration  = "以太網連接";
            mcs_wifi_connect            = "連接";
            mcs_hard_disk               = "硬盤";
            mcs_wifi_is_connection      = "正在連接中，請稍後...";
            mcs_wifi_intelligent_configuration_setup_ailure = "Wi-Fi智能配置建立失敗";
            mcs_box_list                = "盒子列表";
            mcs_repair_disk_prompt      = "修復硬盤可能導致部分數據丟失，繼續？";
            mcs_format_disk_prompt      = "格式化將刪除硬盤上所有數據，繼續？";
            mcs_scheduled_alerting      = "計劃佈防";
            mcs_scheduled_alerting_one  = "計劃佈防一";
            mcs_scheduled_alerting_two  = "計劃佈防二";
            mcs_scheduled_alerting_three = "計劃佈防三";
            mcs_scheduled_alerting_four = "計劃佈防四";
            mcs_wifi_config_cancle      = "Wi-Fi配置取消";
            mcs_wifi_config_prepare     = "配置準備";
            mcs_wifi_config_first       = "將設備和手機與路由器放在一米內";
            mcs_wifi_config_second      = "在配置Wi-Fi時，設備不能插網線";
            mcs_wifi_config_third       = "按RESET復位孔1秒後再鬆開";
            mcs_wifi_config_success     = "配置成功";
            mcs_wifi_config_failure     = "配置失敗";
            mcs_failure_prompt          = "請重試或返回檢查Wi-Fi密碼是否輸入正確";
            mcs_display_password        = "顯示密碼";
            mcs_action_smart_config_wifi = "配置嚮導";
            mcs_wifi_invalid            = "您的網絡不是WiFi，請先連接Wi-Fi";
            mcs_phone_not_connect_wifi  = "手機未連接上Wi-Fi網絡";
            mcs_prompt_check_connection = "您的攝影機不在線，請檢查攝影機的線路連接";
            mcs_wifi_cfg_ready          = "準備好了";
            mcs_reset_complete          = "復位好了";
            mcs_how_to_restore_factory_settings = "怎樣恢復出廠設置：使用重置針長按攝像機底部的RESET重置孔10s以上";
            mcs_forgetpass_action_wizard = "請長按設備Reset復位孔10秒後鬆開，您將聽到設備語音提示“恢復出廠設定”。";
            mcs_prompt_check_device_connection = "您的設備不在線，請檢查設備的線路連接";
            mcs_prompt_select_device_connection = "您的設備不線上，請選擇聯網管道";
            mcs_input_wifi_name         = "請輸入Wi-Fi名稱";
            mcs_action_previous         = "上一步";
            mcs_io_alert_range_hint     = "IO報警時間應小於60秒";
            mcs_io_alert_time           = "IO報警時長(秒)";
            mcs_smart                   = "移動智能";
            mcs_plan                    = "定點淨化";
            mcs_mute                    = "靜音";
            mcs_wind_speed              = "風速";
            mcs_one                     = "一檔";
            mcs_two                     = "二檔";
            mcs_three                   = "三檔";
            mcs_purify_mode             = "淨化模式";
            mcs_video_list              = "視頻列表";
            mcs_wifi_cfg_restore_factory_settings = "请将手机靠近设备，如果设备已配置过Wi-Fi，请按RESET复位键1秒后松开，设备将恢复出厂设置并自动重启";
            mcs_mask_settings           = "遮罩設置";
            mcs_notification_settings   = "通知設置";
            mcs_alarm_settings          = "報警設置";
            mcs_motion_detection        = "移動偵測";
            mcs_io_alarm                = "I/O報警";
            mcs_connect_status          = "連接狀態";
            mcs_motion_notification     = "報警和通知";
            mcs_device_connected        = "設備已連接";
            mcs_start_spray             = "開始噴霧？";
            mcs_available_network       = "當前網絡不可用，請檢查您的網絡設置";
            mcs_select_wifi_wizard      = "請你先選擇無線網絡";
            mcs_input_wifi_password     = "輸入Wi-Fi密碼";
            mcs_device_admin_password   = "設備管理密碼";
            mcs_device_guest_password   = "設備訪客密碼";
            mcs_user_admin_password     = "用戶管理密碼";
            mcs_user_guest_password     = "用戶訪客密碼";
            mcs_save_network_set        = "保存網絡設置和密碼";
            mcs_nickname_not_set        = "攝像機暱稱未設置";
            mcs_current_wifi            = "當前的Wi-Fi";
            mcs_current_password_strength = "當前密碼強度";
            mcs_new_password_strength   = "新密碼強度";
            mcs_needs_to_open_the_DHCP  = "你的路由器需要开启DHCP（自动获取IP）的功能，如果尝试不成功请联系管理员。";
            mcs_picture                 = "圖像";
            mcs_quality                 = "質量";
            mcs_size                    = "尺寸";
            mcs_guest_login             = "訪客登錄";
            mcs_audio_and_video         = "音頻/視頻";
            mcs_volume                  = "音量";
            mcs_smooth                  = "流暢";
            mcs_clear                   = "清晰";
            mcs_handsfree               = "免提";
            mcs_headphone               = "耳機";
            mcs_my                      = "我";
            mcs_customer_service        = "客服";
            mcs_firefox_flash_uninstall = "您的flash插件不可用，解決方法請參考https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "插件";
            mcs_plug_load               = "加載插件";
            mcs_plug_load_refuse        = "不加載插件";
            mcs_plug_load_auto          = "自動";
            mcs_option                  = "選項";
            mcs_option_ok               = "確定";
            mcs_voice_call_fails        = "語音通話失敗，請檢查網絡";
            mcs_umounted_prompt         = "是否卸載？";
            mcs_mounted_prompt          = "是否加載？";
            mcs_format_prompt           = "是否格式化？";
            mcs_repair_prompt           = "是否修复? ";
            mcs_signup_prompt           = "新的？";
            mcs_wifi_connect_sucess_prompt = "備註：Wi-Fi正常工作，您現在可以斷開網絡";
            mcs_manual_input_prompt     = "手動輸入裝置ID";
            mcs_qrscan_prompt           = "您尚未允許此應用程序訪問您的相機，請在iPhone的\'設定\'－\'隱私\'－\'相機’功能中，找到名字為\'Vimtag\'的應用程序進行修改。";
            mcs_select_network_style    = "選擇網絡連接管道：";
            mcs_push                    = "公告欄";
            mcs_connect_power_prompt    = "備註：設備不線上，請先確保已連接電源";
            mcs_fail_microphone         = "無法訪問麥克風";
            mcs_microphone_prompt       = "您尚未允許此應用程序訪問您的麥克風，請在iPhone的’設定’－’隱私’－’麥克風’功能中，找到名字為’Vimtag‘的應用程序進行修改";
            mcs_super_clear             = "超清";
            mcs_high_clear              = "高清";
            mcs_standard_clear          = "標清";
            mcs_fluent_clear            = "流暢";
            mcs_deleting                = "正在删除...";
            mcs_event                   = "事件";
            mcs_one_hour                = "一小時";
            mcs_half_hour               = "半小時";
            mcs_five_min                = "五分鐘";
            mcs_category                = "類 別 :";
            mcs_time_length             = "時 長 :";
            mcs_new                     = "新";
            mcs_week_setting_prompt     = "星期不能為空";
            mcs_time_setting_prompt     = "時間設定不能為空";
            mcs_today                   = "今天";
            mcs_wifi_password           = "Wi-Fi 密碼";
            mcs_register_prompt         = "請您先註冊帳號";
            mcs_click_login             = "點擊登入";
            mcs_not_login_prompt        = "您還沒登入，請點擊登入！";
            mcs_product_presentation    = "首頁";
            mcs_help_feedback           = "幫助";
            mcs_help_information        = "幫助";
            mcs_feedback                = "意見回饋";
            mcs_feedback_des            = "感謝使用我們app，歡迎給我們提出您寶貴的意見";
            mcs_feedback_praise         = "給個好評";
            mcs_feedback_title_prompt   = "迴響標題";
            mcs_feedback_title          = "請輸入標題（18字以內）";
            mcs_feedback_type_prompt    = "問題類型";
            mcs_feedback_please_select  = "--請選擇類型--";
            mcs_feedback_select_option1 = "介面問題";
            mcs_feedback_select_option2 = "攝像機問題";
            mcs_feedback_select_option9 = "其他問題";
            mcs_feedback_dec_prompt     = "具體描述";
            mcs_feedback_dec            = "請輸入您的意見";
            mcs_feedback_upload_photo   = "上傳照片";
            mcs_preview_pic             = "預覽";
            mcs_Album                   = "從相冊中選取";
            mcs_Photograph              = "拍照";
            mcs_camera_unavailable      = "相機不可用";
            mcs_feedback_submit         = "提交";
            mcs_feedback_title_alert    = "標題不符合規則";
            mcs_feedback_type_alert     = "請選擇正確的類型";
            mcs_feedback_dec_alert      = "請輸入您的意見";
            mcs_feedback_submit_success = "提交成功";
            mcs_feedback_submit_fail    = "提交失敗";
            mcs_connect_wifi_prompt     = "連接Wi-Fi";
            mcs_cloud                   = "雲端";
            mcs_demo                    = "體驗";
            mcs_shortest                = "最短";
            mcs_no_history              = "無歷史記錄";
            mcs_download_pc_client      = "點擊下載PC客戶端";
            mcs_accounts_bind_email_exist = "該帳號已經綁定過郵箱";
            mcs_accounts_bind_email_busy = "該郵箱已經綁定過帳號";
            mcs_systemupdatetip_noversionnodetail = "當前版本有可用的更新，暫無詳細更新信息";
            mcs_systemupdatetip_nodetail = "暫無詳細更新信息";
            mcs_systemupdatetip_updatefrom = "當前版本";
            mcs_systemupdatetip_updateto = "可以陞級到";
            mcs_systemupdatetip_sureforupdate = "確定陞級？";
            mcs_systemupdatetip_updatecontent = "本次更新的内容";
            mcs_operate_prompt          = "請根據圖示操作";
            mcs_operation_prompt        = "操作提示";
            mcs_qrcode_prompt_content   = "用設備攝像頭掃描手機二維碼";
            mcs_qrcode_camera_distance  = "二維碼與攝像頭距離12~14cm";
            mcs_planvideo_datewizard    = "請設定日期";
            mcs_planvideo_timewizard    = "請設定時間";
            mcs_planvideo_wizard        = "請設定時間和日期";
            mcs_email_unbind            = "帳號沒有綁定郵箱";
            mcs_email_unmatch           = "郵箱不匹配";
            mcs_email_inactive          = "郵箱沒有激活";
            mcs_email_binded            = "郵箱已被綁定";
            mcs_user_binded_bymail      = "用戶已被綁定";
            mcs_bind_email_fail         = "郵箱綁定失敗";
            mcs_diagnosis               = "診斷";
            mcs_delay                   = "時延";
            mcs_packet_loss_rate        = "丟包率";
            mcs_timezone_IDL            = "國際日期變更線";
            mcs_timezone_China          = "中國";
            mcs_timezone_Midway         = "中途島";
            mcs_timezone_Niue           = "紐埃島";
            mcs_timezone_Samoa          = "美屬薩摩亞";
            mcs_timezone_Aleutian       = "阿留申群島";
            mcs_timezone_Hawaii         = "夏威夷群島";
            mcs_timezone_Alaska         = "阿拉斯加州";
            mcs_timezone_PSTUSCanada    = "太平洋標準時間（美國和加拿大）";
            mcs_timezone_Arizona        = "亞利桑那州";
            mcs_timezone_MSTUSCanada    = "山地標準時間（美國和加拿大）";
            mcs_timezone_CSTUSCanada    = "中部標準時間（美國和加拿大）";
            mcs_timezone_ESTUSCanada    = "東部標準時間（美國和加拿大）";
            mcs_timezone_ASTCanada      = "大西洋標準時間（加拿大）";
            mcs_timezone_Newfoundland   = "紐芬蘭";
            mcs_timezone_Brasilia       = "巴西利亞";
            mcs_timezone_BuenosAires    = "布宜諾斯艾利斯";
            mcs_timezone_Santiago       = "聖地亞哥";
            mcs_timezone_Noronha        = "迪諾羅尼亞";
            mcs_timezone_SouthGeorgia   = "南喬治亞";
            mcs_timezone_Azores         = "亞速爾群島";
            mcs_timezone_CapeVerde      = "佛得角";
            mcs_timezone_London         = "倫敦";
            mcs_timezone_Lisbon         = "里斯本";
            mcs_timezone_Dublin         = "都柏林";
            mcs_timezone_Berlin         = "柏林";
            mcs_timezone_Amsterdam      = "阿姆斯特丹";
            mcs_timezone_Brussels       = "布魯塞爾";
            mcs_timezone_Budapest       = "布達佩斯";
            mcs_timezone_Madrid         = "馬德里";
            mcs_timezone_Paris          = "巴黎";
            mcs_timezone_Rome           = "羅馬";
            mcs_timezone_Sarajevo       = "薩拉熱窩";
            mcs_timezone_Cairo          = "開羅";
            mcs_timezone_Amman          = "安曼";
            mcs_timezone_Beirut         = "貝魯特";
            mcs_timezone_Istanbul       = "伊斯坦布爾";
            mcs_timezone_Jerusalem      = "耶路撒冷";
            mcs_timezone_Athens         = "雅典";
            mcs_timezone_Baghdad        = "巴格達";
            mcs_timezone_Riyadh         = "利雅得";
            mcs_timezone_Qatar          = "卡塔爾";
            mcs_timezone_Moscow         = "莫斯科";
            mcs_timezone_Tehran         = "德黑蘭";
            mcs_timezone_Baku           = "巴庫";
            mcs_timezone_Dubai          = "迪拜";
            mcs_timezone_Tbilisi        = "第比利斯";
            mcs_timezone_Kabul          = "喀布爾";
            mcs_timezone_Karachi        = "卡拉奇";
            mcs_timezone_Yekaterinburg  = "葉卡捷琳堡";
            mcs_timezone_Maldives       = "馬爾代夫";
            mcs_timezone_Calcutta       = "加爾各答";
            mcs_timezone_Colombo        = "科倫坡";
            mcs_timezone_Katmandu       = "加德滿都";
            mcs_timezone_Almaty         = "阿拉木圖";
            mcs_timezone_Dhaka          = "達卡";
            mcs_timezone_Omsk           = "鄂木斯克";
            mcs_timezone_Thimbu         = "廷布";
            mcs_timezone_Rangoon        = "仰光";
            mcs_timezone_Bangkok        = "曼谷";
            mcs_timezone_Jakarta        = "雅加達";
            mcs_timezone_Vientiane      = "萬象";
            mcs_timezone_Harbin         = "哈爾濱市";
            mcs_timezone_Shanghai       = "上海";
            mcs_timezone_Hongkong       = "香港";
            mcs_timezone_Singapore      = "新加坡";
            mcs_timezone_Taipei         = "台北";
            mcs_timezone_Ulaanbaatar    = "烏蘭巴托";
            mcs_timezone_Perth          = "珀斯";
            mcs_timezone_Seoul          = "漢城";
            mcs_timezone_Tokyo          = "東京";
            mcs_timezone_Darwin         = "達爾文";
            mcs_timezone_Magadan        = "馬加丹";
            mcs_timezone_Vladivostok    = "符拉迪沃斯托克";
            mcs_timezone_Guam           = "關島";
            mcs_timezone_Sydney         = "悉尼";
            mcs_timezone_Canberra       = "堪培拉";
            mcs_timezone_Melbourne      = "墨爾本";
            mcs_timezone_Queensland     = "昆士蘭";
            mcs_timezone_LordHowe       = "豪勳爵";
            mcs_timezone_Guadalcanal    = "瓜達爾卡納爾島";
            mcs_timezone_Fiji           = "斐濟";
            mcs_timezone_Auckland       = "奧克蘭";
            mcs_timezone_Apia           = "阿皮亞";
            mcs_timezone_Fakaofo        = "法考福";
            mcs_timezone_Tongatapu      = "湯加塔布";
            mcs_timezone_Kiritimati     = "克里斯馬斯";
            mcs_connect_timeout         = "連接超時";
            mcs_share                   = "分享";
            mcs_share_prompt_start      = "您可以訪問";
            mcs_share_prompt_end        = "通過同一網絡的PC或Android的手機的瀏覽器下載的該視頻";
            mcs_share_note              = "下載過程中請不要離開此頁面。";
            mcs_video_size              = "大小";
            mcs_video_duration          = "時長";
            mcs_my_folder               = "我的文件";
            mcs_account_no_contain      = "該帳號不包含";
            mcs_edit                    = "編輯";
            mcs_video_number            = "個視頻";
            mcs_no_local_video          = "暫無錄像";
            mcs_empty_folder            = "文件夾為空";
            mcs_no_history_record       = "您還沒有歷史記錄";
            mcs_no_local_record         = "您的本地記錄為空";
            mcs_empty_cloud_list_first  = "您的設備清單還是空空的，";
            mcs_empty_cloud_list_second = "點擊左上角的";
            mcs_empty_cloud_list_third  = "添加設備吧！";
            mcs_empty_local_list_first  = "您的本地清單還是空空的，";
            mcs_empty_local_list_second = "嘗試";
            mcs_empty_local_list_third  = "下拉荧幕";
            mcs_empty_local_list_forth  = "重繪吧！";
            mcs_empty_local_list_fifth  = "（蒐索所在局域網內的設備）";
            mcs_record_prompt           = "您可以在\"我->我的文件\"中查看該錄像";
            mcs_record_download_prompt  = "您可以在\"我的文件\"中查看該錄像";
            mcs_register_buton_start    = "還沒有賬號，";
            mcs_register_buton_end      = "立即註冊";
            mcs_product                 = "產品";
            mcs_user_or_password_invalid = "用戶名或密碼錯誤";
            mcs_share_video_prompt      = "您正在使用非WiFi網絡，請切換到WiFi網絡下再分享";
            mcs_download_video_prompt   = "您正在使用非WiFi網絡，下載將產生流量費用，繼續？";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "普通";
            mcs_common_problem          = "常見問題";
            msc_enter_comment           = "輸入你的意見";
            msc_description             = "概述";
            mcs_parameter               = "參數";
            mcs_help_and_feedback       = "幫助和反饋";
            mcs_personal_center         = "個人中心";
            mcs_version                 = "版本";
            mcs_language                = "語言";
            mcs_new_user                = "我是新用戶";
            mcs_have_account            = "已有賬號";
            mcs_try_it                  = "體驗一下";
            mcs_sign_up_now             = "立即註冊";
            mcs_input_confirm_password  = "確認密碼";
            mcs_warranty_registration   = "保修登記";
            mcs_get_more_cameras        = "得到更多的攝像機";
            mcs_user_inactive           = "用戶未啟動";
            mcs_format_options          = "格 式 :";
            mcs_slide_screen            = "滑動屏幕可以調節視頻角度";
            mcs_zoom_in_screen          = "捏合屏幕可以放大視頻細節";
            mcs_pause                   = "暫停";
            mcs_source                  = "來源";
            mcs_magnetic                = "門磁";
            mcs_sos                     = "緊急按鈕";
            mcs_input_download_path     = "下載路徑";
            mcs_download_path_name_error = "下載路徑文件名只能包含英文字母（a-z、A-Z）或者數字（0-9）";
            mcs_active                  = "活動";
            mcs_out                     = "離開";
            mcs_quiet                   = "安靜";
            mcs_scenes                  = "情景";
            mcs_accessory               = "附件";
            mcs_quiet_mode              = "安靜模式";
            mcs_active_mode             = "活動模式";
            mcs_out_mode                = "離開模式";
            mcs_add_accessory           = "添加附件";
            mcs_accessory_type          = "附件類型";
            mcs_add_successfully        = "添加成功";
            mcs_set_scene               = "你的附件還未設置情景，請點擊";
            mcs_to_set                  = "去設置";
            mcs_add_accessory_button    = "長按按鈕直到紅燈再次熄滅完成添加";
            mcs_auto_monday             = "一";
            mcs_auto_tuesday            = "二";
            mcs_auto_wednesday          = "三";
            mcs_auto_thursday           = "四";
            mcs_auto_friday             = "五";
            mcs_auto_saturday           = "六";
            mcs_auto_sunday             = "日";
            mcs_search                  = "搜索";
            mcs_format_input            = "格式化";
            mcs_get_accessory_failed    = "獲取附件失敗";
            mcs_get_scene_failed        = "獲取情景失敗";
            mcs_search_failed           = "搜索失敗";
            mcs_add_failed              = "添加失敗";
            mcs_ethernet_connect        = "以太網連接";
            mcs_action_click_retry      = "點擊重試";
            mcs_wifi_config_failure_detail = "或者您可以嘗試";
            mcs_qrcode_connect          = "二維碼連接";
            mcs_close_sound_prompt      = "打開聲音有助於Wi-Fi連接，請將手機揚聲器緊貼攝像頭的麥克風";
            mcs_qrcode_prompt_title     = "請如圖所示操作";
            mcs_qrcode_prompt_detail    = "攝像機正對手機二維碼進行掃描，保持30厘米左右的距離";
            mcs_select_wifi_prompt      = "無需連接網線";
            mcs_select_ethernet_prompt  = "只能通過網線連接";
            mcs_enter_config_mode_prompt = "請檢查Wifi指示燈是否是三紅三綠交替閃爍。如果是,請點擊\'下一步\'按鈕。如果不是,請按下相機的\'RESET\'按鈕。然後再次檢查Wi-Fi指示燈";
            mcs_no_enter_config_mode    = "沒有進入配置模式";
            mcs_record_time             = "錄像時長(秒)";
            mcs_stop_search             = "停止搜索";
            mcs_smart_wifi_setup        = "WiFi智能配置";
            mcs_ethernet_setup          = "以太網設置";
            mcs_wifi_config_restore_start = "1）確保設備已連接電源";
            mcs_wifi_config_restore_end = "2）按住復位鍵一秒鐘，該設備將恢復出廠設置並在60秒後重新啟動，而且會自動進入配置模式";
            mcs_Sense_schedule          = "情景計劃";
            load_succeed                = "加載成功";
            load_fail                   = "加載失败";
            refresh_succeed             = "刷新成功";
            refresh_fail                = "刷新失敗";
            mcs_ensure_dev_power        = "1) 確保設備已連接電源";
            all_refresh_complete        = "已刷新全部數據";
            mcs_synchronize             = "同步";
            mcs_synchronize_detail      = "下列設備的情景模式和設置不一致，需要同步後才能工作";
            mcs_Sense_Schedule_Set      = "情景計劃設置";
            mcs_Sence_Schedule_detail   = "如果您啟用了自動情景模式，系統將按照情景計劃在不同的時間自動切換情景";
            mcs_Scene_set               = "情景設置";
            mcs_Scene_set_detail        = "如果你啟用了情景模式，設備將按照情景模式的設置在以下頁面呈現";
            mcs_send_message            = "發送消息";
            mcs_start_recording         = "開始錄像";
            mcs_start_capture           = "開始抓拍";
            mcs_turn_on_video           = "要在離開模式進行持續錄像，請開啟錄像";
            mcs_search_press_button     = "短按背部按鈕1秒後鬆開，指示燈緩慢閃爍";
            mcs_add_fail1               = "設備由於短按已取消添加，請點擊重試重新添加";
            mcs_add_fail2               = "設備添加失敗，請點擊重試重新添加";
            mcs_recording_duration      = "錄像時長（秒）";
            mcs_settings_unsaved        = "你的設置未保存";
            mcs_want_save               = "請問保存嗎？";
            mcs_camera                  = "攝像機";
            mcs_router                  = "路由器";
            mcs_start_up                = "啟動";
            mcs_cancle_add              = "設備由於短按已經取消添加";
            mcs_visit_photo_fail        = "提訪問相册失敗";
            mcs_camera_cell             = "相機";
            mcs_myphoto                 = "我的照片";
            mcs_select_photo            = "選擇相册";
            mcs_app_new_version         = "新版本";
            mcs_update_new_version      = "立即陞級";
            mcs_app_new_version_prompt  = "App有新版本，請選擇立即升級下載更新";
            download_failed             = "下載失敗";
            mcs_connect_server_prompt   = "WiFi已連接，正在連接服務器";
            mcs_local_search            = "本地搜索";
            mcs_choose_device_type      = "選擇設備類型";
            mcs_wifi_state              = "備註：WIFI工作正常，您現在可以斷開網線（斷開網線後可能會出現設備不線上的情况，請等待20s會自動上線）";
            mcs_sweep                   = "掃一掃";
            mcs_wifi_config_tip         = "有路由器，有WIFI，避免佈線麻煩";
            mcs_ethernet_config_tip     = "沒有路由器方便插網線";
            mcs_ethernet_connect_step_one = "第一步：確保電源線1連接電源插口2";
            mcs_ethernet_connect_step_two = "第二步：通過網線4連接路由器埠和監視器網口";
            mcs_sweep_qrcode_tip        = "監視器正對手機二維碼進行掃描，保持30釐米左右的距離";
            mcs_sound_config_tip        = "播放聲音有助於Wi-Fi連接。（也可選擇關閉）";
            mcs_sosalt                  = "%@ : 緊急按鈕警報(%@)";
            mcs_dooralt                 = "%@ : 門磁警報(%@)";
            mcs_wifi_config_restore     = "請按RESET鍵1秒後鬆開，“設備進入wifi配寘模式”。";
            mcs_voice_remind_heard      = "已聽到語音提示";
            mcs_netWork_prompt          = "網絡提示";
            mcs_con_netWork             = "當前使用的網絡為數據連接，可能消耗大量流量，是否跳轉設置界面設置網絡";
            mcs_no_netWork              = "當前為無網絡連接，是否跳轉到設置界面設置網絡";
            mcs_exception_des           = "您的app上次異常退出，是否向服務器發送錯誤報告";
            mcs_exception_prompt        = "異常提示";
            mcs_erro_diagnosis          = "錯誤診斷";
            mcs_erro_log_des            = "App記錄了近期的錯誤日誌，請選擇提交按鈕上傳錯誤日誌，感謝您的配合！";
            mcs_is_submitting           = "正在提交";
            mcs_firmware_version        = "固件版本";
            mcs_device_assembly         = "1.電源線  2.電源口  3.網口  4.網線  5.轉接頭";
            mcs_forgetpass_action_wizard_old = "按住復位鍵一秒鐘，該設備將恢復出廠設置並在60秒後重新啟動，密碼恢復為admin";
            mcs_device_assembly_mipc    = "1.電源線  2.電源口  3.網口  4.網線";
            mcs_device_connect_power_prompt = "設備不線上，請如圖所示將您的設備接入電源，已看到電源燈紅燈常亮，設備啟動完成。";
            mcs_lights_sound            = "已看到燈亮";
            mcs_connect_power           = "連接電源";
            mcs_search_magnetic         = "如圖所示，合併門磁並短按側面按鈕1秒後鬆開，指示燈緩慢閃爍";
            mcs_add_magnetic            = "打開門磁再合併，看到指示燈快閃後熄滅完成添加";
            mcs_already_downloaded      = "已下載";
            mcs_my_order                = "我的訂單";
            mcs_auto_mode               = "自動模式";
            mcs_new_small               = "最小";
            mcs_new_half                = "較小";
            mcs_new_normal              = "標清";
            mcs_new_hd                  = "高清";
            mcs_scene_now               = "當前前景";
            mcs_please_install_wechat   = "請安裝微信";
            mcs_wechat_not_support      = "微信版本不支持請更新微信";
            mcs_motion_alert            = "移動偵測警報";
            mcs_io_alert                = "I/O 警報";
            mcs_valid_user_name         = "第一步：請輸入有效用戶名";
            mcs_binding_mailbox         = "第二步：請輸入綁定的郵箱";
            mcs_send_mailbox_succuess_prev = "我們已向您傳傳綁定的郵箱";
            mcs_send_mailbox_succuess_next = "發送了一封密碼找回郵件，請您注意接收郵件";
            mcs_all_image               = "所有圖片";
            mcs_unavailable_image       = "圖片不可用，請重新選取";
            mcs_set_nickname            = "設置暱稱";
            mcs_search_timeout          = "搜索時間到，請重新點擊搜索";
            mcs_screen_size             = "畫面設置";
            mcs_screen_reset            = "設置成功，需要重啟攝影機才能生效";
            mcs_wifi_network_prompt     = "如果您家是雙頻路由器，請檢查攝像機連接的WiFi是否是5GHz頻段的WiFi，請讓攝像機連接2.4GHz頻段的WiFi";
            mcs_fault_diagnosis         = "網絡診斷";
            mcs_sever_diagnosis         = "可能由於服務器故障，導致無法正常使用";
            mcs_select_problem          = "請選擇問題";
            mcs_connot_lonin            = "不能登錄";
            mcs_connot_play             = "不能播放";
            mcs_add_problems            = "附加問題";
            mcs_encounterer_problems    = "請輸入遇到的問題";
            mcs_diagnostic_network      = "開始診斷";
            mcs_network_diagnostic_prompt = "進入網絡診斷可以幫助我們更好地解决您所遇到的問題，診斷所需時長大約幾分鐘";
            mcs_network_diagnostic      = "故障診斷中";
            mcs_connecting_server       = "正在連接服務器。。。";
            mcs_diagnostic_process_prompt = "診斷過程可能需要幾分鐘，診斷期間請不要進行其他操作，但您可以隨時停止診斷";
            mcs_diagnostic_results      = "診斷結果";
            mcs_diagnostic_results_received = "診斷完成，診斷結果已收到";
            mcs_diagnostic_results_prompt = "感謝您參與本次診斷，診斷結果將有助於我們盡快地解決您所遇到的問題";
            mcs_results_no_abnormality  = "診斷結果無異常";
            mcs_no_abnormality_prompt   = "本次診斷暫無發現異常情況。您可以選擇深度診斷，啟動日誌收集功能，將有助於我們更好地解決您所遇到的問題";
            mcs_continue_diagnosis      = "深度診斷";
            mcs_diagnosis_connot_sent   = "診斷結果無法發送";
            mcs_email_sends             = "發送電子郵件";
            mcs_email_sends_prompt      = "通過電子郵件發送診斷結果給我們，將有助於我們盡快地解決您所遇到的問題";
            mcs_diagnosis_send          = "發送";
            mcs_diagnosis_email         = "電子郵件";
            mcs_send_successful         = "發送成功";
            mcs_diagnosis_type_select_prompt = "請先選擇診斷類型";
            mcs_stop_diagnosis          = "停止診斷";
            mcs_detail_diagnosis_prompt = "深度診斷進行中，您可以在\"設備\"頁面關閉";
            mcs_detail_diagnosis_stop_prompt = "深度診斷正在進行中，您可以隨時中止";
            mcs_exit_detail_diagnosis   = "深度診斷正在進行中，是否停止？";
            mcs_network_connection_unavailable = "網絡連接不可用";
            mcs_Failed_connect_Internet = "未能連接到互聯網";
            mcs_connect_internet_note   = "如需要連接到互聯網，請注意以下幾點：";
            mcs_connect_internet_detail_first = "檢查手機中的無線局域網設置，查看是否有接入的無線局域網信號";
            mcs_connect_internet_detail_second = "檢查手機是否已經接入移動網絡，並且手機沒有被停用";
            mcs_connect_wifi_note       = "如果你已接入了無線局域網：";
            mcs_connect_wifi_detail     = "請檢查你連接的無線局域網熱點是否已接入互聯網，或該熱點是否已允許你的設備訪問局域網";
            mcs_device_or_phone_time_zone_not_equals_please_select = "設備當前時區與手機的時區不一致,請選擇一個正確的時區";
            mcs_phone_timezone          = "手機時區";
            mcs_timezone_change         = "修改時區";
            mcs_mail_send               = "郵件已發送";
            mcs_yes_verif               = "是";
            mcs_no_verif                = "否";
            mcs_camera_found_new_version_y_n_upgrade = "發現攝像機有新版本，是否前往升級？";
            mcs_auto_adapt_split_screen = "自我調整";
            mcs_four_split_screen       = "四分屏";
            mcs_nine_split_screen       = "九分屏";
            mcs_twelve_split_screen     = "十二分屏";
            mcs_not_connection_server   = "無法連接服務器";
            mcs_more_options            = "更多";
            mcs_bind_email_prompt       = "為了賬號的安全，請綁定您的郵箱";
            mcs_login_now               = "立即登錄";
            mcs_device_connect_power    = "1.電源線     2.電源口";
            mcs_device_connect_ethernet = "1.網口    2.網線";
            mcs_device_connect_ethernet_prompt = "將網線的一端接入網口，另一端接入路由器，已看到網口燈綠燈閃爍，網線連接完成。";
            mcs_pwd_format              = "密碼格式：長度在8到16比特字元之間，數位，大小寫字母和特殊符號至少包含三種";
            mcs_client_new              = "用戶端";
            mcs_user_guide              = "用戶手冊";
            mcs_ebitcam_download_describe = "ebitcam是一款雲端監控服務軟件，本軟件配合雲端監視器使用，讓用戶隨時隨地查看視頻資訊，我們為你提供清晰，流暢的觀看體驗，智慧的控制讓你隨時關愛自己的家人，喜歡的用戶快來下載吧！";
            mcs_mipc_download_describe  = "mipc是一款雲端監控服務軟件，本軟件配合雲端監視器使用，讓用戶隨時隨地查看視頻資訊，我們為你提供清晰，流暢的觀看體驗，智慧的控制讓你隨時關愛自己的家人，喜歡的用戶快來下載吧！";
            mcs_guide_download          = "手册下載";
            mcs_password_admin          = "密碼管理";
            mcs_already_read            = "我已阅读并同意";
            mcs_privacy_policy          = "隱私政策";
            mcs_not_agree_privacy_policy = "您還未同意隱私政策";
            mcs_reload                  = "重新加載";
            mcs_start_download          = "立即下載";
            mcs_video_play_fail         = "視頻播放失敗";
            mcs_download_app_tips       = "您還可以嘗試使用 PC用戶端";
            mcs_memo                    = "記憶";
            mcs_fencer                  = "劍客";
            mcs_focus                   = "焦點";
            mcs_mini                    = "迷你";
            mcs_shield                  = "小盾牌";
            mcs_snowman                 = "小雪人";
            mcs_device_type             = "設備類型";
            mcs_connect_device_wifi     = "攝像機暫不支持5GHz頻段的WiFi";
            mcs_send_diagnosis_results  = "診斷結果發送中…";
            mcs_local_file              = "本地檔案";
            mcs_local_device            = "本地設備";
            mcs_export_sd_data          = "匯出SD卡數據";
            mcs_shaking                 = "搖頭機系列";
            mcs_outdoor                 = "室外機系列";
            mcs_card                    = "卡片機系列";
            mcs_wifi_connection         = "WiFi連接";
            mcs_home_mode               = "在家模式";
            mcs_away_home_mode          = "外出模式";
            mcs_auto_switch_mode        = "自動切換";
            mcs_select_scene_mode       = "請選擇情景模式";
            mcs_7x24_hours_prompt       = "開啟7x24(小時)錄像";
            mcs_all_day_recording       = "全天錄像";
            mcs_home_mode_prompt        = "在家模式:所有設備關閉報警";
            mcs_away_home_mode_prompt   = "外出模式:所有設備開啟報警";
            mcs_at_home                 = "在家";
            mcs_away_home               = "外出";
            mcs_set_timezone_prompt_start = "您的時區是";
            mcs_set_timezone_prompt_end = "請在設置中\"日期/時間\"切換時區";
            mcs_set_wifi_remind_head    = "以下問題可能導致攝像機連網失敗，建議避免";
            mcs_set_wifi_remind_1       = "檢查是否開啟了WIFI放蹭網，此設定可能會導致攝像機無法正常連網。您可以臨時關閉防蹭網，攝像機成功聯網後再恢復路由器設定即可";
            mcs_set_wifi_remind_2       = "如果您家是雙頻路由器，請檢查攝像機連接的WIFI是否是5GHz頻段的WIFI，請讓攝像機連接2.4GHz頻段的WIFI";
            mcs_set_wifi_remind_3       = "攝像機暫時不支持WPA/WPA2企業級的WIFI，請選擇其他WIFI";
            mcs_set_wifi_remind_4       = "如果您家的WIFI是橋接的，因為橋接的原因可能會導致您的網絡非常不穩定，建議連接非橋接的WIFI";
            mcs_set_wifi_remind_5       = "攝像機對WIFI有什麼要求";
            mcs_record_save_to_my_file  = "錄像已保存至我的文件";
            mcs_view_now                = "立即查看";
            mcs_search_sos_strat        = "如圖所示，短按底部按鈕";
            mcs_search_sos_end          = "1秒後，設備指示燈閃爍即可鬆開";
            mcs_search_magnetic_start   = "如圖所示，合併門磁後，短按側面按鈕";
            mcs_search_magnetic_end     = "1秒後，設備指示燈閃爍即可鬆開";
            mcs_adding                  = "正在添加";
            mcs_record_empty_set_sd     = "插入SD卡可存儲歷史視頻";
            mcs_video_play_offline      = "該設備離線了";
            mcs_video_play_network_fail = "網絡連接失敗，稍後再試";
            mcs_alert_notify_guide1     = "原「移動偵測」操作遷移至「附件」，可通過「情景模式」進行設置";
            mcs_alert_notify_guide2     = "操作方式如下：";
            mcs_alert_notify_guide3     = "選擇「情景」，需要布防開啟外出模式，需要撤防開啟在家模式；";
            mcs_alert_notify_guide4     = "選擇「附件」-「附件列表」-「移動偵測」開啟外出模式的報警、錄像、拍照、IO報警功能，關閉在家模式的報警、錄像等功能。";
            mcs_plan_protect_guide1     = "原「計劃不妨」操作遷移到「情景」";
            mcs_plan_protect_guide2     = "選擇「情景」，開啟情景模式的自動切換：";
            mcs_plan_protect_guide3     = "選擇";
            mcs_plan_protect_guide4     = ", 對需要佈防的時間段（如：星期二 7：00-18：00）設置為外出模式；確定後保存，返回到【設置】界面；";
            mcs_plan_record_guide       = "選擇【錄像】，開啟外出模式的錄像功能。";
            mcs_plan_record_guide1      = "原「預約錄影」操作遷移到「錄影」";
            mcs_plan_record_guide2      = ", 對需要錄像的時間段（如：星期二 7：00-18：00）設置為外出模式；確定後保存，返回到【設置】界面；";
            mcs_forgetpass_action_prompt = "請長按設備Reset復位孔10秒後鬆開，設備紅外燈亮起並恢復出廠設置";
            mcs_cloud_box               = "雲盒子";
        }/* tw */
        else if(lang == "ja")
        {
            mcs_name                    = "名前";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "名前";
            mcs_old_nick                = "ニックネーム";
            mcs_linked                  = "リンクされました";
            mcs_sign_in                 = "ログイン";
            mcs_back                    = "戻る";
            mcs_will_back               = "戻ります";
            mcs_add                     = "追加";
            mcs_add_device              = "カメラを追加します";
            mcs_device_existed          = "デバイスがすでに存在しています";
            mcs_cancel                  = "キャンセル";
            mcs_exit                    = "ログアウト";
            mcs_remember_password       = "パスワードを記憶します";
            mcs_password_remembered     = "パスワードを記憶しました";
            mcs_sign_ining              = "ログイン...";
            mcs_cloud_server            = "クラウドサーバ";
            mcs_input_device_id         = "カメラのIDを入力してください";
            mcs_input_username          = "ユーザ名を入力してください";
            mcs_input_email_addr        = "Eメールアドレスを入力してください";
            mcs_email_address           = "切れているので 電...は不必 要";
            mcs_email                   = "メールアドレス登録";
            mcs_binding                 = "登録";
            mcs_binding_email           = "メールアドレス登 録";
            mcs_binding_send_prompt     = "バインディングポスト";
            mcs_binding_email_prompt    = "パスワードを忘れたときに、登録したメールアドレスに通知します。";
            mcs_input_password          = "パスワードを入力";
            mcs_access_server_failed    = "サーバーへの接続は失敗しました。";
            mcs_device_offline          = "設備はオフラインです。";
            mcs_invalid_password        = "パスワードが間違っています";
            mcs_invalid_dev             = "デバイスが存在しません。";
            mcs_login_faided            = "ログインに失敗しました。";
            mcs_invalid_qrcode          = "無効なQR-コードです。";
            mcs_please_input_username   = "ユーザ名を入力してください";
            mcs_please_input_password   = "パスワードを入力してください！";
            mcs_qrcode_scan_hint        = "カメラ底部のQRコードをスキャン";
            mcs_device_list_empty       = "デバイスリストは空です";
            mcs_record_list_is_empty    = "レコードリストは空の状態になっています。";
            mcs_password_expired        = "パスワードの有効期限が切れています";
            mcs_set_video_size          = "ビデオサイズを設定します";
            mcs_hd_1280x720             = "高画質 [1280x720]";
            mcs_auto                    = "オート";
            mcs_normal_640x360          = "ノーマル画質";
            mcs_half_320x180            = "低画質 [320x180]";
            mcs_small_160x90            = "スモール [160x90]";
            mcs_play                    = "プレビュー";
            mcs_settings                = "設定";
            mcs_messages                = "歴史";
            mcs_alarm                   = "アラーム";
            mcs_delete                  = "削除";
            mcs_delete_camera           = "削除";
            mcs_apply                   = "適用する";
            mcs_speed                   = "スピード";
            mcs_others                  = "その他";
            mcs_audio                   = "オーディオ";
            mcs_speaker                 = "スピーカー";
            mcs_mic                     = "マイク";
            mcs_power_frequency         = "電源周波数";
            mcs_online_upgrade          = "オンラインアップグレード";
            mcs_restore_the_factory_settings = "工場出荷時の初期設定に戻します";
            mcs_restore                 = "戻す";
            mcs_restore_camera          = "カメラを再起動します";
            mcs_start_upgrade           = "アップグレードを始めます";
            mcs_system                  = "システム";
            mcs_system_settings         = "システム設定";
            mcs_online                  = "設備はオンラインです";
            mcs_offline                 = "設備はオフラインです";
            mcs_query                   = "検索";
            mcs_begin_time              = "開始時刻";
            mcs_end_time                = "終了時刻";
            mcs_mode                    = "モード";
            mcs_opened                  = "オンしますか";
            mcs_high                    = "高";
            mcs_middle                  = "中";
            mcs_low                     = "ロー";
            mcs_io_alert_input          = "I/Oインプット";
            mcs_io_alert_output         = "I/Oアウトプット";
            mcs_normally_open           = "ノーマルオープン";
            mcs_normally_close          = "ノーマルクローズ";
            mcs_motion_detection_sensitivity = "動体検知感度";
            mcs_daytime                 = "昼間";
            mcs_night                   = "夜間";
            mcs_sdcord                  = "SDカード";
            mcs_storage_device          = "ストレージデバイス";
            mcs_set_mask                = "設定されたマスク";
            mcs_status                  = "ステータス";
            mcs_capacity                = "容量";
            mcs_usage                   = "使用済";
            mcs_format                  = "フォーマット";
            mcs_repair                  = "修復";
            mcs_formating               = "フォーマット中";
            mcs_repairing               = "修復中";
            mcs_mounted                 = "ロードしました";
            mcs_unmounted               = "アンロードしました";
            mcs_mount                   = "ロード";
            mcs_unmount                 = "アンロード";
            mcs_ethernet                = "イーサネット";
            mcs_wifi                    = "Wi-Fi";
            mcs_enabled                 = "起動状態";
            mcs_mac_address             = "MACアドレス";
            mcs_network_status          = "ネットワーク状態";
            mcs_wifi_mode               = "無線モデル";
            mcs_client                  = "ターミナル";
            mcs_ap                      = "ホットスポット";
            mcs_start_address           = "スタートアドレス";
            mcs_end_address             = "エンドアドレス";
            mcs_gateway                 = "ゲートウエイ";
            mcs_select_network          = "ネットワークを選択します";
            mcs_dhcp_ip                 = "IPアドレス自動取得";
            mcs_dhcp_dns                = "DNS自動取得";
            mcs_ip_address              = "IP アドレス";
            mcs_network_mask            = "ネットワークマスク";
            mcs_input_secondary_dns     = "セカンダリDNSを入力します";
            mcs_secondary_dns           = "セカンダリDNS";
            mcs_input_dns               = "DNSを入力してください";
            mcs_input_alternate_dns     = "代替DNSを入力してください";
            mcs_input_ip                = "IPアドレスを入力してください";
            mcs_input_gateway           = "ゲートウェイを入力してください";
            mcs_input_network_mask      = "ネットワークマスクを入力してください";
            mcs_wifi_list               = "Wi-Fiリスト";
            mcs_display_date            = "曜日を表示します";
            mcs_date_format             = "曜日フォーマット";
            mcs_display_time            = "24時間表示";
            mcs_time_format             = "時間フォーマット";
            mcs_24_hour                 = "24時";
            mcs_12_hour                 = "12時";
            mcs_display_weeks           = "曜日を表示";
            mcs_date_time               = "日付/時間";
            mcs_set_time                = "時間設定";
            mcs_set_week                = "週間を設定します";
            mcs_stream                  = "ストリーム";
            mcs_encode                  = "エンコード";
            mcs_resolution              = "解像度";
            mcs_frame_fate              = "FPS";
            mcs_maximum_bitrate         = "最大ビットレート";
            mcs_minimum_bitrate         = "最小ビットレート";
            mcs_i_frame_interval        = "Iフレーム間隔";
            mcs_video                   = "ビデオ";
            mcs_sampling_rate           = "サンプリングレート(kHz)";
            mcs_nickname                = "ニックネーム";
            mcs_old_password            = "現在のパスワード";
            mcs_confirm_password        = "再入力";
            mcs_modify_password         = "パスワードを変更します";
            mcs_password                = "パスワード";
            mcs_admin_password          = "管理パスワード";
            mcs_guest_password          = "新規パスワード入力";
            mcs_product_info            = "製品情報";
            mcs_software_version        = "ソフトウェアバージョン";
            mcs_device_id               = "デバイスID";
            mcs_operation               = "操作";
            mcs_record                  = "録画";
            mcs_record_2                = "レコード";
            mcs_upgrade_now             = "すぐアップグレードします";
            mcs_upgrading               = "アップグレード中";
            mcs_already_latest_version  = "最新のバージョンです";
            mcs_sensitivty              = "感度";
            mcs_user_defined            = "ユーザー定義";
            mcs_time                    = "時刻";
            mcs_date                    = "曜日";
            mcs_finish                  = "完成";
            mcs_delete_fail             = "失敗を削除する";
            mcs_motion                  = "動き検出";
            mcs_start                   = "開始";
            mcs_talk                    = "トークバック";
            mcs_password_input_inconsistent = "パスワードが確認用と不一致です";
            mcs_input_6_to_20_litters   = "入力6-20文字（Z、A-Z）または数字（0-9）";
            mcs_user_letter_range_hint  = "ユーザー名は6-32桁の文字また は数字で、先頭は文字にする";
            mcs_password_range_hint     = "パスワードは6-32文字または数字です";
            mcs_begin_with_the_letters  = "文字で始まり、文字または数字を含みます";
            mcs_sign_up                 = "登録";
            mcs_sign_up_failed          = "登録に失敗しました";
            mcs_successful_sign_up      = "登録に成功しました";
            mcs_are_you_sure_delete     = "削除しますか？";
            mcs_failed_to_set_the       = "設定に失敗しました";
            mcs_set_successfully        = "設定に成功しました";
            mcs_downloading             = "ダウンロードしています";
            mcs_wrote                   = "書き込んでいました";
            mcs_visit_again_later       = "後程に再ログインしてください";
            mcs_restart_failed          = "リスタートに失敗しました";
            mcs_upgrade_failed          = "アップデートに失敗しました";
            mcs_connnected              = "連続しました";
            mcs_connnected_to           = "に接続されている";
            mcs_not_select              = "選択しました";
            mcs_message_list            = "メッセージリスト";
            mcs_saved_password          = "保存されたパスワード";
            mcs_alert                   = "アラーム";
            mcs_no_record               = "レコードがありません";
            mcs_new_about               = "新規";
            mcs_device                  = "カメラ";
            mcs_config                  = "配置";
            mcs_change_password_failed  = "パスワード変更に失敗しました";
            mcs_do_you_want_restart     = "再起動 しますか？";
            mcs_do_you_want_restore     = "工場出荷時の初期設定に戻しますか？";
            mcs_do_you_want_upgrade     = "アップグレードしますか？";
            mcs_load_end                = "ロードされました";
            mcs_loading                 = "読み込み中...";
            mcs_down_refresh            = "ダウンでリフレッシュします";
            mcs_release_refresh         = "リフレッシュリリース";
            mcs_refreshing              = "爽やか";
            mcs_release_then_loading_data_hint = "ロードデータをリリースします";
            mcs_pull_refresh_hint       = "プルでリフレッシュします";
            mcs_restarting              = "リスタートしています";
            mcs_upgraded_time           = "更新日 : ";
            mcs_done                    = "完成";
            mcs_playback                = "プレーバック";
            mcs_i_o_alarm               = "I/Oアラーム";
            mcs_alarm_action            = "アラームアクション";
            mcs_alarm_sources           = "アラームソース";
            mcs_io_output               = "I/O アウトプット";
            mcs_snapshots               = "スナップショット";
            mcs_snapshot                = "スナップショット";
            mcs_snapshot_interval       = "スナップショット間隔(秒)";
            mcs_pre_record_length       = "プリレコード時間(秒)";
            mcs_nick_range_hint         = "ニックネームは20数字と文字以内です";
            mcs_save                    = "保存";
            mcs_close                   = "閉じる";
            mcs_snapshoting             = "キャプチャー中";
            mcs_snapshot_failed         = "撮影に失敗しました";
            mcs_record_failed           = "レコードに失敗しました";
            mcs_saved_successfully      = "保存に成功しました";
            mcs_save_failed             = "保存に失敗しました";
            mcs_restart_to_take_effect  = "再起動後、有効になり ます。";
            mcs_please_allow_access_album = "MIPCはフォトアルバムを訪問することができるように設定し下さい.";
            mcs_please_allow            = "お許しください ";
            mcs_access_album            = " あなたのフォトアルバムにアクセスします";
            mcs_ios_privacy_setting_for_photo_prompt = "iPhone \"設定 - >プライバシー - >写真\"中でアプリケーション\".";
            mcs_execute_change          = "\"変更することができます.";
            mcs_access_camera           = " お使いのカメラにアクセスします";
            mcs_please_allow_access_camera = "MIPCは、お使いのカメラを訪問することを許可してください";
            mcs_ios_privacy_setting_for_camera_prompt = "iPhone \"設定 ->プライバシー ->カメラ\"中でアプリケーション\"";
            mcs_busy_when_write         = "書き込みは忙しいです";
            mcs_unknown_error           = "不明なエラー";
            mcs_i_know                  = "分かりました";
            mcs_segment                 = "セグメント";
            mcs_please_relogin          = "再ログインしてください";
            mcs_change_password_succeed = "パスワード変更に成功しました";
            mcs_upgrade_to_ver          = "新しいいバージョンをアップグレードします";
            mcs_restore_failed          = "リストアに失敗しました";
            mcs_please_restart          = "を再起動してください";
            mcs_keep_network_settings   = "予約のネットワーク設定とパスワード";
            mcs_not_connected           = "接続されていない";
            mcs_sdcard_not_ready        = "SDカードの準備中エラーを確認しています。";
            mcs_device_not_exist        = "デバイスが存在しません";
            mcs_disable                 = "無効";
            mcs_to_determine_the        = "確定しますか";
            mcs_alert_on                = "通知機能を使用する";
            mcs_alert_off               = "アラートを削除します";
            mcs_alert_onoff             = "オン/オフに警告";
            mcs_monday                  = "月曜";
            mcs_tuesday                 = "火曜";
            mcs_wednesday               = "水曜";
            mcs_thursday                = "木曜";
            mcs_friday                  = "金曜";
            mcs_saturday                = "土曜";
            mcs_sunday                  = "日曜";
            mcs_mon                     = "一";
            mcs_tue                     = "二";
            mcs_wed                     = "三";
            mcs_thu                     = "四";
            mcs_fri                     = "五";
            mcs_sat                     = "六";
            mcs_sun                     = "日";
            mcs_scheduled_recording     = "予約録画";
            mcs_schedule                = "スケジュール";
            mcs_scheduled_recording_status = "予約録画のステータス";
            mcs_folding                 = "折り畳み";
            mcs_unfolding               = "展開";
            mcs_end_time_should_lt_begin = "終了時間は開始時間より大きくなければなりません";
            mcs_recording               = "レコード中";
            mcs_prerecord_interval_range_hint = "プリレコード間隔は6以下です";
            mcs_snapshot_interval_range_hint = "スナップショット間隔は0または60以上です";
            mcs_not_ready               = "また準備完了していません";
            mcs_availablesize           = "有効サイズ";
            mcs_reboot                  = "リブート";
            mcs_alerter                 = "アラームを開く";
            mcs_pir                     = "人体感応";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "エンコーダー";
            mcs_ok                      = "確定";
            mcs_fault                   = "故障";
            mcs_sensor_status           = "センサーステータス";
            mcs_about                   = "カメラについて";
            mcs_reset_now               = "今すぐリセットします";
            mcs_reset_later             = "後程リセットします";
            mcs_prompt                  = "プロンプト";
            mcs_select                  = "選択";
            mcs_available_netword       = "ネットワークは無効で、設定しますか？";
            mcs_request_send            = "リクエストを送信中…";
            mcs_blank_device_id         = "カメラIDは空にすることはできません";
            mcs_blank_username          = "ユーザー名は空にすることはできません";
            mcs_blank_password          = "パスワードは空にすることはできません";
            mcs_exist_user              = "ユーザー名は既に存在しています";
            mcs_invalid_user            = "無効なユーザ名";
            mcs_invalid_email_addr      = "無効な電子メールアドレス";
            mcs_system_err              = "システムエラー";
            mcs_exceed_device           = "カメラのユーザーはオーバーランです";
            mcs_continue                = "続けます";
            mcs_prompt_exit             = "本当にログアウトします か？";
            mcs_device_list             = "カメラリスト";
            mcs_no_sdcard               = "SDカードがありません";
            mcs_no_hard_disk            = "ハード·ドライブはありません";
            mcs_show_more               = "もっと詳しい…";
            mcs_shotsnop_exists         = "写真は既に存在しています";
            mcs_input_nick              = "ニックネームを入力します";
            mcs_nick_not_empty          = "ニックは空にすることはできません";
            mcs_input_new_pass          = "新規パスワード入力";
            mcs_input_new_pass_again    = "もう一度新しいパスワードを入力してください";
            mcs_new_password            = "新しいパスワード";
            mcs_modify_network_prompt   = "ネットワーク変更はネットワーク障害を引き起こす可能性があり、変更確認?";
            mcs_wifi_disable_prompt     = "Wi-Fiを無効にします。続けますか？";
            mcs_eth_disable_prompt      = "イーサネットを無効にします。続けますか？";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "自動的に取得します";
            mcs_manually_set            = "手動設定";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "プライマリDNS";
            mcs_client_mode             = "ターミナルモデル";
            mcs_adhoc_mode              = "アドホック";
            mcs_connect_fail            = "接続に失敗しました";
            mcs_dhcp_server             = "DHCPサーバ";
            mcs_display_text            = "画面にカメラ名を表示します";
            mcs_repair_prompt_detail    = "SDカードの修復は一部のデータが失われる可能です。続けますか";
            mcs_format_prompt_detail    = "フォーマットはSDカードのすべてのデータを削除します。続けますか？";
            mcs_mount_prompt            = "SDカードをマウントします。続けますか？";
            mcs_umount_prompt           = "SDカードのアンマウントはビデオと写真が保存することができません。続けますか？";
            mcs_sdcard_reset            = "設定に成功しました。カメラ再起動後有効になります。続けますか？";
            mcs_sdcard_repairing        = "再起動後に修復します";
            mcs_sdcard_formating        = "再起動後にフォーマットします";
            mcs_sdcard_umount           = "アンマウント";
            mcs_valid                   = "未使用";
            mcs_io                      = "IOアラーム";
            mcs_input                   = "インプット";
            mcs_outinput                = "アウトプット";
            mcs_prompt_alert_on         = "アラートオン、続けますか？";
            mcs_auto_sync_date_time     = "自動同期";
            mcs_alarm_record            = "アラームレコード";
            mcs_username                = "ユーザ名";
            mcs_re_enter_the_password   = "もう一度パスワードを入力してください。";
            mcs_remember_me             = "サインをそのままします";
            mcs_home                    = "ホーム";
            mcs_install_the_plug        = "プラグインをインストールします";
            mcs_install_the_video_plug  = "ビデオプラグインをインストールします";
            mcs_install_now             = "今すぐインストールします";
            mcs_temporarily_installed_use_ordinary_video = "いいえ、後程でインストールします";
            mcs_brightness              = "輝度";
            mcs_contrast                = "コントラスト";
            mcs_color_saturation        = "彩度";
            mcs_sharpness               = "シャープネ ス";
            mcs_duration                = "デュレーション";
            mcs_index                   = "索引";
            mcs_remark                  = "備考";
            mcs_media_stream            = "メディア";
            mcs_server                  = "サーバ";
            mcs_media_transfer          = "転送メディア";
            mcs_osd                     = "画面表示";
            mcs_manufacturer            = "メーカー";
            mcs_model                   = "モデル";
            mcs_plugin_version          = "プラグインバージョン";
            mcs_network_interface       = "ネットワークインタフェース";
            mcs_transfer_protocol       = "転送プロトコル";
            mcs_year                    = "年";
            mcs_month                   = "月";
            mcs_day                     = "日";
            mcs_hour                    = "時";
            mcs_minute                  = "分";
            mcs_second                  = "秒";
            mcs_millisec                = "ミリ";
            mcs_ntp                     = "時間サーバ";
            mcs_upload_upgrade          = "アップロード";
            mcs_stop                    = "ストップ";
            mcs_info_rewind             = "リワインド";
            mcs_fast_forward            = "早送り";
            mcs_previous_frame          = "前のフレーム";
            mcs_next_frame              = "次のフレーム";
            mcs_record_audio            = "オーディオレコード";
            mcs_week                    = "週間";
            mcs_all                     = "全部";
            mcs_id                      = "ID";
            mcs_select_all              = "全部を選択します";
            mcs_call                    = "コール";
            mcs_activation              = "アクティベーション";
            mcs_caption                 = "ファイルをアップロードします";
            mcs_alarm_device            = "アラートデバイス";
            mcs_not_installed           = "インストールされていません";
            mcs_join_us_now             = "今すぐ私たちに参加します";
            mcs_reconnect_please_wait   = "再接続しています。お待ちください";
            mcs_erasing                 = "削除しています";
            mcs_writing                 = "書き込んでいます";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "新しいバージョンがあります";
            mcs_equipment_flip          = "フリップ";
            mcs_device_status           = "デバイスステータス";
            mcs_audio_setting           = "オーディオ設定";
            mcs_nick_modify             = "ニックネームを変更します";
            mcs_ready                   = "OKです";
            mcs_full                    = "フルになりました";
            mcs_connecting              = "接続しています";
            mcs_message_buffering       = "メッセージバッファリング";
            mcs_upgrade_finish          = "アップグレード完了しました";
            mcs_image                   = "写真";
            mcs_bar                     = "条";
            mcs_init                    = "初期化";
            mcs_confirm_new_password    = "新しいパスワードを確認します";
            mcs_continue_switch_wireless_network = "ネットワークをスイッチすると、ネットワーク障害を引き起こす可能があります。続けますか？";
            mcs_restore_factory_settings_prompt = "工場出荷時の初期設定に戻すと、カメラは再起動します。続けますか？";
            mcs_username_does_not_exis  = "ユーザ名は存在していません";
            mcs_username_already_exists = "ユーザー名は既に存在しています";
            mcs_successful_whether_login = "登録に成功しました。今サインインしますか？";
            mcs_username_demand         = "文字で始まる6-20文字や数字";
            mcs_the_password_is_empty   = "パスワードは空です";
            mcs_password_demand         = "6-20 文字の英語や数字";
            mcs_password_empty          = "パスワードは空です";
            mcs_two_password_input_inconsistent = "パスワードが確認用と不一致です";
            mcs_the_user_name_is_empty  = "ユーザ名は空です";
            mcs_upgrade_to_the_latest_version = "最新のバージョンにアップグレードします";
            mcs_subnet_mask_wrong_format = "ネットワークマスクは無効な形式です";
            mcs_upgrade_successful_restart_to_take_effect = "成功に成功しました。有効にするデバイスを再起動します.";
            mcs_need_to_restart_the_camera_to_take_effect = "カメラを再起動後に、有効になります";
            mcs_not_allowed_close_two_network_cards = "イーサネットとWi-Fiが同時に無効にすることはできません";
            mcs_modified_successfully   = "変更に成功しました";
            mcs_connection_successfully = "接続に成功しました";
            mcs_connection_is_interrupted = "接続が壊れました";
            mcs_devices_in_the_account_overrun = "アカウント内のデバイスはオーバーランです";
            mcs_format_error            = "フォーマットエラー";
            mcs_change                  = "変更";
            mcs_refresh                 = "リフレッシュ";
            mcs_connect                 = "接続";
            mcs_upgrade                 = "アップグレード";
            mcs_activate                = "アクティブ";
            mcs_filter                  = "フィルタ";
            mcs_reset                   = "リセット";
            mcs_prompt_alert_off        = "アラートをオフにします。続けますか";
            mcs_invalid_server          = "無効なタイムサーバ";
            mcs_upgrade_prompt          = "デバイスソフトウェアをアップグレードします。続けます？";
            mcs_restart_prompt          = "カメラを再起動します継続?";
            mcs_repeat                  = "繰り返す";
            mcs_scheduled_one           = "スケジュール1";
            mcs_scheduled_two           = "スケジュール2";
            mcs_scheduled_three         = "スケジュール3";
            mcs_scheduled_four          = "スケジュール4";
            mcs_more                    = "もっと詳しい";
            mcs_leave                   = "離してもっとロードができます";
            mcs_qrcode_scan             = "QRコードスキャン";
            mcs_inserted                = "挿入しました";
            mcs_removed                 = "削除しました";
            mcs_upgrade_init            = "アップグレードが始まります";
            mcs_upgrade_download        = "アップグレードしてダウンロードします";
            mcs_check                   = "アップグレードして検査します";
            mcs_audio_encoder_config    = "オーディオコーデック";
            mcs_video_codec             = "ビデオコーデック";
            mcs_download                = "ダウンロード";
            mcs_client_download         = "クライアントダウンロード";
            mcs_for_more_clarity_smooth_video_experience = "もっと高画質で流暢のビデオを取得します";
            mcs_network                 = "ネットワーク";
            mcs_mobile_client_download  = "携帯クライアントダウンロード";
            mcs_readonly                = "リードオンリー";
            mcs_please_exit_and_relogin = "ログアウトして再ログインしてください";
            mcs_add_device_failed       = "設備の追加に失敗しました";
            mcs_set_password            = "パスワードの変更";
            mcs_7x24_hours              = "連続録画";
            mcs_mtalt                   = "%@ : モーション警告";
            mcs_ioalt                   = "%@ : I/O 警告";
            mcs_time_zone               = "時間帯";
            mcs_select_time             = "時刻を選択";
            mcs_now                     = "今";
            mcs_mipc_have_alert_notification = "MIPCはアラート通知を持っている";
            mcs_notification_center     = "通知センター";
            mcs_sound                   = "音声通知";
            mcs_vibration               = "バイブ";
            mcs_clear_cache             = "キャッシュのクリア";
            mcs_clear_cache_hint        = "あなたはキャッシュをクリアしてもよろしいですか？";
            mcs_successfully_cleared_cache = "成功し、キャッシュをクリア";
            mcs_app_except_exit_hint    = "申し訳ありませんが、アプリケーションでは、例外が発生したため終了します.";
            mcs_rate_us                 = "レート問い合わせ";
            mcs_password_too_simple_hint = "パスワードは、セキュリティを向上させるために修正された、あまりにも簡単です.";
            mcs_check_for_new_version   = "新しいバージョンの確認";
            mcs_contact_us              = "お問い合わせ";
            mcs_buffer_time             = "時間をバッファリング";
            mcs_default                 = "デフォルト";
            mcs_alarmed_devices         = "アラーム発生デバイス";
            mcs_aec                     = "エコーキャンセル";
            mcs_permission_denied       = "パーミッションが拒否されました";
            mcs_full_screen             = "フルスクリーン";
            mcs_forgot_your_password    = "PWを忘れたとき";
            mcs_your_email              = "あなたのメールアドレス";
            mcs_sign_up_confirmation    = "確認メールを送信し、メールアドレスを確認するために送信されています。このメールに含まれるリンクにアクセスすると、アカウントをアクティブにします.";
            mcs_recovery_prompt         = "メールアドレス（ユーザー名）を入力してください、私たちは、パスワードをリセットする方法を教えにメッセージを送信します.";
            mcs_password_reset_confirmation = "お知らせ登録したメールアドレスに、パスワードをリセットするリンクが書かれたメールが届きます。";
            mcs_recovery_fail_no_mail   = "パスワードの回復は失敗します, このアカウントは、電子メールを結合していない";
            mcs_recovery_fail_invalid_link = "パスワードの回復は失敗します, 必ずリンクまたは回復の内容を再度確認してください.";
            mcs_recovery_ok_login       = "パスワード回復成功。にはサインインをしてください.";
            mcs_active_ok_login         = "アクティブな成功を占めている。にはサインインをしてください.";
            mcs_active_fail_invalid_link = "アクティブなアカウントは失敗。リンクの確認して内容確認するか、再度、無料サインアップをしてください.";
            mcs_login_fail_inactive     = "アカウントが非アクティブです。アクティブ、アクティブ電子メールの内容に従ってください.";
            mcs_sign_up_again           = "再びサインアップする";
            mcs_press_start_talk        = "話を押して、";
            mcs_release_stop_talk       = "停止するに放し";
            mcs_delete_device           = "カメラを削除";
            mcs_success_removed_equipment = "デバイスを正常に削除します。";
            mcs_remove_equipment_failure = "機器の故障を削除します";
            mcs_device_busy             = "デバイスがビジー状態である";
            mcs_keep_testing            = "テストを継続";
            mcs_notify_tone             = "通知の着信音";
            mcs_float_video             = "Enabelフローティングビデオ";
            mcs_float_position          = "フローティング•ビデオ•ポジション";
            mcs_video_resolution        = "ビデオ解像度";
            mcs_float_resolution        = "フローティング•ビデオ解像度";
            mcs_top_left                = "左上";
            mcs_top_right               = "右上";
            mcs_bottom_left             = "左下";
            mcs_bottom_right            = "右下";
            mcs_action_next             = "次へ";
            mcs_action_cancel           = "キャンセル";
            mcs_action_retry            = "リトライ";
            mcs_action_add              = "加える";
            mcs_is_add                  = "追加するかどうか";
            mcs_action_apply            = "適用する";
            mcs_action_config           = "設定";
            mcs_action_skip             = "スキップ";
            mcs_action_ok               = "Ok";
            mcs_action_add_device       = "デバイスの追加";
            mcs_action_modify_password  = "パスワードを変更";
            mcs_action_config_wifi      = "設定Wi-Fi";
            mcs_state_connect_device    = "デバイスの接続";
            mcs_state_connect_device_fail = "機器の故障を接続";
            mcs_state_wait_device_online = "デバイスがオンラインされるのを待つ";
            mcs_state_device_online     = "オンライン";
            mcs_state_success           = "成功";
            mcs_fail                    = "失敗";
            mcs_delete_success          = "成功を削除する";
            mcs_state_add_device_success = "デバイスの成功を追加";
            mcs_state_add_device_fail   = "デバイスの故障を追加";
            mcs_state_modify_pass_success = "パスワードは正常に変更された";
            mcs_state_modify_pass_fail  = "パスワードの変更は失敗します";
            mcs_state_config_wifi_success = "設定無線LANの成功";
            mcs_state_config_wifi_fail  = "接続に失敗しました";
            mcs_state_connecting_to     = "への接続";
            mcs_network_connect_type    = "デバイスは、デバイスの電源がオンになっていることを確認し、[ネットワーク接続]を選択し、オンラインではありません。";
            mcs_prompt_modify_passwd    = "セキュリティ上の理由のために、デバイスのデフォルトのパスワードを変更します。新しいパスワードは6文字以上でなければなりません";
            mcs_prompt_config_wifi      = "お使いのデバイスは、まだあなたの無線LANに接続されていない、あなたのWi-Fiを設定してください。.";
            mcs_step1_check_connect     = "ステップ1 : ルータとカメラ用ネットワークケーブルを接続.";
            mcs_first_step_ethernet_connect = "ステップ2：ネットワークケーブルを介してカメラとルータを接続します。";
            mcs_step2_check_connect     = "ステップ2 : お使いのカメラの電源を入れます.";
            mcs_second_step_ethernet_connect = "ステップ1：必ずデバイスを作るの電源が入っています.";
            mcs_hint_check_network      = "注意 : 起動が完了した後にカメラは、起動に約50秒かかり、LEDが3秒ごとにカメラがオンラインだったことを意味し、緑色のランプが点滅を3回点灯し、ウィザードは自動的に次のステップに入ります.";
            mcs_the_end                 = "終わり";
            mcs_hint_password_expired   = "パスワードの有効期限が切れて、再度追加してください。デバイス";
            mcs_hint_remove_ethernet    = "備考 : 無線LANが正常に動作し、あなたが今、ネットワークケーブルを取り外すことができます.";
            mcs_gateway_format_incorrect = "ゲートウェイアドレスは正しくありません";
            mcs_dns_format_incorrect    = "DNSアドレス形式が正しくありません";
            mcs_subnet_mask_format_incorrect = "は不正確な";
            mcs_ip_format_incorrect     = "IPアドレス形式が正しくありません";
            mcs_login_sucess            = "ログインに成功";
            mcs_donot_remind            = "思い出さないでください";
            mcs_clear_cache_signout_hint = "キャッシュが継続して再度サインインが終了しますクリア？";
            mcs_devlist_adddev_hint     = "機器を追加するには、ここをクリックします";
            mcs_devlist_menu_hint       = "解像度を設定するには、ここをクリックしてください";
            mcs_update_failed           = "アップグレードに失敗しました";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "ローカル";
            mcs_set_npapi               = "プラグインをインストールしているならば、を訪問してください \'chrome://flags/#enable-npapi\'、を有効にNPAPI、";
            mcs_set_win32k              = "訪問 \'chrome://flags/#enable-win32k-renderer-lockdown\', win32k レンダラのロックダウンを無効にする,";
            mcs_restart_browser         = "ブラウザを再起動します";
            mcs_download_location       = "ダウンロード保存先";
            mcs_Networking_mode         = "ネットワーキング";
            mcs_wifi_intelligent_configuration = "Wi-Fi接続";
            mcs_ethernet_configuration  = "イーサネット接続";
            mcs_wifi_connect            = "接続";
            mcs_hard_disk               = "ハードディスク";
            mcs_wifi_is_connection      = "接続、お待ちください...";
            mcs_wifi_intelligent_configuration_setup_ailure = "無線LANインテリジェント構成セットアップの失敗";
            mcs_box_list                = "リストボックス";
            mcs_repair_disk_prompt      = "修復ディスクは、いくつかのデータを失ったことがあり, 続けます?";
            mcs_format_disk_prompt      = "修復ディスクは、いくつかのデータを失ったことがあり, 続けます?";
            mcs_scheduled_alerting      = "計画の布";
            mcs_scheduled_alerting_one  = "計画の布 1";
            mcs_scheduled_alerting_two  = "計画の布 2";
            mcs_scheduled_alerting_three = "計画の布 3";
            mcs_scheduled_alerting_four = "計画の布 4";
            mcs_wifi_config_cancle      = "無線LANの設定が解除します";
            mcs_wifi_config_prepare     = "配置準備";
            mcs_wifi_config_first       = "機器や携帯電話やルータは、1メートルの範囲内に維持しました";
            mcs_wifi_config_second      = "無線LANを設定する場合、デバイスは、ネットワークケーブルを接続することはできません";
            mcs_wifi_config_third       = "一秒を放しRESETリセット穴を押してください";
            mcs_wifi_config_success     = "コンフィギュレーションの成功";
            mcs_wifi_config_failure     = "構成に失敗しました";
            mcs_failure_prompt          = "再試行するか、正しく入力されている無線LANのパスワードを確認するために戻ってください";
            mcs_display_password        = "パスワードを表示";
            mcs_action_smart_config_wifi = "構成ウィザード";
            mcs_wifi_invalid            = "お使いのネットワークは、Wi-Fiではないが、無線LANを接続してください";
            mcs_phone_not_connect_wifi  = "Wi-Fiネットワークが接続されていません";
            mcs_prompt_check_connection = "お使いのカメラは、オンラインではない、カメラの回線接続を確認してください.";
            mcs_wifi_cfg_ready          = "レディー";
            mcs_reset_complete          = "リセットが完了すると";
            mcs_how_to_restore_factory_settings = "工場出荷時の設定を復元する方法：10秒以上カメラの底部にあるRESET穴を押してRESET端子を使用します";
            mcs_forgetpass_action_wizard = "どうぞ長押しする設備がリセットリセット穴じゅう秒後に外れて、あなたを聞いて音声で「回復出荷設置設備」。";
            mcs_prompt_check_device_connection = "お使いのデバイスがオンラインでない、デバイスを接続するための配線をチェック";
            mcs_prompt_select_device_connection = "あなたの設備はオンラインしないで、選択してネット方式を選択して下さい";
            mcs_input_wifi_name         = "入力してください無線LAN名";
            mcs_action_previous         = "前";
            mcs_io_alert_range_hint     = "IOアラート時間は60秒未満である必要があります";
            mcs_io_alert_time           = "IOアラーム時間(秒)";
            mcs_smart                   = "スマート";
            mcs_plan                    = "プラン";
            mcs_mute                    = "ミュート";
            mcs_wind_speed              = "風速";
            mcs_one                     = "一方の歯車";
            mcs_two                     = "二つの歯車";
            mcs_three                   = "三つの歯車";
            mcs_purify_mode             = "モードを浄化";
            mcs_video_list              = "動画リスト";
            mcs_wifi_cfg_restore_factory_settings = "、デバイスの近くに携帯電話を保持する装置が無線LANを設定した場合、1秒間RESET穴を押して放し、デバイスは工場出荷時の設定に復元され、自動的に再起動";
            mcs_mask_settings           = "マスクの設定";
            mcs_notification_settings   = "通知設定";
            mcs_alarm_settings          = "IOアラーム";
            mcs_motion_detection        = "動体検知";
            mcs_io_alarm                = "I/Oアラーム";
            mcs_connect_status          = "接続状況";
            mcs_motion_notification     = "警報と通知";
            mcs_device_connected        = "デバイスが接続されています";
            mcs_start_spray             = "スプレーを開始？";
            mcs_available_network       = "ネットワーク利用できない、チェックネットワーク";
            mcs_select_wifi_wizard      = "まず、Wi-Fiネットワークを選択してください";
            mcs_input_wifi_password     = "入力された無線LANのパスワード";
            mcs_device_admin_password   = "カメラの管理者パスワード";
            mcs_device_guest_password   = "カメラゲストパスワード";
            mcs_user_admin_password     = "ユーザー管理者パスワード";
            mcs_user_guest_password     = "ユーザゲストパスワード";
            mcs_save_network_set        = "ネットワーク設定とパスワードを保存します";
            mcs_nickname_not_set        = "カメラのニックネームが設定されていません";
            mcs_current_wifi            = "現在のWi-Fi";
            mcs_current_password_strength = "現在のパスワードの強度";
            mcs_new_password_strength   = "新しいパスワードの強度";
            mcs_needs_to_open_the_DHCP  = "ルーターは、DHCPを開く必要機能（自動的にIPを取得）の試みが失敗した場合、管理者に連絡してください。";
            mcs_picture                 = "絵";
            mcs_quality                 = "品質";
            mcs_size                    = "サイズ";
            mcs_guest_login             = "ゲストのログイン";
            mcs_audio_and_video         = "オーディオ/ビデオ";
            mcs_volume                  = "ボリューム";
            mcs_smooth                  = "スムーズ";
            mcs_clear                   = "クリア";
            mcs_handsfree               = "ハンズフリー";
            mcs_headphone               = "ヘッドフォン";
            mcs_my                      = "アカウント";
            mcs_customer_service        = "顧客サービス";
            mcs_firefox_flash_uninstall = "あなたのFlashプラグインが利用できない、解決策はhttps://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-workを参照してください。";
            mcs_plug                    = "ウィジェット";
            mcs_plug_load               = "ロードプラグイン";
            mcs_plug_load_refuse        = "プラグインをロードしないでください";
            mcs_plug_load_auto          = "自動";
            mcs_option                  = "オプション";
            mcs_option_ok               = "決定する";
            mcs_voice_call_fails        = "音声コールは、ネットワークをチェックし、失敗した";
            mcs_umounted_prompt         = "アンマウントするか?";
            mcs_mounted_prompt          = "マウントするかどうか?";
            mcs_format_prompt           = "フォーマットするかどうか？";
            mcs_repair_prompt           = "修正プログラムかどうか?";
            mcs_signup_prompt           = "ここで新しい?";
            mcs_wifi_connect_sucess_prompt = "注：Wi-Fiを正常に仕事して、あなたは今オフネットワーク";
            mcs_manual_input_prompt     = "デバイスIDを手動で入力";
            mcs_qrscan_prompt           = "あなたはまだこのアプリケーションを許可訪問あなたのカメラは、iPhone」設定」－」プライバシー」－」カメラ」機能で、名前を見つけVimtag」「のアプリケーションを手直しする。";
            mcs_select_network_style    = "ネットワーク接続方式を選ぶ：";
            mcs_push                    = "お知らせ";
            mcs_connect_power_prompt    = "注：設備オンラインでない、先に確保は電源に接続します";
            mcs_fail_microphone         = "マイクにアクセスできない";
            mcs_microphone_prompt       = "「Vimtag「アプリケーションの名前を変更することが見つけ、「マイク」機能 - 「プライバシー」 - あなたは「セット」iPhoneで、このアプリケーションがマイクにアクセスできるようにではありません";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "高画質";
            mcs_standard_clear          = "通常";
            mcs_fluent_clear            = "低画質";
            mcs_deleting                = "削除している...";
            mcs_event                   = "事件";
            mcs_one_hour                = "一時間";
            mcs_half_hour               = "半時間";
            mcs_five_min                = "5分";
            mcs_category                = "類別";
            mcs_time_length             = "時間が長い";
            mcs_new                     = "新規";
            mcs_week_setting_prompt     = "日曜日は空にできません";
            mcs_time_setting_prompt     = "時間を設定できない空";
            mcs_today                   = "今日";
            mcs_wifi_password           = "無線LANのパスワード";
            mcs_register_prompt         = "どうぞお先に登録するアカウント";
            mcs_click_login             = "ログイ ン";
            mcs_not_login_prompt        = "まだお登録、登録をクリックしてください！";
            mcs_product_presentation    = "トップページ";
            mcs_help_feedback           = "助ける";
            mcs_help_information        = "助ける";
            mcs_feedback                = "意見フィードバック";
            mcs_feedback_des            = "感謝するapp、歓迎に貴重な意見を提出します";
            mcs_feedback_praise         = "好評を与える";
            mcs_feedback_title_prompt   = "フィードバックタイトル";
            mcs_feedback_title          = "タイトル（18字以内）を入力して下さい";
            mcs_feedback_type_prompt    = "問題タイプ";
            mcs_feedback_please_select  = "選択タイプを選択してください";
            mcs_feedback_select_option1 = "インタフェース問題";
            mcs_feedback_select_option2 = "カメラ問題";
            mcs_feedback_select_option9 = "その他の問題";
            mcs_feedback_dec_prompt     = "具体的な説明";
            mcs_feedback_dec            = "あなたの意見を入力してください";
            mcs_feedback_upload_photo   = "写真をアップロードする";
            mcs_preview_pic             = "プレビュー";
            mcs_Album                   = "アルバムから選択します";
            mcs_Photograph              = "写真";
            mcs_camera_unavailable      = "お使いのカメラではご利用いただけません";
            mcs_feedback_submit         = "提出する";
            mcs_feedback_title_alert    = "問題は規則に合わない";
            mcs_feedback_type_alert     = "正しいタイプを選択してください";
            mcs_feedback_dec_alert      = "あなたの意見を入力してください";
            mcs_feedback_submit_success = "成功を提出する";
            mcs_feedback_submit_fail    = "失敗を提出する";
            mcs_connect_wifi_prompt     = "接続Wi-Fi";
            mcs_cloud                   = "クラウド";
            mcs_demo                    = "体験";
            mcs_shortest                = "最短";
            mcs_no_history              = "履歴はありませんありません";
            mcs_download_pc_client      = "PCクライアントをダウンロードするにはクリック";
            mcs_accounts_bind_email_exist = "このアカウントはメールすること";
            mcs_accounts_bind_email_busy = "このメールはもう過ぎてアカウントをする";
            mcs_systemupdatetip_noversionnodetail = "アップデートの現在のバージョンが利用可能で、詳細な更新情報なし";
            mcs_systemupdatetip_nodetail = "詳細な更新情報なし";
            mcs_systemupdatetip_updatefrom = "カレントバージョン";
            mcs_systemupdatetip_updateto = "グレードアップすることができ";
            mcs_systemupdatetip_sureforupdate = "確定のアップグレード？";
            mcs_systemupdatetip_updatecontent = "今回のアップデートの内容";
            mcs_operate_prompt          = "図に従って操作してください";
            mcs_operation_prompt        = "操作プロンプト";
            mcs_qrcode_prompt_content   = "モバイル二次元コードをスキャンするために、デバイスのカメラを使用して";
            mcs_qrcode_camera_distance  = "カメラの距離の2次元コード12〜14センチメートル";
            mcs_planvideo_datewizard    = "曜日を設定してください。";
            mcs_planvideo_timewizard    = "時間を設定してください。";
            mcs_planvideo_wizard        = "曜日と時刻を設定してください。";
            mcs_email_unbind            = "メールアドレス登 録";
            mcs_email_unmatch           = "メールボックスの不一致";
            mcs_email_inactive          = "メールアドレスは既に登録済です";
            mcs_email_binded            = "電子メールはバインドされています";
            mcs_user_binded_bymail      = "ユーザーがバインドされています";
            mcs_bind_email_fail         = "メールボックスが失敗したバインディング";
            mcs_diagnosis               = "診断";
            mcs_delay                   = "ディレイ";
            mcs_packet_loss_rate        = "パケット損失率";
            mcs_timezone_IDL            = "曜日変更線";
            mcs_timezone_China          = "中国";
            mcs_timezone_Midway         = "ミッドウェー諸島";
            mcs_timezone_Niue           = "ニウエ島";
            mcs_timezone_Samoa          = "アメリカ領サモア";
            mcs_timezone_Aleutian       = "アリューシャン列島";
            mcs_timezone_Hawaii         = "ハワイ諸島";
            mcs_timezone_Alaska         = "アラスカ州";
            mcs_timezone_PSTUSCanada    = "太平洋標準時（米国およびカナダ）";
            mcs_timezone_Arizona        = "アリゾナ州";
            mcs_timezone_MSTUSCanada    = "山岳標準時（米国およびカナダ）";
            mcs_timezone_CSTUSCanada    = "中部標準時（米国およびカナダ）";
            mcs_timezone_ESTUSCanada    = "東部標準時（米国およびカナダ）";
            mcs_timezone_ASTCanada      = "大西洋標準時（カナダ）";
            mcs_timezone_Newfoundland   = "ニューファンドランド州";
            mcs_timezone_Brasilia       = "ブラジリア";
            mcs_timezone_BuenosAires    = "ブエノスアイレス";
            mcs_timezone_Santiago       = "サンティアゴ";
            mcs_timezone_Noronha        = "ノロニャ";
            mcs_timezone_SouthGeorgia   = "サウスジョージア島";
            mcs_timezone_Azores         = "アゾレス諸島";
            mcs_timezone_CapeVerde      = "カーボベルデ";
            mcs_timezone_London         = "ロンドン";
            mcs_timezone_Lisbon         = "リスボン";
            mcs_timezone_Dublin         = "ダブリン";
            mcs_timezone_Berlin         = "ベルリン";
            mcs_timezone_Amsterdam      = "アムステルダム";
            mcs_timezone_Brussels       = "ブリュッセル";
            mcs_timezone_Budapest       = "ブダペスト";
            mcs_timezone_Madrid         = "マドリード";
            mcs_timezone_Paris          = "パリ";
            mcs_timezone_Rome           = "ローマ";
            mcs_timezone_Sarajevo       = "サラエボ";
            mcs_timezone_Cairo          = "カイロ";
            mcs_timezone_Amman          = "アンマン";
            mcs_timezone_Beirut         = "ベイルート";
            mcs_timezone_Istanbul       = "イスタンブール";
            mcs_timezone_Jerusalem      = "エルサレム";
            mcs_timezone_Athens         = "アテネ";
            mcs_timezone_Baghdad        = "バグダッド";
            mcs_timezone_Riyadh         = "リヤド";
            mcs_timezone_Qatar          = "カタール";
            mcs_timezone_Moscow         = "モスクワ";
            mcs_timezone_Tehran         = "テヘラン";
            mcs_timezone_Baku           = "バクー";
            mcs_timezone_Dubai          = "ドバイ";
            mcs_timezone_Tbilisi        = "トビリシ";
            mcs_timezone_Kabul          = "カブール";
            mcs_timezone_Karachi        = "カラチ";
            mcs_timezone_Yekaterinburg  = "エカテリンブルグ";
            mcs_timezone_Maldives       = "モルディブ";
            mcs_timezone_Calcutta       = "カルカッタ";
            mcs_timezone_Colombo        = "コロンボ";
            mcs_timezone_Katmandu       = "カトマンズ";
            mcs_timezone_Almaty         = "アルマトイ";
            mcs_timezone_Dhaka          = "ダッカ";
            mcs_timezone_Omsk           = "オムスク";
            mcs_timezone_Thimbu         = "ティンプー";
            mcs_timezone_Rangoon        = "ラングーン";
            mcs_timezone_Bangkok        = "バンコク";
            mcs_timezone_Jakarta        = "ジャカルタ";
            mcs_timezone_Vientiane      = "ビエンチャン";
            mcs_timezone_Harbin         = "ハルビン";
            mcs_timezone_Shanghai       = "上海";
            mcs_timezone_Hongkong       = "香港";
            mcs_timezone_Singapore      = "シンガポール";
            mcs_timezone_Taipei         = "台北";
            mcs_timezone_Ulaanbaatar    = "ウランバートル";
            mcs_timezone_Perth          = "パース";
            mcs_timezone_Seoul          = "ソウル";
            mcs_timezone_Tokyo          = "東京";
            mcs_timezone_Darwin         = "ダーウィン";
            mcs_timezone_Magadan        = "マガダン";
            mcs_timezone_Vladivostok    = "ウラジオストク";
            mcs_timezone_Guam           = "グアム";
            mcs_timezone_Sydney         = "シドニー";
            mcs_timezone_Canberra       = "キャンベラ";
            mcs_timezone_Melbourne      = "メルボルン";
            mcs_timezone_Queensland     = "クイーンズランド州";
            mcs_timezone_LordHowe       = "ロードハウ";
            mcs_timezone_Guadalcanal    = "ガダルカナル";
            mcs_timezone_Fiji           = "フィジー";
            mcs_timezone_Auckland       = "オークランド";
            mcs_timezone_Apia           = "アピーア";
            mcs_timezone_Fakaofo        = "ファカオフォ";
            mcs_timezone_Tongatapu      = "トンガタプ";
            mcs_timezone_Kiritimati     = "クリスマス島";
            mcs_connect_timeout         = "タイムアウト";
            mcs_share                   = "シェア";
            mcs_share_prompt_start      = "あなたがアクセスすることができます";
            mcs_share_prompt_end        = "そのPCやアンドロイド携帯電話上でブラウザを介してビデオをダウンロードするには、同じネットワーク内の";
            mcs_share_note              = "ダウンロードプロセスは、このページを残すしないでください";
            mcs_video_size              = "サイズ";
            mcs_video_duration          = "デュレーション";
            mcs_my_folder               = "マイファイル";
            mcs_account_no_contain      = "アカウントが含まれていません";
            mcs_edit                    = "編集";
            mcs_video_number            = "ビデオ";
            mcs_no_local_video          = "いいえビデオはありません";
            mcs_empty_folder            = "フォルダは空です";
            mcs_no_history_record       = "あなたは何の歴史を持っていません";
            mcs_no_local_record         = "あなたのローカルレコードは空です";
            mcs_empty_cloud_list_first  = "お使いのデバイスリストには、空であります";
            mcs_empty_cloud_list_second = "左の角をクリックして";
            mcs_empty_cloud_list_third  = "設備を追加しましょう！";
            mcs_empty_local_list_first  = "あなたの当地のリストは空きです、";
            mcs_empty_local_list_second = "試み";
            mcs_empty_local_list_third  = "プルダウンスクリーン";
            mcs_empty_local_list_forth  = "새로 고침 가자!";
            mcs_empty_local_list_fifth  = "（LAN内の設備を検索する）";
            mcs_record_prompt           = "“マイファイル“で再生できま す";
            mcs_record_download_prompt  = "“マイファイル“で再生できま す";
            mcs_register_buton_start    = "アカウントがないときは";
            mcs_register_buton_end      = "今すぐ登録";
            mcs_product                 = "製品";
            mcs_user_or_password_invalid = "ユーザー名またはパスワードが正しくありません";
            mcs_share_video_prompt      = "ご使用している非WiFiネットワークへの切り替えをくださいWiFiネットで分かち合う";
            mcs_download_video_prompt   = "ご使用中の非WiFiネットダウンロードは、パケット料金、続けますか？";
            mcs_hd_720P                 = "高画質";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "普通";
            mcs_common_problem          = "よくある質問";
            msc_enter_comment           = "コメントを入力してください";
            msc_description             = "説明";
            mcs_parameter               = "パラメータ";
            mcs_help_and_feedback       = "ヘルプとフィードバック";
            mcs_personal_center         = "個人センター";
            mcs_version                 = "リリース";
            mcs_language                = "言語";
            mcs_new_user                = "新規ユーザの方";
            mcs_have_account            = "アカウントをお持ち の方";
            mcs_try_it                  = "体験してみ る";
            mcs_sign_up_now             = "登録";
            mcs_input_confirm_password  = "再入力";
            mcs_warranty_registration   = "保証書登録";
            mcs_get_more_cameras        = "より多くのカメラを得てください";
            mcs_user_inactive           = "ユーザー未活性化";
            mcs_format_options          = "フォーマット";
            mcs_slide_screen            = "ビデオアングルを調整するには、画面をスライドさせ";
            mcs_zoom_in_screen          = "画面を混練すると、ビデオの詳細をズームすることができます";
            mcs_pause                   = "ポーズ";
            mcs_source                  = "ソース";
            mcs_magnetic                = "磁気";
            mcs_sos                     = "非常ボタン";
            mcs_input_download_path     = "ダウンロードパス";
            mcs_download_path_name_error = "文字のみを含めることができ、ファイルのパス名をダウンロード（-Z、A-Z）または数字（0-9";
            mcs_active                  = "アクティビティ";
            mcs_out                     = "残します";
            mcs_quiet                   = "静かな";
            mcs_scenes                  = "シーン";
            mcs_accessory               = "アクセサリー";
            mcs_quiet_mode              = "クワイエット・モード";
            mcs_active_mode             = "アクティブモード";
            mcs_out_mode                = "退席中モード";
            mcs_add_accessory           = "添付ファイルを追加します";
            mcs_accessory_type          = "アクセサリタイプ";
            mcs_add_successfully        = "追加に成功しました";
            mcs_set_scene               = "あなたの添付ファイルがまだシーンを設定していない、クリックしてください";
            mcs_to_set                  = "設定するには";
            mcs_add_accessory_button    = "赤色光がアドを完了するために、再び消えるまでボタンを押します";
            mcs_auto_monday             = "月曜";
            mcs_auto_tuesday            = "火曜";
            mcs_auto_wednesday          = "水曜";
            mcs_auto_thursday           = "木曜";
            mcs_auto_friday             = "金曜";
            mcs_auto_saturday           = "土曜";
            mcs_auto_sunday             = "日曜";
            mcs_search                  = "検索";
            mcs_format_input            = "フォーマットHDD";
            mcs_get_accessory_failed    = "添付ファイルは取得できませんでした";
            mcs_get_scene_failed        = "障害シナリオを取得";
            mcs_search_failed           = "検索が失敗します";
            mcs_add_failed              = "追加に失敗しました";
            mcs_ethernet_connect        = "イーサネット接続";
            mcs_action_click_retry      = "再試行をクリックします";
            mcs_wifi_config_failure_detail = "それとも、試すことができます";
            mcs_qrcode_connect          = "二次元コード接続";
            mcs_close_sound_prompt      = "オープンサウンドは、カメラのマイクのスピーカーの近くに携帯電話を保持する、のWi-Fi接続をするのに役立ちます";
            mcs_qrcode_prompt_title     = "図に示した動作をしてください";
            mcs_qrcode_prompt_detail    = "QRコードでカメラのレンズを正確に狙うと距離は30センチメートルことに保管してください。";
            mcs_select_wifi_prompt      = "必要なしイーサネットケーブルません";
            mcs_select_ethernet_prompt  = "イーサネットケーブルは、セットアップに必要なだけ";
            mcs_enter_config_mode_prompt = "無線LANインジケータが交互に3赤3緑のフラッシュでご確認ください。その場合は、[次へ]ボタンをクリックしてください。そうでない場合、カメラはボタンを「リセット」を押します。その後、再びのWi-Fiインジケータをチェック";
            mcs_no_enter_config_mode    = "コンフィギュレーションモードを入力しません";
            mcs_record_time             = "記録時間(秒)";
            mcs_stop_search             = "検索を停止";
            mcs_smart_wifi_setup        = "スマート無線LANのセットアップ";
            mcs_ethernet_setup          = "イーサネットの設定";
            mcs_wifi_config_restore_start = "1）必ずデバイスを作るの電源が入っています";
            mcs_wifi_config_restore_end = "2）を押してリセット穴、デバイスが回復し、60秒後に再起動しますと、自動的にコンフィギュレーションモードを開始します";
            mcs_Sense_schedule          = "シナリオ立案";
            load_succeed                = "成功のロード";
            load_fail                   = "読み込みに失敗しました";
            refresh_succeed             = "成功をリフレッシュ";
            refresh_fail                = "リフレッシュに失敗しました";
            mcs_ensure_dev_power        = "1) 必ずデバイスを作るの電源が入っています";
            all_refresh_complete        = "すべてのデータが更新されます";
            mcs_synchronize             = "シンクロナス";
            mcs_synchronize_detail      = "以下の機器や一貫性のない設定のプロファイルは、後に動作するように同期化する必要があります";
            mcs_Sense_Schedule_Set      = "シナリオ・プランニングセット";
            mcs_Sence_Schedule_detail   = "自動シーンモードを有効にした場合、システムが自動的に異なる時間にシナリオ・プランニングシナリオに応じて切り替わります";
            mcs_Scene_set               = "プロフィール";
            mcs_Scene_set_detail        = "プロファイルを有効にした場合、プロファイルは次のページで説明されて設定に従って";
            mcs_send_message            = "メッセージを送ります";
            mcs_start_recording         = "記録を開始します";
            mcs_start_capture           = "キャプチャを開始";
            mcs_turn_on_video           = "連続記録モードを終了するには、ビデオを開いてください";
            mcs_search_press_button     = "ゆっくりとインジケーターが点滅し、リリース後1秒のための戻るボタンを押してください";
            mcs_add_fail1               = "設備の短い足を付けるにキャンセルをクリックしてください再検索足を付けるリトライ";
            mcs_add_fail2               = "設備足を付ける失敗をクリックしてください再検索足を付けるリトライ";
            mcs_recording_duration      = "期間（秒）を記録します";
            mcs_settings_unsaved        = "あなたの設定は保存されませんでした";
            mcs_want_save               = "それは保存しますか？？";
            mcs_camera                  = "ビデオカメラ";
            mcs_router                  = "ルータ";
            mcs_start_up                = "スタート";
            mcs_cancle_add              = "機器は、短押しの追加のためにキャンセルされました";
            mcs_visit_photo_fail        = "アルバムを訪問する";
            mcs_camera_cell             = "相機";
            mcs_myphoto                 = "私の写真は";
            mcs_select_photo            = "アルバムを選んで";
            mcs_app_new_version         = "新バージョン";
            mcs_update_new_version      = "今すぐアップグレード";
            mcs_app_new_version_prompt  = "アプリは、新しいバージョンを持って、今すぐアップグレードアップデートのダウンロードを選択します";
            download_failed             = "ダウンロードに失敗しました";
            mcs_connect_server_prompt   = "無線LANが接続され、それは、サーバに接続されています。";
            mcs_local_search            = "局所探索";
            mcs_choose_device_type      = "デバイスの種類を選択";
            mcs_wifi_state              = "注：WIFI仕事は正常で、今おが切れてケーブル（切断線後が設備オンラインでない場合、自動的に待っててください20s上線）";
            mcs_sweep                   = "スウィープ";
            mcs_wifi_config_tip         = "ルータが、WIFI面倒を避けるために、配線";
            mcs_ethernet_config_tip     = "ルータが便利にネットを挿し込んでいないで";
            mcs_ethernet_connect_step_one = "第1歩：電源ライン1接続電源コンセント2";
            mcs_ethernet_connect_step_two = "第二歩：ルータ4接続ルータのポートとカメラのネットを通じて";
            mcs_sweep_qrcode_tip        = "カメラは携帯2次元コードをスキャンし、30センチ程度の距離を保つ";
            mcs_sound_config_tip        = "放送の音は。も選択可能としても選択";
            mcs_sosalt                  = "%@ : 非常ボタン警報(%@)";
            mcs_dooralt                 = "%@ : 磁気アラート(%@)";
            mcs_wifi_config_restore     = "ボタンを押してくださいRESET 1秒後に入ってから、「設備wifi配置モード」.";
            mcs_voice_remind_heard      = "音声ヒントが聞こえている";
            mcs_netWork_prompt          = "ネットワークヒント";
            mcs_con_netWork             = "ネットワークインターフェースの設定がジャンプする設定した場合、現在のデータ接続のために使用されているネットワークは、それは、多くのトラフィックを消費する可能性があります";
            mcs_no_netWork              = "現在、ネットワーク接続、ジャンプがネットワーク設定インターフェースを設定するかどうか";
            mcs_exception_des           = "サーバーにエラー報告を送信するかどうか、アプリの最後の例外出口、";
            mcs_exception_prompt        = "異常なヒント";
            mcs_erro_diagnosis          = "トラブルシューティング";
            mcs_erro_log_des            = "アプリの最近のレコードエラーログ、エラーログをアップロードする送信ボタンを選択し、ご協力ありがとうございました！";
            mcs_is_submitting           = "提出されました";
            mcs_firmware_version        = "ファームウェアバージョン";
            mcs_device_assembly         = "1.電力線  2.電源ポート  3.イーサネットポート  4.ケーブル  5.アダプタ";
            mcs_forgetpass_action_wizard_old = "1秒間リセットボタンを押して、デバイスは、再起動後に管理者パスワードの回復を工場出荷時の設定と60秒を復元します";
            mcs_device_assembly_mipc    = "1.電力線  2.電源ポート  3.イーサネットポート  4.ケーブル";
            mcs_device_connect_power_prompt = "設備オンラインでないので、図のように、あなたの設備のアクセス電源を電源ランプは赤信号常亮、設備は起動でき。";
            mcs_lights_sound            = "亮、ランプが見える";
            mcs_connect_power           = "接続電源";
            mcs_search_magnetic         = "図に示すように、複合磁気ドアとは、ゆっくりとインジケーターが点滅し、リリース後1秒間サイドボタンを押してください";
            mcs_add_magnetic            = "マージするドアセンサーを開いた後、インジケータは添加の完了点滅を参照してください";
            mcs_already_downloaded      = "ダウンロード";
            mcs_my_order                = "私の注文書";
            mcs_auto_mode               = "自動モード";
            mcs_new_small               = "スモール";
            mcs_new_half                = "低画質";
            mcs_new_normal              = "ノーマル画質";
            mcs_new_hd                  = "高画質";
            mcs_scene_now               = "現在の光景";
            mcs_please_install_wechat   = "インストールしてくださいWeChat";
            mcs_wechat_not_support      = "WeChatバージョン更新して下さいWeChat支持しない";
            mcs_motion_alert            = "モーション警告";
            mcs_io_alert                = "I/O 警告";
            mcs_valid_user_name         = "第一歩：有効ユーザー名を入力して下さい";
            mcs_binding_mailbox         = "第二歩：縫い付けの郵便箱に入力して下さい";
            mcs_send_mailbox_succuess_prev = "私たちはあなたへの郵便箱の郵便箱に伝わる";
            mcs_send_mailbox_succuess_next = "發送了一封密碼找回郵件，請您注意接收郵件。";
            mcs_all_image               = "すべての写真は";
            mcs_unavailable_image       = "写真は使用しないで、再選択して下さい";
            mcs_set_nickname            = "ニックネームの設定";
            mcs_search_timeout          = "検索する時には、もう一度[検索]をクリックします";
            mcs_screen_size             = "画面設定";
            mcs_screen_reset            = "設定に成功しました。カメラ再起動後有効になります";
            mcs_wifi_network_prompt     = "検査をしてくださいWiFiカメラ接続のかどうかは5GHz帯域のWiFiさせてください、カメラ接続2.4GHz帯域のWiFi";
            mcs_fault_diagnosis         = "ネットワーク診断";
            mcs_sever_diagnosis         = "サーバーが故障する可能性があり、正常に使用することはできません。";
            mcs_select_problem          = "選択問題を選択してください";
            mcs_connot_lonin            = "ログインできない";
            mcs_connot_play             = "再生できない";
            mcs_add_problems            = "付加問題";
            mcs_encounterer_problems    = "入力の問題を入力して下さい";
            mcs_diagnostic_network      = "診断を開始します";
            mcs_network_diagnostic_prompt = "ネットワーク診断に入り、私たちはあなたの遭遇の問題、診断に必要な時長約数分";
            mcs_network_diagnostic      = "トラブルシューティング";
            mcs_connecting_server       = "サーバーに接続している。。。";
            mcs_diagnostic_process_prompt = "診断プロセスは他の操作を実行しない診断中に、数分かかることがありますが、あなたは常に診断を停止することができます";
            mcs_diagnostic_results      = "診断の結果";
            mcs_diagnostic_results_received = "診断が完了すると、診断結果が受信されています";
            mcs_diagnostic_results_prompt = "この診断に参加していただきありがとうございます、診断結果は、私たちはできるだけ早くあなたの問題を解決するのに役立ちます";
            mcs_results_no_abnormality  = "診断の結果は異常ではない";
            mcs_no_abnormality_prompt   = "診断は異常は見られませんでした。あなたはより良いあなたが経験している問題を解決するために、ログ収集機能は、私たちを助ける開始し、診断の深さを選択することができます";
            mcs_continue_diagnosis      = "奥行き診断";
            mcs_diagnosis_connot_sent   = "診断の結果は発送できませんでした";
            mcs_email_sends             = "メールを送る";
            mcs_email_sends_prompt      = "電子メールで私たちに診断結果を送信し、それは、私たちはできるだけ早くあなたの問題を解決するのに役立ちます";
            mcs_diagnosis_send          = "発送";
            mcs_diagnosis_email         = "電子メール";
            mcs_send_successful         = "正常に送信";
            mcs_diagnosis_type_select_prompt = "診断の種類を選択してください";
            mcs_stop_diagnosis          = "ストップ診断";
            mcs_detail_diagnosis_prompt = "診断は、デバイスのページをオフにすることができ、進んで";
            mcs_detail_diagnosis_stop_prompt = "深診断が進行中である、あなたは常に中止することができます";
            mcs_exit_detail_diagnosis   = "深診断が停止するかどうか、進行中ですか！";
            mcs_network_connection_unavailable = "ネットワーク接続利用できない";
            mcs_Failed_connect_Internet = "インターネットへの接続に失敗しました";
            mcs_connect_internet_note   = "あなたは、インターネットに接続する必要がある場合は、次の点に注意してください。";
            mcs_connect_internet_detail_first = "お使いの携帯電話の無線LANの設定を確認し、無線LAN信号へのアクセスがあるかどうかを確認します";
            mcs_connect_internet_detail_second = "お使いの携帯電話がモバイルネットワークへのアクセスを持っている、と電話が使用不可にされていないかどうかを確認します";
            mcs_connect_wifi_note       = "あなたは無線LANへのアクセスを持っている場合：";
            mcs_connect_wifi_detail     = "お使いの無線LANホットスポット接続はインターネットへのアクセス権を持っているかどうかを確認し、またはホットスポットは、お使いの機器がLANにアクセスできるようにする場合";
            mcs_device_or_phone_time_zone_not_equals_please_select = "装置現在のタイムゾーンと、携帯電話の時間帯には、正確なタイムゾーンを選択していません";
            mcs_phone_timezone          = "電話のタイムゾーン";
            mcs_timezone_change         = "タイムゾーンを変更します。";
            mcs_mail_send               = "メッセージ送信";
            mcs_yes_verif               = "それは";
            mcs_no_verif                = "いいえ";
            mcs_camera_found_new_version_y_n_upgrade = "私たちは、アップグレードするかどうか、カメラの新しいバージョンを発見しましたか？";
            mcs_auto_adapt_split_screen = "適応";
            mcs_four_split_screen       = "4分銀幕";
            mcs_nine_split_screen       = "9分銀幕";
            mcs_twelve_split_screen     = "十二分銀幕";
            mcs_not_connection_server   = "サーバに接続できません";
            mcs_more_options            = "もっと";
            mcs_bind_email_prompt       = "セキュリティを考慮するためには、あなたのメールボックスをバインド";
            mcs_login_now               = "今すぐログイン";
            mcs_device_connect_power    = "1.電力線     2.電源ポート";
            mcs_device_connect_ethernet = "1 .ネットの口     2．ケーブル";
            mcs_device_connect_ethernet_prompt = "線の片っ端はネットの口にして、もう1つの端はルータを接続して、すでに網の口の信号が点滅して、ネットはつながって完成する。";
            mcs_pwd_format              = "パスワードのフォーマット：長さは8～16桁まで、数字、大きさはアルファベットと特殊記号で少なくとも3種類も含まれている";
            mcs_client_new              = "クライアント";
            mcs_user_guide              = "ユーザーマニュアル";
            mcs_ebitcam_download_describe = "ebitcamは1項の雲の監視サービスのソフトウェア、本ソフトウェアを使用して雲のカメラに合わせて、いつでもどこでも査看ビデオユーザー情報を提供して、私達はあなたのように、滑らかな見て体験、スマートの制御をいつでも君愛自分の家族、好きなユーザーが早く来て下載だろう！";
            mcs_mipc_download_describe  = "mipcは1項の雲の監視サービスのソフトウェア、本ソフトウェアを使用して雲のカメラに合わせて、いつでもどこでも査看ビデオユーザー情報を提供して、私達はあなたのように、滑らかな見て体験、スマートの制御をいつでも君愛自分の家族、好きなユーザーが早く来て下載だろう！";
            mcs_guide_download          = "マニュアルダウンロード";
            mcs_password_admin          = "パスワード管理";
            mcs_already_read            = "私はすでに読んで同意している";
            mcs_privacy_policy          = "プライバシーポリシー";
            mcs_not_agree_privacy_policy = "プライバシーポリシーにはまだ賛成していない";
            mcs_reload                  = "再ロード";
            mcs_start_download          = "すぐダウンロード";
            mcs_video_play_fail         = "ビデオで失敗する";
            mcs_download_app_tips       = "ご利用に使ってみて PCクライアント";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = "デバイスタイプ";
            mcs_connect_device_wifi     = "カメラはしばらく支持しません5GHz帯域のWiFi";
            mcs_send_diagnosis_results  = "診断結果の発送について…";
            mcs_local_file              = "ローカルファイル";
            mcs_local_device            = "ローカル設備";
            mcs_export_sd_data          = "SDカードのデータを導出する";
            mcs_shaking                 = "横振り機シリーズ";
            mcs_outdoor                 = "屋外機シリーズ";
            mcs_card                    = "カード機シリーズ";
            mcs_wifi_connection         = "WiFi接続";
            mcs_home_mode               = "ホームモード";
            mcs_away_home_mode          = "退席中モード";
            mcs_auto_switch_mode        = "自動的切り替え";
            mcs_select_scene_mode       = "プロファイルを選択してください";
            mcs_7x24_hours_prompt       = "オープン連続録画";
            mcs_all_day_recording       = "デイビデオ";
            mcs_home_mode_prompt        = "ホームモード：すべて閉じる機器アラーム";
            mcs_away_home_mode_prompt   = "退席中モード：すべてのデバイスのオープンアラーム";
            mcs_at_home                 = "自宅で";
            mcs_away_home               = "アウト";
            mcs_set_timezone_prompt_start = "あなたのタイムゾーンがあります";
            mcs_set_timezone_prompt_end = "タイムゾーンの設定に\"日付/時間\"切り替えてください";
            mcs_set_wifi_remind_head    = "以下の問題につながるカメラ连网失敗、提案を避ける";
            mcs_set_wifi_remind_1       = "チェックして開いたWIFI擦り網、この設定を招いてしまうかも连网カメラは正常にできない。あなたは臨時に防止することができることができて、ビデオ、ビデオカメラが成功した後にまたルータの設置を回復することができます";
            mcs_set_wifi_remind_2       = "もしお宅は双方向のルータをチェックしてくださいカメラ接続のかどうかは5GHz WIFI帯域のWIFIさせてください、カメラ接続2.4GHz帯域のWIFI";
            mcs_set_wifi_remind_3       = "しばらくWPAカメラを支持しない/ WPA2企業レベルのWIFI、他WIFIを選択してください";
            mcs_set_wifi_remind_4       = "もしお宅のWIFIはブリッジのため、ブリッジの原因を招くかもしれないあなたのネットワークが非常に不安定で、非ブリッジのWIFI提案接続";
            mcs_set_wifi_remind_5       = "カメラにWIFIに何を求めて";
            mcs_record_save_to_my_file  = "ビデオは私のファイルに保存しました";
            mcs_view_now                = "今すぐ見ます";
            mcs_search_sos_strat        = "図に示すように、一番下のボタンを押します";
            mcs_search_sos_end          = "一秒、デバイスのインジケータが点滅しています";
            mcs_search_magnetic_start   = "図に示すように、複合磁気ドアは、サイドボタンを押してください";
            mcs_search_magnetic_end     = "一秒、デバイスのインジケータが点滅しています";
            mcs_adding                  = "追加";
            mcs_record_empty_set_sd     = "SDカードを挿入すると、ビデオの履歴を保存することができます";
            mcs_video_play_offline      = "デバイスがオフラインであります";
            mcs_video_play_network_fail = "ネットワーク接続は、失敗した後にもう一度お試しください";
            mcs_alert_notify_guide1     = "【オリジナル】動き検出操作は、[によって]、[別館]にプロファイル設定を移行します";
            mcs_alert_notify_guide2     = "動作は次のとおりです";
            mcs_alert_notify_guide3     = "[シーン]は、あなたは、あなたが家の武装解除モードで開く必要がアーミングモードをオンにする必要があります。";
            mcs_alert_notify_guide4     = "[アクセサリ] - [アクセサリリスト] - [動き検出]モードは、ホームモード、ビデオ録画などの機能でアラームをオフにし、アラーム、ビデオ、写真、IOのアラーム機能の外になっています。";
            mcs_plan_protect_guide1     = "[シナリオ]に移行[オリジナル]プランアーミング操作";
            mcs_plan_protect_guide2     = "[シナリオ]を選択し、開いたプロファイル自動切り替え。";
            mcs_plan_protect_guide3     = "選択";
            mcs_plan_protect_guide4     = ", アーミング期間の必要性（例：火7：00-18：00）モードを設定し、[OK]をした後に保存し、[設定]タブに戻ります。";
            mcs_plan_record_guide       = "[録画]を選択し、モード記録機能をオンにします。";
            mcs_plan_record_guide1      = "[予約録画]に移行[録画]プランアーミング操作";
            mcs_plan_record_guide2      = "、時間を記録するための必要性は、（例えば：火曜日、7：00-18：00）モードを設定し、[OK]をした後に保存し、[設定]タブに戻ります。";
            mcs_forgetpass_action_prompt = "デバイスは、工場出荷時の設定を復元するために、10秒のリリース、赤外光や機器の後にリセット穴をリセット押してください。";
            mcs_cloud_box               = "クラウドボックス";
        }/* ja */
        else if(lang == "ko")
        {
            mcs_name                    = "이름";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "이름";
            mcs_old_nick                = "카메라 이름";
            mcs_linked                  = "링크됨";
            mcs_sign_in                 = "로그인";
            mcs_back                    = "Back";
            mcs_will_back               = "반환";
            mcs_add                     = "추가";
            mcs_add_device              = "카메라 추가";
            mcs_device_existed          = "카메라가 이미 존재합니다";
            mcs_cancel                  = "취소";
            mcs_exit                    = "로그아웃";
            mcs_remember_password       = "비밀번호 저장";
            mcs_password_remembered     = "비밀번호 저장 완료";
            mcs_sign_ining              = "로그인중...";
            mcs_cloud_server            = "클라우드 서버";
            mcs_input_device_id         = "카메라 ID 입력";
            mcs_input_username          = "사용자이름";
            mcs_input_email_addr        = "이메일주소 입력";
            mcs_email_address           = "E-mail 주소";
            mcs_email                   = "사서함";
            mcs_binding                 = "제본";
            mcs_binding_email           = "바인딩 사서함";
            mcs_binding_send_prompt     = "바인딩 사서함";
            mcs_binding_email_prompt    = "당신은 당신이 사서함으로 재설정 할 수 있습니다, 비밀번호를 잊어 버려.";
            mcs_input_password          = "비밀번호 입력";
            mcs_access_server_failed    = "서버접속 실패";
            mcs_device_offline          = "카메라가 인터넷에 연결되어 있지 않습니다";
            mcs_invalid_password        = "비밀번호 오류";
            mcs_invalid_dev             = "장치가 존재하지 않습니다";
            mcs_login_faided            = "로그인 실패";
            mcs_invalid_qrcode          = "유효하지 않은 QR-코드 입니다";
            mcs_please_input_username   = "사용자이름을 입력해 주세요";
            mcs_please_input_password   = "비밀번호 입력";
            mcs_qrcode_scan_hint        = "장치의 하단에 보관 상자는 이차원 코드를 정렬";
            mcs_device_list_empty       = "장치 목록이 비어 있습니다";
            mcs_record_list_is_empty    = "녹화리스트가 공란입니다";
            mcs_password_expired        = "비밀번호가 만료되었습니다";
            mcs_set_video_size          = "영상 화질 설정";
            mcs_hd_1280x720             = "HD화질 [1280x720]";
            mcs_auto                    = "자동";
            mcs_normal_640x360          = "중화질 [640x360]";
            mcs_half_320x180            = "저화질 [320x180]";
            mcs_small_160x90            = "최소 [160x90]";
            mcs_play                    = "영상";
            mcs_settings                = "설정";
            mcs_messages                = "알람로그";
            mcs_alarm                   = "알람";
            mcs_delete                  = "삭제";
            mcs_delete_camera           = "삭제";
            mcs_apply                   = "확인";
            mcs_speed                   = "스피드";
            mcs_others                  = "기타";
            mcs_audio                   = "오디오 볼륨";
            mcs_speaker                 = "스피커";
            mcs_mic                     = "마이크";
            mcs_power_frequency         = "전원 주파수";
            mcs_online_upgrade          = "온라인 업그레이드";
            mcs_restore_the_factory_settings = "공장 초기화";
            mcs_restore                 = "초기화";
            mcs_restore_camera          = "다시 시작 장치";
            mcs_start_upgrade           = "업그레이드 시작";
            mcs_system                  = "시스템";
            mcs_system_settings         = "시스템 설정";
            mcs_online                  = "온라인";
            mcs_offline                 = "오프라인";
            mcs_query                   = "문의";
            mcs_begin_time              = "시작 시간";
            mcs_end_time                = "종료시간";
            mcs_mode                    = "모드";
            mcs_opened                  = "사용/사용안함";
            mcs_high                    = "높음";
            mcs_middle                  = "보통";
            mcs_low                     = "낮음";
            mcs_io_alert_input          = "I/O 입력";
            mcs_io_alert_output         = "I/O출력";
            mcs_normally_open           = "항상 사용";
            mcs_normally_close          = "항상 사용안함";
            mcs_motion_detection_sensitivity = "모션감지 감도";
            mcs_daytime                 = "주간";
            mcs_night                   = "야간";
            mcs_sdcord                  = "SD 카드";
            mcs_storage_device          = "저장 장치";
            mcs_set_mask                = "세트 마스크";
            mcs_status                  = "상태";
            mcs_capacity                = "전체용량";
            mcs_usage                   = "사용중";
            mcs_format                  = "포멧";
            mcs_repair                  = "해결";
            mcs_formating               = "포멧 중";
            mcs_repairing               = "수복 중";
            mcs_mounted                 = "접속";
            mcs_unmounted               = "SD카드 접속해제";
            mcs_mount                   = "접속";
            mcs_unmount                 = "접속해제";
            mcs_ethernet                = "이더넷";
            mcs_wifi                    = "Wi-Fi";
            mcs_enabled                 = "적용";
            mcs_mac_address             = "MAC주소";
            mcs_network_status          = "네트워크 상태";
            mcs_wifi_mode               = " Wi-Fi 모드";
            mcs_client                  = "클라이언트";
            mcs_ap                      = "AP";
            mcs_start_address           = "시작 IP";
            mcs_end_address             = "종료 IP";
            mcs_gateway                 = "게이트웨이";
            mcs_select_network          = "네트워크(SSID) 선택";
            mcs_dhcp_ip                 = "자동으로 IP주소 받기";
            mcs_dhcp_dns                = "DNS 자동받기";
            mcs_ip_address              = "IP주소";
            mcs_network_mask            = "네트워크 마스크";
            mcs_input_secondary_dns     = "보조 DNS";
            mcs_secondary_dns           = "DNS 서버";
            mcs_input_dns               = "DNS 입력";
            mcs_input_alternate_dns     = "대체 DNS 입력";
            mcs_input_ip                = "IP 주소 입력";
            mcs_input_gateway           = "게이트웨어 입력";
            mcs_input_network_mask      = "네트워크 마스크 입력";
            mcs_wifi_list               = " Wi-Fi 리스트";
            mcs_display_date            = "날짜표시";
            mcs_date_format             = "날짜 형식";
            mcs_display_time            = "시간 표시";
            mcs_time_format             = "시간 형식";
            mcs_24_hour                 = "24시간";
            mcs_12_hour                 = "12시간";
            mcs_display_weeks           = "주간 표시";
            mcs_date_time               = "날짜/시간";
            mcs_set_time                = "시간설정";
            mcs_set_week                = "주간설정";
            mcs_stream                  = "스트림";
            mcs_encode                  = "엔코드";
            mcs_resolution              = "해상도";
            mcs_frame_fate              = "프레임 레이트";
            mcs_maximum_bitrate         = "최대 비트레이트";
            mcs_minimum_bitrate         = "최소 비트레이트";
            mcs_i_frame_interval        = "프레임 인터벌";
            mcs_video                   = "영상";
            mcs_sampling_rate           = "샘플링 레이트(kHz)";
            mcs_nickname                = "카메라 이름";
            mcs_old_password            = "기존 비밀번호";
            mcs_confirm_password        = "비밀번호 확인";
            mcs_modify_password         = "비밀번호 변경";
            mcs_password                = "비밀번호";
            mcs_admin_password          = "관리자 암호";
            mcs_guest_password          = "방문자 암호";
            mcs_product_info            = "카메라 정보";
            mcs_software_version        = "소프트웨어 버전";
            mcs_device_id               = "카메라 ID";
            mcs_operation               = "작동";
            mcs_record                  = "녹화";
            mcs_record_2                = "녹화";
            mcs_upgrade_now             = "즉시 업그레이드";
            mcs_upgrading               = "업그레이드 중";
            mcs_already_latest_version  = "최신 업그레드입니다";
            mcs_sensitivty              = "감도";
            mcs_user_defined            = "사용자 정의";
            mcs_time                    = "시간";
            mcs_date                    = "Day";
            mcs_finish                  = "완료";
            mcs_delete_fail             = "삭제하는 데 실패했습니다";
            mcs_motion                  = "모션감지";
            mcs_start                   = "시작";
            mcs_talk                    = "토크";
            mcs_password_input_inconsistent = "비밀번호 오류입니다";
            mcs_input_6_to_20_litters   = "입력 6-20 글자 (A-Z, A-Z) 또는 숫자 (0-9)";
            mcs_user_letter_range_hint  = "계정 6-32 자리 를 (0-9) 또는 자모의 (a-z, A-Z) 으로 시작하는 필요한 자모";
            mcs_password_range_hint     = "비밀번호는6-32자리의 문자와 숫자입니다";
            mcs_begin_with_the_letters  = "숫자를 포함한 문자로 시작합니다";
            mcs_sign_up                 = "등록";
            mcs_sign_up_failed          = "등록 실패";
            mcs_successful_sign_up      = "등록 성공";
            mcs_are_you_sure_delete     = "삭제를 확인합니까?";
            mcs_failed_to_set_the       = "설정 실패";
            mcs_set_successfully        = "설정 성공";
            mcs_downloading             = "다운로드 중";
            mcs_wrote                   = "입력";
            mcs_visit_again_later       = "잠시후 다시 로그인 하십시오 ";
            mcs_restart_failed          = "재시작 실패";
            mcs_upgrade_failed          = "업데이트 실패";
            mcs_connnected              = "접속됨 ";
            mcs_connnected_to           = "에 접속";
            mcs_not_select              = "선택 안됨";
            mcs_message_list            = "메세지 리스트";
            mcs_saved_password          = "비밀번호 저장";
            mcs_alert                   = "경보";
            mcs_no_record               = "영상 없음";
            mcs_new_about               = "업데이트 : 관하여";
            mcs_device                  = "카메라";
            mcs_config                  = "설정";
            mcs_change_password_failed  = "비밀번호 변경 실패";
            mcs_do_you_want_restart     = "재시작 하겠습니까?";
            mcs_do_you_want_restore     = "공장초기화를 실행합니까?";
            mcs_do_you_want_upgrade     = "업그레이드를 실행합니까?";
            mcs_load_end                = "데이터 로딩 완료";
            mcs_loading                 = "로딩중...";
            mcs_down_refresh            = "아래로 내리면 리플레쉬 합니다";
            mcs_release_refresh         = "새로 고침 출시";
            mcs_refreshing              = "새로 고침";
            mcs_release_then_loading_data_hint = "놓으면 로드 됩니다";
            mcs_pull_refresh_hint       = "위로 올리면 리플레쉬 합니다";
            mcs_restarting              = "재시작 중";
            mcs_upgraded_time           = "업그레이드 시간: ";
            mcs_done                    = "완료";
            mcs_playback                = "녹화재생";
            mcs_i_o_alarm               = "I/O 경보";
            mcs_alarm_action            = "알람 설정";
            mcs_alarm_sources           = "알람 방식";
            mcs_io_output               = "I/O 출력";
            mcs_snapshots               = "스냅샷";
            mcs_snapshot                = "스냅샷";
            mcs_snapshot_interval       = "스냅샷 인터벌(초)";
            mcs_pre_record_length       = "사전 녹화(초)";
            mcs_nick_range_hint         = "카메라 이름은 20자 이내 입니다";
            mcs_save                    = "저장";
            mcs_close                   = "닫힘";
            mcs_snapshoting             = "사진 촬영";
            mcs_snapshot_failed         = "스냅샷 실패";
            mcs_record_failed           = "녹화실패";
            mcs_saved_successfully      = "저장 성공";
            mcs_save_failed             = "저장 실패";
            mcs_restart_to_take_effect  = "리부팅후에 적용 됩니다";
            mcs_please_allow_access_album = "MIPC 포토 앨범에 접속을 허용해주세요.";
            mcs_please_allow            = "소요 ";
            mcs_access_album            = " 사진 앨범에 액세스 할 수";
            mcs_ios_privacy_setting_for_photo_prompt = "iPhone의\"설정->개인적->사진\"에 프로그램\"";
            mcs_execute_change          = "\" 를 찾아내고 변경할 수 있다.";
            mcs_access_camera           = " 카메라에 액세스 할 수";
            mcs_please_allow_access_camera = "MIPC의 카메라 접속을 허용합니다 ";
            mcs_ios_privacy_setting_for_camera_prompt = "iPhone의\"설정->개인적->사진\"에 카메라\"";
            mcs_busy_when_write         = "데이터 레코딩중";
            mcs_unknown_error           = "알 수 없는 오류";
            mcs_i_know                  = "이해 했습니다";
            mcs_segment                 = "비디오 파일";
            mcs_please_relogin          = "다시 로그하세요";
            mcs_change_password_succeed = "비밀번호 변경 성공";
            mcs_upgrade_to_ver          = "새버전으로 업그레이드";
            mcs_restore_failed          = "공장초기화 실패";
            mcs_please_restart          = "리부팅";
            mcs_keep_network_settings   = "예약 네트워크 설정 및 암호";
            mcs_not_connected           = "연결안됨";
            mcs_sdcard_not_ready        = "SD카드가 없습니다";
            mcs_device_not_exist        = "카메라가 존재하지 않습니다";
            mcs_disable                 = "사용안함";
            mcs_to_determine_the        = "확인합니까?";
            mcs_alert_on                = "알람 ON";
            mcs_alert_off               = "알람 OFF";
            mcs_alert_onoff             = "무장 On/Off";
            mcs_monday                  = "월요일";
            mcs_tuesday                 = "화요일";
            mcs_wednesday               = "수요일";
            mcs_thursday                = "목요일";
            mcs_friday                  = "금요일";
            mcs_saturday                = "토요일";
            mcs_sunday                  = "일요일";
            mcs_mon                     = "월";
            mcs_tue                     = "화";
            mcs_wed                     = "수";
            mcs_thu                     = "목";
            mcs_fri                     = "금";
            mcs_sat                     = "토";
            mcs_sun                     = "일";
            mcs_scheduled_recording     = "스케쥴 녹화";
            mcs_schedule                = "스케쥴";
            mcs_scheduled_recording_status = "스케쥴녹화 상태";
            mcs_folding                 = "닫음";
            mcs_unfolding               = "생성";
            mcs_end_time_should_lt_begin = "종료시간은 시작시간보다 이후여야 합니다";
            mcs_recording               = "녹화중";
            mcs_prerecord_interval_range_hint = "사전녹화는 6초 이내입니다 ";
            mcs_snapshot_interval_range_hint = "스냅샷촬영 인터벌은 0이상 60이하 입니다";
            mcs_not_ready               = "준비되지 않았습니다";
            mcs_availablesize           = "사용가능 용량";
            mcs_reboot                  = "리부팅";
            mcs_alerter                 = "알람";
            mcs_pir                     = "인체감응";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "엔코더";
            mcs_ok                      = "OK";
            mcs_fault                   = "에러";
            mcs_sensor_status           = "센서상태";
            mcs_about                   = "정보";
            mcs_reset_now               = "즉시 리셋";
            mcs_reset_later             = "나중에 리셋";
            mcs_prompt                  = "알림";
            mcs_select                  = "선택";
            mcs_available_netword       = "네트워크 접속안됨, 설정을 변경합니까?";
            mcs_request_send            = "요청 발송중";
            mcs_blank_device_id         = "카메라ID를 입력하세요";
            mcs_blank_username          = "사용자 이름을 입력하세요";
            mcs_blank_password          = "비밀번호를 입력하세요";
            mcs_exist_user              = "이미 존재하는 사용자입니다";
            mcs_invalid_user            = "유효하지 않는 사용자 이름입니다";
            mcs_invalid_email_addr      = "유효하지 않는 이메일 주소입니다";
            mcs_system_err              = "시스템오류";
            mcs_exceed_device           = "카메라 동시 접속자가 초과하였습니다";
            mcs_continue                = "계속";
            mcs_prompt_exit             = "혹시 종료?";
            mcs_device_list             = "장치 목록";
            mcs_no_sdcard               = "SD카드 없음";
            mcs_no_hard_disk            = "어떤 하드 드라이브가 포함되지 않음";
            mcs_show_more               = "더보기...";
            mcs_shotsnop_exists         = "이미 존재하는 사진입니다";
            mcs_input_nick              = "카메라이름 입력";
            mcs_nick_not_empty          = "카메라이름을 입력하세요";
            mcs_input_new_pass          = "비밀번호 입력";
            mcs_input_new_pass_again    = "새로운 비밀번호 재입력";
            mcs_new_password            = "새로운 비밀번호";
            mcs_modify_network_prompt   = "변경후 카메라가 재시작 합니다";
            mcs_wifi_disable_prompt     = " Wi-Fi 사용안함, 계속합니까?";
            mcs_eth_disable_prompt      = "이더넷 사용안함, 계속합니까?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "DHCP";
            mcs_manually_set            = "수동 설정";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "기본 DNS";
            mcs_client_mode             = "클라이언트 모드";
            mcs_adhoc_mode              = "애드호크";
            mcs_connect_fail            = "연결 실패";
            mcs_dhcp_server             = "DHCP서버";
            mcs_display_text            = "화면이름 표시";
            mcs_repair_prompt_detail    = "SD카드를 수리하면 일부 데이터가 손실될 수 있습니다,계속합니까?";
            mcs_format_prompt_detail    = "포멧을 하면 SD카드의 데이터가 삭제됩니다. 계속합니까?";
            mcs_mount_prompt            = "SD카드를 접속합니다. 계속합니까?";
            mcs_umount_prompt           = "SD카드 접속해제후 영상과 사진이 SD카드에 저장되지 않습니다. 계속합니까?";
            mcs_sdcard_reset            = "설정완료, 적용을 위해 카메라를 리부팅합니다. 계속합니까?";
            mcs_sdcard_repairing        = "수리중, 재부팅을 기다리세요";
            mcs_sdcard_formating        = "포멧중, 리부팅을 기다리세요";
            mcs_sdcard_umount           = "SD카드 접속해제";
            mcs_valid                   = "사용가능";
            mcs_io                      = "IO알람";
            mcs_input                   = "입력";
            mcs_outinput                = "출력";
            mcs_prompt_alert_on         = "경보 On. 계속합니까?";
            mcs_auto_sync_date_time     = "셀신";
            mcs_alarm_record            = "알람 영상";
            mcs_username                = "사용자 이름";
            mcs_re_enter_the_password   = "비밀번호 재입력";
            mcs_remember_me             = "로그인 상태유지";
            mcs_home                    = "Home";
            mcs_install_the_plug        = "플러그인 설치";
            mcs_install_the_video_plug  = "영상 플러그인 설치";
            mcs_install_now             = "즉시 설치";
            mcs_temporarily_installed_use_ordinary_video = "다음에 설치";
            mcs_brightness              = "밝기";
            mcs_contrast                = "명암";
            mcs_color_saturation        = "채도";
            mcs_sharpness               = "선명도";
            mcs_duration                = "재생시간";
            mcs_index                   = "번호";
            mcs_remark                  = "비고";
            mcs_media_stream            = "미디어";
            mcs_server                  = "서버";
            mcs_media_transfer          = "미디어 전송";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "제조자";
            mcs_model                   = "식별코드";
            mcs_plugin_version          = "플러그인 버전";
            mcs_network_interface       = "네트워크";
            mcs_transfer_protocol       = "전송 프로토콜";
            mcs_year                    = "년";
            mcs_month                   = "월";
            mcs_day                     = "날";
            mcs_hour                    = "시간";
            mcs_minute                  = "분";
            mcs_second                  = "초";
            mcs_millisec                = "밀리 초";
            mcs_ntp                     = "타임 서버";
            mcs_upload_upgrade          = "업그레이드 업로드";
            mcs_stop                    = "정지";
            mcs_info_rewind             = "뒤로";
            mcs_fast_forward            = "앞으로";
            mcs_previous_frame          = "이전 프레임";
            mcs_next_frame              = "다음 프레임";
            mcs_record_audio            = "오디오녹음";
            mcs_week                    = "주간";
            mcs_all                     = "전체";
            mcs_id                      = "ID";
            mcs_select_all              = "모두 선택";
            mcs_call                    = "Call";
            mcs_activation              = "활성화";
            mcs_caption                 = "업로드 파일";
            mcs_alarm_device            = "모션감도";
            mcs_not_installed           = "설치되지 않음";
            mcs_join_us_now             = "지금 가입";
            mcs_reconnect_please_wait   = "재연결중, 기다리세요";
            mcs_erasing                 = "삭제중";
            mcs_writing                 = "저장중";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "새로운 버전이 있습니다";
            mcs_equipment_flip          = "화면반전";
            mcs_device_status           = "카메라 상태";
            mcs_audio_setting           = "오디오 설정";
            mcs_nick_modify             = "카메라 이름변경";
            mcs_ready                   = "준비됨";
            mcs_full                    = "가득 참";
            mcs_connecting              = "연결중";
            mcs_message_buffering       = "버퍼링";
            mcs_upgrade_finish          = "업그레이드 완료";
            mcs_image                   = "이미지";
            mcs_bar                     = "로그";
            mcs_init                    = "초기화";
            mcs_confirm_new_password    = "새로운 비밀번호 확인";
            mcs_continue_switch_wireless_network = "네트워크 전환으로 접속이 중단될수 있습니다. 계속합니까?";
            mcs_restore_factory_settings_prompt = "카메라가 공장초기화 됩니다. 계속합니까?";
            mcs_username_does_not_exis  = "사용자이름이 존재하지 않습니다";
            mcs_username_already_exists = "존재하는 사용자이름 입니다";
            mcs_successful_whether_login = "가입성공, 로그인 하겠습니까?";
            mcs_username_demand         = "6-20자리의 문자또는 숫자";
            mcs_the_password_is_empty   = "비밀번호가 입력되지 않았습니다";
            mcs_password_demand         = "6-20자리의 문자또는 숫자";
            mcs_password_empty          = "비밀번호를 재입력하세요";
            mcs_two_password_input_inconsistent = "비밀번호가 일치하지 않습니다";
            mcs_the_user_name_is_empty  = "사용자 이름이 입력되지 않았습니다";
            mcs_upgrade_to_the_latest_version = "최신버전으로 업그레이드";
            mcs_subnet_mask_wrong_format = "네트워크 마스크 형식오류";
            mcs_upgrade_successful_restart_to_take_effect = "업그레이드 성공, 을 적용하려면 장치를 다시 시작.";
            mcs_need_to_restart_the_camera_to_take_effect = "을 적용하려면 장치를 다시 시작";
            mcs_not_allowed_close_two_network_cards = "이더넷과 Wi-Fi를 동시에 사용중지 할수 없습니다";
            mcs_modified_successfully   = "수정 성공";
            mcs_connection_successfully = "연결됨";
            mcs_connection_is_interrupted = "연결 중단";
            mcs_devices_in_the_account_overrun = "동시 접속자 초과 ";
            mcs_format_error            = "포멧오류";
            mcs_change                  = "변경";
            mcs_refresh                 = "갱신";
            mcs_connect                 = "연결";
            mcs_upgrade                 = "업그레이드";
            mcs_activate                = "활성화";
            mcs_filter                  = "정렬";
            mcs_reset                   = "초기화";
            mcs_prompt_alert_off        = "경계 Off, 계속합니까?";
            mcs_invalid_server          = "유효하지 않은 타임서버 ";
            mcs_upgrade_prompt          = "장치의 소프트웨어를 업그레이드합니다. 계속?";
            mcs_restart_prompt          = "다시 시작 장치, 계속?";
            mcs_repeat                  = "반복";
            mcs_scheduled_one           = "스케쥴녹화 1";
            mcs_scheduled_two           = "스케쥴녹화 2";
            mcs_scheduled_three         = "스케쥴녹화 3";
            mcs_scheduled_four          = "스케쥴녹화 4";
            mcs_more                    = "더보기";
            mcs_leave                   = "놓으면 더 많이 표시됩니다";
            mcs_qrcode_scan             = "QR코드 스캔";
            mcs_inserted                = "삽입됨";
            mcs_removed                 = "제거됨";
            mcs_upgrade_init            = "업그레이드 시작";
            mcs_upgrade_download        = "업그레이드 다운로드";
            mcs_check                   = "업그레이드 확인";
            mcs_audio_encoder_config    = "오디오 코덱";
            mcs_video_codec             = "비디오 코덱";
            mcs_download                = "다운로드";
            mcs_client_download         = "클라이언트 다운로드";
            mcs_for_more_clarity_smooth_video_experience = "자연스러운 고해상도 지원 ";
            mcs_network                 = "네트워크";
            mcs_mobile_client_download  = "모바일 클라이언트 다운로드";
            mcs_readonly                = "읽기 전용";
            mcs_please_exit_and_relogin = "로그아웃 후에 다시 로그인하세요";
            mcs_add_device_failed       = "카메라추가 실패";
            mcs_set_password            = "암호 변경";
            mcs_7x24_hours              = "매일녹화(24시간)";
            mcs_mtalt                   = "%@ : 모션감지 경보";
            mcs_ioalt                   = "%@ : I/O 경보";
            mcs_time_zone               = "타임존";
            mcs_select_time             = "시간 선택";
            mcs_now                     = "현재";
            mcs_mipc_have_alert_notification = "MIPC 경보 알림";
            mcs_notification_center     = "알림 센터";
            mcs_sound                   = "소리";
            mcs_vibration               = "진동";
            mcs_clear_cache             = "캐시 삭제";
            mcs_clear_cache_hint        = "캐시를 삭제 하시겠습니까?";
            mcs_successfully_cleared_cache = "캐시삭제 성공";
            mcs_app_except_exit_hint    = "죄송합니다, 프로그램에 예외가 발생하여 종료됩니다.";
            mcs_rate_us                 = "등급 표시";
            mcs_password_too_simple_hint = "암호의 보안수준이 낮습니다. 높은 보안의 암호로 수정하세요";
            mcs_check_for_new_version   = "새 버전 확인";
            mcs_contact_us              = "연락주십시오";
            mcs_buffer_time             = "버퍼링 타임";
            mcs_default                 = "초기화";
            mcs_alarmed_devices         = "경보장치";
            mcs_aec                     = "울림 제거";
            mcs_permission_denied       = "권한이 거부되었습니다";
            mcs_full_screen             = "전체 화면";
            mcs_forgot_your_password    = "비밀번호 찾기";
            mcs_your_email              = "귀하의 이메일";
            mcs_sign_up_confirmation    = "확인메일이 귀하의 이메일 주소로 발송되었습니다. 본 이메일에서 링크를 클릭하면 계정이 활성화 됩니다..";
            mcs_recovery_prompt         = "전자 메일 주소 (사용자 이름)을 입력하십시오, 귀하의 비밀번호 재설정을 안내하는 이메일을 발송하겠습니다.";
            mcs_password_reset_confirmation = "암호재설정을 위한 이메일이 발송되었습니다. 비밀번호 재설정 안내를 참조하세요";
            mcs_recovery_fail_no_mail   = "귀하의 계정에 이메일 주소가 없으므로 비밀번호를 전송할 수 없습니다. ";
            mcs_recovery_fail_invalid_link = "비밀번호 복구실패, 비밀번호 복구 이메일의 안내를 다시 확인해 주세요";
            mcs_recovery_ok_login       = "비밀 번호 복구 성공. 로그인하세요.";
            mcs_active_ok_login         = "계정이 활성화 되었습니다. 로그인 하세요.";
            mcs_active_fail_invalid_link = "계정 활성화 실패. 다시 시도해 주세요";
            mcs_login_fail_inactive     = "계정이 비활성화 상태입니다. 새로운 계정가입을 위한 안내를 따라주세요.";
            mcs_sign_up_again           = "재가입";
            mcs_press_start_talk        = "누른후 통화";
            mcs_release_stop_talk       = "정지 해제";
            mcs_delete_device           = "삭제";
            mcs_success_removed_equipment = "성공적으로 장치 삭제";
            mcs_remove_equipment_failure = "장비 고장 제거";
            mcs_device_busy             = "카메라가 사용 중입니다";
            mcs_keep_testing            = "테스트 계속";
            mcs_notify_tone             = "알림 벨소리";
            mcs_float_video             = "팝업 비디오 사용";
            mcs_float_position          = "팝업 비디오 위치";
            mcs_video_resolution        = "비디오 해상도";
            mcs_float_resolution        = "팝업 비디오 해상도";
            mcs_top_left                = "왼쪽 위";
            mcs_top_right               = "오른쪽 위";
            mcs_bottom_left             = "왼쪽 아래";
            mcs_bottom_right            = "오른쪽 아래";
            mcs_action_next             = "다음";
            mcs_action_cancel           = "취소";
            mcs_action_retry            = "재시도";
            mcs_action_add              = "추가";
            mcs_is_add                  = "추가할지 여부";
            mcs_action_apply            = "적용";
            mcs_action_config           = "설정";
            mcs_action_skip             = "건너 뛰기";
            mcs_action_ok               = "확인";
            mcs_action_add_device       = "카메라 추가";
            mcs_action_modify_password  = "비밀번호 변경";
            mcs_action_config_wifi      = "무선 랜 설정";
            mcs_state_connect_device    = "카메라 연결";
            mcs_state_connect_device_fail = "카메라 연결실패 ";
            mcs_state_wait_device_online = "카메라 온라인을 대기 중";
            mcs_state_device_online     = "온라인";
            mcs_state_success           = "성공";
            mcs_fail                    = "실패";
            mcs_delete_success          = "삭제 성공";
            mcs_state_add_device_success = "카메라 추가 성공";
            mcs_state_add_device_fail   = "장치 고장을 쓰";
            mcs_state_modify_pass_success = "암호변경 성공";
            mcs_state_modify_pass_fail  = "암호변경 실패";
            mcs_state_config_wifi_success = "Wi-Fi설정 성공";
            mcs_state_config_wifi_fail  = "연결 실패";
            mcs_state_connecting_to     = "에 연결";
            mcs_network_connect_type    = "장치는 장치의 전원이 켜져 있는지 확인하고 네트워크 연결을 선택, 온라인으로되지 않습니다 :";
            mcs_prompt_modify_passwd    = "보안상의 이유로, 장치의 기본 암호를 변경합니다. 새 암호는 최소 6 자 이상이어야합니다";
            mcs_prompt_config_wifi      = "장치가 여전히 무선 랜에 연결되어 있지 않은, 당신의 Wi-Fi 인터넷을 구성하십시오";
            mcs_step1_check_connect     = "1 단계 : 카메라 후면의 랜포트와 공유기 후면의 비어있는 랜포트를 랜케이블로 각각 연결하세요";
            mcs_first_step_ethernet_connect = "2 단계 : 라우터 및 카메라에 이더넷 케이블을 연결합니다.";
            mcs_step2_check_connect     = "2 단계 : 카메라의 전원을 켭니다.";
            mcs_second_step_ethernet_connect = "1 단계 : 장치 확인은 전원이 켜져.";
            mcs_hint_check_network      = " 참고 : 시작이 완료되면 카메라를 시작, 약 50 초 정도, 상태 2 3 초마다 카메라가 온라인을 의미하는 녹색 등이 깜박 세 번 조명 마법사는 자동으로 다음 단계를 입력합니다.";
            mcs_the_end                 = "끝";
            mcs_hint_password_expired   = "암호가 만료 된, 제발 장치를 다시 추가";
            mcs_hint_remove_ethernet    = "비고 : Wi-Fi가 연결되었습니다. 공유기에 연결된 카메라의 랜케이블을 분리 할수 있습니다";
            mcs_gateway_format_incorrect = "게이트웨이 주소 형식이 잘못되었습니다";
            mcs_dns_format_incorrect    = "DNS 주소 형식이 잘못되었습니다";
            mcs_subnet_mask_format_incorrect = "부분망 마스크 주소의 형식이 잘못되었습니다.";
            mcs_ip_format_incorrect     = "IP 주소 형식이 잘못되었습니다";
            mcs_login_sucess            = "로그인 성공";
            mcs_donot_remind            = "저장 안함";
            mcs_clear_cache_signout_hint = "캐시 삭제후 로그인을 다시해야 합니다. 계속합니까?";
            mcs_devlist_adddev_hint     = "장비를 추가 하시려면 이곳을 클릭하세요";
            mcs_devlist_menu_hint       = "해상도를 설정하려면 여기를 클릭하십시오";
            mcs_update_failed           = "업그레이드 실패";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "지방의";
            mcs_set_npapi               = "만약 플러그인 설치 의해, 방문해 주십시오 \'chrome://flags/#enable-npapi\', NPAPI 가능, ";
            mcs_set_win32k              = "방문 \'chrome://flags/#enable-win32k-renderer-lockdown\', 장애인 Win32k를 렌더러 잠금,";
            mcs_restart_browser         = "브라우저를 다시 시작";
            mcs_download_location       = "다운로드 위치";
            mcs_Networking_mode         = "네트워킹";
            mcs_wifi_intelligent_configuration = "와이파이 연결";
            mcs_ethernet_configuration  = "이더넷 연결";
            mcs_wifi_connect            = "연결";
            mcs_hard_disk               = "하드 디스크";
            mcs_wifi_is_connection      = "연결, 기다려주십시오...";
            mcs_wifi_intelligent_configuration_setup_ailure = "와이파이 지능형 구성 설정 오류";
            mcs_box_list                = "목록 상자";
            mcs_repair_disk_prompt      = "복구 디스크 는 일부 데이터를 손실 할 수 있습니다, 계속?";
            mcs_format_disk_prompt      = "포맷 디스크 삭제됩니다. 모든 데이터를 계속?";
            mcs_scheduled_alerting      = "계획 전초선을 치다";
            mcs_scheduled_alerting_one  = "계획 전초선을 치다 1";
            mcs_scheduled_alerting_two  = "계획 전초선을 치다 2";
            mcs_scheduled_alerting_three = "계획 전초선을 치다 3";
            mcs_scheduled_alerting_four = "계획 전초선을 치다 4";
            mcs_wifi_config_cancle      = "무선 랜 구성 취소";
            mcs_wifi_config_prepare     = "설정 준비";
            mcs_wifi_config_first       = "장치 및 이동 전화와 라우터 1 ㎛의 범위로 유지";
            mcs_wifi_config_second      = "무선 랜을 구성 할 때, 장치는 네트워크 케이블을 연결하지 수";
            mcs_wifi_config_third       = "1 초 후 해제 리셋 리셋 구멍을 눌러";
            mcs_wifi_config_success     = "구성 성공";
            mcs_wifi_config_failure     = "구성 실패";
            mcs_failure_prompt          = "다시 시도하거나 올바르게 입력 와이파이 암호를 확인하기 위해 보내 주시기 바랍니다";
            mcs_display_password        = "비밀번호 표시";
            mcs_action_smart_config_wifi = "구성 마법사";
            mcs_wifi_invalid            = "당신의 네트워크는 무선 랜을하지 와이파이 연결하십시오입니다";
            mcs_phone_not_connect_wifi  = "무선 네트워크가 연결되지";
            mcs_prompt_check_connection = "카메라가 온라인이 아닙니다. 카메라의 연결상태를 확인해 주세요";
            mcs_wifi_cfg_ready          = "준비된";
            mcs_reset_complete          = "재설정 완료";
            mcs_how_to_restore_factory_settings = "기본 설정을 복원하는 방법 : 10 초 이상 카메라의 하단에있는 리셋 구멍을 눌러 리셋 핀을 사용";
            mcs_forgetpass_action_wizard = "좀 길게 따라 장치 Reset 리셋 공 10초 후에 놓다, 당신이 들은 것이다 장치 음성 안내 \'복구 출하 설정 \".";
            mcs_prompt_check_device_connection = "장치가 온라인 상태가 아닌, 장치를 연결하는 배선을 확인";
            mcs_prompt_select_device_connection = "당신의 장치 안 - 선택하십시오. 네트워크에 연결하다 방식";
            mcs_input_wifi_name         = "제발 입력 와이파이 이름";
            mcs_action_previous         = "이전";
            mcs_io_alert_range_hint     = "IO 경고 시간은 60 초 미만이어야한다";
            mcs_io_alert_time           = "IO 알람 시간(초)";
            mcs_smart                   = "똑똑한";
            mcs_plan                    = "계획";
            mcs_mute                    = "음소거";
            mcs_wind_speed              = "풍속";
            mcs_one                     = "하나의 기어";
            mcs_two                     = "두 기어";
            mcs_three                   = "세 기어";
            mcs_purify_mode             = "모드를 정화";
            mcs_video_list              = "동영상 목록";
            mcs_wifi_cfg_restore_factory_settings = "장치에 가까운 휴대 전화를 잡고 장치가 무선 랜을 구성한 경우, 다음 1 초 동안 리셋 구멍을 보도 자료, 장치가 공장 설정으로 복원하고 자동으로 다시 시작";
            mcs_mask_settings           = "마스크 설정";
            mcs_notification_settings   = "알림 설정";
            mcs_alarm_settings          = "알람 설정";
            mcs_motion_detection        = "모션 감지";
            mcs_io_alarm                = "I/O 알람";
            mcs_connect_status          = "연결 상태";
            mcs_motion_notification     = "경고 및 알림";
            mcs_device_connected        = "장치가 연결된";
            mcs_start_spray             = "분사 시작?";
            mcs_available_network       = "네트워크를 사용할 수없는, 체크 네트워크";
            mcs_select_wifi_wizard      = "먼저 무선 네트워크를 선택하세요";
            mcs_input_wifi_password     = "입력 무선 랜 암호";
            mcs_device_admin_password   = "장치 관리자 암호";
            mcs_device_guest_password   = "장치 손님 암호";
            mcs_user_admin_password     = "사용자 관리자 암호";
            mcs_user_guest_password     = "사용자 게스트 암호";
            mcs_save_network_set        = "네트워크 설정 및 암호 저장";
            mcs_nickname_not_set        = "카메라 별명이 설정되어 있지 않습니다";
            mcs_current_wifi            = "현재 와이파이";
            mcs_current_password_strength = "현재 암호 강도";
            mcs_new_password_strength   = "새로운 암호 강도";
            mcs_needs_to_open_the_DHCP  = "라우터는 시도가 실패 할 경우, 기능 (자동으로 IP를 얻을), 관리자에게 문의하십시오 DHCP를 열 필요가있다.";
            mcs_picture                 = "그림";
            mcs_quality                 = "품질";
            mcs_size                    = "크기";
            mcs_guest_login             = "고객 로그인";
            mcs_audio_and_video         = "오디오 / 비디오";
            mcs_volume                  = "체적";
            mcs_smooth                  = "부드러운";
            mcs_clear                   = "명확한";
            mcs_handsfree               = "핸즈프리";
            mcs_headphone               = "헤드폰";
            mcs_my                      = "나의";
            mcs_customer_service        = "고객 서비스";
            mcs_firefox_flash_uninstall = "플래시 플러그인을 사용할 수없는,이 솔루션은 https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work를 참조하시기 바랍니다";
            mcs_plug                    = "위젯";
            mcs_plug_load               = "로드 플러그인";
            mcs_plug_load_refuse        = "플러그인을로드하지 마십시오";
            mcs_plug_load_auto          = "자동적 인";
            mcs_option                  = "옵션";
            mcs_option_ok               = "결정";
            mcs_voice_call_fails        = "음성 호출은 네트워크 확인 실패";
            mcs_umounted_prompt         = "혹시 마운트?";
            mcs_mounted_prompt          = "마운트할지 여부?";
            mcs_format_prompt           = "포맷할지 여부?";
            mcs_repair_prompt           = "핫픽스 여부?";
            mcs_signup_prompt           = "새로 온?";
            mcs_wifi_connect_sucess_prompt = "비고: Wi-Fi 정상 근무, 지금 수 네트워크 연결 끊기";
            mcs_manual_input_prompt     = "수동 입력 장치 ID";
            mcs_qrscan_prompt           = "당신 아직 이 프로그램을 액세스할 수 카메라, 좀 아이폰 ’ 설정 \'－ ’ 프라이버시 ’ － ’ 카메라 ’ 기능 에서 찾을 Vimtag 이름 위해 ’ ‘ 프로그램을 변경할 수 있습니다.";
            mcs_select_network_style    = "선택 네트워크 연결 방식:";
            mcs_push                    = "발표";
            mcs_connect_power_prompt    = "비고: 장치 안 -, 먼저 확보한 전원 연결됨";
            mcs_fail_microphone         = "마이크 접근할 수 없습니다";
            mcs_microphone_prompt       = "이 응용 프로그램은 \'설정\'아이폰, 마이크에 액세스 할 수 있도록하지 않습니다 - \'개인 정보 보호\'- \'마이크\'기능, 수정 될 \'Vimtag\'응용 프로그램의 이름을 찾을 수";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "HD화질";
            mcs_standard_clear          = "청 표";
            mcs_fluent_clear            = "유창하다";
            mcs_deleting                = "삭제 중...";
            mcs_event                   = "사건";
            mcs_one_hour                = "한 시간";
            mcs_half_hour               = "반";
            mcs_five_min                = "5분";
            mcs_category                = "분류";
            mcs_time_length             = "이름";
            mcs_new                     = "새";
            mcs_week_setting_prompt     = "주 못 비어";
            mcs_time_setting_prompt     = "시간 설정 못 비어";
            mcs_today                   = "오늘";
            mcs_wifi_password           = "무선 랜 암호";
            mcs_register_prompt         = "당신이 먼저 계정 등록";
            mcs_click_login             = "눌러서 로그인";
            mcs_not_login_prompt        = "아직 로그인 단추를 누르십시오 등록!";
            mcs_product_presentation    = "홈";
            mcs_help_feedback           = "돕다";
            mcs_help_information        = "돕다";
            mcs_feedback                = "의견이 피드백";
            mcs_feedback_des            = "감사 사용 우리 app, 환영 우리에게 당신의 귀중한 의견을 제기했다";
            mcs_feedback_praise         = "호평";
            mcs_feedback_title_prompt   = "피드백 제목";
            mcs_feedback_title          = "제목을 입력하십시오 (18 이내일)";
            mcs_feedback_type_prompt    = "문제 유형";
            mcs_feedback_please_select  = "형식을 선택하십시오";
            mcs_feedback_select_option1 = "인터페이스 문제";
            mcs_feedback_select_option2 = "카메라 문제";
            mcs_feedback_select_option9 = "다른 문제";
            mcs_feedback_dec_prompt     = "자세한 설명";
            mcs_feedback_dec            = "당신의 의견을 입력하십시오";
            mcs_feedback_upload_photo   = "사진 업로드";
            mcs_preview_pic             = "미리 보기";
            mcs_Album                   = "앨범에서 선택";
            mcs_Photograph              = "사진";
            mcs_camera_unavailable      = "카메라와 함께 사용할 수 없음";
            mcs_feedback_submit         = "제출";
            mcs_feedback_title_alert    = "제목 맞지 않는 규칙";
            mcs_feedback_type_alert     = "부디 정확하게 종류 선택";
            mcs_feedback_dec_alert      = "당신의 의견을 입력하십시오";
            mcs_feedback_submit_success = "제출 성공";
            mcs_feedback_submit_fail    = "제출 실패";
            mcs_connect_wifi_prompt     = "연결 Wi-Fi";
            mcs_cloud                   = "구름";
            mcs_demo                    = "체험";
            mcs_shortest                = "최단";
            mcs_no_history              = "병력 없음";
            mcs_download_pc_client      = "PC 클라이언트를 다운로드하려면 클릭";
            mcs_accounts_bind_email_exist = "이 계정 이미 바인딩 적이 사서함";
            mcs_accounts_bind_email_busy = "이 메일 계정 적이 이미 바인딩";
            mcs_systemupdatetip_noversionnodetail = "업데이트의 최신 버전을 사용할 수, 더 자세한 업데이트 정보 없음";
            mcs_systemupdatetip_nodetail = "더 자세한 업데이트 정보 없음";
            mcs_systemupdatetip_updatefrom = "현재 버전";
            mcs_systemupdatetip_updateto = "당신은 업그레이드 할 수 있습니다";
            mcs_systemupdatetip_sureforupdate = "업그레이드 결정?";
            mcs_systemupdatetip_updatecontent = "업데이트 된 내용";
            mcs_operate_prompt          = "그림에 따라 작동하십시오";
            mcs_operation_prompt        = "작업 프롬프트";
            mcs_qrcode_prompt_content   = "모바일 이차원 코드를 스캔 장치 카메라를 사용하여";
            mcs_qrcode_camera_distance  = "카메라 거리와 함께 두 개의 차원 코드 12 ~ 14cm";
            mcs_planvideo_datewizard    = "설치 날짜 주십시오.";
            mcs_planvideo_timewizard    = "설정 시간 좀";
            mcs_planvideo_wizard        = "좀 시간과 날짜 설정";
            mcs_email_unbind            = "메일 계정이 결합하지 않습니다";
            mcs_email_unmatch           = "사서함 불일치";
            mcs_email_inactive          = "전자 메일이 활성화되지 않습니다";
            mcs_email_binded            = "전자 메일은 결합 된";
            mcs_user_binded_bymail      = "사용자가 구속 된";
            mcs_bind_email_fail         = "사서함에 실패 바인딩";
            mcs_diagnosis               = "진단";
            mcs_delay                   = "지연";
            mcs_packet_loss_rate        = "패킷 손실율";
            mcs_timezone_IDL            = "날짜 변경선";
            mcs_timezone_China          = "중국";
            mcs_timezone_Midway         = "미드웨이 제도";
            mcs_timezone_Niue           = "니우에 섬";
            mcs_timezone_Samoa          = "아메리칸 사모아";
            mcs_timezone_Aleutian       = "알류 샨 열도";
            mcs_timezone_Hawaii         = "하와이 제도";
            mcs_timezone_Alaska         = "알래스카";
            mcs_timezone_PSTUSCanada    = "태평양 표준시 (미국과 캐나다)";
            mcs_timezone_Arizona        = "애리조나";
            mcs_timezone_MSTUSCanada    = "산지 표준시 (미국과 캐나다)";
            mcs_timezone_CSTUSCanada    = "중부 표준시 (미국과 캐나다)";
            mcs_timezone_ESTUSCanada    = "동부 표준시 (미국과 캐나다)";
            mcs_timezone_ASTCanada      = "대서양 표준시 (캐나다)";
            mcs_timezone_Newfoundland   = "뉴 펀들 랜드";
            mcs_timezone_Brasilia       = "브라질리아";
            mcs_timezone_BuenosAires    = "부에노스 아이레스";
            mcs_timezone_Santiago       = "산티아고";
            mcs_timezone_Noronha        = "노 로냐";
            mcs_timezone_SouthGeorgia   = "사우스 조지아";
            mcs_timezone_Azores         = "아 조레스";
            mcs_timezone_CapeVerde      = "카보 베르데";
            mcs_timezone_London         = "런던";
            mcs_timezone_Lisbon         = "리스본";
            mcs_timezone_Dublin         = "더블린";
            mcs_timezone_Berlin         = "베를린";
            mcs_timezone_Amsterdam      = "암스테르담";
            mcs_timezone_Brussels       = "브뤼셀";
            mcs_timezone_Budapest       = "부다페스트";
            mcs_timezone_Madrid         = "마드리드";
            mcs_timezone_Paris          = "파리";
            mcs_timezone_Rome           = "로마";
            mcs_timezone_Sarajevo       = "사라예보";
            mcs_timezone_Cairo          = "카이로";
            mcs_timezone_Amman          = "암만";
            mcs_timezone_Beirut         = "베이루트";
            mcs_timezone_Istanbul       = "이스탄불";
            mcs_timezone_Jerusalem      = "예루살렘";
            mcs_timezone_Athens         = "아테네";
            mcs_timezone_Baghdad        = "바그다드";
            mcs_timezone_Riyadh         = "리야드";
            mcs_timezone_Qatar          = "카타르";
            mcs_timezone_Moscow         = "모스크바";
            mcs_timezone_Tehran         = "이란";
            mcs_timezone_Baku           = "바쿠";
            mcs_timezone_Dubai          = "두바이";
            mcs_timezone_Tbilisi        = "트빌리시";
            mcs_timezone_Kabul          = "카불";
            mcs_timezone_Karachi        = "카라치";
            mcs_timezone_Yekaterinburg  = "예 카테 린 부르크";
            mcs_timezone_Maldives       = "몰디브";
            mcs_timezone_Calcutta       = "캘커타";
            mcs_timezone_Colombo        = "콜롬보";
            mcs_timezone_Katmandu       = "카트만두";
            mcs_timezone_Almaty         = "알마티";
            mcs_timezone_Dhaka          = "다카";
            mcs_timezone_Omsk           = "옴 스크";
            mcs_timezone_Thimbu         = "팀부";
            mcs_timezone_Rangoon        = "랑군";
            mcs_timezone_Bangkok        = "방콕";
            mcs_timezone_Jakarta        = "자카르타";
            mcs_timezone_Vientiane      = "비엔티안";
            mcs_timezone_Harbin         = "하얼빈";
            mcs_timezone_Shanghai       = "상하이";
            mcs_timezone_Hongkong       = "홍콩";
            mcs_timezone_Singapore      = "싱가포르";
            mcs_timezone_Taipei         = "타이페이";
            mcs_timezone_Ulaanbaatar    = "울란바토르";
            mcs_timezone_Perth          = "퍼스";
            mcs_timezone_Seoul          = "서울";
            mcs_timezone_Tokyo          = "도쿄";
            mcs_timezone_Darwin         = "다윈";
            mcs_timezone_Magadan        = "마가";
            mcs_timezone_Vladivostok    = "블라디보스톡";
            mcs_timezone_Guam           = "괌";
            mcs_timezone_Sydney         = "시드니";
            mcs_timezone_Canberra       = "캔버라";
            mcs_timezone_Melbourne      = "멜버른";
            mcs_timezone_Queensland     = "퀸즐랜드";
            mcs_timezone_LordHowe       = "로드 하우";
            mcs_timezone_Guadalcanal    = "과달카날";
            mcs_timezone_Fiji           = "피지";
            mcs_timezone_Auckland       = "오클랜드";
            mcs_timezone_Apia           = "아피아";
            mcs_timezone_Fakaofo        = "파카 오포";
            mcs_timezone_Tongatapu      = "통가 타푸";
            mcs_timezone_Kiritimati     = "키리 티 마티";
            mcs_connect_timeout         = "연결 시간";
            mcs_share                   = "몫";
            mcs_share_prompt_start      = "당신은에 액세스 할 수 있습니다";
            mcs_share_prompt_end        = "것으로 PC 또는 안드로이드 전화에 브라우저를 통해 동영상을 다운로드하는 동일한 네트워크에";
            mcs_share_note              = "다운로드 프로세스는이 페이지를 두지 마십시오";
            mcs_video_size              = "크기";
            mcs_video_duration          = "지속";
            mcs_my_folder               = "내 파일";
            mcs_account_no_contain      = "계정이 포함되어 있지 않습니다";
            mcs_edit                    = "편집";
            mcs_video_number            = "동영상";
            mcs_no_local_video          = "동영상이 없습니다";
            mcs_empty_folder            = "폴더가 비어 있습니다";
            mcs_no_history_record       = "당신은 어떤 기록이 없습니다";
            mcs_no_local_record         = "지역 기록이 비어 있습니다";
            mcs_empty_cloud_list_first  = "귀하의 장치 목록이 비어 있습니다";
            mcs_empty_cloud_list_second = "클릭 왼쪽 위 의";
            mcs_empty_cloud_list_third  = "추가 장치 가자!";
            mcs_empty_local_list_first  = "당신의 이 목록이 비어 있으면";
            mcs_empty_local_list_second = "시도";
            mcs_empty_local_list_third  = "드롭다운 화면";
            mcs_empty_local_list_forth  = "새로 고침 가자!";
            mcs_empty_local_list_fifth  = "（검색 있는 랜 내의 장치）";
            mcs_record_prompt           = "\"나의->내 파일\" 동영상을 볼 수 있습니다";
            mcs_record_download_prompt  = "\"내 파일\" 동영상을 볼 수 있습니다";
            mcs_register_buton_start    = "계정이 없습니다,";
            mcs_register_buton_end      = "지금 등록";
            mcs_product                 = "생성물";
            mcs_user_or_password_invalid = "사용자 이름이나 암호가 잘못되었습니다";
            mcs_share_video_prompt      = "당신은 지금 사용 비 WiFi 네트워크 전환 주십시오 WiFi 네트워크 다음 다시 나누다";
            mcs_download_video_prompt   = "당신은 지금 사용 비 WiFi 네트워크, 다운로드 생기는 유량 비용을 것입니다. 계속 진행하시겠습니까?";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "보통";
            mcs_common_problem          = "자주 묻는 질문";
            msc_enter_comment           = "의견을 입력";
            msc_description             = "기술";
            mcs_parameter               = "매개 변수";
            mcs_help_and_feedback       = "도움말 및 피드백";
            mcs_personal_center         = "개인 센터";
            mcs_version                 = "해제";
            mcs_language                = "언어";
            mcs_new_user                = "나는 새로운 사용자입니다";
            mcs_have_account            = "계정이있으세요";
            mcs_try_it                  = "경험";
            mcs_sign_up_now             = "등록";
            mcs_input_confirm_password  = "비밀번호 확인";
            mcs_warranty_registration   = "정비 등록";
            mcs_get_more_cameras        = "좀 더 카메라";
            mcs_user_inactive           = "사용자 질의에";
            mcs_format_options          = "체재";
            mcs_slide_screen            = "영상 각도를 조절하기 위해 화면 슬라이드";
            mcs_zoom_in_screen          = "화면을 반죽하면 비디오 세부 사항을 확대 할 수 있습니다";
            mcs_pause                   = "중지";
            mcs_source                  = "근원";
            mcs_magnetic                = "자기";
            mcs_sos                     = "비상 버튼";
            mcs_input_download_path     = "다운로드 경로";
            mcs_download_path_name_error = "문자 만 포함 할 수있는 파일의 경로 이름을 다운로드 (A-Z, A-Z) 또는 숫자 (0-9)";
            mcs_active                  = "활동";
            mcs_out                     = "휴가";
            mcs_quiet                   = "조용한";
            mcs_scenes                  = "장면";
            mcs_accessory               = "액세서리";
            mcs_quiet_mode              = "자동 모드";
            mcs_active_mode             = "활성 모드";
            mcs_out_mode                = "멀리 모드";
            mcs_add_accessory           = "첨부 파일 추가";
            mcs_accessory_type          = "부속품 유형";
            mcs_add_successfully        = "성공적으로 추가";
            mcs_set_scene               = "첨부 파일 이 아직 장면을 설정하지 않은 클릭 하십시오";
            mcs_to_set                  = "설정하려면";
            mcs_add_accessory_button    = "붉은 빛이 추가 를 완료하기 위해 밖으로 다시 때까지 버튼을 누릅니다";
            mcs_auto_monday             = "월요일";
            mcs_auto_tuesday            = "화요일";
            mcs_auto_wednesday          = "수요일";
            mcs_auto_thursday           = "목요일";
            mcs_auto_friday             = "금요일";
            mcs_auto_saturday           = "토요일";
            mcs_auto_sunday             = "일요일";
            mcs_search                  = "수색";
            mcs_format_input            = "하드 디스크 포맷";
            mcs_get_accessory_failed    = "첨부 파일 은 가져 오지 못했습니다";
            mcs_get_scene_failed        = "장애 시나리오 를 가져옵니다";
            mcs_search_failed           = "검색 실패";
            mcs_add_failed              = "추가 실패";
            mcs_ethernet_connect        = "이더넷 연결";
            mcs_action_click_retry      = "다시 시도를 클릭";
            mcs_wifi_config_failure_detail = "아니면 시도 할 수 있습니다";
            mcs_qrcode_connect          = "이차원 코드 연결된";
            mcs_close_sound_prompt      = "열기 사운드는 카메라 마이크의 스피커에 가까운 전화를 개최, Wi-Fi 인터넷 접속을 할 수 있습니다";
            mcs_qrcode_prompt_title     = "도 작업을하세요.";
            mcs_qrcode_prompt_detail    = "QR 코드에 카메라 렌즈를 정확히 조준하고 거리가 30cm 일 보관하십시오.";
            mcs_select_wifi_prompt      = "필요 없음 이더넷 케이블 없다";
            mcs_select_ethernet_prompt  = "이더넷 케이블 설치에 필요한 만";
            mcs_enter_config_mode_prompt = "와이파이 표시를 확인하시기 바랍니다 교대로 세 개의 빨간색 세 개의 녹색 플래시입니다. 이 경우, \'다음\'버튼을 클릭하십시오. 그렇지 않은 경우, 카메라 버튼을 \'RESET\'을 누릅니다. 그런 다음 다시는 Wi-Fi 표시기를 확인";
            mcs_no_enter_config_mode    = "구성 모드로 전환되지";
            mcs_record_time             = "시간을 기록(초)";
            mcs_stop_search             = "검색 중지";
            mcs_smart_wifi_setup        = "스마트 와이파이 설정";
            mcs_ethernet_setup          = "이더넷 설정";
            mcs_wifi_config_restore_start = "1) 장치 확인은 전원이 켜져";
            mcs_wifi_config_restore_end = "2)를 눌러 리셋 홀, 장치가 복원 60 초 후에 다시 시작합니다, 자동 설정 모드로 들어갑니다";
            mcs_Sense_schedule          = "시나리오 계획";
            load_succeed                = "로드 성공";
            load_fail                   = "로드하지 못했습니다";
            refresh_succeed             = "성공을 새로 고침";
            refresh_fail                = "새로 고침 실패";
            mcs_ensure_dev_power        = "1) 장치 확인은 전원이 켜져";
            all_refresh_complete        = "모든 데이터는 새로 고침";
            mcs_synchronize             = "동기";
            mcs_synchronize_detail      = "다음과 같은 장비 와 일치하지 않는 설정 의 프로필 , 후 작업을 동기화 할 필요가";
            mcs_Sense_Schedule_Set      = "시나리오 기획 세트";
            mcs_Sence_Schedule_detail   = "당신이 자동 장면 모드를 사용하면 시스템이 자동으로 다른 시간에 시나리오 계획 시나리오 에 따라 전환됩니다";
            mcs_Scene_set               = "프로필";
            mcs_Scene_set_detail        = "프로필을 사용하는 경우 프로필은 다음 페이지 에 제시된 설정에 따라";
            mcs_send_message            = "메시지 보내기";
            mcs_start_recording         = "녹음을 시작합니다";
            mcs_start_capture           = "캡처 를 시작합니다";
            mcs_turn_on_video           = "연속 촬영 모드를 종료 하려면 동영상을 여십시오";
            mcs_search_press_button     = "서서히, 출시 후 1 초 동안 표시등이 깜박를 뒤로 버튼을 누릅니다";
            mcs_add_fail1               = "장치 때문에 짧은 따라 이미 취소되었다 추가 단추를 누르십시오 다시 시도 검색 추가";
            mcs_add_fail2               = "장치 추가 실패 다시 시도 검색 추가 단추를 누르십시오";
            mcs_recording_duration      = "(초) 시간을 기록";
            mcs_settings_unsaved        = "귀하의 설정이 저장되지 않았습니다";
            mcs_want_save               = "그것은 저장 것인가?";
            mcs_camera                  = "비디오 카메라";
            mcs_router                  = "라우터";
            mcs_start_up                = "스타트";
            mcs_cancle_add              = "장비 는 짧은 보도 추가 로 인해 취소되었습니다";
            mcs_visit_photo_fail        = "방문 앨범 실패";
            mcs_camera_cell             = "카메라";
            mcs_myphoto                 = "내 사진";
            mcs_select_photo            = "선택 반전";
            mcs_app_new_version         = "새로운 버전";
            mcs_update_new_version      = "즉시 업그레이드";
            mcs_app_new_version_prompt  = "응용 프로그램은 이제 새로운 버전 업그레이드를 선택 다운로드 업데이트가";
            download_failed             = "다운로드 실패";
            mcs_connect_server_prompt   = "무선 랜 신호가 연결되고, 이것은 서버에 연결된";
            mcs_local_search            = "지역 검색";
            mcs_choose_device_type      = "선택한 장치 종류";
            mcs_wifi_state              = "비고: WIFI 일을 제대로 할 수 있습니다. 지금 네트워크 연결 끊기 (깨진 망사 후 나타날 수도 장치 안 - 상황을 좀 기다리다 20s 자동으로 상위권)";
            mcs_sweep                   = "스캔";
            mcs_wifi_config_tip         = "있다 路由器, WIFI 배선 번거로움을 피할 수";
            mcs_ethernet_config_tip     = "없다 路由器 편리하다 꽂다 네트워크";
            mcs_ethernet_connect_step_one = "첫 걸음: 확보 전원 라인 1 연결 전원 콘센트 2";
            mcs_ethernet_connect_step_two = "두 번째 단계: 네트워크 연결을 통해 4 路由器 포트 및 카메라 망 입";
            mcs_sweep_qrcode_tip        = "이차원 코드 검사 핸드폰 카메라 한창 진행, 30 cm 정도 거리를 유지하다";
            mcs_sound_config_tip        = "소리 재생 도움이 된다 Wi-Fi 연결.(가 선택 닫기)";
            mcs_sosalt                  = "%@ : 긴급 버튼 경보(%@)";
            mcs_dooralt                 = "%@ : 자기 경고(%@)";
            mcs_wifi_config_restore     = "RESET 단추를 눌러 주십시오 1초 후, 놓다, \'wifi 설정 모드 진입 장치\'.";
            mcs_voice_remind_heard      = "이미 들은 음성 안내";
            mcs_netWork_prompt          = "네트워크 설명";
            mcs_con_netWork             = "네트워크 인터페이스 설정 점프로 설정된 경우 현재의 데이터 연결을 위해 사용되는 네트워크는 그 트래픽을 많이 소비 할";
            mcs_no_netWork              = "현재 네트워크에 연결하지 점프는 네트워크 설정 인터페이스를 설정할지 여부";
            mcs_exception_des           = "서버에 오류 보고서를 보낼 수 있는지 여부를 앱 마지막 예외 출구";
            mcs_exception_prompt        = "이상 팁";
            mcs_erro_diagnosis          = "문제 해결";
            mcs_erro_log_des            = "앱 최근 기록 오류 로그의 오류 로그를 업로드 버튼을 제출 선택, 협조 해 주셔서 감사합니다!";
            mcs_is_submitting           = "제출 된";
            mcs_firmware_version        = "펌웨어 버전";
            mcs_device_assembly         = "1.전원선  2.전원 포트  3.이더넷 포트  4.케이블  5.어댑터";
            mcs_forgetpass_action_wizard_old = "장치가 다시 시작한 후 초기 설정 60 초 복원, 1 초 동안 리셋 버튼을 누르면, 관리자 암호 복구";
            mcs_device_assembly_mipc    = "1.전원선  2.전원 포트  3.이더넷 포트  4.케이블";
            mcs_device_connect_power_prompt = "장치 안 - 주십시오. 만약 그림 한 지시를 저장됩니다 전원 장치 로 이미 본 전원 등 빨간불 늘 밝고 장치 시작할 것이다.";
            mcs_lights_sound            = "이미 본 불빛";
            mcs_connect_power           = "연결 전원";
            mcs_search_magnetic         = "도시 된 바와 같이, 결합 자기 도어를 천천히 표시등이 깜박, 출시 후 1 초 동안 사이드 버튼을 누릅니다";
            mcs_add_magnetic            = "병합 문 센서를 연 후 표시가 첨가 완료 오프 플래시 참조";
            mcs_already_downloaded      = "다운로드한";
            mcs_my_order                = "내가 주문";
            mcs_auto_mode               = "자동 모드";
            mcs_new_small               = "최소";
            mcs_new_half                = "저화질";
            mcs_new_normal              = "중화질";
            mcs_new_hd                  = "HD화질";
            mcs_scene_now               = "현재 광경";
            mcs_please_install_wechat   = "WeChat 설치하십시오";
            mcs_wechat_not_support      = "지원하지 WeChat 버전 업데이트 WeChat 주십시오.";
            mcs_motion_alert            = "모션감지 경보";
            mcs_io_alert                = "I/O 경보";
            mcs_valid_user_name         = "첫 번째 단계: 유효 사용자 이름을 입력하십시오.";
            mcs_binding_mailbox         = "두 번째 단계: 입력하십시오. 바인딩 사서함";
            mcs_send_mailbox_succuess_prev = "우리는 이미 당신께 보내 전해 바인딩 사서함";
            mcs_send_mailbox_succuess_next = "한 통의 메일을 보낼 암호를 다시 주의 수신 메시지 주십시오.";
            mcs_all_image               = "모든 그림";
            mcs_unavailable_image       = "그림을 사용할 수 있으면 다시 선택";
            mcs_set_nickname            = "설정 별명";
            mcs_search_timeout          = "검색 시간은 다시 검색을 클릭합니다";
            mcs_screen_size             = "화면 설정";
            mcs_screen_reset            = "설정완료, 적용을 위해 카메라를 리부팅합니다";
            mcs_wifi_network_prompt     = "카메라 연결 있는지 확인하십시오 WiFi 것은 5GHz 밴드 있는 WiFi 미안합니다만 카메라 연결 2.4GHz 밴드 있는 WiFi";
            mcs_fault_diagnosis         = "네트워크 진단";
            mcs_sever_diagnosis         = "아마도 때문에 서버 고장 때문에 정상적으로 사용할 수 없습니다.";
            mcs_select_problem          = "선택 문제";
            mcs_connot_lonin            = "불가";
            mcs_connot_play             = "못 재생";
            mcs_add_problems            = "부가 문제";
            mcs_encounterer_problems    = "입력하십시오. 질문";
            mcs_diagnostic_network      = "진단을 시작합니다";
            mcs_network_diagnostic_prompt = "들어오는 네트워크 진단 우리를 도울 수 있다 돋우 해결 하신 질문, 진단 필요한 때 길이가 대략 몇 분";
            mcs_network_diagnostic      = "문제 해결";
            mcs_connecting_server       = "지금 서버 연결.";
            mcs_diagnostic_process_prompt = "진단 과정은 다른 작업을 수행하지 마십시오 진단시, 몇 분 정도 걸릴 수 있습니다,하지만 당신은 항상 진단을 중지 할 수 있습니다";
            mcs_diagnostic_results      = "진단 결과";
            mcs_diagnostic_results_received = "진단이 완료되면, 진단 결과가 수신되었는지";
            mcs_diagnostic_results_prompt = "이 진단에 참여해 주셔서 감사합니다, 진단 결과는 가능한 한 빨리 우리가 문제를 해결하는 데 도움이됩니다";
            mcs_results_no_abnormality  = "진단 결과는 이상이 없다";
            mcs_no_abnormality_prompt   = "진단은 더 이상은 발견되지 않았다. 당신은 진단의 깊이를 선택할 더 나은 발생한 문제를 해결하는 데 도움이 될 것입니다 로그 수집 기능을 시작할 수 있습니다";
            mcs_continue_diagnosis      = "깊이 진단";
            mcs_diagnosis_connot_sent   = "진단 결과를 보낼 수 없습니다";
            mcs_email_sends             = "이메일 주소";
            mcs_email_sends_prompt      = "이메일로 우리에게 진단 결과를 보내, 그것은 가능한 한 빨리 우리가 문제를 해결하는 데 도움이됩니다";
            mcs_diagnosis_send          = "보내기";
            mcs_diagnosis_email         = "이메일";
            mcs_send_successful         = "성공적으로 전송";
            mcs_diagnosis_type_select_prompt = "진단의 종류를 선택하세요";
            mcs_stop_diagnosis          = "정지 진단";
            mcs_detail_diagnosis_prompt = "진단은 장치 페이지를 해제 할 수 있습니다 진행";
            mcs_detail_diagnosis_stop_prompt = "깊이 진단이 진행 중입니다, 당신은 항상 중단 할 수 있습니다";
            mcs_exit_detail_diagnosis   = "깊이 진단 중지 여부, 진행?";
            mcs_network_connection_unavailable = "네트워크 연결을 사용할 수 없습니다";
            mcs_Failed_connect_Internet = "인터넷에 연결하지 못했습니다";
            mcs_connect_internet_note   = "인터넷에 연결해야하는 경우, 다음 사항에 유의하시기 바랍니다 :";
            mcs_connect_internet_detail_first = "무선 LAN 신호에 대한 액세스 권한이 있는지, 휴대 전화의 무선 LAN 설정을 확인";
            mcs_connect_internet_detail_second = "휴대 전화는 이동 네트워크에 대한 액세스를 가지며, 휴대 전화가 해제되지 않은 경우 점검";
            mcs_connect_wifi_note       = "사용자는 무선 LAN에 액세스 할 수있는 경우 :";
            mcs_connect_wifi_detail     = "무선 LAN 핫스팟 연결이 인터넷에 액세스 할 수 있는지 확인하거나 핫스팟 경우 장치가 LAN에 액세스 할 수 있도록 허용";
            mcs_device_or_phone_time_zone_not_equals_please_select = "장치 현재 시간대와 휴대 전화의 시간대 올바른 시간대 선택되지";
            mcs_phone_timezone          = "전화 시간대";
            mcs_timezone_change         = "시간대 수정";
            mcs_mail_send               = "성공적으로 전송";
            mcs_yes_verif               = "그것은 인";
            mcs_no_verif                = "아니";
            mcs_camera_found_new_version_y_n_upgrade = "우리는 여부 업그레이드로, 카메라의 새 버전을 발견?";
            mcs_auto_adapt_split_screen = "적응";
            mcs_four_split_screen       = "4분의 스크린";
            mcs_nine_split_screen       = "구 분 스크린";
            mcs_twelve_split_screen     = "십이분 스크린";
            mcs_not_connection_server   = "서버에 연결할 수 없습니다";
            mcs_more_options            = "더";
            mcs_bind_email_prompt       = "보안을 설명하기 위해, 당신의 사서함을 결합";
            mcs_login_now               = "지금 로그인";
            mcs_device_connect_power    = "1.전원선     2.전원 포트";
            mcs_device_connect_ethernet = "1. 망 입      2. 네트워크";
            mcs_device_connect_ethernet_prompt = "는 망사 일단 로 망 입 로 다른 한쪽에는 路由器 이미 본 망 버너 청신호 깜빡이다, 인터넷 접속 완료.";
            mcs_pwd_format              = "비밀번호 형식: 길이 8시 까지 16비트 문자 사이에, 숫자, 대소문자 문자 및 특수 기호 적어도 세 가지 포함";
            mcs_client_new              = "클라이언트";
            mcs_user_guide              = "사용자 안내서";
            mcs_ebitcam_download_describe = "ebitcam 구름 한 돈을 감시 서비스 소프트웨어, 이 소프트웨어의 협조 구름 카메라 가입자 언제 어디서나 사용할 비디오 정보 보기 위해, 우리는 당신이 제공한 구분하기 유창하다 관람 체험, 지능 제어 당신을 항상 사랑 자신의 가족을, 좋아하는 사용자, 빨리 다운로드 하세요!";
            mcs_mipc_download_describe  = "mipc 구름 한 돈을 감시 서비스 소프트웨어, 이 소프트웨어의 협조 구름 카메라 가입자 언제 어디서나 사용할 비디오 정보 보기 위해, 우리는 당신이 제공한 구분하기 유창하다 관람 체험, 지능 제어 당신을 항상 사랑 자신의 가족을, 좋아하는 사용자, 빨리 다운로드 하세요!";
            mcs_guide_download          = "수첩 다운로드";
            mcs_password_admin          = "암호 관리";
            mcs_already_read            = "나는 이미 읽기 및 동의";
            mcs_privacy_policy          = "프라이버시 정책";
            mcs_not_agree_privacy_policy = "당신 아직 동의 프라이버시 정책";
            mcs_reload                  = "다시 불러오기";
            mcs_start_download          = "즉시 다운로드";
            mcs_video_play_fail         = "동영상 재생 실패";
            mcs_download_app_tips       = "이후ㅐ 사용할 시도 PC 클라이언트";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = "장치 형식";
            mcs_connect_device_wifi     = "카메라 잠시 5GHz 밴드 있는 WiFi 지원하지 않습니다.";
            mcs_send_diagnosis_results  = "진단 결과 보내는 중...";
            mcs_local_file              = "로컬 파일";
            mcs_local_device            = "로컬 장치";
            mcs_export_sd_data          = "데이터 내보내기 SD卡";
            mcs_shaking                 = "고개를 저으며 기계 시리즈";
            mcs_outdoor                 = "실외기 시리즈";
            mcs_card                    = "카드 기계 시리즈";
            mcs_wifi_connection         = "WiFi 연결";
            mcs_home_mode               = "홈 모드";
            mcs_away_home_mode          = "AWAY 모드";
            mcs_auto_switch_mode        = "자동 전환";
            mcs_select_scene_mode       = "프로필을 선택하세요";
            mcs_7x24_hours_prompt       = "오픈 연중 무휴 (시간) 기록";
            mcs_all_day_recording       = "주 비디오";
            mcs_home_mode_prompt        = "홈 모드:닫기 모든 장비 경보";
            mcs_away_home_mode_prompt   = "AWAY 모드:모든 장치 열린 경보";
            mcs_at_home                 = "집에서";
            mcs_away_home               = "아웃";
            mcs_set_timezone_prompt_start = "시간대는";
            mcs_set_timezone_prompt_end = "시간대 설정에서\"날짜/시간\"전환하세요";
            mcs_set_wifi_remind_head    = "이하 문제를 가져올 수 카메라 连网 것을 피할 수 없습니다";
            mcs_set_wifi_remind_1       = "チェックして開いたWIFI擦り網、この設定を招いてしまうかも连网カメラは正常にできない。あなたは臨時に防止することができることができて、ビデオ、ビデオカメラが成功した後にまたルータの設置を回復することができます";
            mcs_set_wifi_remind_2       = "만약 당신이 집에 双频 路由器 확인하십시오. 카메라 연결 WIFI 올바른지 확인하십시오 5GHz 밴드 있는 WIFI 미안합니다만 카메라 연결 2.4GHz 밴드 있는 WIFI";
            mcs_set_wifi_remind_3       = "카메라 잠시 지원하지 않습니다. WPA/WPA2 기업 급 WIFI 다른 WIFI 선택하십시오.";
            mcs_set_wifi_remind_4       = "만약 당신 집 WIFI 것은 브리지 때문에 브리지 원인 야기할 수도 있습니다. 인터넷 매우 불안정, 건의 연결 비 의 WIFI 브리지";
            mcs_set_wifi_remind_5       = "카메라 대한 WIFI 무슨 요구";
            mcs_record_save_to_my_file  = "비디오는 내 파일에 저장";
            mcs_view_now                = "지금보기";
            mcs_search_sos_strat        = "도시 된 바와 같이, 하단의 버튼을 누릅니다";
            mcs_search_sos_end          = "1 초 장치 표시등이 깜박입니다";
            mcs_search_magnetic_start   = "도시 된 바와 같이, 복합 자성 도어 사이드 버튼을 눌러";
            mcs_search_magnetic_end     = "1 초 장치 표시등이 깜박입니다";
            mcs_adding                  = "첨가";
            mcs_record_empty_set_sd     = "비디오 기록을 저장할 수있는 SD 카드를 삽입";
            mcs_video_play_offline      = "이 장치는 오프라인 상태입니다";
            mcs_video_play_network_fail = "네트워크 연결 실패, 나중에 다시 시도";
            mcs_alert_notify_guide1     = "[원본] 모션 감지 동작은 [가], [부록]에 프로필 설정을 마이그레이션";
            mcs_alert_notify_guide2     = "다음 동작은 다음과 같습니다";
            mcs_alert_notify_guide3     = "[현장], 당신은, 당신이 집의 기폭 모드에서 열 필요가 무장 모드를 설정해야합니다 ；";
            mcs_alert_notify_guide4     = "[보조 프로그램] - [보조 프로그램 목록] - [모션 감지] 모드 홈 모드, 비디오 녹화 및 기타 기능에 알람을 끄고, 알람, 비디오, 사진, IO 경보 기능에서 설정되어.";
            mcs_plan_protect_guide1     = "[원본] 계획 무장 동작은 [시나리오]로 마이그레이션";
            mcs_plan_protect_guide2     = "프로파일을 자동 스위칭을 [시나리오]를 선택합니다;";
            mcs_plan_protect_guide3     = "선택";
            mcs_plan_protect_guide4     = ", 무장 기간에 대한 요구 (예 : 화요일 7 : 00 ~ 18 : 00) 모드를 설정, 확인 후 저장하고 설정 탭으로 돌아가;";
            mcs_plan_record_guide       = "[녹화]를 선택 모드 녹화 기능을 켜십시오.";
            mcs_plan_record_guide1      = "[스케쥴 녹화] 계획 무장 동작은 [녹화]로 마이그레이션";
            mcs_plan_record_guide2      = ", 시간을 기록에 대한 요구 (예 : 화요일 7 : 00 ~ 18 : 00) 모드를 설정, 확인 후 저장하고 설정 탭으로 돌아가;";
            mcs_forgetpass_action_prompt = "장치가 10 초 출시 후 리셋 구멍을 다시 누르십시오, 적외선 조명 및 기본 설정을 복원하는 장비";
            mcs_cloud_box               = "클라우드 박스";
        }/* ko */
        else if(lang == "de")
        {
            mcs_name                    = "Name";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "Name";
            mcs_old_nick                = "Kurz";
            mcs_linked                  = "Verbunden";
            mcs_sign_in                 = "Anmelden";
            mcs_back                    = "Zurück";
            mcs_will_back               = "Zurückgehen";
            mcs_add                     = "Hinzufügen";
            mcs_add_device              = "Gerät hinzufügen";
            mcs_device_existed          = "Gerät bereits vorhanden";
            mcs_cancel                  = "Abbrechen";
            mcs_exit                    = "Beenden";
            mcs_remember_password       = "Passw ort speichern";
            mcs_password_remembered     = "Passw ort gespeichert";
            mcs_sign_ining              = "Anmelden ...";
            mcs_cloud_server            = "Cloud Server";
            mcs_input_device_id         = "Geräte-ID eingeben";
            mcs_input_username          = "Benutzernamen eingeben";
            mcs_input_email_addr        = "E-Mail eingeben";
            mcs_email_address           = "E-Mail";
            mcs_email                   = "E-Mail";
            mcs_binding                 = "verbindlich";
            mcs_binding_email           = "Obligatorische E-Mail";
            mcs_binding_send_prompt     = "Ihnen wurde eine Verifizierungsnachricht gesendet. Bitte bestätigen Sie die E-Mail so bald als möglich.";
            mcs_binding_email_prompt    = "Sollten Sie Ihr Passwort vergessen, können Sie dies über die Mailbox zurücksetzen.";
            mcs_input_password          = "Passwort eingeben";
            mcs_access_server_failed    = "Zugang zum Server fehlgeschlagen";
            mcs_device_offline          = "Gerät offline";
            mcs_invalid_password        = "Ungültiges Passwort";
            mcs_invalid_dev             = "Ungültiges Gerät";
            mcs_login_faided            = "Anmeldung fehlgeschlagen";
            mcs_invalid_qrcode          = "Ungültiger QR Code";
            mcs_please_input_username   = "Bitte geben Sie Ihren Benutzernamen ein";
            mcs_please_input_password   = "Bitte geben Sie Ihr Passwort ein";
            mcs_qrcode_scan_hint        = "QR-Code scannen";
            mcs_device_list_empty       = "Verzeichnis der Geräte ist leer";
            mcs_record_list_is_empty    = "Verzeichnis der Aufnahmen ist leer";
            mcs_password_expired        = "Passwort abgelaufen";
            mcs_set_video_size          = "Auflösung";
            mcs_hd_1280x720             = "HD [1280x720]";
            mcs_auto                    = "Auto";
            mcs_normal_640x360          = "Normal [640x360]";
            mcs_half_320x180            = "Mittel [320x180]";
            mcs_small_160x90            = "Klein [160x90]";
            mcs_play                    = "Live";
            mcs_settings                = "Einstellungen";
            mcs_messages                = "Aufnahmen";
            mcs_alarm                   = "Alarm";
            mcs_delete                  = "Löschen";
            mcs_delete_camera           = "Gerät entfernen";
            mcs_apply                   = "Anwenden";
            mcs_speed                   = "Geschwindigkeit";
            mcs_others                  = "Sonstige";
            mcs_audio                   = "Audio";
            mcs_speaker                 = "Lautsprecher";
            mcs_mic                     = "Mic";
            mcs_power_frequency         = "Netzfrequenz";
            mcs_online_upgrade          = "Online-Upgrade";
            mcs_restore_the_factory_settings = "Auf Werkseinstellungen zurücksetzen";
            mcs_restore                 = "Zurücksetzen";
            mcs_restore_camera          = "Gerät neu starten";
            mcs_start_upgrade           = "Upgrade starten";
            mcs_system                  = "System";
            mcs_system_settings         = "Systemeinstellungen";
            mcs_online                  = "Online";
            mcs_offline                 = "Offline";
            mcs_query                   = "Abfrage";
            mcs_begin_time              = "Beginn (Zeit)";
            mcs_end_time                = "Ende (Zeit)";
            mcs_mode                    = "Modus";
            mcs_opened                  = "Offen";
            mcs_high                    = "Hoch";
            mcs_middle                  = "Mittel";
            mcs_low                     = "Niedrig";
            mcs_io_alert_input          = "I/O Eingang";
            mcs_io_alert_output         = "I/O Alarm Ausgang";
            mcs_normally_open           = "Normalerweise geöffnet";
            mcs_normally_close          = "Normalerweise geschlossen";
            mcs_motion_detection_sensitivity = "Empfindlichkeit der Bewegungserkennung";
            mcs_daytime                 = "Tag";
            mcs_night                   = "Nacht";
            mcs_sdcord                  = "SD-Speicherkarte";
            mcs_storage_device          = "Speichergerät";
            mcs_set_mask                = "Maske einstellen";
            mcs_status                  = "Status";
            mcs_capacity                = "Kapazität";
            mcs_usage                   = "Verwendung";
            mcs_format                  = "Format";
            mcs_repair                  = "Festlegen";
            mcs_formating               = "Formatieren";
            mcs_repairing               = "Reparieren";
            mcs_mounted                 = "Montiert";
            mcs_unmounted               = "Entfernt";
            mcs_mount                   = "Montieren";
            mcs_unmount                 = "Entfernen";
            mcs_ethernet                = "Ethernet";
            mcs_wifi                    = "WLAN";
            mcs_enabled                 = "aktiv";
            mcs_mac_address             = "MAC Adresse";
            mcs_network_status          = "Netzwerkstatus";
            mcs_wifi_mode               = "Wi-Fi Modus";
            mcs_client                  = "Klient";
            mcs_ap                      = "AP";
            mcs_start_address           = "Startadresse";
            mcs_end_address             = "Endadresse";
            mcs_gateway                 = "Gateway";
            mcs_select_network          = "Netzwerk wählen";
            mcs_dhcp_ip                 = "DHCP verwenden";
            mcs_dhcp_dns                = "DNS : DHCP verwenden";
            mcs_ip_address              = "IP Adresse";
            mcs_network_mask            = "Netzwerkmaske";
            mcs_input_secondary_dns     = "Zweiten DNS eingeben";
            mcs_secondary_dns           = "Zweiter DNS";
            mcs_input_dns               = "DNS eingeben";
            mcs_input_alternate_dns     = "Alternativen DNS eingeben";
            mcs_input_ip                = "IP eingeben";
            mcs_input_gateway           = "Gateway eingeben";
            mcs_input_network_mask      = "Netzwerkmaske eingeben";
            mcs_wifi_list               = "Verzeichnis Wi-Fi";
            mcs_display_date            = "Datum anzeigen";
            mcs_date_format             = "Datumsformat";
            mcs_display_time            = "Zeit anzeigen";
            mcs_time_format             = "Zeitformat";
            mcs_24_hour                 = "24-heures";
            mcs_12_hour                 = "12-Stunden";
            mcs_display_weeks           = "Tag anzeigen";
            mcs_date_time               = "Datum/Uhrzeit";
            mcs_set_time                = "Zeit einstellen";
            mcs_set_week                = "Woche einstellen";
            mcs_stream                  = "Streamen";
            mcs_encode                  = "Verschlüsseln";
            mcs_resolution              = "Auflösung";
            mcs_frame_fate              = "Bildrate (FPS)";
            mcs_maximum_bitrate         = "Maximale Bitrate";
            mcs_minimum_bitrate         = "Minimale Bitrate";
            mcs_i_frame_interval        = "I-Frame-Intervall";
            mcs_video                   = "Video";
            mcs_sampling_rate           = "Abtastrate (kHz)";
            mcs_nickname                = "Kurzname";
            mcs_old_password            = "Altes Passwort";
            mcs_confirm_password        = "Passwort bestätigen";
            mcs_modify_password         = "Passwort ändern";
            mcs_password                = "Passwort";
            mcs_admin_password          = "Administrator passwort";
            mcs_guest_password          = "Passwort für Gastzugang";
            mcs_product_info            = "Produktinformation";
            mcs_software_version        = "Softwareversion";
            mcs_device_id               = "Geräte-ID";
            mcs_operation               = "Bedienung";
            mcs_record                  = "Aufnahme";
            mcs_record_2                = "Wiedergabe";
            mcs_upgrade_now             = "Jetzt Upgrade";
            mcs_upgrading               = "Upgrade erfolgt";
            mcs_already_latest_version  = "Kein Update vorhanden";
            mcs_sensitivty              = "Empfindlichkeit";
            mcs_user_defined            = "Empfindlichkei";
            mcs_time                    = "Zeit";
            mcs_date                    = "Tag";
            mcs_finish                  = "Beenden";
            mcs_delete_fail             = "Nicht löschen";
            mcs_motion                  = "Bewegung";
            mcs_start                   = "Start";
            mcs_talk                    = "Sprechen";
            mcs_password_input_inconsistent = "Passworteingabe nicht korrekt";
            mcs_input_6_to_20_litters   = "6-20 Buchstaben (a-z, A-Z) oder Zahlen (0-9) eingeben";
            mcs_user_letter_range_hint  = "Der Benutzername besteht aus 6-32 Buchstaben (a-z, A-Z) oder Zahlen (0-9) und beginnt mit einem Buchstaben.";
            mcs_password_range_hint     = "Passwort muss 6-32 Buchstaben oder Nummern beinhalten";
            mcs_begin_with_the_letters  = "Zunächst Buchstaben eingeben";
            mcs_sign_up                 = "Registrieren";
            mcs_sign_up_failed          = "Anmeldung fehlgeschlagen";
            mcs_successful_sign_up      = "Anmeldung erfolgreich";
            mcs_are_you_sure_delete     = "Löschen bestätigen";
            mcs_failed_to_set_the       = "Installation fehlgeschlagen";
            mcs_set_successfully        = "Einstellung erfolgreich";
            mcs_downloading             = "Download wird ausgeführt";
            mcs_wrote                   = "Aufgezeichnet";
            mcs_visit_again_later       = "Bitte versuchen Sie es zu einem späteren Zeitpunkt erneut.";
            mcs_restart_failed          = "Neustart fehlgeschlagen";
            mcs_upgrade_failed          = "Upgrade fehlgeschlagen";
            mcs_connnected              = "Verbunden";
            mcs_connnected_to           = "Verbunden mit";
            mcs_not_select              = "Nicht ausgewählt";
            mcs_message_list            = "Verzeichnis der Nachrichten";
            mcs_saved_password          = "Passwort gespeichert";
            mcs_alert                   = "Warnhinweis";
            mcs_no_record               = "Keine Aufname";
            mcs_new_about               = "Neu: Information";
            mcs_device                  = "Gerät";
            mcs_config                  = "Konfig";
            mcs_change_password_failed  = "Passwortänderung fehlgeschlagen";
            mcs_do_you_want_restart     = "Neustart gewünscht?";
            mcs_do_you_want_restore     = "Wiederherstellen bestätigen";
            mcs_do_you_want_upgrade     = "Upgrade gewünscht?";
            mcs_load_end                = "Ende der Videos";
            mcs_loading                 = "Lädt...";
            mcs_down_refresh            = "Pull-Down für Aktualisierung";
            mcs_release_refresh         = "Release aktualisieren";
            mcs_refreshing              = "Aktualisierung läuft";
            mcs_release_then_loading_data_hint = "Release vorhanden  ";
            mcs_pull_refresh_hint       = "Für Aktualisierung ziehen";
            mcs_restarting              = "Neustart wird ausgeführt";
            mcs_upgraded_time           = "Zeit Upgrade:: ";
            mcs_done                    = "Abgeschlossen";
            mcs_playback                = "Wiedergabe";
            mcs_i_o_alarm               = "I/O Alarm";
            mcs_alarm_action            = "Bewegungserkennung";
            mcs_alarm_sources           = "Alarmrquellen";
            mcs_io_output               = "Relaisausgang";
            mcs_snapshots               = "Schnappschüsse";
            mcs_snapshot                = "Schnappschuss";
            mcs_snapshot_interval       = "Intervall(e) für Schnappschüsse";
            mcs_pre_record_length       = "Länge(n) Vor-Aufnahme";
            mcs_nick_range_hint         = "Kameraname darf nicht mehr als 20 Zeichen umfassen";
            mcs_save                    = "Speichern";
            mcs_close                   = "Beenden";
            mcs_snapshoting             = "Erstellt Schnappschuss";
            mcs_snapshot_failed         = "Schnappschuss fehlgeschlagen";
            mcs_record_failed           = "Aufnahme fehlgeschlagen";
            mcs_saved_successfully      = "Erfolgreich gespeichert";
            mcs_save_failed             = "Speichern fehlgeschlagen";
            mcs_restart_to_take_effect  = "Neustart erforderlich";
            mcs_please_allow_access_album = "Bitte ermöglichen Sie maxCam den Zugriff auf Ihr Fotoalbum";
            mcs_please_allow            = "Bitte erlauben Sie ";
            mcs_access_album            = " den Zugriff auf Ihr Fotoalbum";
            mcs_ios_privacy_setting_for_photo_prompt = "Kann unter iPhone \"Einstellungen->Datenschutz->Fotos\" und der App \"";
            mcs_execute_change          = "\" geändert werden.";
            mcs_access_camera           = " um auf die Kamera zuzugreifen.";
            mcs_please_allow_access_camera = "Bitte ermöglichen Sie maxCam den Zugriff auf Ihre Kamera";
            mcs_ios_privacy_setting_for_camera_prompt = "Kann unter iPhone \"Einstellungen->Datenschutz->Kamera\" und der App \"";
            mcs_busy_when_write         = "Schreibt";
            mcs_unknown_error           = "Unbekannter Fehler";
            mcs_i_know                  = "Ich weiss!";
            mcs_segment                 = "Segment";
            mcs_please_relogin          = "Bitte melden Sie sich erneut an.";
            mcs_change_password_succeed = "Passwort erfolgreich geändert";
            mcs_upgrade_to_ver          = "Upgrade für Ver";
            mcs_restore_failed          = "Wiederherstellung fehlgeschlagen";
            mcs_please_restart          = "Bitte neustarten";
            mcs_keep_network_settings   = "Bitte Netzwerkeinstellungen und Passwort merken";
            mcs_not_connected           = "Nicht verbunden";
            mcs_sdcard_not_ready        = "SD-Speicherkarte nicht bereit";
            mcs_device_not_exist        = "Gerät nicht vorhanden";
            mcs_disable                 = "Abschalten";
            mcs_to_determine_the        = "Festlegen";
            mcs_alert_on                = "Alarm einschalten";
            mcs_alert_off               = "Alarm ausschalten";
            mcs_alert_onoff             = "Alarm an/aus";
            mcs_monday                  = "Montag";
            mcs_tuesday                 = "Dienstag";
            mcs_wednesday               = "Mittwoch";
            mcs_thursday                = "Donnerstag";
            mcs_friday                  = "Freitag";
            mcs_saturday                = "Samstag";
            mcs_sunday                  = "Sonntag";
            mcs_mon                     = "Mo";
            mcs_tue                     = "Di";
            mcs_wed                     = "Mi";
            mcs_thu                     = "Do";
            mcs_fri                     = "Fr";
            mcs_sat                     = "Sa";
            mcs_sun                     = "So";
            mcs_scheduled_recording     = "Aufnahme planen";
            mcs_schedule                = "Zeitplan";
            mcs_scheduled_recording_status = "Geplanter Aufnahmestatus";
            mcs_folding                 = "Falten";
            mcs_unfolding               = "Entfalten";
            mcs_end_time_should_lt_begin = "Die Endzeit muss später als die Startzeit sein";
            mcs_recording               = "Zeichnet auf";
            mcs_prerecord_interval_range_hint = "Vor-Aufnahme-Intervall sollte weniger als 6 Sekunden betragen.";
            mcs_snapshot_interval_range_hint = "Schnappschussintervall sollte 0 oder mehr als 60 betragen.";
            mcs_not_ready               = "Nicht bereit";
            mcs_availablesize           = "Verfügbare Grösse";
            mcs_reboot                  = "Erneut starten";
            mcs_alerter                 = "Warnhinweis";
            mcs_pir                     = "Infrarotmelder";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "Verschlüsseln";
            mcs_ok                      = "OK";
            mcs_fault                   = "Störung";
            mcs_sensor_status           = "Sensorstatus";
            mcs_about                   = "Information";
            mcs_reset_now               = "Jetzt zurücksetzen";
            mcs_reset_later             = "Später zurücksetzen ";
            mcs_prompt                  = "Aufforderung";
            mcs_select                  = "Auswählen";
            mcs_available_netword       = "Netzwerk nicht verfügbar, jetzt konfigurieren?";
            mcs_request_send            = "Sendet Anfrage...";
            mcs_blank_device_id         = "Geräte-ID muss eingegeben werden.";
            mcs_blank_username          = "Benutzername muss eingegeben werden.";
            mcs_blank_password          = "Passwort muss eingegeben werden.";
            mcs_exist_user              = "Benutzer existiert bereits";
            mcs_invalid_user            = "Ungültiger Benutzer";
            mcs_invalid_email_addr      = "Ungültige E-Mail";
            mcs_system_err              = "Systemsfehler";
            mcs_exceed_device           = "Überschreitung der Gerätebenutzer";
            mcs_continue                = "Weiter";
            mcs_prompt_exit             = "Möchten Sie den Vorgang beenden?";
            mcs_device_list             = "Verzeichnis der Geräte";
            mcs_no_sdcard               = "Keine SD-Speicherkarte";
            mcs_no_hard_disk            = "Keine Festplatte";
            mcs_show_more               = "Weitere Informationen...";
            mcs_shotsnop_exists         = "Foto bereits vorhanden";
            mcs_input_nick              = "Gerätename angeben";
            mcs_nick_not_empty          = "Gerätename muss eingegeben werden.";
            mcs_input_new_pass          = "Neues Passwort eingeben";
            mcs_input_new_pass_again    = "Neues Passwort nochmal eingeben";
            mcs_new_password            = "Neues Passwort";
            mcs_modify_network_prompt   = "Änderung des Netzwerks kann zum Verlust des vorhandenen Nertzwerks führen, bitten bestätigen Sie die Änderung noch einmal?";
            mcs_wifi_disable_prompt     = "Ausschalten des WLANs fortsetzen?";
            mcs_eth_disable_prompt      = "Ethernet ausschalten, fortfahren?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "DHCP verwenden";
            mcs_manually_set            = "Statische Adresse verwenden";
            mcs_dns                     = "DNS verwenden";
            mcs_dns_prim                = "Primäre DNS";
            mcs_client_mode             = "Client";
            mcs_adhoc_mode              = "Adhoc";
            mcs_connect_fail            = "Verbindung fehlgeschlagen";
            mcs_dhcp_server             = "DHCP-Server";
            mcs_display_text            = "Text anzeigen";
            mcs_repair_prompt_detail    = "Reparatur kann zu Datenverlust führen, möchten Sie fortfahren?";
            mcs_format_prompt_detail    = "Durch die Formatierung werden sämtliche Daten auf der SD-Speicherkarte gelöscht. Möchten Sie fortfahren??";
            mcs_mount_prompt            = "SD-Speicherkarte einlegen, fortfahren?";
            mcs_umount_prompt           = "Videos und Fotos können nicht gespeichert werden, wenn die SD-Speicherkarte entfernt wurde. Möchten Sie fortfahren?";
            mcs_sdcard_reset            = "Erfolgreich. Für Aktivierung neu starten. Möchten Sie fortfahren?";
            mcs_sdcard_repairing        = "Reparatur läuft, bitte mit Neustart warten";
            mcs_sdcard_formating        = "Formatierung läuft, bitte mit Neustart warten.";
            mcs_sdcard_umount           = "Entfernen";
            mcs_valid                   = "Gültig";
            mcs_io                      = "IO Alarm";
            mcs_input                   = "Eingang";
            mcs_outinput                = "Ausgang";
            mcs_prompt_alert_on         = "Alarm an, fortfahren?";
            mcs_auto_sync_date_time     = "Auto sync";
            mcs_alarm_record            = "Aufnahme nach Alarm";
            mcs_username                = "Benutzername";
            mcs_re_enter_the_password   = "Passwort erneut eingeben";
            mcs_remember_me             = "Angemeldet bleiben";
            mcs_home                    = "Home";
            mcs_install_the_plug        = "Plugin installieren";
            mcs_install_the_video_plug  = "Video-Plugin installieren ";
            mcs_install_now             = "Jetzt installieren";
            mcs_temporarily_installed_use_ordinary_video = "Nein, später installieren";
            mcs_brightness              = "Helligkeit";
            mcs_contrast                = "Kontrast";
            mcs_color_saturation        = "Sättigung";
            mcs_sharpness               = "Schärfe";
            mcs_duration                = "Dauer";
            mcs_index                   = "Index";
            mcs_remark                  = "Bemerkung";
            mcs_media_stream            = "Medien";
            mcs_server                  = "Server";
            mcs_media_transfer          = "Medien übertragen";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "Hersteller";
            mcs_model                   = "Modell";
            mcs_plugin_version          = "Plugin-Version ";
            mcs_network_interface       = "Netzschnittstelle";
            mcs_transfer_protocol       = "Protokoll übertragen";
            mcs_year                    = "Jahr";
            mcs_month                   = "Monat";
            mcs_day                     = "Tag";
            mcs_hour                    = "Stunde";
            mcs_minute                  = "Minute";
            mcs_second                  = "Sekunde";
            mcs_millisec                = "Millisekunde";
            mcs_ntp                     = "Zeitserver";
            mcs_upload_upgrade          = "Upgrade laden";
            mcs_stop                    = "Stopp";
            mcs_info_rewind             = "Rücklauf";
            mcs_fast_forward            = "Vorlauf";
            mcs_previous_frame          = "Vorheriges Bild";
            mcs_next_frame              = "Nächstes Bild";
            mcs_record_audio            = "Audio aufnehmen";
            mcs_week                    = "Woche";
            mcs_all                     = "Alle";
            mcs_id                      = "ID";
            mcs_select_all              = "Alle auswählen";
            mcs_call                    = "Ticket";
            mcs_activation              = "Aktivierung";
            mcs_caption                 = "Datei hochladen";
            mcs_alarm_device            = "Bewegungsempfindlichkeit";
            mcs_not_installed           = "Nicht installiert";
            mcs_join_us_now             = "Melden Sie sich jetzt an";
            mcs_reconnect_please_wait   = "Wird erneut verbunden, bitte warten";
            mcs_erasing                 = "Löscht";
            mcs_writing                 = "Schreibt";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "Neue Version vorhanden";
            mcs_equipment_flip          = "Drehen";
            mcs_device_status           = "Gerätestatus";
            mcs_audio_setting           = "Audioeinstellungen";
            mcs_nick_modify             = "Kameranamen ändern";
            mcs_ready                   = "Bereit";
            mcs_full                    = "Voll";
            mcs_connecting              = "Verbindet";
            mcs_message_buffering       = "Nachricht zwischenspeichern";
            mcs_upgrade_finish          = "Upgrade abschliessen";
            mcs_image                   = "Bild";
            mcs_bar                     = "Aufnahmen";
            mcs_init                    = "Init";
            mcs_confirm_new_password    = "Neues Passwort bestätigen";
            mcs_continue_switch_wireless_network = "Ein Wechsel des Netzwerks kann einen Netzwerkfehler auslösen. Möchten Sie fortfahren?";
            mcs_restore_factory_settings_prompt = "Gerät wird nach der Wiederherstellung neu gestartet. Auf Werkseinstellungen zurücksetzen?";
            mcs_username_does_not_exis  = "Benutzername existiert nicht..";
            mcs_username_already_exists = "Benutzername existiert bereits.";
            mcs_successful_whether_login = "Anmeldung erfolgreich, jetzt anmelden?";
            mcs_username_demand         = "6-20 Buchstaben oder Zahlen, wobei mit Buchstaben zu beginnen ist.";
            mcs_the_password_is_empty   = "Es wurde kein Passwort eingegeben.";
            mcs_password_demand         = "6-20 Buchstaben oder Zahlen, wobei mit Buchstaben zu beginnen ist.";
            mcs_password_empty          = "Passwort neu eingeben ";
            mcs_two_password_input_inconsistent = "Passwörter stimmen nicht überein";
            mcs_the_user_name_is_empty  = "Es wurde kein Benutzername eingegeben.";
            mcs_upgrade_to_the_latest_version = "Upgrade auf die neueste Version";
            mcs_subnet_mask_wrong_format = "Netzwerkmaske ungültiges Format";
            mcs_upgrade_successful_restart_to_take_effect = "Upgrade erfolgreich, Gerät neu starten";
            mcs_need_to_restart_the_camera_to_take_effect = "Neustart des Geräts erforderlich";
            mcs_not_allowed_close_two_network_cards = "Ethernet und Wi-Fi können nicht gleichzeitig deaktiviert werden";
            mcs_modified_successfully   = "Änderung erfolgreich";
            mcs_connection_successfully = "Verbunden";
            mcs_connection_is_interrupted = "Keine Verbindung";
            mcs_devices_in_the_account_overrun = "Überschreitung der Geräte im Konto";
            mcs_format_error            = "Formatfehler";
            mcs_change                  = "Ändern";
            mcs_refresh                 = "Aktualisieren";
            mcs_connect                 = "Verbinden";
            mcs_upgrade                 = "Upgrade";
            mcs_activate                = "Aktivieren";
            mcs_filter                  = "Filter";
            mcs_reset                   = "Zurücksetzen";
            mcs_prompt_alert_off        = "Alarm aus, fortsetzen?";
            mcs_invalid_server          = "Ungültiger Zeitserver";
            mcs_upgrade_prompt          = "Gerätesoftware aktualisieren, fortfahren?";
            mcs_restart_prompt          = "Gerät neu starten, fortsetzen?";
            mcs_repeat                  = "Wiederholen";
            mcs_scheduled_one           = "Schema 1";
            mcs_scheduled_two           = "Schema 2";
            mcs_scheduled_three         = "Schema 3";
            mcs_scheduled_four          = "Schema 4";
            mcs_more                    = "Mehr";
            mcs_leave                   = "Weiteres Release vorhanden";
            mcs_qrcode_scan             = "QR Kode scannen";
            mcs_inserted                = "Eingefügt";
            mcs_removed                 = "Entfernt";
            mcs_upgrade_init            = "Upgrade starten";
            mcs_upgrade_download        = "Upgrade laden";
            mcs_check                   = "Überprüfen";
            mcs_audio_encoder_config    = "Audio Codec";
            mcs_video_codec             = "Video Codec";
            mcs_download                = "Download";
            mcs_client_download         = "Client Download";
            mcs_for_more_clarity_smooth_video_experience = "Einfache Videoaufnahmen für mehr Einblicke";
            mcs_network                 = "Netzwerk";
            mcs_mobile_client_download  = "Download des mobilen Client";
            mcs_readonly                = "Schreibgeschützt";
            mcs_please_exit_and_relogin = "Bitte beenden und erneut anmelden";
            mcs_add_device_failed       = "Gerät hinzufügen fehlgeschlagen";
            mcs_set_password            = "Passwort einrichten";
            mcs_7x24_hours              = "24/7";
            mcs_mtalt                   = "%@ : Bewegungsmeldung";
            mcs_ioalt                   = "%@ : I/O alarm";
            mcs_time_zone               = "Zeitzone";
            mcs_select_time             = "Zeit auswählen";
            mcs_now                     = "Jetzt";
            mcs_mipc_have_alert_notification = "maxCam Alarmbenachrichtigung";
            mcs_notification_center     = "Benachrichtigungszentrum";
            mcs_sound                   = "Ton";
            mcs_vibration               = "Vibration";
            mcs_clear_cache             = "Cache leeren";
            mcs_clear_cache_hint        = "Sind Sie sicher, dass Sie den Cache leeren möchten?";
            mcs_successfully_cleared_cache = "Cache erfolgreich geleert";
            mcs_app_except_exit_hint    = "Leider ist eine Ausnahme aufgetreten und die Anwendung wird beendet.";
            mcs_rate_us                 = "Bitte bewerten Sie uns.";
            mcs_password_too_simple_hint = "Das Passwort ist zu einfach, Sie sollten es ändern, um die Sicherheit zu verbessern.";
            mcs_check_for_new_version   = "Auf neue Version prüfen";
            mcs_contact_us              = "Kontaktieren Sie uns";
            mcs_buffer_time             = "Pufferzeit";
            mcs_default                 = "Standardwert";
            mcs_alarmed_devices         = "Mit Alarm ausgerüstete Geräte";
            mcs_aec                     = "Echokompensation";
            mcs_permission_denied       = "Keine Genehmigung";
            mcs_full_screen             = "Vollbild";
            mcs_forgot_your_password    = "Passwort vergessen";
            mcs_your_email              = "Ihre E-Mail";
            mcs_sign_up_confirmation    = "Es wird Ihnen eine Bestätigungsmail gesendet, um Ihre E-Mail-Adresse zu überprüfen. Klicken Sie auf den Link, um Ihr Konto zu aktivieren..";
            mcs_recovery_prompt         = "Geben Sie unten Ihre E-Mail (Benutzername) ein und wir senden Ihnen eine E-Mail mit den Anweisungen zum Zurücksetzen Ihres Kontos.";
            mcs_password_reset_confirmation = "Um das Passwort zurückzusetzen, beachten Sie bitte die Anweisungen in der E-Mail.";
            mcs_recovery_fail_no_mail   = "Wiederherstellung des Passworts fehlgeschlagen, mit diesem Konto ist keine E-Mail verbunden.";
            mcs_recovery_fail_invalid_link = "Wiederherstellung des Passworts fehlgeschlagen, bitte folgen Sie den Anweisungen in der E-Mail zur Wiederherstellung..";
            mcs_recovery_ok_login       = "Wiederherstellung des Passworts erfolgreich. Jetzt anmelden.";
            mcs_active_ok_login         = "Kontoaktivierung erfolgreich. Jetzt anmelden";
            mcs_active_fail_invalid_link = "Kontoaktivierung fehlgeschlagen. Versuchen Sie es noch einmal..";
            mcs_login_fail_inactive     = "Konto nicht aktiv. Bitte beachten Sie die Anweisungen in der E-Mail, um ein neues Konto zu aktivieren";
            mcs_sign_up_again           = "Erneut anmelden";
            mcs_press_start_talk        = "Zum Sprechen drücken";
            mcs_release_stop_talk       = "Zum Stoppen lösen";
            mcs_delete_device           = "Löschen";
            mcs_success_removed_equipment = "Gerät erfolgreich entfernt";
            mcs_remove_equipment_failure = "Störung des Geräts beheben";
            mcs_device_busy             = "Gerät arbeitet gerade";
            mcs_keep_testing            = "Test fortsetzen";
            mcs_notify_tone             = "Benachrichtigungston";
            mcs_float_video             = "Schwebendes Fenster für Video aktivieren";
            mcs_float_position          = "Position des schwebenden Videofensters";
            mcs_video_resolution        = "Videoauflösung";
            mcs_float_resolution        = "Auflösung des schwebenden Videofensters";
            mcs_top_left                = "oben links";
            mcs_top_right               = "Oben rechts";
            mcs_bottom_left             = "unten links";
            mcs_bottom_right            = "unten rechts";
            mcs_action_next             = "Weiter";
            mcs_action_cancel           = "Abbrechen";
            mcs_action_retry            = "Erneut versuchen";
            mcs_action_add              = "hinzufügen";
            mcs_is_add                  = "Hinzufügen?";
            mcs_action_apply            = "Anwenden";
            mcs_action_config           = "Konfig";
            mcs_action_skip             = "überspringen";
            mcs_action_ok               = "Ok";
            mcs_action_add_device       = "Gerät hinzufügen";
            mcs_action_modify_password  = "Passwort ändern";
            mcs_action_config_wifi      = "Wi-Fi konfigurieren";
            mcs_state_connect_device    = "Gerät anschliessen";
            mcs_state_connect_device_fail = "Gerät konnte nicht angeschlossen werden.";
            mcs_state_wait_device_online = "Auf Internetverbindung des Geräts warten";
            mcs_state_device_online     = "Online";
            mcs_state_success           = "Erfolgreich";
            mcs_fail                    = "Fehlgeschlagen";
            mcs_delete_success          = "Löschen erfolgreich";
            mcs_state_add_device_success = "Gerät erfolgreich hinzugefügt";
            mcs_state_add_device_fail   = "Gerät konnte nicht hinzugefügt werden.";
            mcs_state_modify_pass_success = "Passwort erfolgreich geändert";
            mcs_state_modify_pass_fail  = "Passwort konnte nicht geändert werden.";
            mcs_state_config_wifi_success = "Wi-Fi-Verbindung erfolgreich.";
            mcs_state_config_wifi_fail  = "Verbindung fehlgeschlagen";
            mcs_state_connecting_to     = "Verbindet mit";
            mcs_network_connect_type    = "Ihr Gerät ist nicht mit dem Internet verbunden, bitte prüfen Sie, ob das Gerät eingeschaltet ist und wählen Sie dann die Netzwerkverbindung aus.:";
            mcs_prompt_modify_passwd    = "Aus Sicherheitsgründen wird das Passwort Standard für das Gerät ändern. Das neue Passwort muss mindestens sechs Zeichen lang sein";
            mcs_prompt_config_wifi      = "Ihr Gerät ist noch nicht mit dem Wi-Fi verbunden, bitte Wi-Fi konfigurieren..";
            mcs_step1_check_connect     = "Schritt 1: Schliessen Sie die Kamera mit einem Kabel an den Router an.";
            mcs_first_step_ethernet_connect = "Schritt 1: Verbinden Sie das eine Ende des Netzwerkkabels mit Ihrem Router und das andere mit der Netzwerkschnittstelle des Geräts..";
            mcs_step2_check_connect     = "Schritt 2: Schalten Sie Ihre Kamera ein..";
            mcs_second_step_ethernet_connect = "Schritt 2: Schalten Sie Ihr Gerät ein.";
            mcs_hint_check_network      = "Hinweis: Die Kamera braucht zum Start etwa 50 Sekunden. Wenn die LED-Leuchte nach dem Start alle 3 Sekunden dreimal grün blinkt, ist die Kamera online. Danach führt Sie der Assistent automatisch zum nächsten Schritt";
            mcs_the_end                 = "Ende";
            mcs_hint_password_expired   = "Das Passwort ist abgelaufen, bitte fügen Sie das Gerät erneut hinzu..";
            mcs_hint_remove_ethernet    = "Hinweis: Die Wi-Fi-Verbindung funktioniert, Sie können jetzt das Kabel entfernen..";
            mcs_gateway_format_incorrect = "Gateway - Adresse nicht richtig formatiert";
            mcs_dns_format_incorrect    = "Das Format der DNS-Adresse ist nicht korrekt.";
            mcs_subnet_mask_format_incorrect = "Subnet MASK Adresse nicht in der richtigen form";
            mcs_ip_format_incorrect     = "Das Format der IP-Adresse ist nicht korrekt.";
            mcs_login_sucess            = "Anmeldung erfolgreich";
            mcs_donot_remind            = "Passwort vergessen?";
            mcs_clear_cache_signout_hint = "Nach Leeren des Cachespeichers sollten Sie sich erneut anmelden. Möchten Sie fortfahren?";
            mcs_devlist_adddev_hint     = "Hier klicken, um Gerät hinzuzufügen.";
            mcs_devlist_menu_hint       = "Klicken Sie hier, um die Auflösung einzustellen.";
            mcs_update_failed           = "Upgrade fehlgeschlagen";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "Lokal";
            mcs_set_npapi               = "Wenn das Plugin installiert wurde, besuchen Sie bitte \'chrome://flags/#enable-npapi\'. Zum Aktivieren von NPAPI,";
            mcs_set_win32k              = "\'chrome://flags/#enable-win32k-renderer-lockdown\', disabled win32k renderer lockdown";
            mcs_restart_browser         = "Browser neu starten";
            mcs_download_location       = "Standort herunterladen";
            mcs_Networking_mode         = "Netzwerkmodus";
            mcs_wifi_intelligent_configuration = "WIFI-Verbindung";
            mcs_ethernet_configuration  = "Ethernet-Anschluss";
            mcs_wifi_connect            = "Verbindung";
            mcs_hard_disk               = "Festplatte";
            mcs_wifi_is_connection      = "Wird verbunden, bitte warten......";
            mcs_wifi_intelligent_configuration_setup_ailure = "Fehler bei Wi-Fi-Konfiguration";
            mcs_box_list                = "Listenfeld";
            mcs_repair_disk_prompt      = "Bei der Reparatur der Festplatte können einige Daten verloren gehen. Möchten Sie fortfahren?";
            mcs_format_disk_prompt      = "Bei der Formatierung der Festplatte werden alle Daten gelöscht. Möchten Sie fortfahren?";
            mcs_scheduled_alerting      = "Warnhinweise planen";
            mcs_scheduled_alerting_one  = "Schema 1";
            mcs_scheduled_alerting_two  = "Schema 2";
            mcs_scheduled_alerting_three = "Schema 3";
            mcs_scheduled_alerting_four = "Schema 4";
            mcs_wifi_config_cancle      = "Wi-Fi-Konfig. beenden";
            mcs_wifi_config_prepare     = "Dazu bereit.";
            mcs_wifi_config_first       = "Die Geräte, Mobiltelefone und Router müssen sich im Umkreis von 1 Meter befinden.";
            mcs_wifi_config_second      = "Wenn die Wi-Fi-Verbindung konfiguriert wird, darf das Netzwerkkabel nicht am Gerät angeschlossen sein.";
            mcs_wifi_config_third       = "Drücken Sie eine Sekunde lang in die Öffnung RESET und lassen Sie dann los.";
            mcs_wifi_config_success     = "Konfiguration erfolgreich";
            mcs_wifi_config_failure     = "Konfiguration fehlgeschlagen";
            mcs_failure_prompt          = "Bitte versuchen Sie es erneut oder prüfen Sie, ob das Wi-Fi-Passwort korrekt eingegeben wurde.";
            mcs_display_password        = "Passwort anzeigen";
            mcs_action_smart_config_wifi = "Konfigurationsassistent";
            mcs_wifi_invalid            = "Bitte verbinden Sie zunächst Ihr Mobiltelefon mit dem Wi-Fi.";
            mcs_phone_not_connect_wifi  = "Nicht mit dem Wi-Fi-Netzwerk verbunden";
            mcs_prompt_check_connection = "Ihre Kamera ist nicht online, bitte überprüfen Sie die Anschlüsse der Kamera..";
            mcs_wifi_cfg_ready          = "Bereit";
            mcs_reset_complete          = "Zurücksetzen abgeschlossen";
            mcs_how_to_restore_factory_settings = "Zurücksetzen auf Werkseinstellungen: Drücken Sie mit dem Stift länger als 10 Sekunden in die Öffnung RESET auf der Unterseite der Kamera.";
            mcs_forgetpass_action_wizard = "Bitte Lange auf Geräte nach 10 sekunden - blenden reset lockern, hören sie die Geräte stimme \"wieder auf die standardeinstellung\".";
            mcs_prompt_check_device_connection = "Ihr Gerät ist nicht online, bitte überprüfen Sie die Anschlüsse des Geräts.";
            mcs_prompt_select_device_connection = "Ihr Gerät ist nicht online, wählen sie die Art der vernetzung";
            mcs_input_wifi_name         = "Bitte geben Sie den Namen der Wi-Fi-Verbindung ein.";
            mcs_action_previous         = "Vorher";
            mcs_io_alert_range_hint     = "IO-Alarm sollte weniger als 60 Sekunden betragen.";
            mcs_io_alert_time           = "Zeitpunkt(e) für IO-Alarm";
            mcs_smart                   = "intelligent";
            mcs_plan                    = "Plan";
            mcs_mute                    = "stumm";
            mcs_wind_speed              = "Windgeschwindigkeit";
            mcs_one                     = "Eine Schaltstufe";
            mcs_two                     = "Zwei Schaltstufen";
            mcs_three                   = "Drei Schaltstufen";
            mcs_purify_mode             = "Modus löschen";
            mcs_video_list              = "Verzeichnis der Videos";
            mcs_wifi_cfg_restore_factory_settings = "Halten Sie das Mobiltelefon nah an das Gerät, wenn für das Gerät Wi-Fi konfiguriert wurde. Drücken Sie mit einem spitzen Gegenstand eine Sekunde lang in die Öffnung RESET, und lassen Sie los. Das Gerät wird auf die Werkseinstellungen zurückgesetzt und startet automatisch neu.";
            mcs_mask_settings           = "Einstellung der Maske";
            mcs_notification_settings   = "Benachrichtigungseinstellungen";
            mcs_alarm_settings          = "Alarmeinstellungen";
            mcs_motion_detection        = "Bewegungserkennung";
            mcs_io_alarm                = "I/O Alarm";
            mcs_connect_status          = "Verbindungsstatus";
            mcs_motion_notification     = "Bewegung und Benachrichtigung";
            mcs_device_connected        = "Das Gerät ist verbunden.";
            mcs_start_spray             = "Ausstrahlung beginnen?";
            mcs_available_network       = "Netzwerk nicht verfügbar, Netzwerk prüfen";
            mcs_select_wifi_wizard      = "Bitte wählen Sie zuerst ein Netzwerk.";
            mcs_input_wifi_password     = "Wi-Fi-Passwort eingeben";
            mcs_device_admin_password   = "Passwort des Geräteadministrators";
            mcs_device_guest_password   = "Gastpasswort für Gerät";
            mcs_user_admin_password     = "Administratorpasswort für Benutzer";
            mcs_user_guest_password     = "Gastpasswort für Benutzer";
            mcs_save_network_set        = "Netzwerkeinstellungen und Passwort speichern";
            mcs_nickname_not_set        = "Kein Kurzname für die Kamera eingestellt";
            mcs_current_wifi            = "Aktuelles Wi-Fi";
            mcs_current_password_strength = "Sicherheit des derzeitigen Passworts";
            mcs_new_password_strength   = "Sicherheit des neuen Passworts";
            mcs_needs_to_open_the_DHCP  = "Bei Ihrem Router muss die DHCP-Funktion (IP-Adresse automatisch beziehen) aktiviert sein. Sollte dies nicht funktionieren, wenden Sie sich bitte an den Administrator.";
            mcs_picture                 = "Bild";
            mcs_quality                 = "Qualität";
            mcs_size                    = "Grösse";
            mcs_guest_login             = "Gästeanmeldung";
            mcs_audio_and_video         = "Audio / Video";
            mcs_volume                  = "Lautstärke";
            mcs_smooth                  = "Rund";
            mcs_clear                   = "Löschen";
            mcs_handsfree               = "HF";
            mcs_headphone               = "Kopfhörer";
            mcs_my                      = "Konto";
            mcs_customer_service        = "Kundenservice";
            mcs_firefox_flash_uninstall = "Falls das Flash-Plugin nicht zur Verfügung steht, finden Sie Hilfe unter https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "Plugins";
            mcs_plug_load               = "Plugins laden";
            mcs_plug_load_refuse        = "Plugins nicht laden";
            mcs_plug_load_auto          = "Automatisch";
            mcs_option                  = "Optionen";
            mcs_option_ok               = "Festlegen";
            mcs_voice_call_fails        = "Anruf fehlgeschlagen, bitte Netzwerk prüfen";
            mcs_umounted_prompt         = "Entfernen?";
            mcs_mounted_prompt          = "Einbauen?";
            mcs_format_prompt           = "Formatieren?";
            mcs_repair_prompt           = "Reparieren?";
            mcs_signup_prompt           = "Für Neueinsteiger";
            mcs_wifi_connect_sucess_prompt = "Hinweis: Die Wi-Fi-Verbindung funktioniert, Sie können die Netzwerkverbindung jetzt trennen.";
            mcs_manual_input_prompt     = "Geräte-ID manuell eingeben";
            mcs_qrscan_prompt           = "Sie haben dieser App bislang nicht den Zugriff auf Ihre Kamera gestattet. Unter den Einstellungen des iPhones - \'Datenschutz\' - \'Kamera\' finden Sie die App \'Vimtag\'.";
            mcs_select_network_style    = "Netzwerkverbindungsmodus auswählen";
            mcs_push                    = "Mitteilung";
            mcs_connect_power_prompt    = "Hinweis: Das Gerät ist nicht online, bitte vergewissern Sie sich, dass das Gerät an die Stromzufuhr angeschlossen ist.";
            mcs_fail_microphone         = "Kein Zugriff auf das Mikrophon";
            mcs_microphone_prompt       = "Sie gestatten dieser App keinen Zugriff auf Ihr Mikrophon. Unter den Einstellungen des iPhones - \'Datenschutz\' - \'Mikrophon\' können Sie bei der App \'Vimtag\' die entsprechenden Änderungen vornehmen.";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "HD";
            mcs_standard_clear          = "Standard";
            mcs_fluent_clear            = "Reibungslos";
            mcs_deleting                = "Löscht...";
            mcs_event                   = "Ereignis";
            mcs_one_hour                = "1 Stunde";
            mcs_half_hour               = "30 min";
            mcs_five_min                = "5 min";
            mcs_category                = "Kategorie";
            mcs_time_length             = "Dauer";
            mcs_new                     = "Neu";
            mcs_week_setting_prompt     = "Woche muss eingegeben werden";
            mcs_time_setting_prompt     = "Zeit muss eingegeben werden";
            mcs_today                   = "Heute";
            mcs_wifi_password           = "Wi-Fi-Passwort";
            mcs_register_prompt         = "Bitte registrieren Sie sich zuerst.";
            mcs_click_login             = "Klicken Sie hier, um sich anzumelden.";
            mcs_not_login_prompt        = "Sie haben sich nicht angemeldet, bitte klicken Sie hier, um sich anzumelden.";
            mcs_product_presentation    = "Home";
            mcs_help_feedback           = "FAQ";
            mcs_help_information        = "FAQ";
            mcs_feedback                = "Feedback";
            mcs_feedback_des            = "Dank der Verwendung von WIR - app, aufgefordert, uns ihre wertvollen Vorschlag";
            mcs_feedback_praise         = "Lob";
            mcs_feedback_title_prompt   = "Feedback - titel";
            mcs_feedback_title          = "Bitte geben sie den titel (18 Wörter)";
            mcs_feedback_type_prompt    = "Art der probleme";
            mcs_feedback_please_select  = "Bitte wählen sie eine Art";
            mcs_feedback_select_option1 = "nterface - problem";
            mcs_feedback_select_option2 = "Kamera - problem";
            mcs_feedback_select_option9 = "Andere probleme";
            mcs_feedback_dec_prompt     = "Konkrete Beschreibung";
            mcs_feedback_dec            = "Bitte geben sie ihre Bemerkungen";
            mcs_feedback_upload_photo   = "Das hochladen von Fotos";
            mcs_preview_pic             = "Vorschau";
            mcs_Album                   = "Wählen Sie aus dem Album";
            mcs_Photograph              = "Foto";
            mcs_camera_unavailable      = "Nicht verfügbar mit Ihrer Kamera";
            mcs_feedback_submit         = "Vorlage";
            mcs_feedback_title_alert    = "Der titel nicht im einklang mit den regeln";
            mcs_feedback_type_alert     = "Bitte wählen sie die richtige Art";
            mcs_feedback_dec_alert      = "Bitte geben sie ihre Bemerkungen";
            mcs_feedback_submit_success = "Hat der Erfolg";
            mcs_feedback_submit_fail    = "Vorlage gescheitert";
            mcs_connect_wifi_prompt     = "Mit Wi-Fi verbinden";
            mcs_cloud                   = "Cloud";
            mcs_demo                    = "demo";
            mcs_shortest                = "Schnelltest";
            mcs_no_history              = "Kein Verlauf";
            mcs_download_pc_client      = "Klicken Sie hier, um den PC-Client herunterzuladen.";
            mcs_accounts_bind_email_exist = "Das Konto wurde mit der Mailbox verknüpft.";
            mcs_accounts_bind_email_busy = "Die Mailbox wurde mit dem Konto verknüpft.";
            mcs_systemupdatetip_noversionnodetail = "Es steht eine neue Version für ein Upgrade zur Verfügung, jedoch keine detaillierte Beschreibung";
            mcs_systemupdatetip_nodetail = "Keine detaillierte Beschreibung";
            mcs_systemupdatetip_updatefrom = "Ihre aktuelle Version";
            mcs_systemupdatetip_updateto = "Upgrade möglich auf";
            mcs_systemupdatetip_sureforupdate = "Wollen Sie dieses Upgrade durchführen?";
            mcs_systemupdatetip_updatecontent = "Einzelheiten zu diesem Upgrade";
            mcs_operate_prompt          = "Bitte bedienen Sie das Gerät wie dargestellt.";
            mcs_operation_prompt        = "Operation veranlasst";
            mcs_qrcode_prompt_content   = "Verwenden Sie die Kamera des Geräts, um den mobilen QR-Code einzuscannen.";
            mcs_qrcode_camera_distance  = "QR-Code mit Kameraabstand 12 - 14 cm";
            mcs_planvideo_datewizard    = "Bitte Datum einstellen";
            mcs_planvideo_timewizard    = "Bitte Zeit einstellen";
            mcs_planvideo_wizard        = "Bitte Zeit und Datum einstellen";
            mcs_email_unbind            = "E-Mail-Konto passt nicht";
            mcs_email_unmatch           = "Mailbox stimmt nicht überein";
            mcs_email_inactive          = "E-Mail nicht aktiviert";
            mcs_email_binded            = "E-Mail wurde verknüpft";
            mcs_user_binded_bymail      = "Der Benutzer wurde verknüpft";
            mcs_bind_email_fail         = "Die Verbindung mit der Mailbox ist fehlgeschlagen.";
            mcs_diagnosis               = "Diagnose";
            mcs_delay                   = "Verzögerung";
            mcs_packet_loss_rate        = "Paketverlustrate";
            mcs_timezone_IDL            = "Internationale Datumslinie";
            mcs_timezone_China          = "China";
            mcs_timezone_Midway         = "Midwayinseln";
            mcs_timezone_Niue           = "Niue";
            mcs_timezone_Samoa          = "Amerikanisch-Samoa";
            mcs_timezone_Aleutian       = "Aleuten";
            mcs_timezone_Hawaii         = "Hawaii-Inseln";
            mcs_timezone_Alaska         = "Alaska";
            mcs_timezone_PSTUSCanada    = "PST (US&Kanada)";
            mcs_timezone_Arizona        = "Arizona";
            mcs_timezone_MSTUSCanada    = "Mountain Standard Time (US&Kanada)";
            mcs_timezone_CSTUSCanada    = "Central Standard Time (US&Kanada)";
            mcs_timezone_ESTUSCanada    = "Eastern Standard Time (US&Kanada)";
            mcs_timezone_ASTCanada      = "AST (Kanada)";
            mcs_timezone_Newfoundland   = "Neufundland";
            mcs_timezone_Brasilia       = "Brasilia";
            mcs_timezone_BuenosAires    = "Buenos Aires";
            mcs_timezone_Santiago       = "Santiago";
            mcs_timezone_Noronha        = "Noronha";
            mcs_timezone_SouthGeorgia   = "Südgeorgien";
            mcs_timezone_Azores         = "Azoren";
            mcs_timezone_CapeVerde      = "Kap Verden";
            mcs_timezone_London         = "London";
            mcs_timezone_Lisbon         = "Lissabon";
            mcs_timezone_Dublin         = "Dublin";
            mcs_timezone_Berlin         = "Berlin";
            mcs_timezone_Amsterdam      = "Amsterdam";
            mcs_timezone_Brussels       = "Brüssel";
            mcs_timezone_Budapest       = "Budapest";
            mcs_timezone_Madrid         = "Madrid";
            mcs_timezone_Paris          = "Paris";
            mcs_timezone_Rome           = "Rom";
            mcs_timezone_Sarajevo       = "Sarajevo";
            mcs_timezone_Cairo          = "Kairo";
            mcs_timezone_Amman          = "Amman";
            mcs_timezone_Beirut         = "Beirut";
            mcs_timezone_Istanbul       = "Istanbul";
            mcs_timezone_Jerusalem      = "Jerusalem";
            mcs_timezone_Athens         = "Athen";
            mcs_timezone_Baghdad        = "Bagdad";
            mcs_timezone_Riyadh         = "Riad";
            mcs_timezone_Qatar          = "Katar";
            mcs_timezone_Moscow         = "Moskau";
            mcs_timezone_Tehran         = "Teheran";
            mcs_timezone_Baku           = "Baku";
            mcs_timezone_Dubai          = "Dubai";
            mcs_timezone_Tbilisi        = "Tiflis";
            mcs_timezone_Kabul          = "Kabul";
            mcs_timezone_Karachi        = "Karatschi";
            mcs_timezone_Yekaterinburg  = "Jekaterinburg";
            mcs_timezone_Maldives       = "Malediven";
            mcs_timezone_Calcutta       = "Kalkutta";
            mcs_timezone_Colombo        = "Colombo";
            mcs_timezone_Katmandu       = "Katmandu";
            mcs_timezone_Almaty         = "Almaty";
            mcs_timezone_Dhaka          = "Dhaka";
            mcs_timezone_Omsk           = "Omsk";
            mcs_timezone_Thimbu         = "Thimphu";
            mcs_timezone_Rangoon        = "Rangun";
            mcs_timezone_Bangkok        = "Bangkok";
            mcs_timezone_Jakarta        = "Jakarta";
            mcs_timezone_Vientiane      = "Vientiane";
            mcs_timezone_Harbin         = "Harbin";
            mcs_timezone_Shanghai       = "Shanghai";
            mcs_timezone_Hongkong       = "Hongkong";
            mcs_timezone_Singapore      = "Singapur";
            mcs_timezone_Taipei         = "Taipeh";
            mcs_timezone_Ulaanbaatar    = "Ulaanbaatar";
            mcs_timezone_Perth          = "Perth";
            mcs_timezone_Seoul          = "Seoul";
            mcs_timezone_Tokyo          = "Tokyo";
            mcs_timezone_Darwin         = "Darwin";
            mcs_timezone_Magadan        = "Magadan";
            mcs_timezone_Vladivostok    = "Wladiwostok";
            mcs_timezone_Guam           = "Guam";
            mcs_timezone_Sydney         = "Sydney";
            mcs_timezone_Canberra       = "Canberra";
            mcs_timezone_Melbourne      = "Melbourne";
            mcs_timezone_Queensland     = "Queensland";
            mcs_timezone_LordHowe       = "Lord-Howe-Insel";
            mcs_timezone_Guadalcanal    = "Guadalcanal";
            mcs_timezone_Fiji           = "Fidji";
            mcs_timezone_Auckland       = "Auckland";
            mcs_timezone_Apia           = "Apia";
            mcs_timezone_Fakaofo        = "Fakaofo";
            mcs_timezone_Tongatapu      = "Tongatapu";
            mcs_timezone_Kiritimati     = "Kiritimati";
            mcs_connect_timeout         = "Zeitüberschreitung bei der Verbindung";
            mcs_share                   = "Teilen";
            mcs_share_prompt_start      = "Sie können";
            mcs_share_prompt_end        = "das Video über den Browser auf dem PC oder das Android-Telefon im gleichen Netzwerk herunterladen.";
            mcs_share_note              = "Bitte verlassen Sie die Seite nicht während des Downloads.";
            mcs_video_size              = "Grösse";
            mcs_video_duration          = "Dauer";
            mcs_my_folder               = "Mein Ordner";
            mcs_account_no_contain      = "Das Konto enthält nicht";
            mcs_edit                    = "Bearbeiten";
            mcs_video_number            = " Video";
            mcs_no_local_video          = "Keine Aufnahme";
            mcs_empty_folder            = "Ordner ist leer";
            mcs_no_history_record       = "Keine Aufnahmen vorhanden.";
            mcs_no_local_record         = "Keine lokalen Aufnahmen vorhanden.";
            mcs_empty_cloud_list_first  = "Ihr Cloud-Verzeichnis ist leer.";
            mcs_empty_cloud_list_second = "Klicken Sie auf die linke obere Ecke";
            mcs_empty_cloud_list_third  = "Gerät hinzufügen!";
            mcs_empty_local_list_first  = "Ihr lokales Verzeichnis ist leer.";
            mcs_empty_local_list_second = "Versuchen";
            mcs_empty_local_list_third  = "Bildschirm auswählen";
            mcs_empty_local_list_forth  = "Aktualisieren";
            mcs_empty_local_list_fifth  = "(Suchen Sie über die LAN-Verbindung nach weiteren Geräten）";
            mcs_record_prompt           = "Sie finden die Aufnahme unter \"My->My Folder\"";
            mcs_record_download_prompt  = "sie können den rekord im \"mein ordner\"";
            mcs_register_buton_start    = "Kein Konto?,";
            mcs_register_buton_end      = "Zum Anmelden antippen";
            mcs_product                 = "Produkt";
            mcs_user_or_password_invalid = "Ungültiger Benutzername oder Passwort";
            mcs_share_video_prompt      = "Sie sind nicht mit dem Wi-Fi-Netzwerk verbunden, bitte wechseln Sie zu Wi-Fi, um die Daten zu teilen.";
            mcs_download_video_prompt   = "Sie sind nicht mit dem Wi-Fi-Netzwerk verbunden, daher entstehen beim Download Verbindungskosten. Möchten Sie fortfahren?";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "Normal";
            mcs_common_problem          = "Allgemeines Problem";
            msc_enter_comment           = "Anmerkungen eingeben";
            msc_description             = "Beschreibung";
            mcs_parameter               = "Parameter";
            mcs_help_and_feedback       = "Hilfe und Feedback";
            mcs_personal_center         = "Personal Center";
            mcs_version                 = "version";
            mcs_language                = "Sprache";
            mcs_new_user                = "Ich bin ein neuer Benutzer";
            mcs_have_account            = "Bestehendes Konto";
            mcs_try_it                  = "Ausprobieren";
            mcs_sign_up_now             = "Anmeldung";
            mcs_input_confirm_password  = "Passwort bestätigen";
            mcs_warranty_registration   = "Garantieregistrierung";
            mcs_get_more_cameras        = "Weitere Kameras";
            mcs_user_inactive           = "Benutzer nicht aktiv";
            mcs_format_options          = "Format";
            mcs_slide_screen            = "Schieben Sie den Bildschirm, um den Video-Winkel einzustellen";
            mcs_zoom_in_screen          = "Den Bildschirm kneten können die Video-Details vergrößern";
            mcs_pause                   = "Pause";
            mcs_source                  = "Quelle";
            mcs_magnetic                = "magnetisch";
            mcs_sos                     = "Notruftaste";
            mcs_input_download_path     = "Download-Pfad";
            mcs_download_path_name_error = "Laden Sie den Namen Dateipfad kann nur Buchstaben (a-z, A-Z) oder numerisch (0-9) enthalten";
            mcs_active                  = "Aktivität";
            mcs_out                     = "verlassen";
            mcs_quiet                   = "ruhig";
            mcs_scenes                  = "Szene";
            mcs_accessory               = "Zubehörteil";
            mcs_quiet_mode              = "Quiet -Modus";
            mcs_active_mode             = "Aktiv-Modus";
            mcs_out_mode                = "Away Mode";
            mcs_add_accessory           = "Anhänge hinzufügen";
            mcs_accessory_type          = "Zubehör-Typ";
            mcs_add_successfully        = "Erfolgreich in";
            mcs_set_scene               = "Ihre Anlagen noch nicht in Szene zu setzen , klicken Sie bitte";
            mcs_to_set                  = "So legen";
            mcs_add_accessory_button    = "Drücken Sie die Taste, bis das rote Licht wieder erlischt das Add abzuschließen";
            mcs_auto_monday             = "Montag";
            mcs_auto_tuesday            = "Dienstag";
            mcs_auto_wednesday          = "Mittwoch";
            mcs_auto_thursday           = "Donnerstag";
            mcs_auto_friday             = "Freitag";
            mcs_auto_saturday           = "Samstag";
            mcs_auto_sunday             = "Sonntag";
            mcs_search                  = "Suche";
            mcs_format_input            = "Die formatierung der festplatte";
            mcs_get_accessory_failed    = "Anhang fehlgeschlagen zu erhalten";
            mcs_get_scene_failed        = "Erhalten Sie Ausfallszenarien";
            mcs_search_failed           = "Suche fehlschlägt";
            mcs_add_failed              = "hinzufügen fehlgeschlagen";
            mcs_ethernet_connect        = "Ethernet";
            mcs_action_click_retry      = "Klicken Sie auf Wiederholen";
            mcs_wifi_config_failure_detail = "Oder Sie können versuchen";
            mcs_qrcode_connect          = "Zweidimensionalen Code verbunden";
            mcs_close_sound_prompt      = "Open Sound hilft die Wi-Fi- Verbindung zu erstellen. Halten Sie dafür den Lautsprecher Ihres Gerätes nahe an das Mikrofon der Kamera.";
            mcs_qrcode_prompt_title     = "Bitte Operationen in Fig.";
            mcs_qrcode_prompt_detail    = "Bitte richten Sie die Kamera-Objektiv auf den QR-Code genau und halten den Abstand 30 cm sein.";
            mcs_select_wifi_prompt      = "Kein Ethernet-Kabel erforderlich";
            mcs_select_ethernet_prompt  = "Ethernet-Kabel erforderlich";
            mcs_enter_config_mode_prompt = "Bitte überprüfen Sie Wifi Indikator ist drei rote drei grün blinken abwechselnd. Wenn ja, klicken Sie bitte auf die Schaltfläche Weiter. Wenn nicht, drücken Sie auf der Kamera die Taste RESET. Dann die Anzeige Wi-Fi erneut prüfen";
            mcs_no_enter_config_mode    = "Nicht Konfigurationsmodus";
            mcs_record_time             = "Aufzeichnungsdauer(s)";
            mcs_stop_search             = "Suche ausschalten";
            mcs_smart_wifi_setup        = "Smart-Wireless-LAN-Setup";
            mcs_ethernet_setup          = "Ethernet-Kabel erforderlich";
            mcs_wifi_config_restore_start = "1) Schalten Sie Ihr Gerät ein";
            mcs_wifi_config_restore_end = "2) Drücken Sie die Reset-Öffnung für eine Sekunde, wird das Gerät wieder her und starten Sie nach 60 Sekunden wird dann geben Sie den Konfigurationsmodus automatisch";
            mcs_Sense_schedule          = "Szenarioplanung";
            load_succeed                = "Laden Erfolg";
            load_fail                   = "Fehler beim laden";
            refresh_succeed             = "aktualisieren Erfolg";
            refresh_fail                = "Aktualisieren fehlgeschlagen";
            mcs_ensure_dev_power        = "1) Schalten Sie Ihr Gerät ein";
            all_refresh_complete        = "Alle Daten werden aktualisiert";
            mcs_synchronize             = "synchron";
            mcs_synchronize_detail      = "Profile der folgenden Geräte und Einstellungen inkonsistent , müssen nach der zu synchronisierenden arbeiten";
            mcs_Sense_Schedule_Set      = "Szenarioplanung Set";
            mcs_Sence_Schedule_detail   = "Wenn Sie die automatische Szenenmodus zu aktivieren, schaltet das System automatisch nach Szenarioplanung Szenarien zu unterschiedlichen Zeiten";
            mcs_Scene_set               = "Profile";
            mcs_Scene_set_detail        = "Wenn Sie ein Profil zu aktivieren, nach der Profil -Einstellungen in den folgenden Seiten";
            mcs_send_message            = "senden Sie eine Nachricht";
            mcs_start_recording         = "Aufnahme starten";
            mcs_start_capture           = "Starten Sie Capture";
            mcs_turn_on_video           = "Um die Daueraufzeichnungsmodus  verlassen , öffnen Sie das Video";
            mcs_search_press_button     = "Drücken Sie die Zurück-Taste für 1 Sekunde nach der Veröffentlichung, die Anzeige blinkt langsam";
            mcs_add_fail1               = "Nach absagen noch Geräte wegen der kurzen, klicken sie bitte versuchen, versuchen, wieder suche hinzufügen";
            mcs_add_fail2               = "Geräte nicht hinzufügen, klicken sie versuchen, versuchen, wieder suche hinzufügen";
            mcs_recording_duration      = "Aufzeichnungsdauer (in Sekunden)";
            mcs_settings_unsaved        = "Ihre Einstellungen wurden nicht gespeichert";
            mcs_want_save               = "Wird es zu retten?";
            mcs_camera                  = "Videokamera";
            mcs_router                  = "Router";
            mcs_start_up                = "Start";
            mcs_cancle_add              = "Equipment hat aufgrund der kurzen Presse Add abgesagt";
            mcs_visit_photo_fail        = "Den fotoalbum gescheitert";
            mcs_camera_cell             = "Die Kamera";
            mcs_myphoto                 = "Meine Fotos";
            mcs_select_photo            = "Wählen sie";
            mcs_app_new_version         = "Die neue version";
            mcs_update_new_version      = "Upgrade";
            mcs_app_new_version_prompt  = "App hat eine neue Version haben, wählen Sie herunterladen Jetzt aktualisieren";
            download_failed             = "Download fehlgeschlagen";
            mcs_connect_server_prompt   = "WiFi verbunden ist, wird es mit dem Server verbunden";
            mcs_local_search            = "Lokale Suche";
            mcs_choose_device_type      = "wählen sie gerätetyp";
            mcs_wifi_state              = "Anm.: WiFi funktioniert, jetzt können sie trennen die Netzwerk - Kabel (trennen die Netzwerk - Kabel auftreten nach Gerät nicht online - Fall, bitte warten 20 sekunden Automatisch online)";
            mcs_sweep                   = "Sweep";
            mcs_wifi_config_tip         = "Einen router, wifi -, um zu vermeiden, dass die leitungen sorgen";
            mcs_ethernet_config_tip     = "Das Kabel keine router einfügen";
            mcs_ethernet_connect_step_one = "Der Erste Schritt: dafür sorgen, dass DAS ladekabel MIT Strom - 2 1";
            mcs_ethernet_connect_step_two = "Der Zweite Schritt: die Netzwerk - 4 MIT DEM router, Hafen - und Kamera - Port";
            mcs_sweep_qrcode_tip        = "HANDY - kameras, die Sich DEM 2d - code Halten, 30 cm abstand";
            mcs_sound_config_tip        = "Musik hilft die WLAN - Verbindung.(können auch geschlossen)";
            mcs_sosalt                  = "%@ : Notruftaste Alarm(%@)";
            mcs_dooralt                 = "%@ : Magnetic Alarm(%@)";
            mcs_wifi_config_restore     = "Bitte drücken sie den Knopf nach 1 sekunde Locker, \"Gerät in den WiFi - modus\".";
            mcs_voice_remind_heard      = "Höre Die Stimme";
            mcs_netWork_prompt          = "Internet - TIPPS";
            mcs_con_netWork             = "Netzwerk derzeit im Einsatz für die Datenverbindung , kann es eine Menge Verkehr verbrauchen, wenn die Netzwerk-Schnittstelle Einstellungen zu springen";
            mcs_no_netWork              = "Zurzeit gibt es keine Netzwerkverbindung , ob der Sprung, um die Netzwerkeinstellungen Schnittstelle einzurichten";
            mcs_exception_des           = "Ihre App letzte Ausnahme Ausgang, ob eine Fehlermeldung an den Server zu senden";
            mcs_exception_prompt        = "Tipp abnormal";
            mcs_erro_diagnosis          = "Störungssuche";
            mcs_erro_log_des            = "App den letzten Rekord Fehlerprotokoll , wählen Sie den Absenden-Button ein Fehlerprotokoll zu laden, vielen Dank für Ihre Mitarbeit!";
            mcs_is_submitting           = "Being eingereicht";
            mcs_firmware_version        = "Firmware-Version";
            mcs_device_assembly         = "1.Stromleitung  2.Stromanschluss  3.Ethernet-Anschluss  4.Kabel  5.Adapter";
            mcs_forgetpass_action_wizard_old = "Drücken Sie die Reset-Taste für eine Sekunde, wird das Gerät auf die Werkseinstellungen und 60 Sekunden nach dem Neustart wieder herzustellen, das Admin-Passwort-Recovery";
            mcs_device_assembly_mipc    = "1.Stromleitung  2.Stromanschluss  3.Ethernet-Anschluss  4.Kabel";
            mcs_device_connect_power_prompt = "Gerät nicht online, bitte, Wie in der abbildung dargestellt, ihre EINRICHTUNGEN zugang zu Strom macht Licht rot sehen, IST OFT Hell, ausrüstung, inbetriebnahme abgeschlossen.";
            mcs_lights_sound            = "Bereits gesehen";
            mcs_connect_power           = "Im zusammenhang mit der Energieversorgung";
            mcs_search_magnetic         = "Wie gezeigt, langsam die kombinierte magnetische Tür und drücken Sie die seitliche Taste für 1 Sekunde nach der Veröffentlichung, die Anzeige blinkt";
            mcs_add_magnetic            = "Nach der Türsensor öffnen die Anzeige blinken ab Beendigung der Zugabe zu fusionieren, sehen";
            mcs_already_downloaded      = "Heruntergeladene";
            mcs_my_order                = "Meine bestellung";
            mcs_auto_mode               = "Automatik-Modus";
            mcs_new_small               = "Klein";
            mcs_new_half                = "Mittel";
            mcs_new_normal              = "Normal";
            mcs_new_hd                  = "HD";
            mcs_scene_now               = "Aktuelle Situation";
            mcs_please_install_wechat   = "Bitte installieren sie WeChat";
            mcs_wechat_not_support      = "Bitte aktualisieren WeChat WeChat fassung nicht unterstützen.";
            mcs_motion_alert            = "Bewegungsmeldung";
            mcs_io_alert                = "I/O alarm";
            mcs_valid_user_name         = "Schritt 1: bitte geben sie eine gültige benutzernamen";
            mcs_binding_mailbox         = "Der Zweite Schritt: bitte geben sie eine verbindliche e - mail";
            mcs_send_mailbox_succuess_prev = "Wir haben Ihnen verbindliche e - mail - biografie ";
            mcs_send_mailbox_succuess_next = " In Einem brief um ihr passwort per e - mail senden, bitte beachten sie, dass der empfang Von e - mails.";
            mcs_all_image               = "Alle bilder";
            mcs_unavailable_image       = "Bild nicht vorhanden, bitte Neu wählen";
            mcs_set_nickname            = "Einstellen Spitznamen";
            mcs_search_timeout          = "Zeit zu suchen , klicken Sie auf Suche";
            mcs_screen_size             = "Bildschirmeinstellungen";
            mcs_screen_reset            = "Erfolgreich. Für Aktivierung neu starten";
            mcs_wifi_network_prompt     = "Bitte prüfen, ob eine Kamera MIT 5 - GHz - band WiFi ist die wifi, bitte Lassen sie die Kamera IST MIT 2.4ghz WiFi";
            mcs_fault_diagnosis         = "Der Netzwerk - Diagnose";
            mcs_sever_diagnosis         = "Vielleicht wegen der server - Fehler führen, die nicht funktionieren.";
            mcs_select_problem          = "Bitte wählen sie ein problem";
            mcs_connot_lonin            = "Nicht anmelden.";
            mcs_connot_play             = "Nicht spielen";
            mcs_add_problems            = "Ein zusätzliches problem";
            mcs_encounterer_problems    = "Bitte geben sie die probleme";
            mcs_diagnostic_network      = "Diagnose starten";
            mcs_network_diagnostic_prompt = "In der Netzwerk - Diagnose können WIR Besser ihre probleme lösen, Diagnose, wenn etwa ein paar minuten länge erforderlich";
            mcs_network_diagnostic      = "Störungssuche";
            mcs_connecting_server       = "Server - Verbindung.";
            mcs_diagnostic_process_prompt = "Diagnoseprozess kann einige Minuten dauern, während der Diagnose nicht durchführen anderen Operationen, aber man kann immer die Diagnose stoppen";
            mcs_diagnostic_results      = "Die Diagnose";
            mcs_diagnostic_results_received = "Diagnose abgeschlossen ist, haben sich die Diagnoseergebnisse eingegangen";
            mcs_diagnostic_results_prompt = "Vielen Dank für die Teilnahme an dieser Diagnose werden Diagnoseergebnisse helfen uns Ihr Problem zu beheben, so bald wie möglich";
            mcs_results_no_abnormality  = "Die Diagnose nicht ungewöhnlich";
            mcs_no_abnormality_prompt   = "Die Diagnose wurde keine Anomalie gefunden. Sie können die Tiefe der Diagnose wählen, die Log-Sammlung Fähigkeiten beginnen wird uns helfen, das Problem besser lösen Sie erleben";
            mcs_continue_diagnosis      = "Tiefendiagnose";
            mcs_diagnosis_connot_sent   = "Die Diagnose nicht senden";
            mcs_email_sends             = "Senden sie eine e - mail";
            mcs_email_sends_prompt      = "Senden Diagnoseergebnisse an uns per E-Mail, wird es uns helfen, Ihr Problem zu beheben, so bald wie möglich";
            mcs_diagnosis_send          = "Senden";
            mcs_diagnosis_email         = "Per e - mail";
            mcs_send_successful         = "Sent erfolgreich";
            mcs_diagnosis_type_select_prompt = "Sie bitte die Art der Diagnose wählen";
            mcs_stop_diagnosis          = "Stop-Diagnose";
            mcs_detail_diagnosis_prompt = "Diagnose gehen, können Sie die Geräteseite ausschalten";
            mcs_detail_diagnosis_stop_prompt = "Tiefe Diagnose ist im Gange, können Sie immer abbrechen";
            mcs_exit_detail_diagnosis   = "Tiefe Diagnose ist im Gange, ob zu stoppen?";
            mcs_network_connection_unavailable = "Netzwerkverbindung ist nicht verfügbar";
            mcs_Failed_connect_Internet = "Konnte nicht mit dem Internet zu verbinden";
            mcs_connect_internet_note   = "Wenn Sie mit dem Internet zu verbinden, beachten Sie bitte folgendes:";
            mcs_connect_internet_detail_first = "Überprüfen Sie Ihr Telefon Wireless-LAN-Einstellungen, um zu sehen, ob es einen Zugang zu einem Wireless LAN-Signal";
            mcs_connect_internet_detail_second = "Überprüfen Sie, ob Ihr Telefon Zugang zu einem Mobilfunknetz hat, und das Telefon wurde nicht deaktiviert";
            mcs_connect_wifi_note       = "Wenn Sie Zugriff auf das Wireless-LAN haben:";
            mcs_connect_wifi_detail     = "Überprüfen Sie, ob Ihr Wireless-LAN-Hotspot-Verbindung Zugang zum Internet hat, oder wenn der Hotspot ermöglicht das Gerät das LAN zugreifen";
            mcs_device_or_phone_time_zone_not_equals_please_select = "Geräte aktuelle Zeitzone und die Zeitzone des Mobiltelefons nicht, wählen Sie die richtige Zeitzone";
            mcs_phone_timezone          = "Telefon-Zeitzone ";
            mcs_timezone_change         = "Ändern Sie die Zeitzone";
            mcs_mail_send               = "Nachricht gesendet";
            mcs_yes_verif               = "es";
            mcs_no_verif                = "keine";
            mcs_camera_found_new_version_y_n_upgrade = "Wir fanden eine neue Version der Kamera, ob das Upgrade?";
            mcs_auto_adapt_split_screen = "Adaptive";
            mcs_four_split_screen       = "Vier der split - screen -";
            mcs_nine_split_screen       = "Der split - screen - 9";
            mcs_twelve_split_screen     = "Zwölf der split - screen -";
            mcs_not_connection_server   = "Server ist nicht möglich zu verbinden";
            mcs_more_options            = "Mehr";
            mcs_bind_email_prompt       = "Um die Sicherheit zu berücksichtigen, binden Ihre Mailbox";
            mcs_login_now               = "Melden Sie sich jetzt";
            mcs_device_connect_power    = "1.Stromleitung     2.Stromanschluss";
            mcs_device_connect_ethernet = "1. Der Mund      2. Kabel";
            mcs_device_connect_ethernet_prompt = "Der zugang zum Netz Kabel und ein ende, auf der anderen Seite Access router, haben - Lampe blinken grün, Kabel - Verbindung beendet.";
            mcs_pwd_format              = "Das format in der länge zwischen 8 bis 16 - bit - Zeichen, Zahlen, buchstaben und sonderzeichen enthält mindestens drei";
            mcs_client_new              = "Der client";
            mcs_user_guide              = "- leitfaden für den Benutzer";
            mcs_ebitcam_download_describe = "EBITCAM ist ein cloud - monitoring - Service - software, die software mit der cloud - Kamera verwendet, so dass der nutzer auf video - Informationen jederzeit und überall, bieten WIR Ihnen die Klare, Glatt und zuschauen, intelligente kontrollen, sie jederzeit selbst liebe Familie, liebe user Komm herunter!";
            mcs_mipc_download_describe  = "MIPC ist ein cloud - monitoring - Service - software, die software mit der cloud - Kamera verwendet, so dass der nutzer auf video - Informationen jederzeit und überall, bieten WIR Ihnen die Klare, Glatt und zuschauen, intelligente kontrollen, sie jederzeit selbst liebe Familie, liebe user Komm herunter!";
            mcs_guide_download          = "Handbuch zum download";
            mcs_password_admin          = "Passwortverwaltung";
            mcs_already_read            = "Ich habe gelesen, und stimmen";
            mcs_privacy_policy          = "DATENSCHUTZ - Politik";
            mcs_not_agree_privacy_policy = "Sie ist noch nicht vereinbart, DATENSCHUTZ";
            mcs_reload                  = "Nachladen";
            mcs_start_download          = "Jetzt herunterladen";
            mcs_video_play_fail         = "Video - spielen gescheitert";
            mcs_download_app_tips       = "Sie können auch versuchen, MIT PC - client";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = "Art der ausrüstung";
            mcs_connect_device_wifi     = "Die Kamera nicht für die 5 - GHz - band WiFi";
            mcs_send_diagnosis_results  = "Die Diagnose senden...";
            mcs_local_file              = "LoKale datei";
            mcs_local_device            = "LoKale Geräte";
            mcs_export_sd_data          = "Der SD - Daten ergibt Sich";
            mcs_shaking                 = "Kopfschütteln - serie";
            mcs_outdoor                 = "Outdoor - serie";
            mcs_card                    = "Karten - serie";
            mcs_wifi_connection         = "WiFi - Verbindung";
            mcs_home_mode               = "Start-Modus";
            mcs_away_home_mode          = "AWAY-Modus";
            mcs_auto_switch_mode        = "Automatisches umschalten";
            mcs_select_scene_mode       = "Bitte wählen Sie ein Profil";
            mcs_7x24_hours_prompt       = "Offene 7x24 (h) Aufnahme";
            mcs_all_day_recording       = "Day Video";
            mcs_home_mode_prompt        = "Start-Modus: Alle Gerätealarme Schließen";
            mcs_away_home_mode_prompt   = "AWAY-Modus:Alle Geräte offene Unruh";
            mcs_at_home                 = "zu Hause";
            mcs_away_home               = "aus";
            mcs_set_timezone_prompt_start = "Ihre Zeitzone ist";
            mcs_set_timezone_prompt_end = "Schalten Sie bitte die \"Datum/Uhrzeit\" in der Zeitzoneneinstellung";
            mcs_set_wifi_remind_head    = "Die folgenden Fragen dazu führen, dass die Kamera ein Vorschlag scheitern zu vermeiden";
            mcs_set_wifi_remind_1       = "öffnen sie überprüfen, ob eine WiFi - Reiben \", diese einstellung kann dazu führen, dass die Kamera nicht richtig ein.Sie können der vorübergehenden schließung der anti - Reiben \", Kamera - Eine erfolgreiche vernetzung wieder router einstellungen";
            mcs_set_wifi_remind_2       = "Wenn sie zu hause IST, eine Kamera MIT dual - band - router, überprüfen sie bitte, ob die WiFi IST 5 - GHz - band wifi, bitte Lassen sie die Kamera IST MIT Wi - fi auf 2,4 GHz";
            mcs_set_wifi_remind_3       = "Auf der ebene der Unternehmen vorübergehend nicht für WPA/WPA2 Kamera wifi, wählen sie bitte die anderen WiFi";
            mcs_set_wifi_remind_4       = "Wenn ihr Haus WiFi IST eine Brücke, denn die gründe können dazu führen, dass die Brücke, ihr Netzwerk nicht sehr stabil, die überbrückung der WiFi - Verbindung MIT DEM Vorschlag";
            mcs_set_wifi_remind_5       = "Kameras für die WiFi -, was die anforderungen";
            mcs_record_save_to_my_file  = "Video gespeichert meine Dateien";
            mcs_view_now                = "Jetzt";
            mcs_search_sos_strat        = "Wie gezeigt, drücken Sie die untere Taste";
            mcs_search_sos_end          = "Eine Sekunde, das Gerät Anzeige blinkt";
            mcs_search_magnetic_start   = "Wie gezeigt, drücken Sie die kombinierte magnetische Tür, die seitliche Taste";
            mcs_search_magnetic_end     = "Eine Sekunde, das Gerät Anzeige blinkt";
            mcs_adding                  = "Hinzufügen";
            mcs_record_empty_set_sd     = "Legen Sie können eine SD-Karte Video Geschichte speichern";
            mcs_video_play_offline      = "Das Gerät ist offline";
            mcs_video_play_network_fail = "Netzwerkverbindung fehlgeschlagen ist, versuchen Sie es später erneut";
            mcs_alert_notify_guide1     = "[Original] Bewegungserkennung Betrieb auf [Anhang], [durch] die Profileinstellungen zu migrieren";
            mcs_alert_notify_guide2     = "Der Betrieb ist wie folgt:";
            mcs_alert_notify_guide3     = "Wählen Sie [Szene], müssen Sie bewaffnenmodus ausfallen, müssen Sie zu Hause entwaffnen Modus zu öffnen;";
            mcs_alert_notify_guide4     = "Wählen Sie [Zubehör] - [Zubehör Liste] - [Motion Detection] Modus wird aus Alarm, Video, Fotografie, IO Alarmfunktion eingeschaltet , um den Alarm zu Hause Modus, Videoaufzeichnung und andere Funktionen zu deaktivieren.";
            mcs_plan_protect_guide1     = "[Original] Plan Bewaffnung migriert Betrieb auf [Szenario]";
            mcs_plan_protect_guide2     = "Wählen Sie die [Szenario], offene Profile automatische Umschaltung;";
            mcs_plan_protect_guide3     = "wählen";
            mcs_plan_protect_guide4     = "Die Notwendigkeit einer Aktivierungsperiode (zB: Dienstag, 7: 00-18: 00) festgelegten Modus, nach OK, um die Registerkarte Einstellungen zu speichern und;";
            mcs_plan_record_guide       = "Wählen Sie [Aufnahme], entpuppen Modus Aufnahmefunktion .";
            mcs_plan_record_guide1      = "[Aufnahme planen] Plan Bewaffnung migriert Betrieb auf [Aufnahme]";
            mcs_plan_record_guide2      = "Die Notwendigkeit, für die Aufzeichnung von Zeit (zB: Dienstag, 7: 00-18: 00) festgelegten Modus, nach OK, um die Registerkarte Einstellungen zu speichern und;";
            mcs_forgetpass_action_prompt = "Bitte drücken Sie das Gerät zurücksetzen Reset-Loch von 10 Sekunden nach der Freigabe, Infrarot-Beleuchtung und Geräte Werkseinstellungen wiederherstellen";
            mcs_cloud_box               = "Wolke Box";
        }/* de */
        else if(lang == "fr")
        {
            mcs_name                    = "Nom";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "Nom";
            mcs_old_nick                = "Pseudo";
            mcs_linked                  = "Lié";
            mcs_sign_in                 = "Se connecter";
            mcs_back                    = "Retour";
            mcs_will_back               = "Retourne en arrière";
            mcs_add                     = "Ajouter";
            mcs_add_device              = "Ajout d\'un périphérique";
            mcs_device_existed          = "Ce périphérique existe déjà";
            mcs_cancel                  = "Annuler";
            mcs_exit                    = "Quitter";
            mcs_remember_password       = "Mémoriser le mot de passe";
            mcs_password_remembered     = "Mot de passe mémorisé";
            mcs_sign_ining              = "Connexion en cours...";
            mcs_cloud_server            = "Serveur dans le nuage (cloud )";
            mcs_input_device_id         = "Saisir l\'ID du périphérique";
            mcs_input_username          = "Saisir le nom d\'utilisateur";
            mcs_input_email_addr        = "Entrer l\'adresse courriel";
            mcs_email_address           = "Adresse courriel";
            mcs_email                   = "courriel";
            mcs_binding                 = "Reliure";
            mcs_binding_email           = "courriel obligatoire";
            mcs_binding_send_prompt     = "Le message de vérification a été envoyé. Veuillez signer l\'authentification du courriel dès que possible";
            mcs_binding_email_prompt    = "Si vous oubliez votre mot de passe, vous pouvez réinitialiser par la boîte à courri";
            mcs_input_password          = "Entrer le mot de passe";
            mcs_access_server_failed    = "Erreur d\'accès au serveur";
            mcs_device_offline          = "Périphérique déconnecté";
            mcs_invalid_password        = "Mot de passe invalide";
            mcs_invalid_dev             = "Périphérique erroné";
            mcs_login_faided            = "Échec de la tentative de connexion";
            mcs_invalid_qrcode          = "QR-code erroné.";
            mcs_please_input_username   = "Veuillez entrer le nom d’utilisateur";
            mcs_please_input_password   = "Veuillez entrer le mot de passe";
            mcs_qrcode_scan_hint        = "Scanner le QR-code";
            mcs_device_list_empty       = "La liste des périphériques est vide";
            mcs_record_list_is_empty    = "La liste des enregistrements est vide ";
            mcs_password_expired        = "Le mot de passe a expiré";
            mcs_set_video_size          = "Auto";
            mcs_hd_1280x720             = "Haute définition [1280x720]";
            mcs_auto                    = "Auto";
            mcs_normal_640x360          = "Normal [640x360]";
            mcs_half_320x180            = "Demi [320x180]";
            mcs_small_160x90            = "Basse  [160x90]";
            mcs_play                    = "En direct";
            mcs_settings                = "Réglages";
            mcs_messages                = "Enregistrements";
            mcs_alarm                   = "Alarme";
            mcs_delete                  = "Efaccer";
            mcs_delete_camera           = "Supprimer un périphérique ";
            mcs_apply                   = "Appliquer";
            mcs_speed                   = "Vitesse";
            mcs_others                  = "Autres";
            mcs_audio                   = "Audio";
            mcs_speaker                 = "Haut-parleur";
            mcs_mic                     = "Mic";
            mcs_power_frequency         = "Fréquence du secteur";
            mcs_online_upgrade          = "Mise à niveau en ligne";
            mcs_restore_the_factory_settings = "Restaurer les valeurs par défaut";
            mcs_restore                 = "Restaurer";
            mcs_restore_camera          = "Redémarrer le périphérique";
            mcs_start_upgrade           = "Commencer la mise à niveau";
            mcs_system                  = "Système";
            mcs_system_settings         = "Configuration du système";
            mcs_online                  = "En ligne";
            mcs_offline                 = "Hors ligne";
            mcs_query                   = "Requête";
            mcs_begin_time              = "Heure de début";
            mcs_end_time                = "Heure de fin";
            mcs_mode                    = "Mode";
            mcs_opened                  = "Ouvert";
            mcs_high                    = "Fort";
            mcs_middle                  = "Moyen";
            mcs_low                     = "Faible";
            mcs_io_alert_input          = "Entrée E/S";
            mcs_io_alert_output         = "Sortie E/S";
            mcs_normally_open           = "Normalement ouvert";
            mcs_normally_close          = "Normalement ouver";
            mcs_motion_detection_sensitivity = "Sensibilité de détection de mouvement";
            mcs_daytime                 = "Jour";
            mcs_night                   = "Nuit";
            mcs_sdcord                  = "Carte SD";
            mcs_storage_device          = "périphériques de stockage";
            mcs_set_mask                = "Définir le masque";
            mcs_status                  = "Etat";
            mcs_capacity                = "Capacité";
            mcs_usage                   = "Usage";
            mcs_format                  = "Format";
            mcs_repair                  = "Fixe";
            mcs_formating               = "Formatatage";
            mcs_repairing               = "réparation";
            mcs_mounted                 = "Monté";
            mcs_unmounted               = "Non monté";
            mcs_mount                   = "Monter";
            mcs_unmount                 = "Retirer";
            mcs_ethernet                = "Ethernet";
            mcs_wifi                    = "Wi-Fi";
            mcs_enabled                 = "Activé";
            mcs_mac_address             = "Adresse MAC";
            mcs_network_status          = "État du réseau";
            mcs_wifi_mode               = "Mode sans fil";
            mcs_client                  = "Client";
            mcs_ap                      = "AP";
            mcs_start_address           = "Adresse de début";
            mcs_end_address             = "Adresse de fin";
            mcs_gateway                 = "passerelle";
            mcs_select_network          = "Sélectionnez le réseau";
            mcs_dhcp_ip                 = "Utiliser DHCP";
            mcs_dhcp_dns                = "DNS : utiliser le DHCP";
            mcs_ip_address              = "Adresse IP";
            mcs_network_mask            = "Masque réseau";
            mcs_input_secondary_dns     = "Saisir DNS secondaire";
            mcs_secondary_dns           = "DNS secondaire";
            mcs_input_dns               = "Saisir le DNS";
            mcs_input_alternate_dns     = "Saisir un DNS de remplacement";
            mcs_input_ip                = "Saisir l\'adresse IP";
            mcs_input_gateway           = "Saisir la passerelle";
            mcs_input_network_mask      = "Saisir le masque de réseau";
            mcs_wifi_list               = "Liste Wi-Fi";
            mcs_display_date            = "Afficher la date";
            mcs_date_format             = "Format de date";
            mcs_display_time            = "Afficher l\'heure";
            mcs_time_format             = "Format de l\'heure";
            mcs_24_hour                 = "24h/24h";
            mcs_12_hour                 = "12 heures";
            mcs_display_weeks           = "Afficher le jour";
            mcs_date_time               = "Jour/heure";
            mcs_set_time                = "Mettre à l\'heure";
            mcs_set_week                = "Régler la semaine";
            mcs_stream                  = "Flux";
            mcs_encode                  = "Coder";
            mcs_resolution              = "Résolution";
            mcs_frame_fate              = "Vitesse images/s (FPS)";
            mcs_maximum_bitrate         = "Vitesse de transmission max.";
            mcs_minimum_bitrate         = "Vitesse de transmission min.";
            mcs_i_frame_interval        = "Intervalle entre images I";
            mcs_video                   = "Vidéo";
            mcs_sampling_rate           = "Vitesse d\'échantillonnage (kHz)";
            mcs_nickname                = "Pseudonyme";
            mcs_old_password            = "Ancien mot de passe";
            mcs_confirm_password        = "Confirmer le mot de passe";
            mcs_modify_password         = "Modifier le mot de passe";
            mcs_password                = "Mot de passe";
            mcs_admin_password          = "Mot de passe Admin";
            mcs_guest_password          = "Mot de passe Invité";
            mcs_product_info            = "Info produit";
            mcs_software_version        = "Version de logiciel";
            mcs_device_id               = "ID du périphérique";
            mcs_operation               = "Opération";
            mcs_record                  = "Enregistrement";
            mcs_record_2                = "Lecture";
            mcs_upgrade_now             = "Mise à niveau maintenant";
            mcs_upgrading               = "Mise à jour en cours";
            mcs_already_latest_version  = "Aucune mise à jour disponible";
            mcs_sensitivty              = "Sensibilité";
            mcs_user_defined            = "Sensibilité";
            mcs_time                    = "Heure";
            mcs_date                    = "Jour";
            mcs_finish                  = "Terminer";
            mcs_delete_fail             = "Suppression de l\'échec";
            mcs_motion                  = "Mouvement";
            mcs_start                   = "Démarrer";
            mcs_talk                    = "Parler";
            mcs_password_input_inconsistent = "Saisie de mot de passe incohérente";
            mcs_input_6_to_20_litters   = "Entrer 6 à 20 lettres (a-z、A-Z) ou chiffres (0-9)";
            mcs_user_letter_range_hint  = "Un nom d\'utilisateur doit comporter de 6 à 32 lettres (a-z、A-Z) ou chiffres (0-9) et commencer par une lettre";
            mcs_password_range_hint     = "Un mot de passe doit comporter de 6 à 32 caractères lettres/chiffres.";
            mcs_begin_with_the_letters  = "Commencer par les lettres";
            mcs_sign_up                 = "Connecter";
            mcs_sign_up_failed          = "Échec de la connexion";
            mcs_successful_sign_up      = "Réussite de la connexion";
            mcs_are_you_sure_delete     = "Confirmer la suppression";
            mcs_failed_to_set_the       = "Échec du réglage";
            mcs_set_successfully        = "Réussite du réglage";
            mcs_downloading             = "Téléchargement en cours";
            mcs_wrote                   = "A écrit";
            mcs_visit_again_later       = "Veuillez revenir plus tard";
            mcs_restart_failed          = "Échec du redémarrage";
            mcs_upgrade_failed          = "Échec de la mise à niveau";
            mcs_connnected              = "Connecté";
            mcs_connnected_to           = "Connecté à";
            mcs_not_select              = "non sélectionné";
            mcs_message_list            = "Liste de messages";
            mcs_saved_password          = "Mot de passe enregistré";
            mcs_alert                   = "Alerte";
            mcs_no_record               = "Aucun enregistrement";
            mcs_new_about               = "Nouveau : à propos de";
            mcs_device                  = "Périphérique";
            mcs_config                  = "Config";
            mcs_change_password_failed  = "Échec de la modification du mot de passe";
            mcs_do_you_want_restart     = "Voulez-vous redémarrer?";
            mcs_do_you_want_restore     = "Confirmer la restauration";
            mcs_do_you_want_upgrade     = "Voulez-vous faire la mise à niveau?";
            mcs_load_end                = "Fin des vidéos";
            mcs_loading                 = "Chargement en cours";
            mcs_down_refresh            = "Tirer vers le bas pour rafraîchir";
            mcs_release_refresh         = "Lancement du rafraîchissement";
            mcs_refreshing              = "Rafraîchissement en cours";
            mcs_release_then_loading_data_hint = "Relâcher pour charger";
            mcs_pull_refresh_hint       = "Tirer pour rafraîchir";
            mcs_restarting              = "Redémarrage en cours";
            mcs_upgraded_time           = "Heure mise à niveau : ";
            mcs_done                    = "Terminé";
            mcs_playback                = "Lecture";
            mcs_i_o_alarm               = "E/S alarme";
            mcs_alarm_action            = "Détection de mouvement";
            mcs_alarm_sources           = "Émetteurs d\'alarme";
            mcs_io_output               = "Sortie relais";
            mcs_snapshots               = "Clichés";
            mcs_snapshot                = "Cliché";
            mcs_snapshot_interval       = "Intervalle(s) des clichés";
            mcs_pre_record_length       = "Longueur(s) de préenregistrement";
            mcs_nick_range_hint         = "Le nom de la caméra doit comporter moins de 20 caractères";
            mcs_save                    = "Sauvegarder";
            mcs_close                   = "Fermer";
            mcs_snapshoting             = "Prise de clichés en cours";
            mcs_snapshot_failed         = "Échec de la prise de cliché";
            mcs_record_failed           = "Échec de l\'enregistrement";
            mcs_saved_successfully      = "Réussite de le sauvegarde";
            mcs_save_failed             = "Échec de la sauvegarde";
            mcs_restart_to_take_effect  = "Redémarrer pour prendre en compte";
            mcs_please_allow_access_album = "Veuillez autoriser maxCam à accéder à votre album photo.";
            mcs_please_allow            = "Veuillez autoriser ";
            mcs_access_album            = " pour accéder à votre album photo.";
            mcs_ios_privacy_setting_for_photo_prompt = "Modification possible sur iPhone \"Settings->Privacy->Photos\", trouver l\'application \"";
            mcs_execute_change          = "\" change.";
            mcs_access_camera           = " pour accéder à votre caméra";
            mcs_please_allow_access_camera = "Veuillez autoriser maxCam à accéder à votre caméra";
            mcs_ios_privacy_setting_for_camera_prompt = "Modification possible sur iPhone \"Settings->Privacy->Photos\", trouver l\'application \"";
            mcs_busy_when_write         = "Écriture en cours";
            mcs_unknown_error           = "Erreur indéterminée";
            mcs_i_know                  = "Je sais !";
            mcs_segment                 = "Segment";
            mcs_please_relogin          = "Veuillez vous reconnecter";
            mcs_change_password_succeed = "Réussite du changement de mot de passe";
            mcs_upgrade_to_ver          = "Mise à niveau ver.";
            mcs_restore_failed          = "Échec de la restauration";
            mcs_please_restart          = "Veuillez redémarrer ";
            mcs_keep_network_settings   = "Conservez les réglages réseau et le mot de passe";
            mcs_not_connected           = "Non connecté";
            mcs_sdcard_not_ready        = "Carte SD non prête";
            mcs_device_not_exist        = "Le périphérique n\'existe pas.";
            mcs_disable                 = "Désactiver ";
            mcs_to_determine_the        = "Pour déterminer le/la";
            mcs_alert_on                = "Activer l\'alerte";
            mcs_alert_off               = "Désactiver l\'alerte";
            mcs_alert_onoff             = "Alerte marche/arrêt";
            mcs_monday                  = "Lundi";
            mcs_tuesday                 = "Mardi";
            mcs_wednesday               = "Mercredi";
            mcs_thursday                = "Jeudi";
            mcs_friday                  = "Vendredi";
            mcs_saturday                = "Samedi";
            mcs_sunday                  = "Dimanche";
            mcs_mon                     = "Lun";
            mcs_tue                     = "Mar";
            mcs_wed                     = "Me";
            mcs_thu                     = "Jeu";
            mcs_fri                     = "Ven";
            mcs_sat                     = "Sam";
            mcs_sun                     = "Dim";
            mcs_scheduled_recording     = "Programmer un enregistrement";
            mcs_schedule                = "Programme";
            mcs_scheduled_recording_status = "État de l\'enregistrement programmé";
            mcs_folding                 = "Repliement";
            mcs_unfolding               = "Déploiement";
            mcs_end_time_should_lt_begin = "L\'heure de fin doit être postérieure à l\'heure de début";
            mcs_recording               = "Enregistrement en cours";
            mcs_prerecord_interval_range_hint = "L\'intervalle de préenregistrement doit être inférieur à 6 secondes.";
            mcs_snapshot_interval_range_hint = "L\'intervalle des clichés doit être 0 ou supérieur à 60";
            mcs_not_ready               = "Non prêt";
            mcs_availablesize           = "Taille disponible";
            mcs_reboot                  = "Redémarrer";
            mcs_alerter                 = "Alerte";
            mcs_pir                     = "PIR";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "Codeur";
            mcs_ok                      = "Confirmer";
            mcs_fault                   = "Défaut";
            mcs_sensor_status           = "État du capteur";
            mcs_about                   = "Ä propos de";
            mcs_reset_now               = "Réinitialiser maintenant";
            mcs_reset_later             = "Réinitialiser ultérieurement";
            mcs_prompt                  = "Aller à l\'invite";
            mcs_select                  = "Sélectionner";
            mcs_available_netword       = "Réseau non disponible, le configurer ?";
            mcs_request_send            = "Envoi de la requête en cours";
            mcs_blank_device_id         = "Le champ ID périphérique doit être rempli";
            mcs_blank_username          = "Le champ Nom d\'utilisateur doit être rempli";
            mcs_blank_password          = "Le champ Mot de passe doit être rempli";
            mcs_exist_user              = "L\'utilisateur existe déjà";
            mcs_invalid_user            = "Nom d\'utilisateur erroné";
            mcs_invalid_email_addr      = "Adresse e-mail invalide";
            mcs_system_err              = "Erreur système";
            mcs_exceed_device           = "Trop d\'utilisateurs du périphérique..";
            mcs_continue                = "Continuer";
            mcs_prompt_exit             = "Souhaitez-vous quitter ?";
            mcs_device_list             = "Liste des périphériques";
            mcs_no_sdcard               = "Aucune carte SD";
            mcs_no_hard_disk            = "Aucun disque dur";
            mcs_show_more               = "Plus";
            mcs_shotsnop_exists         = "La photo existe déjà";
            mcs_input_nick              = "Saisir le nom du périphérique";
            mcs_nick_not_empty          = "Le champ Nom du périphérique doit être rempli";
            mcs_input_new_pass          = "Saisir le nouveau mot de passe";
            mcs_input_new_pass_again    = "Saisir à nouveau le nouveau mot de passe";
            mcs_new_password            = "Nouveau mot de passe";
            mcs_modify_network_prompt   = "Les modifications des paramètres réseau peuvent engendrer une panne du réseau ; continuer quand même?";
            mcs_wifi_disable_prompt     = "Désactiver le Wi-Fi, continuer ?";
            mcs_eth_disable_prompt      = "Desactiver Ethernet, continuer ?";
            mcs_ip                      = "Indice de protection";
            mcs_auto_obtain             = "Utiliser DHCP";
            mcs_manually_set            = "Utiliser statique";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "DNS primaire";
            mcs_client_mode             = "Client";
            mcs_adhoc_mode              = "Adhoc";
            mcs_connect_fail            = "Échec de la connexion";
            mcs_dhcp_server             = "Serveur DHCP";
            mcs_display_text            = "Afficher le texte";
            mcs_repair_prompt_detail    = "La réparation peut engendrer des pertes de données. Continuer ?";
            mcs_format_prompt_detail    = "Formater une carte SD efface toutes les données qu\'elle contient. Continuer ?";
            mcs_mount_prompt            = "Mettre la carte SD en place Continuer ?";
            mcs_umount_prompt           = "Les vidéos et photos ne peuvent plus être sauvegardées une fois la carte SD retirée. Continuer ?";
            mcs_sdcard_reset            = "Opération réussie. Redémarrer pour activer. Continuer ?";
            mcs_sdcard_repairing        = "Réparation en cours, attendre pour redémarrer";
            mcs_sdcard_formating        = "Formatage en cours, attendre pour redémarrer";
            mcs_sdcard_umount           = "Retirer";
            mcs_valid                   = "Valable";
            mcs_io                      = "Alarme E/S";
            mcs_input                   = "Entrée";
            mcs_outinput                = "Sortie";
            mcs_prompt_alert_on         = "Alerte activée, continuer ?";
            mcs_auto_sync_date_time     = "Auto sync";
            mcs_alarm_record            = "Enregistrement d’alarme";
            mcs_username                = "Nom de l\'utilisateur";
            mcs_re_enter_the_password   = "Saisir à nouveau le mot de passe";
            mcs_remember_me             = "Rester connecté";
            mcs_home                    = "Accueil";
            mcs_install_the_plug        = "Installer le plug-in";
            mcs_install_the_video_plug  = "Installer le plug-in vidéo";
            mcs_install_now             = "Installer maintenantt";
            mcs_temporarily_installed_use_ordinary_video = "Non, installer ultérieurement";
            mcs_brightness              = "Luminosité";
            mcs_contrast                = "Contraste";
            mcs_color_saturation        = "Saturation";
            mcs_sharpness               = "Netteté";
            mcs_duration                = "Durée";
            mcs_index                   = "Index";
            mcs_remark                  = "Remarque";
            mcs_media_stream            = "Média";
            mcs_server                  = "Serveur";
            mcs_media_transfer          = "Média de transfert";
            mcs_osd                     = "OSD (affichage sur l\'écran)";
            mcs_manufacturer            = "Fabricant";
            mcs_model                   = "Modèle";
            mcs_plugin_version          = "Version de Plug-in";
            mcs_network_interface       = "Interface réseau";
            mcs_transfer_protocol       = "Protocole de transfert";
            mcs_year                    = "Année";
            mcs_month                   = "Mois";
            mcs_day                     = "Jour";
            mcs_hour                    = "Heures";
            mcs_minute                  = "Minutes";
            mcs_second                  = "Secondes";
            mcs_millisec                = "Millisecondes";
            mcs_ntp                     = "Serveur horaire";
            mcs_upload_upgrade          = "Télécharger la mise à niveau";
            mcs_stop                    = "Stop";
            mcs_info_rewind             = "Rembobinage";
            mcs_fast_forward            = "En avant, rapide";
            mcs_previous_frame          = "Image précédente";
            mcs_next_frame              = "Image suivante";
            mcs_record_audio            = "Enregistrer le son";
            mcs_week                    = "Semaine";
            mcs_all                     = "Tout";
            mcs_id                      = "ID";
            mcs_select_all              = "Tout sélectionner";
            mcs_call                    = "Appeler";
            mcs_activation              = "Activation";
            mcs_caption                 = "Télécharger le fichier";
            mcs_alarm_device            = "Sensibilité mouvement";
            mcs_not_installed           = "Non installé";
            mcs_join_us_now             = "Rejoignez-nous maintenant";
            mcs_reconnect_please_wait   = "Reconnexion, veuillez patienter";
            mcs_erasing                 = "Effacement en cours";
            mcs_writing                 = "Écriture en cours";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "Avoir une nouvelle version";
            mcs_equipment_flip          = "Retourner";
            mcs_device_status           = "État du périphérique";
            mcs_audio_setting           = "Réglages audio";
            mcs_nick_modify             = "Modifier le nom de la caméra";
            mcs_ready                   = "Prêt";
            mcs_full                    = "Complet";
            mcs_connecting              = "Connexion en cours";
            mcs_message_buffering       = "Mise en tampon des messages";
            mcs_upgrade_finish          = "Mise à niveau terminée";
            mcs_image                   = "Image";
            mcs_bar                     = "Enregistrements";
            mcs_init                    = "Initialiser";
            mcs_confirm_new_password    = "Confirmer le nouveau mot de passe";
            mcs_continue_switch_wireless_network = "Une commutation réseau peut causer un défaut réseau. Continuer ?";
            mcs_restore_factory_settings_prompt = "Le périphérique redémarra après la restauration. Restaurer les valeurs par défaut ?";
            mcs_username_does_not_exis  = "Ce nom d\'utilisateur n\'existe pas.";
            mcs_username_already_exists = "Ce nom d\'utilisateur existe déjà";
            mcs_successful_whether_login = "Réussite de l\'inscription, se connecter maintenant ?.";
            mcs_username_demand         = "6 à 20 lettres ou chiffres, commencer par une lettre";
            mcs_the_password_is_empty   = "Le mot de passé est vide";
            mcs_password_demand         = "6 à 20 lettres ou chiffres, commencer par une lettre";
            mcs_password_empty          = "Ressaisir le mot de passe";
            mcs_two_password_input_inconsistent = "Les mots de passe ne sont pas identiques.";
            mcs_the_user_name_is_empty  = "Le nom de l\'utilisateur est vide.";
            mcs_upgrade_to_the_latest_version = "Mettre à niveau avec la dernière version";
            mcs_subnet_mask_wrong_format = "Format erroné pour le masque de réseau";
            mcs_upgrade_successful_restart_to_take_effect = "Mise à niveau réussie, redémarrer le périphérique.";
            mcs_need_to_restart_the_camera_to_take_effect = "Redémarrer le périphérique pour la prise en compte.";
            mcs_not_allowed_close_two_network_cards = "Ethernet et Wi-Fi ne peuvent pas être désactivés simultanément";
            mcs_modified_successfully   = "Réussite de la modification";
            mcs_connection_successfully = "Connecté ";
            mcs_connection_is_interrupted = "Connexion perdue";
            mcs_devices_in_the_account_overrun = "Dépassement périphériques du compte";
            mcs_format_error            = "Erreur du format";
            mcs_change                  = "Changer";
            mcs_refresh                 = "Rafraîchir";
            mcs_connect                 = "Connecter";
            mcs_upgrade                 = "Mettre à niveau";
            mcs_activate                = "Activer";
            mcs_filter                  = "Filtrer";
            mcs_reset                   = "Réinitialiser";
            mcs_prompt_alert_off        = "Alerte désactivée, continuer ?";
            mcs_invalid_server          = "Serveur horaire erroné";
            mcs_upgrade_prompt          = "Mettre à jour le logiciel du périphérique. Continuer ?";
            mcs_restart_prompt          = "Redémarrer le périphérique,continuer ?";
            mcs_repeat                  = "Répéter";
            mcs_scheduled_one           = "Programme 1";
            mcs_scheduled_two           = "Programme 2";
            mcs_scheduled_three         = "Programme 3";
            mcs_scheduled_four          = "Programme 4";
            mcs_more                    = "Plus";
            mcs_leave                   = "Relâcher pour charger plus";
            mcs_qrcode_scan             = "Scan QR Code";
            mcs_inserted                = "Inséré";
            mcs_removed                 = "Retiré";
            mcs_upgrade_init            = "Commencer la mise à niveau";
            mcs_upgrade_download        = "Télécharger la mise à niveau";
            mcs_check                   = "Verifier";
            mcs_audio_encoder_config    = "Codec audio";
            mcs_video_codec             = "Codec vidéo";
            mcs_download                = "Téléchargement";
            mcs_client_download         = "Téléchargement du client";
            mcs_for_more_clarity_smooth_video_experience = "Pour clarifier, rien de tel qu\'une bonne petite vidéo";
            mcs_network                 = "sans fil";
            mcs_mobile_client_download  = "Téléchargement du Mobile client";
            mcs_readonly                = "Lecture seulement";
            mcs_please_exit_and_relogin = "Veuillez quitter puis vous reconnecter";
            mcs_add_device_failed       = "Échec de l\'ajout d\'un périphérique";
            mcs_set_password            = "Définir le mot de passe";
            mcs_7x24_hours              = "24/7";
            mcs_mtalt                   = "%@ : Alerte mouvement";
            mcs_ioalt                   = "%@ : alerte E/S";
            mcs_time_zone               = "Fuseau horaire";
            mcs_select_time             = "Sélectionner l’heure";
            mcs_now                     = "Maintenant";
            mcs_mipc_have_alert_notification = "Notification d\'alerte maxCam";
            mcs_notification_center     = "Centre de notifications";
            mcs_sound                   = "Son";
            mcs_vibration               = "Vibration";
            mcs_clear_cache             = "Effacer le cache";
            mcs_clear_cache_hint        = "Êtes-vous sûr de vouloir effacer le cache ?";
            mcs_successfully_cleared_cache = "Le cache a été effacé";
            mcs_app_except_exit_hint    = "Malheureusement l\'application a rencontré une difficulté et va se terminer";
            mcs_rate_us                 = "Jugez nous";
            mcs_password_too_simple_hint = "Le mot de passe est trop simple, changez-le pour améliorer la sécurité.";
            mcs_check_for_new_version   = "Recherche de version à jour";
            mcs_contact_us              = "Contactez-nous";
            mcs_buffer_time             = "Tampon heure";
            mcs_default                 = "Défaut";
            mcs_alarmed_devices         = "Périphériques sous alarme";
            mcs_aec                     = "Annulation de l\'écho";
            mcs_permission_denied       = "Absence d\'autorisation";
            mcs_full_screen             = "plein écran";
            mcs_forgot_your_password    = "Mot de passe oublié";
            mcs_your_email              = "Votre adresse courriel";
            mcs_sign_up_confirmation    = "Un courriel de confirmation vous est envoyé pour vérification de votre adresse. Veuillez cliquer sur le lien pour activer votre compte.";
            mcs_recovery_prompt         = "Veuillez entrer votre adresse courriel (nom d\'utilisateur) ci-dessous, nous vous enverrons un courriel avec les instructions de réinitialisation de votre mot de passe.";
            mcs_password_reset_confirmation = "Pour réinitialiser votre mot de passe, suivez les instructions de ce courriel envoyé à l\'adresse que vous nous avez indiquée..";
            mcs_recovery_fail_no_mail   = "Échec de récupération du mot de passe: aucune adresse courriel associée à ce compte.";
            mcs_recovery_fail_invalid_link = "Échec de récupération du mot de passe, veuillez suivre les instructions du courriel de récupération..";
            mcs_recovery_ok_login       = "Réussite de la récupération du mot de passe. Connectez-vous maintenant.";
            mcs_active_ok_login         = "Réussite de l\'activation du compte. Connectez-vous maintenant.";
            mcs_active_fail_invalid_link = "Échec de l\'activation du compte. Veuillez réessayer.";
            mcs_login_fail_inactive     = "Compte non activé. Pour activer votre nouveau compte, veuillez suivre les instructions du courriel d\'activation.";
            mcs_sign_up_again           = "Reconnectez-vous";
            mcs_press_start_talk        = "Appuyer pour parler";
            mcs_release_stop_talk       = "Relâcher pour arrêter";
            mcs_delete_device           = "Supprimer";
            mcs_success_removed_equipment = "Réussite de la suppression du périphérique";
            mcs_remove_equipment_failure = "Échec du retrait de l\'équipement";
            mcs_device_busy             = "Le périphérique est actuellement occupé";
            mcs_keep_testing            = "Continuer le test";
            mcs_notify_tone             = "sonnerie de notification";
            mcs_float_video             = "Activer la vidéo flottante";
            mcs_float_position          = "Position de la vidéo flottante";
            mcs_video_resolution        = "Résolution de la vidéo";
            mcs_float_resolution        = "Résolution de la vidéo flottante";
            mcs_top_left                = "En haut à gauche";
            mcs_top_right               = "En haut à droite";
            mcs_bottom_left             = "En bas à gauche";
            mcs_bottom_right            = "En bas à droite";
            mcs_action_next             = "suivant";
            mcs_action_cancel           = "annuler";
            mcs_action_retry            = "Réessayer";
            mcs_action_add              = "ajouter";
            mcs_is_add                  = "Faut-il ajouter ou non";
            mcs_action_apply            = "appliquer";
            mcs_action_config           = "Config";
            mcs_action_skip             = "Passer";
            mcs_action_ok               = "Ok";
            mcs_action_add_device       = "Ajout d\'un périphériquel";
            mcs_action_modify_password  = "Modifier le mot de passe";
            mcs_action_config_wifi      = "Configurer Wi-Fi";
            mcs_state_connect_device    = "Connexion du périphérique en cours";
            mcs_state_connect_device_fail = "Échec de la connexion du périphérique";
            mcs_state_wait_device_online = "Attente de la mise en ligne du périphérique";
            mcs_state_device_online     = "En ligne";
            mcs_state_success           = "Opération réussie";
            mcs_fail                    = "Échec de l\'opération";
            mcs_delete_success          = "Supprimé avec succès";
            mcs_state_add_device_success = "Réussite de l\'ajout du périphérique ";
            mcs_state_add_device_fail   = "Échec de l\'ajout du périphérique";
            mcs_state_modify_pass_success = "Réussite de la modification du mot de passe";
            mcs_state_modify_pass_fail  = "Échec de la modification du mot de passe";
            mcs_state_config_wifi_success = "Réussite du paramétrage Wi-Fi";
            mcs_state_config_wifi_fail  = "Échec de la connexion";
            mcs_state_connecting_to     = "Connexion en cours, à";
            mcs_network_connect_type    = "Votre périphérique est hors-ligne. Assurez-vous qu\'il est alimenté puis sélectionnez le type de connexion réseau :";
            mcs_prompt_modify_passwd    = "Pour des raisons de sécurité, changer le mot de passe par défaut pour le périphérique. Le nouveau mot de passe doit être d\'au moins six caractères";
            mcs_prompt_config_wifi      = "Votre périphérique n\'est toujours pas connecté à votre Wi-Fi. Veuillez configurer votre Wi-Fi.";
            mcs_step1_check_connect     = "Étape 1 : connectez votre caméra sur votre routeur avec un câble";
            mcs_first_step_ethernet_connect = "Étape 1 : connecter une extrémité d\'un câble réseau au routeur et l\'autre extrémité au port réseau du périphérique d\'accès..";
            mcs_step2_check_connect     = "Étape 2 : Mettez votre caméra sous tension";
            mcs_second_step_ethernet_connect = "Étape 2 : Mettez votre périphérique sous tension.";
            mcs_hint_check_network      = "Remarque : la caméra a besoin de 50 secondes environ pour démarrer. Après le démarrage, la LED clignote 3 fois toutes les 3 secondes. Cela indique que la caméra est en ligne. L\'assistant passe ensuite automatiquement à l\'étape suivante..";
            mcs_the_end                 = "Fin";
            mcs_hint_password_expired   = "Le mot de passe a expiré, veuillez ajouter à nouveau le périphérique";
            mcs_hint_remove_ethernet    = "Remarque : la Wi-Fi fonctionne correctement, vous pouvez déconnecter le réseau filaire maintenant..";
            mcs_gateway_format_incorrect = "Une adresse de passerelle n\'a pas le bon format";
            mcs_dns_format_incorrect    = "Le format de l\'adresse DNS est erroné";
            mcs_subnet_mask_format_incorrect = "Pas de masque de sous - réseau de format d\'adresse correcte";
            mcs_ip_format_incorrect     = "Le format de l\'adresse IP est erroné";
            mcs_login_sucess            = "Réussite de la connexion";
            mcs_donot_remind            = "ne pas rappeler";
            mcs_clear_cache_signout_hint = "Vous devriez vous reconnecter et effacer le cache. Continuer ?";
            mcs_devlist_adddev_hint     = "Cliquez ici pour ajouter un périphérique";
            mcs_devlist_menu_hint       = "Cliquez ici pour définir la résolution";
            mcs_update_failed           = "Échec de la mise à niveau";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "Local";
            mcs_set_npapi               = "Si le plugin a été installé, veuillez visiter \'chrome://flags/#enable-npapi\', enable NPAPI, ";
            mcs_set_win32k              = "visiter \'chrome://flags/#enable-win32k-renderer-lockdown\', disabled win32k renderer lockdown,";
            mcs_restart_browser         = "Redémarrer le navigateur";
            mcs_download_location       = "Emplacement des téléchargements";
            mcs_Networking_mode         = "Mode de connexion réseau";
            mcs_wifi_intelligent_configuration = "connexion Wi-Fi";
            mcs_ethernet_configuration  = "connexion Ethernet";
            mcs_wifi_connect            = "Connexion";
            mcs_hard_disk               = "disque dur";
            mcs_wifi_is_connection      = "Connexion, veuillez patienter...";
            mcs_wifi_intelligent_configuration_setup_ailure = "Échec de la configuration Wi-Fi";
            mcs_box_list                = "champ de liste";
            mcs_repair_disk_prompt      = "La réparation du disque peut causer la perte de certaines données, continuer ?";
            mcs_format_disk_prompt      = "Le formatage du disque détruira toutes les données, continuer ?";
            mcs_scheduled_alerting      = "Programmer des alertes";
            mcs_scheduled_alerting_one  = "Programme 1";
            mcs_scheduled_alerting_two  = "Programme 1";
            mcs_scheduled_alerting_three = "Programma 3";
            mcs_scheduled_alerting_four = "Programme 4";
            mcs_wifi_config_cancle      = "Annler la config Wi-Fi";
            mcs_wifi_config_prepare     = "La configuration de la préparation";
            mcs_wifi_config_first       = "Les périphériques, les routeurs et téléphones portables doivent rester à moins d\'1 m";
            mcs_wifi_config_second      = "Lors de la configuration Wi-Fi, le périphérique ne peut pas exploiter le câble réseau";
            mcs_wifi_config_third       = "Appuyer dans l\'orifice de réinitialisation RESET pendant une seconde puis relâcher";
            mcs_wifi_config_success     = "Réussite de la configuration";
            mcs_wifi_config_failure     = "échec de la configuration";
            mcs_failure_prompt          = "Veuillez essayer à nouveau ou retourner pour vérifier si le mot de passe Wi-Fi a été saisi correctement";
            mcs_display_password        = "Afficher le mot de passe";
            mcs_action_smart_config_wifi = "Assistant de configuration";
            mcs_wifi_invalid            = "Veuillez commencer par vous connecter au réseau Wi-Fi sur votre téléphone cellulaire";
            mcs_phone_not_connect_wifi  = "Le réseau Wifi n\'est pas connecté";
            mcs_prompt_check_connection = "Votre caméra n\'est pas en ligne, veuillez vérifier la connexion en ligne de la caméra.";
            mcs_wifi_cfg_ready          = "Prêt";
            mcs_reset_complete          = "La réinitialisation est terminée";
            mcs_how_to_restore_factory_settings = "Comment revenir au réglage par défaut : utiliser la tige de réinitialisation en appuyant dans l\'orifice RESET au dessous de la caméra pendant plus de10 secondes";
            mcs_forgetpass_action_wizard = "Desserrer les Secrétaire général par le trou de la Réinitialisation d\'un dispositif de Réinitialisation après 10 secondes, vous entendrez le dispositif invite vocale \"reprise de réglages d\'usine\".";
            mcs_prompt_check_device_connection = "Votre périphérique n\'est pas en ligne, veuillez vérifier la connexion en ligne du périphériquel";
            mcs_prompt_select_device_connection = "Votre appareil n\'est pas en ligne, sélectionnez le mode de mise en réseau";
            mcs_input_wifi_name         = "Veuillez saisir le nom Wi-Fi";
            mcs_action_previous         = "précédent";
            mcs_io_alert_range_hint     = "Le temps d\'alerte E/S doit être inférieur à 60 secondes.";
            mcs_io_alert_time           = "Temps d\'alerte E/S";
            mcs_smart                   = "intelligent";
            mcs_plan                    = "plan";
            mcs_mute                    = "silencieux";
            mcs_wind_speed              = "vitesse du vent";
            mcs_one                     = "Un niveau";
            mcs_two                     = "Deux niveaux";
            mcs_three                   = "Trois niveaux";
            mcs_purify_mode             = "mode purification";
            mcs_video_list              = "Liste des vidéos";
            mcs_wifi_cfg_restore_factory_settings = "Tenir le téléphone cellulaire près du périphérique. Si le périphérique a déjà été configuré en Wi-Fi, appuyer dans le trou de réinitialisation RESET pendant une seconde et le libérer, le périphérique retournera automatiquement à la configuration d\'usine.";
            mcs_mask_settings           = "Paramètres de masque";
            mcs_notification_settings   = "Paramètres de notification";
            mcs_alarm_settings          = "Réglages d\'alarme";
            mcs_motion_detection        = "Détection De Mouvement";
            mcs_io_alarm                = "Alarme E/S";
            mcs_connect_status          = "État de la connexion";
            mcs_motion_notification     = "Mouvement et notification";
            mcs_device_connected        = "Le périphérique est connecté";
            mcs_start_spray             = "Commencer à diffuser ?";
            mcs_available_network       = "Réseau indisponible, vérifier le réseau";
            mcs_select_wifi_wizard      = "Veuillez commencer par sélectionner le réseau Wi-Fi";
            mcs_input_wifi_password     = "Saisir le mot de passe Wi-Fi";
            mcs_device_admin_password   = "Mot de passe d\'administration du périphérique";
            mcs_device_guest_password   = "Mot de passe d\'invité du périphérique";
            mcs_user_admin_password     = "Mot de passe utilisateur d\'administration";
            mcs_user_guest_password     = "Mot de passe utilisateur invité";
            mcs_save_network_set        = "Sauvegarder la configuration réseau et le mot de passe";
            mcs_nickname_not_set        = "Le pseudonyme de la caméra n\'est pas défini";
            mcs_current_wifi            = "Wi-Fi actuelle";
            mcs_current_password_strength = "La qualité du mot de passe actuel";
            mcs_new_password_strength   = "Qualité du nouveau mot de passe";
            mcs_needs_to_open_the_DHCP  = "Votre routeur doit ouvrir la fonction DHCP (résolution automatique d\'adresse IP). Si la tentative échoue, veuillez contacter l\'administrateur.";
            mcs_picture                 = "image";
            mcs_quality                 = "qualité";
            mcs_size                    = "taille";
            mcs_guest_login             = "Connexion « invité »";
            mcs_audio_and_video         = "Audio / Vidéo";
            mcs_volume                  = "volume";
            mcs_smooth                  = "Lisser";
            mcs_clear                   = "Effacer";
            mcs_handsfree               = "HF";
            mcs_headphone               = "Casque audio";
            mcs_my                      = "Compte";
            mcs_customer_service        = "Service après-vente";
            mcs_firefox_flash_uninstall = "Le plugin flash n\'est pas disponible, pour résoudre ce problème, veuillez vous référer à https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "Plugins";
            mcs_plug_load               = "Charger les plugins";
            mcs_plug_load_refuse        = "Ne pas charger les plugins";
            mcs_plug_load_auto          = "Automatique";
            mcs_option                  = "Options";
            mcs_option_ok               = "Déterminer";
            mcs_voice_call_fails        = "Échec de l\'appel vocal, vérifier le réseau";
            mcs_umounted_prompt         = "Faut-il démonter ?";
            mcs_mounted_prompt          = "Faut-il monter ?";
            mcs_format_prompt           = "Faut-il formater ?";
            mcs_repair_prompt           = "Faut-il réparer?";
            mcs_signup_prompt           = "Nouveau ici?";
            mcs_wifi_connect_sucess_prompt = "Remarque : Fonctionnement Wi-Fi normal, vous pouvez déconnecter le réseau maintenant";
            mcs_manual_input_prompt     = "Saisir l\'ID du périphérique manuel";
            mcs_qrscan_prompt           = "Vous n\'avez pas encore autorisé cette application à accéder à votre caméra. Vous pouvez trouver l\'application « Vimtag » concernée avec la fonction . \' setting\' - \'privacy\' - \'camera\' de votre iPhone.";
            mcs_select_network_style    = "Sélectionner le mode de connexion réseau";
            mcs_push                    = "Annonce";
            mcs_connect_power_prompt    = "Remarque : le périphérique n\'est pas en ligne, veuillez vous assurer qu\'il est alimenté";
            mcs_fail_microphone         = "Impossible d\'accéder au microphone";
            mcs_microphone_prompt       = "Vous n\'avez pas autorisé cette application à accéder à votre microphone.  Vous pouvez trouver l\'application « Vimtag » concernée avec la fonction . \' setting\' - \'privacy\' - \'microphone\' de votre iPhone.";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "HD";
            mcs_standard_clear          = "Standard";
            mcs_fluent_clear            = "Lisser";
            mcs_deleting                = "Suppression en cours...";
            mcs_event                   = "Événement";
            mcs_one_hour                = "1 heure";
            mcs_half_hour               = "30 min";
            mcs_five_min                = "5 min";
            mcs_category                = "Catégorie";
            mcs_time_length             = "Durée";
            mcs_new                     = "Nouveau";
            mcs_week_setting_prompt     = "Le champ semaine doit être rempli";
            mcs_time_setting_prompt     = "Le champ heure doit être rempli";
            mcs_today                   = "Aujourd\'hui";
            mcs_wifi_password           = "Mot de passe Wi-Fi";
            mcs_register_prompt         = "Veuillez commencer par enregistrer votre compte";
            mcs_click_login             = "Cliquez ici pour vous connecter";
            mcs_not_login_prompt        = "Vous n\'êtes pas connecté, veuillez cliquer ici pour vous connecter !";
            mcs_product_presentation    = "Accueil";
            mcs_help_feedback           = "FAQ";
            mcs_help_information        = "FAQ";
            mcs_feedback                = "La rétroaction";
            mcs_feedback_des            = "Merci d\'utiliser notre app, bienvenue à nous donner votre avis";
            mcs_feedback_praise         = "éloges";
            mcs_feedback_title_prompt   = "Titre de rétroaction";
            mcs_feedback_title          = "Saisissez le titre (18 mots)";
            mcs_feedback_type_prompt    = "Le type de problème";
            mcs_feedback_please_select  = "Veuillez choisir le type de";
            mcs_feedback_select_option1 = "Interface utilisateur";
            mcs_feedback_select_option2 = "La question de la caméra";
            mcs_feedback_select_option9 = "Autres questions";
            mcs_feedback_dec_prompt     = "La description spécifique";
            mcs_feedback_dec            = "Veuillez saisir votre avis";
            mcs_feedback_upload_photo   = "Télécharger des photos";
            mcs_preview_pic             = "Aperçu";
            mcs_Album                   = "Sélectionnez de l\'album";
            mcs_Photograph              = "photographie";
            mcs_camera_unavailable      = "Non disponible avec votre appareil photo";
            mcs_feedback_submit         = "Soumettre";
            mcs_feedback_title_alert    = "Le titre n\'est pas conforme aux règles";
            mcs_feedback_type_alert     = "Veuillez choisir le bon type";
            mcs_feedback_dec_alert      = "Veuillez saisir votre avis";
            mcs_feedback_submit_success = "Transmis avec succès";
            mcs_feedback_submit_fail    = "La présentation a échoué";
            mcs_connect_wifi_prompt     = "Connecter la Wi-Fi";
            mcs_cloud                   = "Nuage (Cloud)";
            mcs_demo                    = "démo";
            mcs_shortest                = "Le plus court";
            mcs_no_history              = "Absence d\'historique";
            mcs_download_pc_client      = "Cliquer pour télécharger le client PC";
            mcs_accounts_bind_email_exist = "Le compte à été rattaché à la boîte à courriels";
            mcs_accounts_bind_email_busy = "La boîte à courriels a été rattachée au compte";
            mcs_systemupdatetip_noversionnodetail = "Il y a une nouvelle version de mise à niveau, mais sans plus de précisions";
            mcs_systemupdatetip_nodetail = "Description non disponible";
            mcs_systemupdatetip_updatefrom = "Votre version actuelle";
            mcs_systemupdatetip_updateto = "peut être mis à niveau vers";
            mcs_systemupdatetip_sureforupdate = "êtes vous sûr de vouloir faire cette mise à niveau ?";
            mcs_systemupdatetip_updatecontent = "description de cette mise à niveau";
            mcs_operate_prompt          = "Veuillez effectuer les opérations conformément au diagramme";
            mcs_operation_prompt        = "Invite d\'opération";
            mcs_qrcode_prompt_content   = "Utiliser le périphérique caméra pour scanner le QR-code mobile";
            mcs_qrcode_camera_distance  = "QR-code, mettre la caméra à 12 à 14 cm de distance";
            mcs_planvideo_datewizard    = "Veuillez définir la date";
            mcs_planvideo_timewizard    = "Veuillez définir l\'heure";
            mcs_planvideo_wizard        = "Veuillez définir la date et l\'heure";
            mcs_email_unbind            = "Impossible de rattacher le compte courriel";
            mcs_email_unmatch           = "La boîte à courriels ne correspond pas";
            mcs_email_inactive          = "L\'adresse courriel n\'est pas activée";
            mcs_email_binded            = "L\'adresse courriel n\'a pas été rattachée";
            mcs_user_binded_bymail      = "L\'utilisateur a été lié";
            mcs_bind_email_fail         = "Échec du rattachement de la boîte à courriels";
            mcs_diagnosis               = "Diagnostic";
            mcs_delay                   = "Délai";
            mcs_packet_loss_rate        = "Taux de perte de paquets";
            mcs_timezone_IDL            = "Ligne internationale de changement de date";
            mcs_timezone_China          = "Chine";
            mcs_timezone_Midway         = "îles Midway";
            mcs_timezone_Niue           = "ÎIe de Niue";
            mcs_timezone_Samoa          = "île Samoa USA";
            mcs_timezone_Aleutian       = "îles Aléoutiennes";
            mcs_timezone_Hawaii         = "Hawaii";
            mcs_timezone_Alaska         = "Alaska";
            mcs_timezone_PSTUSCanada    = "PST(USA & Canada)";
            mcs_timezone_Arizona        = "Arizona";
            mcs_timezone_MSTUSCanada    = "Fuseau Montagnes Rocheuses (USA & Canada)";
            mcs_timezone_CSTUSCanada    = "Fuseau Central (USA & Canada)";
            mcs_timezone_ESTUSCanada    = "Fuseau Est (USA & Canada)";
            mcs_timezone_ASTCanada      = "AST (Canada)";
            mcs_timezone_Newfoundland   = "Terre-Neuve";
            mcs_timezone_Brasilia       = "Brasilia";
            mcs_timezone_BuenosAires    = "Buenos Aires";
            mcs_timezone_Santiago       = "Santiago";
            mcs_timezone_Noronha        = "Noronha";
            mcs_timezone_SouthGeorgia   = "Géorgie du Sud";
            mcs_timezone_Azores         = "Açores";
            mcs_timezone_CapeVerde      = "Cap Vert";
            mcs_timezone_London         = "Londres";
            mcs_timezone_Lisbon         = "Lisbonne";
            mcs_timezone_Dublin         = "Dublin";
            mcs_timezone_Berlin         = "Berlin";
            mcs_timezone_Amsterdam      = "Amsterdam";
            mcs_timezone_Brussels       = "Brusselles";
            mcs_timezone_Budapest       = "Budapest";
            mcs_timezone_Madrid         = "Madrid";
            mcs_timezone_Paris          = "Paris";
            mcs_timezone_Rome           = "Rome";
            mcs_timezone_Sarajevo       = "Sarajevo";
            mcs_timezone_Cairo          = "Le Caire";
            mcs_timezone_Amman          = "Amman";
            mcs_timezone_Beirut         = "Beyrouth";
            mcs_timezone_Istanbul       = "Istanbul";
            mcs_timezone_Jerusalem      = "Jérusalem";
            mcs_timezone_Athens         = "Athènes";
            mcs_timezone_Baghdad        = "Bagdad";
            mcs_timezone_Riyadh         = "Riyad";
            mcs_timezone_Qatar          = "Qatar";
            mcs_timezone_Moscow         = "Moscou";
            mcs_timezone_Tehran         = "Téhéran";
            mcs_timezone_Baku           = "Bakou";
            mcs_timezone_Dubai          = "Dubaï";
            mcs_timezone_Tbilisi        = "Tbilissi";
            mcs_timezone_Kabul          = "Kaboul";
            mcs_timezone_Karachi        = "Karachi";
            mcs_timezone_Yekaterinburg  = "Ékaterinbourg";
            mcs_timezone_Maldives       = "Maldives";
            mcs_timezone_Calcutta       = "Calcutta";
            mcs_timezone_Colombo        = "Colombo";
            mcs_timezone_Katmandu       = "Katmandou";
            mcs_timezone_Almaty         = "Almaty";
            mcs_timezone_Dhaka          = "Dhaka";
            mcs_timezone_Omsk           = "Omsk";
            mcs_timezone_Thimbu         = "Thimbu";
            mcs_timezone_Rangoon        = "Rangoon";
            mcs_timezone_Bangkok        = "Bangkok";
            mcs_timezone_Jakarta        = "Jakarta";
            mcs_timezone_Vientiane      = "Vientiane";
            mcs_timezone_Harbin         = "Harbin";
            mcs_timezone_Shanghai       = "Shanghaï";
            mcs_timezone_Hongkong       = "Hong Kong";
            mcs_timezone_Singapore      = "Singapour";
            mcs_timezone_Taipei         = "Taipei";
            mcs_timezone_Ulaanbaatar    = "Ulan bator";
            mcs_timezone_Perth          = "Perth";
            mcs_timezone_Seoul          = "Séoul";
            mcs_timezone_Tokyo          = "Tokyo";
            mcs_timezone_Darwin         = "Darwin";
            mcs_timezone_Magadan        = "Magadan";
            mcs_timezone_Vladivostok    = "Vladivostok";
            mcs_timezone_Guam           = "Guam";
            mcs_timezone_Sydney         = "Sydney";
            mcs_timezone_Canberra       = "Canberra";
            mcs_timezone_Melbourne      = "Melbourne";
            mcs_timezone_Queensland     = "Queensland";
            mcs_timezone_LordHowe       = "Lord Howe";
            mcs_timezone_Guadalcanal    = "Guadalcanal";
            mcs_timezone_Fiji           = "Fidji";
            mcs_timezone_Auckland       = "Auckland";
            mcs_timezone_Apia           = "Apia";
            mcs_timezone_Fakaofo        = "Fakaofo";
            mcs_timezone_Tongatapu      = "Tongatapu";
            mcs_timezone_Kiritimati     = "Kiritimati";
            mcs_connect_timeout         = "Dépassement de durée de connexion";
            mcs_share                   = "Partager";
            mcs_share_prompt_start      = "Vous pouvez accéder";
            mcs_share_prompt_end        = "au téléchargement de la vidéo par le navigateur du PC ou sur un téléphone Android appartenant au même réseau";
            mcs_share_note              = "Veuillez ne pas quitter la page lors du téléchargement";
            mcs_video_size              = "Taille";
            mcs_video_duration          = "Durée";
            mcs_my_folder               = "Mon dossier";
            mcs_account_no_contain      = "Le compte ne contient pas";
            mcs_edit                    = "Modifier";
            mcs_video_number            = " Vidéo";
            mcs_no_local_video          = "Aucun enregistrement";
            mcs_empty_folder            = "Le dossier est vide";
            mcs_no_history_record       = "Vous n\'avez pas d\'enregistrement";
            mcs_no_local_record         = "Votre enregistrement local est vide";
            mcs_empty_cloud_list_first  = "Votre liste « nuage » est vide";
            mcs_empty_cloud_list_second = "Veuillez cliquer dans le coin en haut à gauche";
            mcs_empty_cloud_list_third  = "Ajout d\'un périphérique !";
            mcs_empty_local_list_first  = "Votre liste locale est vide";
            mcs_empty_local_list_second = "essayer";
            mcs_empty_local_list_third  = "Tirer l\'écran vers le bas";
            mcs_empty_local_list_forth  = "Rafraîchir!";
            mcs_empty_local_list_fifth  = "（Recherche de périphériques sur le réseau local LAN）";
            mcs_record_prompt           = "Vous pouvez voir l\'enregistrement dans \"My->My Folder\"";
            mcs_record_download_prompt  = "Vous pouvez visionner la vidéo \"Mes dossiers\"";
            mcs_register_buton_start    = "Absence de compte ?";
            mcs_register_buton_end      = "Tapez pour vous connecter";
            mcs_product                 = "Produit";
            mcs_user_or_password_invalid = "Nom d\'utilisateur ou mot de passe erronés";
            mcs_share_video_prompt      = "Vous utilisez un réseau non WiFi, veuillez passer sur un réseau WiFi pour partager à nouveau";
            mcs_download_video_prompt   = "Vous utilisez un réseau non WiFi, le téléchargement engendrera des coûts de trafic de données, continuer ?";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "Normal";
            mcs_common_problem          = "Problème courant";
            msc_enter_comment           = "Saisissez vos commentaires";
            msc_description             = "description";
            mcs_parameter               = "Paramètre";
            mcs_help_and_feedback       = "Aide et retour d\'information";
            mcs_personal_center         = "Centre personnel";
            mcs_version                 = "version";
            mcs_language                = "langue";
            mcs_new_user                = "Je suis un nouvel utilisateur";
            mcs_have_account            = "Compte existant";
            mcs_try_it                  = "L\'essayer";
            mcs_sign_up_now             = "Connecter";
            mcs_input_confirm_password  = "Confirmer le mot de passe";
            mcs_warranty_registration   = "enregistrement de la garantie";
            mcs_get_more_cameras        = "obtenir plus de caméras";
            mcs_user_inactive           = "Utilisateur non actif";
            mcs_format_options          = "Format";
            mcs_slide_screen            = "Faites glisser l\'écran pour ajuster l\'angle vidéo";
            mcs_zoom_in_screen          = "Pétrissage l\'écran peut zoomer les détails de la vidéo";
            mcs_pause                   = "pause";
            mcs_source                  = "source";
            mcs_magnetic                = "magnétique";
            mcs_sos                     = "bouton d\'urgence";
            mcs_input_download_path     = "Télécharger chemin";
            mcs_download_path_name_error = "Télécharger le nom de chemin de fichier peut contenir que des lettres (a-z, A-Z) ou numérique (0-9)";
            mcs_active                  = "activité";
            mcs_out                     = "laisser";
            mcs_quiet                   = "calme";
            mcs_scenes                  = "scène";
            mcs_accessory               = "accessoire";
            mcs_quiet_mode              = "Mode silencieux";
            mcs_active_mode             = "Mode actif";
            mcs_out_mode                = "mode Absent";
            mcs_add_accessory           = "Ajouter des pièces jointes";
            mcs_accessory_type          = "type d\'accessoire";
            mcs_add_successfully        = "Vous avez joint";
            mcs_set_scene               = "Vos pièces jointes ne sont pas encore mis la scène , s\'il vous plaît cliquer";
            mcs_to_set                  = "Pour définir";
            mcs_add_accessory_button    = "Appuyez sur le bouton jusqu\'à ce que la lumière rouge va à nouveau pour terminer l\' add";
            mcs_auto_monday             = "Lundi";
            mcs_auto_tuesday            = "Mardi";
            mcs_auto_wednesday          = "Mercredi";
            mcs_auto_thursday           = "Jeudi";
            mcs_auto_friday             = "Vendredi";
            mcs_auto_saturday           = "Samedi";
            mcs_auto_sunday             = "Dimanche";
            mcs_search                  = "recherche";
            mcs_format_input            = "Le format du disque dur";
            mcs_get_accessory_failed    = "Pièce jointe n\'a pas réussi à obtenir";
            mcs_get_scene_failed        = "Obtenez les scénarios de défaillance";
            mcs_search_failed           = "Recherche échoue";
            mcs_add_failed              = "Ajouter Échec";
            mcs_ethernet_connect        = "Ethernet";
            mcs_action_click_retry      = "Cliquez sur Retry";
            mcs_wifi_config_failure_detail = "Ou vous pouvez essayer";
            mcs_qrcode_connect          = "Code à deux dimensions connecté";
            mcs_close_sound_prompt      = "Open Sound permet la connexion Wi-Fi, tenez le téléphone près de l\'enceinte du microphone de la caméra";
            mcs_qrcode_prompt_title     = "S\'il vous plaît les opérations représentées sur la figure.";
            mcs_qrcode_prompt_detail    = "S\'il vous plaît viser l\'objectif de la caméra sur le code QR exactement et de garder la distance soit 30cm.";
            mcs_select_wifi_prompt      = "Aucun câble Ethernet nécessaire";
            mcs_select_ethernet_prompt  = "câble Ethernet nécessaire pour l\'installation seulement";
            mcs_enter_config_mode_prompt = "S\'il vous plaît vérifier l\'indicateur Wifi est trois trois rouge vert clignotant alternativement. Si oui, s\'il vous plaît cliquez sur le bouton Suivant. Sinon, appuyez sur la touche RESET de la caméra. Ensuite, vérifiez à nouveau l\'indicateur Wi-Fi";
            mcs_no_enter_config_mode    = "Pas entrer dans le mode de configuration";
            mcs_record_time             = "Durée d\'enregistrement(s)";
            mcs_stop_search             = "Arrêter la recherche";
            mcs_smart_wifi_setup        = "configuration Wifi intelligent";
            mcs_ethernet_setup          = "Configuration Ethernet";
            mcs_wifi_config_restore_start = "1) Mettez votre périphérique sous tension";
            mcs_wifi_config_restore_end = "2) Appuyez sur le bouton de réinitialisation pendant une seconde, le dispositif permet de restaurer et de redémarrer après 60 secondes, puis passe en mode de configuration automatique";
            mcs_Sense_schedule          = "la planification de scénarios";
            load_succeed                = "succès de chargement";
            load_fail                   = "Échec du chargement";
            refresh_succeed             = "Actualisez succès";
            refresh_fail                = "Échec de l\'actualisation";
            mcs_ensure_dev_power        = "1) Mettez votre périphérique sous tension";
            all_refresh_complete        = "Toutes les données sont actualisées";
            mcs_synchronize             = "synchrone";
            mcs_synchronize_detail      = "Profils de l\'équipement et des paramètres incompatibles suivant, doivent être synchronisés au travail après";
            mcs_Sense_Schedule_Set      = "Scénario ensemble de planification";
            mcs_Sence_Schedule_detail   = "Si vous activez le mode automatique de scène , le système passe automatiquement en fonction des scénarios de planification de scénarios à différents moments";
            mcs_Scene_set               = "Profils";
            mcs_Scene_set_detail        = "Si vous activez un profil , le profil en fonction des paramètres présentés dans les pages suivantes";
            mcs_send_message            = "Envoyer un message";
            mcs_start_recording         = "Commencer l\'enregistrement";
            mcs_start_capture           = "Lancer la capture";
            mcs_turn_on_video           = "Pour quitter le mode d\'enregistrement continu , s\'il vous plaît ouvrir la vidéo";
            mcs_search_press_button     = "Appuyez sur le bouton de retour pendant 1 seconde après la libération, le voyant clignote lentement";
            mcs_add_fail1               = "Le dispositif a été annulé en raison de la courte par addition, cliquez sur le bouton essayer de relancer la recherche d\'addition";
            mcs_add_fail2               = "Dispositif pour ajouter l\'échec, cliquez sur ajouter de relance de la recherche";
            mcs_recording_duration      = "Durée d\'enregistrement (en secondes)";
            mcs_settings_unsaved        = "Vos paramètres ne sont pas enregistrés";
            mcs_want_save               = "Est-il sauver?";
            mcs_camera                  = "caméra vidéo";
            mcs_router                  = "routeur";
            mcs_start_up                = "début";
            mcs_cancle_add              = "L\'équipement a été annulée en raison de la presse à court Ajouter";
            mcs_visit_photo_fail        = "Album de l\'échec d\'accès";
            mcs_camera_cell             = "De la caméra";
            mcs_myphoto                 = "J\'ai ma photo";
            mcs_select_photo            = "Albums sélectionnés";
            mcs_app_new_version         = "La nouvelle version";
            mcs_update_new_version      = "Mettre à niveau maintenant";
            mcs_app_new_version_prompt  = "App a une nouvelle version, sélectionnez Mise à niveau Télécharger Mettre à jour maintenant";
            download_failed             = "Échec du téléchargement";
            mcs_connect_server_prompt   = "WiFi est connecté, est connecté au serveur";
            mcs_local_search            = "Recherche locale";
            mcs_choose_device_type      = "choisir le type d\'appareil";
            mcs_wifi_state              = "Commentaires: wifi fonctionne correctement, vous pouvez maintenant de déconnexion de câble (déconnexion de câble peut se produire après la situation, le dispositif n\'est pas en ligne, veuillez attendre 20 automatiquement en ligne)";
            mcs_sweep                   = "balayer";
            mcs_wifi_config_tip         = "Un routeur wifi, et d\'éviter des problèmes de câblage";
            mcs_ethernet_config_tip     = "Il n\'y a pas de routeur d\'insertion pratique de Réticule";
            mcs_ethernet_connect_step_one = "Première étape: assurer la connexion d\'une prise d\'alimentation de la ligne d\'alimentation 1 2";
            mcs_ethernet_connect_step_two = "Deuxième étape: par le câble de connexion de réseau et un routeur de port de caméra 4.";
            mcs_sweep_qrcode_tip        = "Une caméra portable pour effectuer un balayage de Code bidimensionnel, de maintenir une distance de 30 cm environ";
            mcs_sound_config_tip        = "Jouer un son à connexion Wi - fi.(on peut également choisir de fermeture)";
            mcs_sosalt                  = "%@ : Alarme Bouton d\'urgence(%@)";
            mcs_dooralt                 = "%@ : alerte magnétique(%@)";
            mcs_wifi_config_restore     = "Veuillez détacher par clé de remise à zéro, une seconde, \"le dispositif entre dans un mode de configuration WIFI\".";
            mcs_voice_remind_heard      = "Déjà entendu des invites vocales";
            mcs_netWork_prompt          = "Un réseau de pointes";
            mcs_con_netWork             = "Réseau actuellement utilisé pour la connexion de données, il peut consommer beaucoup de trafic, si les paramètres de l\'interface réseau mis à sauter";
            mcs_no_netWork              = "Actuellement aucune connexion réseau, si le saut pour configurer l\'interface des paramètres réseau";
            mcs_exception_des           = "Votre application sortie dernière exception, que ce soit pour envoyer un rapport d\'erreur sur le serveur";
            mcs_exception_prompt        = "Astuce anormale";
            mcs_erro_diagnosis          = "Dépannage";
            mcs_erro_log_des            = "App récent record journal des erreurs, sélectionnez le bouton d\'envoi pour télécharger un journal d\'erreurs, je vous remercie de votre collaboration!";
            mcs_is_submitting           = "Être présenté";
            mcs_firmware_version        = "Version Firmware";
            mcs_device_assembly         = "1.ligne électrique  2.port d\'alimentation  3.port Ethernet  4.câble  5.adaptateur";
            mcs_forgetpass_action_wizard_old = "Appuyez sur le bouton de remise à zéro pendant une seconde, le dispositif permet de restaurer les réglages d\'usine et 60 secondes après le redémarrage, la récupération de mot de passe admin";
            mcs_device_assembly_mipc    = "1.ligne électrique  2.port d\'alimentation  3.port Ethernet  4.câble";
            mcs_device_connect_power_prompt = "Le dispositif n\'est pas en ligne, s\'il vous plaît, comme le montre la figure de l\'alimentation d\'un dispositif d\'accès vous a vu la puissance de la lumière rouge est allumé, le dispositif de démarrage est terminé.";
            mcs_lights_sound            = "A voir de la lumière";
            mcs_connect_power           = "De connexion d\'alimentation";
            mcs_search_magnetic         = "Comme le montre, la porte magnétique combiné et appuyez sur le bouton latéral pour 1 seconde après la libération, le voyant clignote lentement";
            mcs_add_magnetic            = "Après l\'ouverture du capteur de porte de fusion , voir l\'indicateur flash désactivé achèvement de l\'addition";
            mcs_already_downloaded      = "Téléchargé";
            mcs_my_order                = "J\'ai des ordres";
            mcs_auto_mode               = "Mode automatique";
            mcs_new_small               = "Basse";
            mcs_new_half                = "Demi";
            mcs_new_normal              = "Normal";
            mcs_new_hd                  = "Haute définition";
            mcs_scene_now               = "Situation actuelle";
            mcs_please_install_wechat   = "Veuillez installer WeChat";
            mcs_wechat_not_support      = "WeChat version ne soutient pas la mise à jour de WeChat";
            mcs_motion_alert            = "Alerte mouvement";
            mcs_io_alert                = "alerte E/S";
            mcs_valid_user_name         = "Première étape: Veuillez entrer un nom d\'utilisateur valide";
            mcs_binding_mailbox         = "Deuxième étape: boîte aux lettres Veuillez entrer de liaison";
            mcs_send_mailbox_succuess_prev = "Notre boîte aux lettres de a à vous de transfert de liaison ";
            mcs_send_mailbox_succuess_next = " Envoyer une lettre de récupération de mot de passe de courrier, veuillez noter que la réception de courrier.";
            mcs_all_image               = "Toutes les images";
            mcs_unavailable_image       = "La photo n\'est pas disponible, veuillez sélectionner de nouveau";
            mcs_set_nickname            = "surnom Réglage";
            mcs_search_timeout          = "Le temps de recherche , cliquez sur Rechercher à nouveau";
            mcs_screen_size             = "Paramètres de l\'écran";
            mcs_screen_reset            = "Opération réussie. Redémarrer pour activer";
            mcs_wifi_network_prompt     = "Veuillez vérifier la connexion wifi de caméra est wifi GHz, s\'il vous plaît, wifi - connecté à la caméra dans la bande de fréquence de 2,4 GHz";
            mcs_fault_diagnosis         = "Diagnostics de réseau";
            mcs_sever_diagnosis         = "Peut - être en raison de la défaillance d\'un serveur, n\'entraîne pas l\'utilisation normale.";
            mcs_select_problem          = "Veuillez choisir un problème";
            mcs_connot_lonin            = "Non connecté";
            mcs_connot_play             = "Ne joue pas";
            mcs_add_problems            = "Questions supplémentaires";
            mcs_encounterer_problems    = "Question veuillez entrer rencontre";
            mcs_diagnostic_network      = "Lancer le diagnostic";
            mcs_network_diagnostic_prompt = "Dans le réseau de diagnostic peut nous aider à résoudre le problème que vous avez rencontré nécessaires de diagnostic, environ quelques minutes";
            mcs_network_diagnostic      = "Dépannage";
            mcs_connecting_server       = "Conectar con el servidor.";
            mcs_diagnostic_process_prompt = "Processus de diagnostic peut prendre plusieurs minutes, au cours de diagnostics ne pas effectuer d\'autres opérations, mais vous pouvez toujours arrêter le diagnostic";
            mcs_diagnostic_results      = "Les résultats de diagnostic";
            mcs_diagnostic_results_received = "Le diagnostic est terminé, les résultats de diagnostic ont été reçus";
            mcs_diagnostic_results_prompt = "Nous vous remercions d\'avoir participé à ce diagnostic, les résultats du diagnostic nous aidera à résoudre votre problème le plus rapidement possible";
            mcs_results_no_abnormality  = "Les résultats de diagnostic sans exception";
            mcs_no_abnormality_prompt   = "Le diagnostic aucune anomalie n\'a été trouvée. Vous pouvez choisir la profondeur du diagnostic, commencer les capacités de collecte de journal va nous aider à mieux résoudre le problème que vous rencontrez";
            mcs_continue_diagnosis      = "Profondeur Diagnostic";
            mcs_diagnosis_connot_sent   = "diagnostic ne peut être envoyé";
            mcs_email_sends             = "L\'envoi d\'un courrier électronique";
            mcs_email_sends_prompt      = "Envoyer les résultats de diagnostic pour nous par e-mail, il nous aidera à résoudre votre problème le plus rapidement possible";
            mcs_diagnosis_send          = "Envoyer";
            mcs_diagnosis_email         = "Courrier électronique";
            mcs_send_successful         = "Envoyé avec succès";
            mcs_diagnosis_type_select_prompt = "s\'il vous plaît sélectionner le type de diagnostic";
            mcs_stop_diagnosis          = "Arrêter Diagnostic";
            mcs_detail_diagnosis_prompt = "Diagnostic procéder, vous pouvez désactiver la page de l\'appareil";
            mcs_detail_diagnosis_stop_prompt = "Le diagnostic de la profondeur est en cours, vous pouvez toujours interrompez";
            mcs_exit_detail_diagnosis   = "Le diagnostic de la profondeur est en cours, que ce soit pour arrêter?";
            mcs_network_connection_unavailable = "La connexion réseau est indisponible";
            mcs_Failed_connect_Internet = "Impossible de se connecter à Internet";
            mcs_connect_internet_note   = "Si vous avez besoin de se connecter à l\'Internet, s\'il vous plaît noter les points suivants:";
            mcs_connect_internet_detail_first = "Vérifiez les paramètres LAN sans fil de votre téléphone, pour voir s\'il y a un accès à un signal LAN sans fil";
            mcs_connect_internet_detail_second = "Vérifiez si votre téléphone dispose d\'un accès à un réseau mobile, et le téléphone n\'a pas été désactivé";
            mcs_connect_wifi_note       = "Si vous avez accès au réseau local sans fil:";
            mcs_connect_wifi_detail     = "Vérifiez si votre connexion sans fil hotspot LAN a accès à Internet, ou si le hotspot que votre appareil pour accéder au réseau local";
            mcs_device_or_phone_time_zone_not_equals_please_select = "Dispositif fuseau horaire actuel et le fuseau horaire du téléphone mobile ne sont pas, sélectionnez le fuseau horaire correct";
            mcs_phone_timezone          = "Fuseau horaire de téléphone";
            mcs_timezone_change         = "Modifier le fuseau horaire";
            mcs_mail_send               = "Message envoyé";
            mcs_yes_verif               = "il est";
            mcs_no_verif                = "aucun";
            mcs_camera_found_new_version_y_n_upgrade = "Nous avons trouvé une nouvelle version de l\'appareil, que ce soit pour la mise à niveau?";
            mcs_auto_adapt_split_screen = "Adaptatif";
            mcs_four_split_screen       = "Quatre points d\'écran";
            mcs_nine_split_screen       = "Neuf points d\'écran";
            mcs_twelve_split_screen     = "12 points d\'écran";
            mcs_not_connection_server   = "Impossible de se connecter au serveur";
            mcs_more_options            = "Plus";
            mcs_bind_email_prompt       = "Afin de tenir compte de la sécurité, lier votre boîte aux lettres";
            mcs_login_now               = "Connectez-vous maintenant";
            mcs_device_connect_power    = "1.ligne électrique     2.port d\'alimentation";
            mcs_device_connect_ethernet = "1. Le port de réseau   2. Le câble";
            mcs_device_connect_ethernet_prompt = "Le réseau d\'accès et une extrémité de câble, l\'autre extrémité de routeur d\'accès, a été vu vert clignotant port réseau de la lampe, le câble de connexion est terminé.";
            mcs_pwd_format              = "Format numérique: la longueur de mot de passe entre 8 à 16 bits de caractères, les lettres et symboles spéciaux contenant au moins trois";
            mcs_client_new              = "Client";
            mcs_user_guide              = "Manuel de l\'utilisateur";
            mcs_ebitcam_download_describe = "Ebitcam est un logiciel de service de surveillance de nuage, le logiciel de la caméra avec de l\'air, ce qui permet à l\'utilisateur de visualiser des informations vidéo de partout, on vous offre claire et fluide d\'expérience de visualisation de commande intelligent pour vous, à tout moment, l\'amour de sa famille, comme l\'utilisateur à télécharger!";
            mcs_mipc_download_describe  = "Mipc est un logiciel de service de surveillance de nuage, le logiciel de la caméra avec de l\'air, ce qui permet à l\'utilisateur de visualiser des informations vidéo de partout, on vous offre claire et fluide d\'expérience de visualisation de commande intelligent pour vous, à tout moment, l\'amour de sa famille, comme l\'utilisateur à télécharger!";
            mcs_guide_download          = "Manuel de téléchargement";
            mcs_password_admin          = "Password Management";
            mcs_already_read            = "J\'ai lu et accepté";
            mcs_privacy_policy          = "La politique de confidentialité";
            mcs_not_agree_privacy_policy = "Vous n\'êtes pas d\'accord avec la politique de confidentialité";
            mcs_reload                  = "Recharger";
            mcs_start_download          = "Télécharger";
            mcs_video_play_fail         = "Un échec de lecture vidéo";
            mcs_download_app_tips       = "Vous pouvez également essayer de client utilise PC";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = "Le type de dispositif";
            mcs_connect_device_wifi     = "Caméra wifi de ne pas soutenir la bande de 5 GHz";
            mcs_send_diagnosis_results  = "à transmettre le résultat de diagnostic.";
            mcs_local_file              = "Fichier local.";
            mcs_local_device            = "Le dispositif local";
            mcs_export_sd_data          = "Les données de la carte SD dérivé";
            mcs_shaking                 = "La tête de machine";
            mcs_outdoor                 = "Série de l\'unité extérieure";
            mcs_card                    = "Une série de cartes";
            mcs_wifi_connection         = "Une connexion wifi";
            mcs_home_mode               = "mode d\'accueil";
            mcs_away_home_mode          = "mode LOIN";
            mcs_auto_switch_mode        = "basculer automatiquement";
            mcs_select_scene_mode       = "S\'il vous plaît choisir un profil";
            mcs_7x24_hours_prompt       = "7x24 Ouvert (h) Enregistrement";
            mcs_all_day_recording       = "vidéo jour";
            mcs_home_mode_prompt        = "mode d\'accueil: Toutes les alarmes d\'équipement Fermer";
            mcs_away_home_mode_prompt   = "mode LOIN:Tous les dispositifs d\'alarme ouverte";
            mcs_at_home                 = "chez soi";
            mcs_away_home               = "dehors";
            mcs_set_timezone_prompt_start = "Votre fuseau horaire";
            mcs_set_timezone_prompt_end = "S\'il vous plaît changer \"Jour/heure\" dans le cadre de fuseau horaire";
            mcs_set_wifi_remind_head    = "La question suivante peut entraîner une caméra en réseau recommandé d\'éviter l\'échec";
            mcs_set_wifi_remind_1       = "à vérifier si l\'ouverture a mis le réseau Wifi, ce réglage peut entraîner une caméra de réseau ne peut pas être normal.Vous pouvez fermer temporairement contre le réseau, après le succès de la mise en réseau de caméras de reprise de réglages de routeur";
            mcs_set_wifi_remind_2       = "Si votre maison est un routeur wifi à double fréquence, veuillez vérifier s\'il est connecté à la caméra wifi GHz, veuillez laisser la caméra wifi de connexion dans la bande de fréquence de 2,4 GHz";
            mcs_set_wifi_remind_3       = "La caméra ne soutiennent pas wifi WPA / wpa2 au niveau de l\'entreprise, veuillez choisir un autre WiFi";
            mcs_set_wifi_remind_4       = "Si votre maison est ponté wifi, car pour des raisons de pontage peut conduire à votre réseau très instable, il est recommandé de connexion wifi sans pontage";
            mcs_set_wifi_remind_5       = "Qu\'est - ce que la caméra WiFi";
            mcs_record_save_to_my_file  = "Vidéo enregistrée à mes fichiers";
            mcs_view_now                = "voir maintenant";
            mcs_search_sos_strat        = "Comme le montre, le fond appuyez sur la touche";
            mcs_search_sos_end          = "Une seconde, l\'indicateur de l\'appareil clignote";
            mcs_search_magnetic_start   = "Comme le montre, la porte magnétique combiné, appuyez sur le bouton latéral";
            mcs_search_magnetic_end     = "Une seconde, l\'indicateur de l\'appareil clignote";
            mcs_adding                  = "Ajout";
            mcs_record_empty_set_sd     = "Insérez une carte SD permet de stocker l\'histoire vidéo";
            mcs_video_play_offline      = "Le dispositif est déconnecté";
            mcs_video_play_network_fail = "La connexion réseau a échoué, réessayez plus tard";
            mcs_alert_notify_guide1     = "Opération de détection de mouvement [Original] pour migrer vers [annexe], [par] les paramètres du profil";
            mcs_alert_notify_guide2     = "Le fonctionnement est le suivant:";
            mcs_alert_notify_guide3     = "Sélectionnez [scène], vous devez éteindre le mode d\'armement, vous devez ouvrir en mode de désarmement de la maison;";
            mcs_alert_notify_guide4     = "Sélectionnez [Accessoires] - [Liste des accessoires] - mode [Détection de mouvement] est activé sur alarme, vidéo, photographie, fonction d\'alarme IO, désactiver l\'alarme en mode d\'accueil, l\'enregistrement vidéo et d\'autres fonctions. ";
            mcs_plan_protect_guide1     = "Opération [Original] plan d\'armement migré vers le [scénario]";
            mcs_plan_protect_guide2     = "Sélectionnez [scénario], profils ouverts commutation automatique;";
            mcs_plan_protect_guide3     = "sélectionner";
            mcs_plan_protect_guide4     = ", La nécessité d\'une période d\'armement (par exemple: Mardi, 7: 00-18: 00) énonce le mode, après OK pour enregistrer et revenir à l\'onglet REGLAGES;";
            mcs_plan_record_guide       = "Sélectionnez [Enregistrement], éteindre la fonction d\'enregistrement de mode.";
            mcs_plan_record_guide1      = "Opération [Programmer un enregistrement] plan d\'armement migré vers le [Enregistrement]";
            mcs_plan_record_guide2      = ", La nécessité pour l\'enregistrement période de temps (par exemple: Mardi, 7: 00-18: 00) énonce le mode, après OK pour enregistrer et revenir à l\'onglet REGLAGES;";
            mcs_forgetpass_action_prompt = "S\'il vous plaît appuyez sur le dispositif Réinitialisation Retour trou 10 secondes après la libération, des lumières et de l\'équipement pour restaurer les paramètres d\'usine infrarouge";
            mcs_cloud_box               = "Box Couverture";
        }/* fr */
        else if(lang == "es")
        {
            mcs_name                    = "Texto";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "Nombre";
            mcs_old_nick                = "Nombre";
            mcs_linked                  = "Vinculado";
            mcs_sign_in                 = "Iniciar sesión";
            mcs_back                    = "Atrás";
            mcs_will_back               = "Nous reviendrons";
            mcs_add                     = "Añadir";
            mcs_add_device              = "Agregar dispositivo";
            mcs_device_existed          = "Ya existe dispositivo";
            mcs_cancel                  = "Cancelar";
            mcs_exit                    = "Salir";
            mcs_remember_password       = "Recordar contraseña";
            mcs_password_remembered     = "Contraseña recordada";
            mcs_sign_ining              = "En proceso de registro...";
            mcs_cloud_server            = "Servidor Cloud";
            mcs_input_device_id         = "Dispositivo de entrada ID";
            mcs_input_username          = "Ingresa tu nombre de usuario";
            mcs_input_email_addr        = "Ingresa tu email";
            mcs_email_address           = "Email";
            mcs_email                   = "Email";
            mcs_binding                 = "Agregar email";
            mcs_binding_email           = "Agregar email";
            mcs_binding_send_prompt     = "buzón de Encuadernación";
            mcs_binding_email_prompt    = "Si olvidas tu contraseña, puedes restaurarla por email.";
            mcs_input_password          = "Ingresa tu contraseña";
            mcs_access_server_failed    = "Acceso al servidor fallido";
            mcs_device_offline          = "Dispositivo desconectado";
            mcs_invalid_password        = "Contraseña incorrecta";
            mcs_invalid_dev             = "Dispositivo no existe";
            mcs_login_faided            = "Error de acceso";
            mcs_invalid_qrcode          = "No válido QR-Code";
            mcs_please_input_username   = "Introduzca nombre de usuario";
            mcs_please_input_password   = "Introduzca contraseña";
            mcs_qrcode_scan_hint        = "Escanea el código QR ubicado en la cámara";
            mcs_device_list_empty       = "Lista de dispositivos vacía";
            mcs_record_list_is_empty    = "La lista de video está vacía";
            mcs_password_expired        = "Contraseña caducado";
            mcs_set_video_size          = "Ajuste el tamaño del video";
            mcs_hd_1280x720             = "HD [1280x720]";
            mcs_auto                    = "Auto";
            mcs_normal_640x360          = "Normal [640x360]";
            mcs_half_320x180            = "La mitad [320x180]";
            mcs_small_160x90            = "Menor [160x90]";
            mcs_play                    = "Jugar";
            mcs_settings                = "Ajustes";
            mcs_messages                = "Mensajes";
            mcs_alarm                   = "Alarma";
            mcs_delete                  = "Eliminar";
            mcs_delete_camera           = "¿Eliminar ";
            mcs_apply                   = "Aplicar";
            mcs_speed                   = "Velocidad";
            mcs_others                  = "Otras";
            mcs_audio                   = "Audio";
            mcs_speaker                 = "Altavoz";
            mcs_mic                     = "Micrófono";
            mcs_power_frequency         = "Frecuencia de red";
            mcs_online_upgrade          = "Actualización online";
            mcs_restore_the_factory_settings = "Restaurar los ajustes de fábrica";
            mcs_restore                 = "Restaurar";
            mcs_restore_camera          = "Reiniciar cámara";
            mcs_start_upgrade           = "Iniciar actualización";
            mcs_system                  = "Sistema";
            mcs_system_settings         = "Ajustes de sistema";
            mcs_online                  = "Conectado";
            mcs_offline                 = "Desconectado";
            mcs_query                   = "Preguntar";
            mcs_begin_time              = "Inicio";
            mcs_end_time                = "Fin";
            mcs_mode                    = "Modo";
            mcs_opened                  = "Abierto";
            mcs_high                    = "Alto";
            mcs_middle                  = "Medio";
            mcs_low                     = "Bajo";
            mcs_io_alert_input          = "I / O de entrada";
            mcs_io_alert_output         = "Alarma E/S";
            mcs_normally_open           = "Normalmente abierto";
            mcs_normally_close          = "Normalmente cerrado";
            mcs_motion_detection_sensitivity = "Sensibilidad de sensor de movimiento";
            mcs_daytime                 = "Día";
            mcs_night                   = "Noche";
            mcs_sdcord                  = "Tarjeta micro SD";
            mcs_storage_device          = "Dispositivo de almacenamiento";
            mcs_set_mask                = "Set máscara";
            mcs_status                  = "Estado";
            mcs_capacity                = "Capacidad";
            mcs_usage                   = "Usado";
            mcs_format                  = "Formato";
            mcs_repair                  = "Reparar";
            mcs_formating               = "En proceso de formato";
            mcs_repairing               = "En proceso de reparación";
            mcs_mounted                 = "Montado";
            mcs_unmounted               = "Desmontado";
            mcs_mount                   = "Montar";
            mcs_unmount                 = "Desmontar";
            mcs_ethernet                = "Ethernet";
            mcs_wifi                    = "Wi-Fi";
            mcs_enabled                 = "Activado";
            mcs_mac_address             = "Dirección MAC";
            mcs_network_status          = "Estado de la red";
            mcs_wifi_mode               = "Mode Wi-Fi";
            mcs_client                  = "Cliente";
            mcs_ap                      = "AP";
            mcs_start_address           = "Dirección de inicio";
            mcs_end_address             = "Dirección de destino";
            mcs_gateway                 = "Gateway";
            mcs_select_network          = "Seleccione la red";
            mcs_dhcp_ip                 = "IP : Usar DHCP";
            mcs_dhcp_dns                = "DNS : Usar DHCP";
            mcs_ip_address              = "Dirección de IP";
            mcs_network_mask            = "Máscara de red";
            mcs_input_secondary_dns     = "Introduzca DNS secundario";
            mcs_secondary_dns           = "DNS secundario";
            mcs_input_dns               = "Introduzca DNS";
            mcs_input_alternate_dns     = "Introduzca DNS alternativo";
            mcs_input_ip                = "Introduzca la dirección de IP";
            mcs_input_gateway           = "Introduzca Gateway";
            mcs_input_network_mask      = "Introduzca máscara de red";
            mcs_wifi_list               = "Wi-Fi lista";
            mcs_display_date            = "Mostrar fecha";
            mcs_date_format             = "Formato de fecha";
            mcs_display_time            = "Mostrar Hora";
            mcs_time_format             = "Formato de Hora";
            mcs_24_hour                 = "24-horas";
            mcs_12_hour                 = "12-horas";
            mcs_display_weeks           = "Mostrar día de la semana";
            mcs_date_time               = "Fecha/Hora";
            mcs_set_time                = "Ajuste de la hora";
            mcs_set_week                = "Ajuste de semana";
            mcs_stream                  = "Stream";
            mcs_encode                  = "Codificación";
            mcs_resolution              = "Resolución";
            mcs_frame_fate              = "Destino Frame";
            mcs_maximum_bitrate         = "Bitrate máximo";
            mcs_minimum_bitrate         = "Bitrate mínimo";
            mcs_i_frame_interval        = "Intervalo de I -Frame";
            mcs_video                   = "Vídeo";
            mcs_sampling_rate           = "Frecuencia de muestreo (kHz )";
            mcs_nickname                = "Nombre";
            mcs_old_password            = "Contraseña antigua";
            mcs_confirm_password        = "Confirma la contraseña de cuenta";
            mcs_modify_password         = "Modificar la contraseña";
            mcs_password                = "Contraseña";
            mcs_admin_password          = "Contraseña de administrador";
            mcs_guest_password          = "Contraseña de invitado";
            mcs_product_info            = "Información del producto";
            mcs_software_version        = "Versión de software";
            mcs_device_id               = "ID de dispositivo";
            mcs_operation               = "Operación";
            mcs_record                  = "Grabar video";
            mcs_record_2                = "Grabar";
            mcs_upgrade_now             = "Actualizar ahora";
            mcs_upgrading               = "Está actualizando";
            mcs_already_latest_version  = "Versión más reciente";
            mcs_sensitivty              = "Sensibilidad";
            mcs_user_defined            = "Definido por el usuario";
            mcs_time                    = "Tiempo";
            mcs_date                    = "Día(s)";
            mcs_finish                  = "Aplicar";
            mcs_delete_fail             = "Borrar la derrota";
            mcs_motion                  = "Movimiento";
            mcs_start                   = "Comenzar";
            mcs_talk                    = "Hablar";
            mcs_password_input_inconsistent = "Introducción de contraseña incompatible";
            mcs_input_6_to_20_litters   = "De entrada 6-20 letras (a-z, A-Z) o números (0-9)";
            mcs_user_letter_range_hint  = "Cuenta con 6 - 32 dígitos (0 - 9) o letras (A - Z, a - z), debe comenzar con una letra";
            mcs_password_range_hint     = "La contraseña es 6-32 letra o número";
            mcs_begin_with_the_letters  = "Comience con letras";
            mcs_sign_up                 = "Registrarse";
            mcs_sign_up_failed          = "Regístrate fallado";
            mcs_successful_sign_up      = "Regístrate con éxito";
            mcs_are_you_sure_delete     = "¿Está seguro que desea eliminar la cámara de su cuenta?";
            mcs_failed_to_set_the       = "Ajuste error";
            mcs_set_successfully        = "Ajuste con éxito";
            mcs_downloading             = "Descargando";
            mcs_wrote                   = "Escrito";
            mcs_visit_again_later       = "Visite de nuevo más tarde";
            mcs_restart_failed          = "Reiniciar fallido";
            mcs_upgrade_failed          = "Actualización fallada";
            mcs_connnected              = "Conectado";
            mcs_connnected_to           = "Conectado a";
            mcs_not_select              = "Seleccionar red";
            mcs_message_list            = "List de mensaje";
            mcs_saved_password          = "Contraseña guardada";
            mcs_alert                   = "Alerta";
            mcs_no_record               = "No video";
            mcs_new_about               = "Nuevo : sobre";
            mcs_device                  = "Dispositivo";
            mcs_config                  = "Configuración";
            mcs_change_password_failed  = "Cambiar contraseña fallado";
            mcs_do_you_want_restart     = "Desea reiniciar ?";
            mcs_do_you_want_restore     = "Desea restaurar?";
            mcs_do_you_want_upgrade     = "Desea actualizar ?";
            mcs_load_end                = "Terminar cargar";
            mcs_loading                 = "Cargando...";
            mcs_down_refresh            = "Abajo para actualizar";
            mcs_release_refresh         = "liberación Actualizar";
            mcs_refreshing              = "refrescante";
            mcs_release_then_loading_data_hint = "La liberación de la carga de datos";
            mcs_pull_refresh_hint       = "Tire para cargar";
            mcs_restarting              = "Reiniciando";
            mcs_upgraded_time           = "Actualizada el : ";
            mcs_done                    = "Terminado";
            mcs_playback                = "Reproducción";
            mcs_i_o_alarm               = "I/O Alarma";
            mcs_alarm_action            = "Alarma de movimiento";
            mcs_alarm_sources           = "Fuentes de alarma";
            mcs_io_output               = "I/O Salida";
            mcs_snapshots               = "Tomar fotos";
            mcs_snapshot                = "Imagen";
            mcs_snapshot_interval       = "Intervo de instantánea";
            mcs_pre_record_length       = "Longitud del Pre - registro ( s )";
            mcs_nick_range_hint         = "Apodo menos de 20 dígitos y letras";
            mcs_save                    = "Guardar";
            mcs_close                   = "Cerrar";
            mcs_snapshoting             = "fotografiado en";
            mcs_snapshot_failed         = "Fotos fallidas";
            mcs_record_failed           = "Error en la operación de video";
            mcs_saved_successfully      = "Guardado con éxito";
            mcs_save_failed             = "Guardado fallado";
            mcs_restart_to_take_effect  = "Reiniciar surta efecto";
            mcs_please_allow_access_album = "Por favor permita MIPC visitar a su álbum de fotos.";
            mcs_please_allow            = "Por favor permita ";
            mcs_access_album            = " visitar a su álbum de fotos.";
            mcs_ios_privacy_setting_for_photo_prompt = "IPhone \" Ajustes - > Privacidad -> Fotos \" , encontrar la aplicación \"";
            mcs_execute_change          = "\" cambiar.";
            mcs_access_camera           = " visitar a su Cámara";
            mcs_please_allow_access_camera = "Por favor permita MIPC visitar a su Cámara";
            mcs_ios_privacy_setting_for_camera_prompt = "Puedes estar en iPhone \"Ajustes - > Privacidad -> Cámara\" , encontrar la aplicación \"";
            mcs_busy_when_write         = "Ocupado cuando escribir";
            mcs_unknown_error           = "Desconocido error";
            mcs_i_know                  = "Yo sé";
            mcs_segment                 = "Fragmente";
            mcs_please_relogin          = "Regístrate de nuevo";
            mcs_change_password_succeed = "Cambiar contraseña - éxito";
            mcs_upgrade_to_ver          = "Actualizar a una nueva versión";
            mcs_restore_failed          = "Restaurar fallado";
            mcs_please_restart          = "Reinicie";
            mcs_keep_network_settings   = "Configuración de red y Reservas contraseña";
            mcs_not_connected           = "Desconectado";
            mcs_sdcard_not_ready        = "Tarjeta micro SD no esta lista";
            mcs_device_not_exist        = "No existe dispositivo";
            mcs_disable                 = "Inhabilitado";
            mcs_to_determine_the        = "¿Está seguro?";
            mcs_alert_on                = "Activar alertas";
            mcs_alert_off               = "Desactivar alertas";
            mcs_alert_onoff             = "Alertar de encendido / apagado";
            mcs_monday                  = "Lunes";
            mcs_tuesday                 = "Martes";
            mcs_wednesday               = "Miércoles";
            mcs_thursday                = "Jueves";
            mcs_friday                  = "Viernes";
            mcs_saturday                = "Sábado";
            mcs_sunday                  = "Domingo";
            mcs_mon                     = "Lunes";
            mcs_tue                     = "Martes";
            mcs_wed                     = "Miércoles";
            mcs_thu                     = "Jueves";
            mcs_fri                     = "Viernes";
            mcs_sat                     = "Sábado";
            mcs_sun                     = "Domingo";
            mcs_scheduled_recording     = "Programar grabaciones";
            mcs_schedule                = "Programada";
            mcs_scheduled_recording_status = "Estado de grabación programada";
            mcs_folding                 = "Plegado";
            mcs_unfolding               = "Desplegado";
            mcs_end_time_should_lt_begin = "Hora de finalización debe ser mayor que el tiempo de inicio";
            mcs_recording               = "Grabando";
            mcs_prerecord_interval_range_hint = "Tiempo de pre -grabado debe ser menos de 6 segundos";
            mcs_snapshot_interval_range_hint = "Intervalo de instantánea debe ser 0 o mayor que 60";
            mcs_not_ready               = "No preparado";
            mcs_availablesize           = "Capacilidad disponible";
            mcs_reboot                  = "Reiniciar";
            mcs_alerter                 = "Abra la alarma";
            mcs_pir                     = "PIR";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "Encoder";
            mcs_ok                      = "Aplicar";
            mcs_fault                   = "Error";
            mcs_sensor_status           = "Estado Sensor";
            mcs_about                   = "Información de cámara";
            mcs_reset_now               = "Reiniciar ahora";
            mcs_reset_later             = "Reiniciar mas tarde";
            mcs_prompt                  = "Aceptar";
            mcs_select                  = "Seleccionar";
            mcs_available_netword       = "La red no está disponible, desea configurarla?";
            mcs_request_send            = "Enviando orden";
            mcs_blank_device_id         = "ID de dispositivo no puede estar vacío";
            mcs_blank_username          = "Nombre de usuario no puede estar vacío";
            mcs_blank_password          = "La contraseña no puede estar vacío";
            mcs_exist_user              = "Usuario existente";
            mcs_invalid_user            = "Usuario no válido";
            mcs_invalid_email_addr      = "Adresse courriel erronée";
            mcs_system_err              = "Error del sistema";
            mcs_exceed_device           = "Los usuarios del dispositivo invadidos";
            mcs_continue                = "Continuar";
            mcs_prompt_exit             = "¿Está seguro que desea salir de la aplicación?";
            mcs_device_list             = "lista de dispositivos";
            mcs_no_sdcard               = "Desmontada";
            mcs_no_hard_disk            = "Sin disco duro";
            mcs_show_more               = "Más";
            mcs_shotsnop_exists         = "Las fotos han sido existidos";
            mcs_input_nick              = "Ingresar nombre";
            mcs_nick_not_empty          = "El apodo no puede estar vacío";
            mcs_input_new_pass          = "Ingresar contraseña nueva";
            mcs_input_new_pass_again    = "Confirmar contraseña nueva";
            mcs_new_password            = "Contraseña nueva";
            mcs_modify_network_prompt   = "Modificación de parámetros de red podría causar interrupciones de la red, por favor confirme su modificar otra vez?";
            mcs_wifi_disable_prompt     = "Desactivar Wi-Fi，Continue?";
            mcs_eth_disable_prompt      = "Desactivar la tajeta de red de ethernet. Desea continuar?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "Uso DHCP";
            mcs_manually_set            = "Configurar manualmente";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "DNS primario";
            mcs_client_mode             = "Cliente modo";
            mcs_adhoc_mode              = "Adhoc";
            mcs_connect_fail            = "Falla en la conexión";
            mcs_dhcp_server             = "Servidor DHCP";
            mcs_display_text            = "Mostrar texto";
            mcs_repair_prompt_detail    = "Reparar la causa tal vez que perder algunos datos. ¿Desea continuar?";
            mcs_format_prompt_detail    = "Formato borrará todos los datos en la tarjeta SD. ¿Desea continuar?";
            mcs_mount_prompt            = "Tarjeta SD de monte. ¿Desea continuar?";
            mcs_umount_prompt           = "Video y foto no pueden ser salvo después SD umount. ¿Desea continuar?";
            mcs_sdcard_reset            = "Sistema de éxito, reiniciar la cámara para que surta efecto";
            mcs_sdcard_repairing        = "Reparación espera reiniciar";
            mcs_sdcard_formating        = "Formateo espera reiniciar";
            mcs_sdcard_umount           = "Desmontar";
            mcs_valid                   = "Válido";
            mcs_io                      = "Alarma E/S";
            mcs_input                   = "Entrada";
            mcs_outinput                = "Salida";
            mcs_prompt_alert_on         = "Activar alertas, ¿continuar?";
            mcs_auto_sync_date_time     = "Sincronización automática";
            mcs_alarm_record            = "Grabación de alarma";
            mcs_username                = "Nombre de usuario";
            mcs_re_enter_the_password   = "Vuelva a escribir su contraseña";
            mcs_remember_me             = "Estancia firmado en";
            mcs_home                    = "Home";
            mcs_install_the_plug        = "Instalar el enchufe video";
            mcs_install_the_video_plug  = "Instalar el enchufe video";
            mcs_install_now             = "Instalar ahora";
            mcs_temporarily_installed_use_ordinary_video = "No, instalar más tarde";
            mcs_brightness              = "Brillo";
            mcs_contrast                = "Contraste";
            mcs_color_saturation        = "Saturación";
            mcs_sharpness               = "Nitidez";
            mcs_duration                = "Duración";
            mcs_index                   = "Índice";
            mcs_remark                  = "Notas";
            mcs_media_stream            = "Los medios de comunicación";
            mcs_server                  = "Servidor";
            mcs_media_transfer          = "Transferencia de video";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "Fabricante";
            mcs_model                   = "Modelo";
            mcs_plugin_version          = "Versión plug-in";
            mcs_network_interface       = "Interfaz de red";
            mcs_transfer_protocol       = "Protocolo de transferencia";
            mcs_year                    = "Año";
            mcs_month                   = "Mes";
            mcs_day                     = "Dia";
            mcs_hour                    = "Hora";
            mcs_minute                  = "Minuto";
            mcs_second                  = "Segundos";
            mcs_millisec                = "Milisegundo";
            mcs_ntp                     = "Servidor de hora";
            mcs_upload_upgrade          = "Subir la actualización";
            mcs_stop                    = "Parada";
            mcs_info_rewind             = "Rebobinado";
            mcs_fast_forward            = "Avance rápido";
            mcs_previous_frame          = "Fotograma anterior";
            mcs_next_frame              = "Siguiente fotograma";
            mcs_record_audio            = "Grabación de audio";
            mcs_week                    = "Semana";
            mcs_all                     = "Todo";
            mcs_id                      = "ID";
            mcs_select_all              = "Seleccionar todo";
            mcs_call                    = "Llamar";
            mcs_activation              = "Activación";
            mcs_caption                 = "Subir archivo";
            mcs_alarm_device            = "Dispositivo de alerta";
            mcs_not_installed           = "No está instalada";
            mcs_join_us_now             = "Únase a nosotros ahora";
            mcs_reconnect_please_wait   = "Vuelva a conectar, un momento por favor";
            mcs_erasing                 = "Está borrando";
            mcs_writing                 = "Está escribiendo";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "Hay nueva versión";
            mcs_equipment_flip          = "Rotar imagen";
            mcs_device_status           = "Estado del dispositivo";
            mcs_audio_setting           = "Configuración de audio";
            mcs_nick_modify             = "Modificar apodos";
            mcs_ready                   = "Está listo";
            mcs_full                    = "Está lleno";
            mcs_connecting              = "Está conectando";
            mcs_message_buffering       = "Búffer de mensajes";
            mcs_upgrade_finish          = "Actualiza terminar";
            mcs_image                   = "Imagen";
            mcs_bar                     = "Sección";
            mcs_init                    = "Inicializar";
            mcs_confirm_new_password    = "Confirmar nueva contraseña";
            mcs_continue_switch_wireless_network = "Cambiar la red tal vez causar fallas de la red. ¿Desea continuar?";
            mcs_restore_factory_settings_prompt = "Restaurar los ajustes de fábrica. equipo será el reinicio después de la restauración. ¿ Continuar?";
            mcs_username_does_not_exis  = "Nombre de usuario no existe";
            mcs_username_already_exists = "Nombre de usuario ya existe";
            mcs_successful_whether_login = "Regist éxito, ¿muestra ahora ?";
            mcs_username_demand         = "Comienzan con 6-20 letras o números";
            mcs_the_password_is_empty   = "La contraseña está vacía";
            mcs_password_demand         = "6-20 letras o números";
            mcs_password_empty          = "Confirmar contraseña vacía";
            mcs_two_password_input_inconsistent = "Entrada de la contraseña de dos incompatible";
            mcs_the_user_name_is_empty  = "El nombre de usuario está vacío";
            mcs_upgrade_to_the_latest_version = "Actualizado a la última versión";
            mcs_subnet_mask_wrong_format = "Formato no válido de la máscara de red";
            mcs_upgrade_successful_restart_to_take_effect = "Actualizado con éxito. Debe reiniciar el equipo para que haga efecto.";
            mcs_need_to_restart_the_camera_to_take_effect = "Debe reiniciar la equipo para que surta efecto";
            mcs_not_allowed_close_two_network_cards = "Ethernet y Wi-Fi no se pueden desactivar simultáneamente";
            mcs_modified_successfully   = "Modificado con éxito";
            mcs_connection_successfully = "Conectar con éxito";
            mcs_connection_is_interrupted = "Conectando interrumpida";
            mcs_devices_in_the_account_overrun = "Excede el número de dispositivos de usuario";
            mcs_format_error            = "Error de formato";
            mcs_change                  = "Cambiar";
            mcs_refresh                 = "Renovar";
            mcs_connect                 = "Conectar";
            mcs_upgrade                 = "Actualizar";
            mcs_activate                = "Activar";
            mcs_filter                  = "Filtrar";
            mcs_reset                   = "Reset";
            mcs_prompt_alert_off        = "Apagar el alerta , ¿Continuar?";
            mcs_invalid_server          = "Dirección del servidor NTP no es válido";
            mcs_upgrade_prompt          = "Se actualizará el sistema de la cámara, ¿continuar?";
            mcs_restart_prompt          = "Reinicie la dispositivo, continua？";
            mcs_repeat                  = "Repetir";
            mcs_scheduled_one           = "Grabación 1";
            mcs_scheduled_two           = "Grabación 2";
            mcs_scheduled_three         = "Grabación 3";
            mcs_scheduled_four          = "Grabación 4";
            mcs_more                    = "Más";
            mcs_leave                   = "Afloje Cargando más";
            mcs_qrcode_scan             = "Escanear el código QR";
            mcs_inserted                = "Insertado";
            mcs_removed                 = "Eliminado";
            mcs_upgrade_init            = "Comenzar a actualizar";
            mcs_upgrade_download        = "Actualizar descargar";
            mcs_check                   = "Comprobación";
            mcs_audio_encoder_config    = "Configuración de codec de audio";
            mcs_video_codec             = "Codec de vídeo";
            mcs_download                = "Descargar";
            mcs_client_download         = "Descarga de Clientes";
            mcs_for_more_clarity_smooth_video_experience = "Obtenga la experiencia de vídeo más fluida y nítida";
            mcs_network                 = "Red";
            mcs_mobile_client_download  = "Descarga de Clientes de teléfonos";
            mcs_readonly                = "Sólo leer";
            mcs_please_exit_and_relogin = "Por favor ingresa de nuevo para salir";
            mcs_add_device_failed       = "Error en agregar dispositivos";
            mcs_set_password            = "Cambiar contraseña";
            mcs_7x24_hours              = "7x24(hora)";
            mcs_mtalt                   = "%@ : Configurar alarma";
            mcs_ioalt                   = "%@ : I/O alerta";
            mcs_time_zone               = "Huso horario";
            mcs_select_time             = "Seleccionar el tiempo";
            mcs_now                     = "Ahora";
            mcs_mipc_have_alert_notification = "MIPC tiene notificación de alerta";
            mcs_notification_center     = "Centro de notificaciones";
            mcs_sound                   = "Sonido";
            mcs_vibration               = "Vibración";
            mcs_clear_cache             = "Borrar memoria caché";
            mcs_clear_cache_hint        = "¿Está seguro que desea borrar la memoria caché?";
            mcs_successfully_cleared_cache = "Éxito borrado la caché";
            mcs_app_except_exit_hint    = "Lo sentimos, la aplicación ha detectado una excepción y terminará.";
            mcs_rate_us                 = "Danos tu opinión";
            mcs_password_too_simple_hint = "La contraseña es demasiado simple, modificado para mejorar la seguridad.";
            mcs_check_for_new_version   = "Comprobar si hay nuevas versiones";
            mcs_contact_us              = "Contáctenos";
            mcs_buffer_time             = "Tiempo de autonomía";
            mcs_default                 = "Defecto";
            mcs_alarmed_devices         = "Dispositivo de alarma";
            mcs_aec                     = "Cancelación de eco";
            mcs_permission_denied       = "Permiso denegado";
            mcs_full_screen             = "full Screen";
            mcs_forgot_your_password    = "¿Olvidaste tu contraseña?";
            mcs_your_email              = "Su correo electrónico";
            mcs_sign_up_confirmation    = "Un correo electrónico de confirmación ha sido enviado a verificar la dirección de correo electrónico enviada. Visitando el enlace enviado en este correo electrónico se activará la cuenta.";
            mcs_recovery_prompt         = "Introduzca su dirección de correo electrónico (nombre de usuario), le enviaremos un mensaje para decirle cómo restablecer la contraseña.";
            mcs_password_reset_confirmation = "Un correo electrónico se envía a la dirección de correo electrónico enviada, Visitando el enlace enviado en este correo electrónico para restablecer la contraseña.";
            mcs_recovery_fail_no_mail   = "Recuperar la contraseña fracasan, esta cuenta no haber enlazar email";
            mcs_recovery_fail_invalid_link = "Recuperar la contraseña fracasan, por favor, asegúrese de que el contenido de enlace o la recuperación de nuevo.";
            mcs_recovery_ok_login       = "Éxito de recuperación de contraseña, identifíquese";
            mcs_active_ok_login         = "Cuenta éxito activo. Identifíquese.";
            mcs_active_fail_invalid_link = "Cuenta activa falle. Por favor, asegúrese de que el contenido de enlace o Registrarse nuevamente.";
            mcs_login_fail_inactive     = "Cuenta está inactiva. Por favor, siga el contenido de correo electrónico activa para activar.";
            mcs_sign_up_again           = "Iniciar de nuevo";
            mcs_press_start_talk        = "Pulsar para hablar";
            mcs_release_stop_talk       = "Suelte para detener";
            mcs_delete_device           = "Eliminar cámara";
            mcs_success_removed_equipment = "Eliminar un dispositivo con éxito";
            mcs_remove_equipment_failure = "Retire la falla del equipo";
            mcs_device_busy             = "El dispositivo está ocupado ahora";
            mcs_keep_testing            = "Continuar prueba";
            mcs_notify_tone             = "Tono de notificaciones";
            mcs_float_video             = "Habilitar vídeo flotante";
            mcs_float_position          = "Flotante posición de vídeo";
            mcs_video_resolution        = "resolución de vídeo";
            mcs_float_resolution        = "Flotante resolución de vídeo";
            mcs_top_left                = "Arriba a la izquierda";
            mcs_top_right               = "Arriba a la derecha";
            mcs_bottom_left             = "Abajo a la izquierda";
            mcs_bottom_right            = "Abajo a la derecha";
            mcs_action_next             = "Siguiente";
            mcs_action_cancel           = "cancelar";
            mcs_action_retry            = "Reintente";
            mcs_action_add              = "añadir";
            mcs_is_add                  = "Ya sea para añadir";
            mcs_action_apply            = "Aplicar";
            mcs_action_config           = "configuración";
            mcs_action_skip             = "Cancelar";
            mcs_action_ok               = "Aplicar";
            mcs_action_add_device       = "Agregar dispositivo";
            mcs_action_modify_password  = "Cambiar contraseña";
            mcs_action_config_wifi      = "Configurar Wi-Fi";
            mcs_state_connect_device    = "Conectando de los dispositivos";
            mcs_state_connect_device_fail = "Conecte el fallo del equipo";
            mcs_state_wait_device_online = "A la espera de dispositivo a estar online";
            mcs_state_device_online     = "Online";
            mcs_state_success           = "Completo";
            mcs_fail                    = "Fallado";
            mcs_delete_success          = "Eliminar con éxito";
            mcs_state_add_device_success = "Añadir el éxito de dispositivos";
            mcs_state_add_device_fail   = "Añadir un fallo del dispositivo";
            mcs_state_modify_pass_success = "Contraseña cambiada con éxito";
            mcs_state_modify_pass_fail  = "Cambio de contraseña falla";
            mcs_state_config_wifi_success = "Éxito Establezca Wi-Fi";
            mcs_state_config_wifi_fail  = "Falla en la Conectando";
            mcs_state_connecting_to     = "Conectando a";
            mcs_network_connect_type    = "El dispositivo no está en línea, se asegura de que el dispositivo está encendido, y luego selecciona la Conectando de red:";
            mcs_prompt_modify_passwd    = "Por seguridad, cambie la contraseña predeterminada del dispositivo. La nueva contraseña no debe tener menos de seis caracteres.";
            mcs_prompt_config_wifi      = "Favor de agregar los datos de su red inalámbrica Wi-Fi para conectar su dispositivo a su red.";
            mcs_step1_check_connect     = "Paso 1 : Conecte el router y el cable de red está utilizando la cámara.";
            mcs_first_step_ethernet_connect = "Paso 2: Conecte el cable Ethernet al router ya la cámara.";
            mcs_step2_check_connect     = "Paso 2 : Encienda la cámara.";
            mcs_second_step_ethernet_connect = "Paso 1: Asegúrese de que el dispositivo está encendido.";
            mcs_hint_check_network      = "Nota : la cámara tarda unos 50 segundos en arrancar, tras el inicio es completa, estado2 enciende tres segundos, la luz verde parpadea tres veces, lo que significa que cada cámara ha estado en línea, el asistente introducirá automáticamente la siguiente etapa.";
            mcs_the_end                 = "El fin";
            mcs_hint_password_expired   = "La contraseña ha caducado, por favor vuelve a agregar el dispositivo";
            mcs_hint_remove_ethernet    = "Nota: La Wi-Fi ya funciona correctamente, por lo cual puede desconectar el cable de red.";
            mcs_gateway_format_incorrect = "La Dirección de la pasarela formato incorrecto";
            mcs_dns_format_incorrect    = "Formato de dirección DNS no es correcta";
            mcs_subnet_mask_format_incorrect = "No es correcta la máscara de subred dirección de formato";
            mcs_ip_format_incorrect     = "Formato de dirección IP no es correcta";
            mcs_login_sucess            = "Inicio de sesión correcto";
            mcs_donot_remind            = "No recordar";
            mcs_clear_cache_signout_hint = "Borrar caché saldrá sesión de nuevo para continuar?";
            mcs_devlist_adddev_hint     = "Haz clic aquí para agregar equipos";
            mcs_devlist_menu_hint       = "Haga clic aquí para configurar la resolución";
            mcs_update_failed           = "No actualizar";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "Local";
            mcs_set_npapi               = "Si el plugin se ha instalado, por favor visita \'chrome://flags/#enable-npapi\', permitirá NPAPI, ";
            mcs_set_win32k              = "visita \'chrome://flags/#enable-win32k-renderer-lockdown\', desactivado win32k renderizador lockdown,";
            mcs_restart_browser         = "Reinicie el navegador";
            mcs_download_location       = "Ubicación de la descarga";
            mcs_Networking_mode         = "modo de Redes";
            mcs_wifi_intelligent_configuration = "Conectando Wi-Fi";
            mcs_ethernet_configuration  = "Conectando Ethernet";
            mcs_wifi_connect            = "Conectando";
            mcs_hard_disk               = "disco duro";
            mcs_wifi_is_connection      = "Conectando, por favor espere...";
            mcs_wifi_intelligent_configuration_setup_ailure = "Wi-Fi configuración inteligente error de instalación";
            mcs_box_list                = "boîte de liste";
            mcs_repair_disk_prompt      = "Disco de reparación puede perderse algunos datos, continuar?";
            mcs_format_disk_prompt      = "Formato de disco borrará todos los datos, continuer?";
            mcs_scheduled_alerting      = "Programar alarmas";
            mcs_scheduled_alerting_one  = "Alarma 1";
            mcs_scheduled_alerting_two  = "Alarma 2";
            mcs_scheduled_alerting_three = "Alarma 3";
            mcs_scheduled_alerting_four = "Alarma 4";
            mcs_wifi_config_cancle      = "configuración Wi-Fi cancelar";
            mcs_wifi_config_prepare     = "Configuración para";
            mcs_wifi_config_first       = "Los dispositivos y móviles y routers mantienen en el rango de 1 m";
            mcs_wifi_config_second      = "Al configurar Wi-Fi, el dispositivo no puede conectar el cable de red";
            mcs_wifi_config_third       = "Pulse el orificio de reinicio REINICIO un segundo y luego suelte";
            mcs_wifi_config_success     = "el éxito de configuración";
            mcs_wifi_config_failure     = "Configuración fracasó";
            mcs_failure_prompt          = "Por favor, inténtelo de nuevo o volver a comprobar Wi-Fi contraseña se introduce correctamente";
            mcs_display_password        = "Mostrar contraseña";
            mcs_action_smart_config_wifi = "Asistente de configuración";
            mcs_wifi_invalid            = "Su red no es Wi-Fi, por favor conectar Wi-Fi";
            mcs_phone_not_connect_wifi  = "Red Wi-Fi no está conectado";
            mcs_prompt_check_connection = "La cámara no está en línea, compruebe la Conectando de la línea de la cámara.";
            mcs_wifi_cfg_ready          = "Listo";
            mcs_reset_complete          = "Reset es completa";
            mcs_how_to_restore_factory_settings = "Cómo restaurar la configuración de fábrica: usar el pin de RESET pulsando el agujero de RESET en la parte inferior de la cámara durante más de 10 segundos";
            mcs_forgetpass_action_wizard = "Por favor pulse reset reset equipos de agujeros de 10 segundos después de la liberación, se oirá la voz de \"equipos de restaurar la configuración de fábrica\".";
            mcs_prompt_check_device_connection = "Su dispositivo no está en línea, revisar el cableado para conectar el dispositivo";
            mcs_prompt_select_device_connection = "Su equipo no en línea, seleccione el modo de red";
            mcs_input_wifi_name         = "Por favor introduce el nombre Wi-Fi";
            mcs_action_previous         = "anterior";
            mcs_io_alert_range_hint     = "IO tiempo de alerta debe ser menos de 60 segundos";
            mcs_io_alert_time           = "IO hora de alarma(s)";
            mcs_smart                   = "inteligente";
            mcs_plan                    = "plan";
            mcs_mute                    = "mudo";
            mcs_wind_speed              = "velocidad del viento";
            mcs_one                     = "un engranaje";
            mcs_two                     = "Dos engranajes";
            mcs_three                   = "Tres engranajes";
            mcs_purify_mode             = "modo de purificar";
            mcs_video_list              = "lista vídeo";
            mcs_wifi_cfg_restore_factory_settings = "Sostenga el teléfono móvil cerca de dispositivo, si el dispositivo se ha configurado Wi-Fi, presionar RESET durante un segundo y luego suelte, el dispositivo va a restaurar la configuración de fábrica y reiniciar automáticamente";
            mcs_mask_settings           = "Seleccionar área de detección de movimiento";
            mcs_notification_settings   = "configuración de las notificaciones";
            mcs_alarm_settings          = "Los ajustes de alarma";
            mcs_motion_detection        = "Detección De Movimiento";
            mcs_io_alarm                = "E/S de alarma";
            mcs_connect_status          = "Estado de la Conectando";
            mcs_motion_notification     = "Alertas y notificaciones";
            mcs_device_connected        = "El dispositivo está conectado";
            mcs_start_spray             = "Empiece a rociar?";
            mcs_available_network       = "La red no está disponible, la red de verificación";
            mcs_select_wifi_wizard      = "Por favor, seleccione la red Wi-Fi en primer lugar";
            mcs_input_wifi_password     = "Ingresar contraseña de Wi-Fi";
            mcs_device_admin_password   = "Contraseña administrador";
            mcs_device_guest_password   = "Contraseña invitado";
            mcs_user_admin_password     = "Usuario administrador";
            mcs_user_guest_password     = "Usuario de invitado";
            mcs_save_network_set        = "Guardar conjunto de la red y la contraseña";
            mcs_nickname_not_set        = "Apodo de la cámara no está establecida";
            mcs_current_wifi            = "Actual Wi-Fi";
            mcs_current_password_strength = "La fortaleza de la contrase?a actual";
            mcs_new_password_strength   = "Nueva fuerza contrase?a";
            mcs_needs_to_open_the_DHCP  = "El router tiene que abrir el DHCP (obtener automáticamente IP) la función, si el intento no tiene éxito, por favor póngase en contacto con el administrador.";
            mcs_picture                 = "imagen";
            mcs_quality                 = "calidad";
            mcs_size                    = "tama?o";
            mcs_guest_login             = "Invitado Entrar";
            mcs_audio_and_video         = "Audio / Video";
            mcs_volume                  = "El volumen";
            mcs_smooth                  = "liso";
            mcs_clear                   = "claro";
            mcs_handsfree               = "Manos libres";
            mcs_headphone               = "auricular";
            mcs_my                      = "Mi cuenta";
            mcs_customer_service        = "servicio al cliente";
            mcs_firefox_flash_uninstall = "Tu lector Flash no está disponible, la solución consulte https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "Widget";
            mcs_plug_load               = "plugins de carga";
            mcs_plug_load_refuse        = "No cargue plugins";
            mcs_plug_load_auto          = "automático";
            mcs_option                  = "Opciones";
            mcs_option_ok               = "Terminar";
            mcs_voice_call_fails        = "Llamada de voz falla, compruebe la red";
            mcs_umounted_prompt         = "Si para desmontar?";
            mcs_mounted_prompt          = "Si para desmontar?";
            mcs_format_prompt           = "¿Desea formatear la tarjeta micro SD?\nSe borrará todo el contenido";
            mcs_repair_prompt           = "si la revisión?";
            mcs_signup_prompt           = "De nuevo por aqui?";
            mcs_wifi_connect_sucess_prompt = "Nota: el trabajo normal de Wi-Fi, ahora puedes desconectar de la red.?";
            mcs_manual_input_prompt     = "Ingresa el ID de la cámara";
            mcs_qrscan_prompt           = "Usted no ha permitido el acceso a esta aplicación, por favor, en función de su cámara en el iPhone \'preferencias\' -\' privacidad \'-\' cámara \',\' Vimtag \'para encontrar el nombre de la aplicación del procedimiento de revisión.";
            mcs_select_network_style    = "Seleccione el modo de Conectando de red:";
            mcs_push                    = "annuncio";
            mcs_connect_power_prompt    = "Nota: asegúrese de que el equipo en el que se ha relacionado con el suministro de energía";
            mcs_fail_microphone         = "No se puede acceder a un micrófono";
            mcs_microphone_prompt       = "Usted no es para permitir que esta aplicación para acceder a su micrófono, en el \'set\' iPhone - la \'privacidad\' - función \'micrófono\', encontrar el nombre de la aplicación \'Vimtag\' ser modificado";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "HD";
            mcs_standard_clear          = "Sdtv";
            mcs_fluent_clear            = "Suave";
            mcs_deleting                = "Borrar...";
            mcs_event                   = "Evento";
            mcs_one_hour                = "1 hr";
            mcs_half_hour               = "30 min";
            mcs_five_min                = "5 min";
            mcs_category                = "Categorías";
            mcs_time_length             = "Duración";
            mcs_new                     = "Nuevo";
            mcs_week_setting_prompt     = "Este campo no puede estar vacío";
            mcs_time_setting_prompt     = "El tiempo no puede estar vacío";
            mcs_today                   = "Hoy.";
            mcs_wifi_password           = "Conectando Wi-Fi contraseña";
            mcs_register_prompt         = "Por favor, número de registro.";
            mcs_click_login             = "Haga clic en iniciar sesion";
            mcs_not_login_prompt        = "No estás registrado, por favor, haga clic en login.";
            mcs_product_presentation    = "La";
            mcs_help_feedback           = "Ayuda";
            mcs_help_information        = "Ayuda";
            mcs_feedback                = "La retroalimentación";
            mcs_feedback_des            = "Gracias al uso de nuestra App, bienvenido a nuestra propuesta de sus valiosos comentarios";
            mcs_feedback_praise         = "Elogios";
            mcs_feedback_title_prompt   = "Título de retroalimentación";
            mcs_feedback_title          = "Introduzca el título (18 palabras o menos)";
            mcs_feedback_type_prompt    = "Tipos de problemas";
            mcs_feedback_please_select  = "Por favor seleccione el tipo de";
            mcs_feedback_select_option1 = "Problemas de la interfaz";
            mcs_feedback_select_option2 = "El problema de la Cámara";
            mcs_feedback_select_option9 = "Otros problemas";
            mcs_feedback_dec_prompt     = "La descripción detallada de";
            mcs_feedback_dec            = "Escriba su opinión";
            mcs_feedback_upload_photo   = "Subir fotos";
            mcs_preview_pic             = "Vista previa";
            mcs_Album                   = "Seleccione de álbum";
            mcs_Photograph              = "fotografía";
            mcs_camera_unavailable      = "No disponible con la cámara";
            mcs_feedback_submit         = "La presentación de";
            mcs_feedback_title_alert    = "El título no cumple las normas";
            mcs_feedback_type_alert     = "Por favor, seleccionar el tipo de";
            mcs_feedback_dec_alert      = "Escriba su opinión";
            mcs_feedback_submit_success = "Presentado con éxito";
            mcs_feedback_submit_fail    = "El fracaso de la Comisión";
            mcs_connect_wifi_prompt     = "La Conectando Wi-Fi";
            mcs_cloud                   = "nube";
            mcs_demo                    = "Demo";
            mcs_shortest                = "Más corto";
            mcs_no_history              = "No hay historial";
            mcs_download_pc_client      = "Haz clic aquí para descargar el cliente de PC";
            mcs_accounts_bind_email_exist = "Esta cuenta se une un buzón de correo";
            mcs_accounts_bind_email_busy = "La cuenta de correo ha sido vinculado.";
            mcs_systemupdatetip_noversionnodetail = "La versión actual de la actualización está disponible, no hay información detallada de actualización";
            mcs_systemupdatetip_nodetail = "No hay información detallada de actualización";
            mcs_systemupdatetip_updatefrom = "La versión actual";
            mcs_systemupdatetip_updateto = "Se puede actualizar a";
            mcs_systemupdatetip_sureforupdate = "¿Determinar la actualización?";
            mcs_systemupdatetip_updatecontent = "El contenido de esta actualización";
            mcs_operate_prompt          = "Por favor, operar de acuerdo con el diagrama";
            mcs_operation_prompt        = "pronta operación";
            mcs_qrcode_prompt_content   = "Utilice la cámara del dispositivo móvil para escanear el código de dos dimensiones";
            mcs_qrcode_camera_distance  = "Código bidimensional con la distancia de la cámara 12 ~ 14cm";
            mcs_planvideo_datewizard    = "Por favor, fijar la fecha";
            mcs_planvideo_timewizard    = "Por favor, establecer el tiempo";
            mcs_planvideo_wizard        = "Por favor, configuración de fecha y hora";
            mcs_email_unbind            = "Cuenta de correo no se une";
            mcs_email_unmatch           = "Desajuste Buzón";
            mcs_email_inactive          = "El correo electrónico no está activada";
            mcs_email_binded            = "E-mail ha sido atado";
            mcs_user_binded_bymail      = "El usuario ha sido atado";
            mcs_bind_email_fail         = "Buzón no vinculante";
            mcs_diagnosis               = "Diagnóstico";
            mcs_delay                   = "Retrasar";
            mcs_packet_loss_rate        = "Tasa de pérdida de paquetes";
            mcs_timezone_IDL            = "Línea internacional del tiempo";
            mcs_timezone_China          = "China";
            mcs_timezone_Midway         = "Islas Midway";
            mcs_timezone_Niue           = "Isla de Niue";
            mcs_timezone_Samoa          = "Samoa Americana";
            mcs_timezone_Aleutian       = "islas Aleutinas";
            mcs_timezone_Hawaii         = "Ilhas Havaianas";
            mcs_timezone_Alaska         = "Alaska";
            mcs_timezone_PSTUSCanada    = "Hora estándar del Pacífico (EE.UU. y Canadá)";
            mcs_timezone_Arizona        = "Arizona";
            mcs_timezone_MSTUSCanada    = "Montaña Standard Time (EE.UU. y Canadá)";
            mcs_timezone_CSTUSCanada    = "Hora estándar central (EE.UU. y Canadá)";
            mcs_timezone_ESTUSCanada    = "Hora estándar del este (EE.UU. y Canadá)";
            mcs_timezone_ASTCanada      = "Hora estándar del Atlántico (Canadá)";
            mcs_timezone_Newfoundland   = "Terranova";
            mcs_timezone_Brasilia       = "Brasilia";
            mcs_timezone_BuenosAires    = "Buenos Aires";
            mcs_timezone_Santiago       = "Santiago";
            mcs_timezone_Noronha        = "Noronha";
            mcs_timezone_SouthGeorgia   = "Georgia del Sur";
            mcs_timezone_Azores         = "Azores";
            mcs_timezone_CapeVerde      = "Cabo Verde";
            mcs_timezone_London         = "Londres";
            mcs_timezone_Lisbon         = "Lisboa";
            mcs_timezone_Dublin         = "Dublín";
            mcs_timezone_Berlin         = "Berlina";
            mcs_timezone_Amsterdam      = "Ámsterdam";
            mcs_timezone_Brussels       = "Bruselas";
            mcs_timezone_Budapest       = "Budapest";
            mcs_timezone_Madrid         = "Madrid";
            mcs_timezone_Paris          = "París";
            mcs_timezone_Rome           = "Roma";
            mcs_timezone_Sarajevo       = "Sarajevo";
            mcs_timezone_Cairo          = "El Cairo";
            mcs_timezone_Amman          = "Amman";
            mcs_timezone_Beirut         = "Beirut";
            mcs_timezone_Istanbul       = "Istambul";
            mcs_timezone_Jerusalem      = "Jerusalén";
            mcs_timezone_Athens         = "Atenas";
            mcs_timezone_Baghdad        = "Bagdad";
            mcs_timezone_Riyadh         = "Riad";
            mcs_timezone_Qatar          = "Katar";
            mcs_timezone_Moscow         = "Moscú";
            mcs_timezone_Tehran         = "Teherán";
            mcs_timezone_Baku           = "Bakú";
            mcs_timezone_Dubai          = "Dubai";
            mcs_timezone_Tbilisi        = "Tbilisi";
            mcs_timezone_Kabul          = "Kabul";
            mcs_timezone_Karachi        = "Karachi";
            mcs_timezone_Yekaterinburg  = "Ekaterimburgo";
            mcs_timezone_Maldives       = "Maldivas";
            mcs_timezone_Calcutta       = "Calcuta";
            mcs_timezone_Colombo        = "Colombo";
            mcs_timezone_Katmandu       = "Katmandú";
            mcs_timezone_Almaty         = "Almaty";
            mcs_timezone_Dhaka          = "Dacca";
            mcs_timezone_Omsk           = "Omsk";
            mcs_timezone_Thimbu         = "Thimphu";
            mcs_timezone_Rangoon        = "Rangún";
            mcs_timezone_Bangkok        = "Bangkok";
            mcs_timezone_Jakarta        = "Jacarta";
            mcs_timezone_Vientiane      = "Vientiane";
            mcs_timezone_Harbin         = "Harbin";
            mcs_timezone_Shanghai       = "Shanghai";
            mcs_timezone_Hongkong       = "Hong Kong";
            mcs_timezone_Singapore      = "Singapur";
            mcs_timezone_Taipei         = "Taipei";
            mcs_timezone_Ulaanbaatar    = "Ulaanbaatar";
            mcs_timezone_Perth          = "Perth";
            mcs_timezone_Seoul          = "Seúl";
            mcs_timezone_Tokyo          = "Tokio";
            mcs_timezone_Darwin         = "Darwin";
            mcs_timezone_Magadan        = "Magadan";
            mcs_timezone_Vladivostok    = "Vladivostok";
            mcs_timezone_Guam           = "Guam";
            mcs_timezone_Sydney         = "Sydney";
            mcs_timezone_Canberra       = "Canberra";
            mcs_timezone_Melbourne      = "Melbourne";
            mcs_timezone_Queensland     = "Queensland";
            mcs_timezone_LordHowe       = "lord Howe";
            mcs_timezone_Guadalcanal    = "Guadalcanal";
            mcs_timezone_Fiji           = "Fiji";
            mcs_timezone_Auckland       = "Auckland";
            mcs_timezone_Apia           = "Apia";
            mcs_timezone_Fakaofo        = "Fakaofo";
            mcs_timezone_Tongatapu      = "Tongatapu";
            mcs_timezone_Kiritimati     = "Kiritimati";
            mcs_connect_timeout         = "Une connexion de temporisation";
            mcs_share                   = "cuota";
            mcs_share_prompt_start      = "se puede acceder";
            mcs_share_prompt_end        = "para descargar el video a través del navegador en el PC o el teléfono androide que, en la misma red";
            mcs_share_note              = "Proceso de descarga, por favor no deje esta página";
            mcs_video_size              = "Tamaño";
            mcs_video_duration          = "Duración";
            mcs_my_folder               = "Mis archivos";
            mcs_account_no_contain      = "Le compte ne contient pas";
            mcs_edit                    = "editar";
            mcs_video_number            = " video";
            mcs_no_local_video          = "No hay videos";
            mcs_empty_folder            = "Carpeta está vacía";
            mcs_no_history_record       = "Usted no tiene ninguna historia";
            mcs_no_local_record         = "Su registro local está vacío";
            mcs_empty_cloud_list_first  = "Su lista de dispositivos está vacía,";
            mcs_empty_cloud_list_second = "Haga clic en la esquina superior izquierda de la";
            mcs_empty_cloud_list_third  = "¿La adición de equipos?";
            mcs_empty_local_list_first  = "Su lista local está vacía,";
            mcs_empty_local_list_second = "Intenta";
            mcs_empty_local_list_third  = "presionar pantalla y mover tu dedo hacia abajo";
            mcs_empty_local_list_forth  = " ";
            mcs_empty_local_list_fifth  = "(Busca dispositivos en la red LAN)";
            mcs_record_prompt           = "Puede ver el video en \"Mi cuenta->Mis archivos\"";
            mcs_record_download_prompt  = "Puede ver el video en \"Mis archivos\"";
            mcs_register_buton_start    = "No se cuenta,";
            mcs_register_buton_end      = "regístrese ahora";
            mcs_product                 = "producto";
            mcs_user_or_password_invalid = "Nombre de usuario o contraseña son incorrectos";
            mcs_share_video_prompt      = "No estás usando la red Wi - Fi, cambiar a la red WIFI a compartir";
            mcs_download_video_prompt   = "¿Usted no está usando la red Wi - Fi para descargar el flujo de producción, gastos, continuar?";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "Normal";
            mcs_common_problem          = "Preguntas más frecuentes";
            msc_enter_comment           = "Introduzca sus comentarios";
            msc_description             = "descripción";
            mcs_parameter               = "parámetros";
            mcs_help_and_feedback       = "Ayuda y Comentarios";
            mcs_personal_center         = "Centro de personal";
            mcs_version                 = "liberación";
            mcs_language                = "idioma";
            mcs_new_user                = "Soy un usuario nuevo";
            mcs_have_account            = "Tienes una cuenta";
            mcs_try_it                  = "Pruébalo";
            mcs_sign_up_now             = "Registrarse";
            mcs_input_confirm_password  = "Confirmar contraseña";
            mcs_warranty_registration   = "warranty registration";
            mcs_get_more_cameras        = "get more cameras";
            mcs_user_inactive           = "L\'utilisateur n\'est pas activé";
            mcs_format_options          = "Formato";
            mcs_slide_screen            = "Deslizar la pantalla para ajustar el ángulo de vídeo";
            mcs_zoom_in_screen          = "Amasando la pantalla se puede ampliar los detalles del vídeo";
            mcs_pause                   = "pausa";
            mcs_source                  = "fuente";
            mcs_magnetic                = "magnético";
            mcs_sos                     = "botón de emergencia";
            mcs_input_download_path     = "Descargar ruta";
            mcs_download_path_name_error = "Descarga el nombre de ruta del archivo sólo puede contener letras (a-z, A-Z) o numérico (0-9)";
            mcs_active                  = "actividad";
            mcs_out                     = "dejar";
            mcs_quiet                   = "tranquilo";
            mcs_scenes                  = "escena";
            mcs_accessory               = "accesorio";
            mcs_quiet_mode              = "modo silencioso";
            mcs_active_mode             = "El modo activo";
            mcs_out_mode                = "Modo de distancia";
            mcs_add_accessory           = "Añadir archivos adjuntos";
            mcs_accessory_type          = "Tipo de accesorio";
            mcs_add_successfully        = "agregado con éxito";
            mcs_set_scene               = "Sus archivos adjuntos aún no han fijado la escena , por favor haga clic";
            mcs_to_set                  = "para establecer";
            mcs_add_accessory_button    = "Presione el botón hasta que la luz roja se apaga de nuevo para completar el complemento";
            mcs_auto_monday             = "Lunes";
            mcs_auto_tuesday            = "Martes";
            mcs_auto_wednesday          = "Miércoles";
            mcs_auto_thursday           = "Jueves";
            mcs_auto_friday             = "Viernes";
            mcs_auto_saturday           = "Sábado";
            mcs_auto_sunday             = "Domingo";
            mcs_search                  = "búsqueda";
            mcs_format_input            = "Formatear el disco duro";
            mcs_get_accessory_failed    = "Accesorio no pudo obtener";
            mcs_get_scene_failed        = "Obtener escenarios de fallo";
            mcs_search_failed           = "búsqueda falla";
            mcs_add_failed              = "Añadir Error";
            mcs_ethernet_connect        = "Ethernet";
            mcs_action_click_retry      = "Haga clic en Reintentar";
            mcs_wifi_config_failure_detail = "O puede probar";
            mcs_qrcode_connect          = "Código bidimensional conectada";
            mcs_close_sound_prompt      = "Open Sound ayuda a la Conectando Wi-Fi, mantenga el teléfono cerca del altavoz del micrófono de la cámara";
            mcs_qrcode_prompt_title     = "Por favor, operaciones que se muestran en la figura.";
            mcs_qrcode_prompt_detail    = "Por favor, apunte el lente de la cámara al código QR con exactitud y mantener la distancia sea de 30 cm.";
            mcs_select_wifi_prompt      = "No se necesita cable Ethernet";
            mcs_select_ethernet_prompt  = "cable Ethernet necesario para la instalación sólo";
            mcs_enter_config_mode_prompt = "Por favor, compruebe el indicador Wi-Fi es de tres rojo tres destello verde alternativamente. Si es así, por favor haga clic en el botón Siguiente. Si no es así, pulse el botón RESET en la cámara. A continuación, compruebe el indicador Wi-Fi de nuevo";
            mcs_no_enter_config_mode    = "No entrar en el modo de configuración";
            mcs_record_time             = "Duración de la grabación(s)";
            mcs_stop_search             = "Deja de buscar";
            mcs_smart_wifi_setup        = "configuración de Smart Wifi";
            mcs_ethernet_setup          = "Configuración de Ethernet";
            mcs_wifi_config_restore_start = "1) Asegúrese de que el dispositivo está encendido";
            mcs_wifi_config_restore_end = "2) Pulse el orificio de reinicio durante un segundo, el dispositivo va a restaurar y reiniciar después de 60 segundos, a continuación, entrará en el modo de configuración automática";
            mcs_Sense_schedule          = "La planificación de escenarios";
            load_succeed                = "Cargando éxito";
            load_fail                   = "No se pudo cargar";
            refresh_succeed             = "refrescar el éxito";
            refresh_fail                = "Error al actualizar";
            mcs_ensure_dev_power        = "1) Asegúrese de que el dispositivo está encendido";
            all_refresh_complete        = "Todos los datos se actualizan";
            mcs_synchronize             = "sincrónico";
            mcs_synchronize_detail      = "Perfiles de los siguientes equipos y configuraciones inconsistentes , deben sincronizarse al trabajo después de";
            mcs_Sense_Schedule_Set      = "Conjunto de la planificación de escenarios";
            mcs_Sence_Schedule_detail   = "Si se habilita el modo de escena automático, el sistema cambiará automáticamente en función de los escenarios de planificación de escenarios en diferentes momentos";
            mcs_Scene_set               = "perfiles";
            mcs_Scene_set_detail        = "Si habilita un perfil, el perfil de acuerdo a los ajustes que se presentan en las siguientes páginas";
            mcs_send_message            = "Enviar un mensaje";
            mcs_start_recording         = "iniciar la grabación";
            mcs_start_capture           = "iniciar la captura";
            mcs_turn_on_video           = "Para salir del modo de grabación continua , por favor, abra el video";
            mcs_search_press_button     = "Presione el botón de retroceso durante 1 segundo después de la liberación, el indicador parpadea lentamente";
            mcs_add_fail1               = "El equipo ha sido cancelado debido a la corta por la adición de reintentar la búsqueda de nuevo, haga clic en agregar";
            mcs_add_fail2               = "Añadir el fracaso de equipos, haga clic en el botón reintentar la búsqueda de nuevo la adición de";
            mcs_recording_duration      = "Duración de la grabación ( en segundos )";
            mcs_settings_unsaved        = "Los ajustes no se guardan";
            mcs_want_save               = "Va a ahorrar ?";
            mcs_camera                  = "cámara de video";
            mcs_router                  = "Router";
            mcs_start_up                = "comienzo";
            mcs_cancle_add              = "Equipo ha sido cancelado debido a la corta pulse Añadir";
            mcs_visit_photo_fail        = "El fracaso de la visita";
            mcs_camera_cell             = "La Cámara";
            mcs_myphoto                 = "Mi foto";
            mcs_select_photo            = "Grasias";
            mcs_app_new_version         = "La nueva versión";
            mcs_update_new_version      = "Asciende ahora";
            mcs_app_new_version_prompt  = "aplicación cuenta con una nueva versión, seleccione Actualizar Descargar Actualizar ahora";
            download_failed             = "Error en la descarga";
            mcs_connect_server_prompt   = "WiFi está conectado, se conecta al servidor";
            mcs_local_search            = "Búsqueda local";
            mcs_choose_device_type      = "Elige el tipo de dispositivo";
            mcs_wifi_state              = "Nota: El WiFi funciona bien, ahora puedes desconectar el cable de red (puede aparecer después de desconectar el cable de red, los equipos no está en línea, por favor espera 20 segundos automáticamente en línea)";
            mcs_sweep                   = "Barre";
            mcs_wifi_config_tip         = "Un router con wifi, evitando problemas de cableado";
            mcs_ethernet_config_tip     = "No es conveniente conectar el cable de red.";
            mcs_ethernet_connect_step_one = "Paso 1: asegúrese de que el cable de alimentación conectado a la fuente de alimentación de corriente 2";
            mcs_ethernet_connect_step_two = "Segundo paso: a través de una red de puertos y puertos de Conectando de router 4.";
            mcs_sweep_qrcode_tip        = "La Cámara es el teléfono móvil para escanear códigos bidimensionales, mantener la distancia de 30 cm";
            mcs_sound_config_tip        = "Reproducir sonido contribuyen a la Conectando Wi - Fi.(también se puede elegir cerrar)";
            mcs_sosalt                  = "%@ : Alarma botón de emergencia(%@)";
            mcs_dooralt                 = "%@ : Alerta magnética(%@)";
            mcs_wifi_config_restore     = "Afloje después de 1 segundo por el botón de reinicio \"en el modo de configuración de equipos WiFi\".";
            mcs_voice_remind_heard      = "La voz que se ha escuchado";
            mcs_netWork_prompt          = "Notificación de la red";
            mcs_con_netWork             = "La red actualmente en uso para la Conectando de datos, puede consumir una gran cantidad de tráfico, si los valores de la interfaz de red establecidos para saltar";
            mcs_no_netWork              = "Actualmente no hay Conectando a la red, si el salto para configurar la interfaz de configuración de red";
            mcs_exception_des           = "Su aplicación salida última excepción, si desea enviar un informe de error en el servidor";
            mcs_exception_prompt        = "Tip anormal";
            mcs_erro_diagnosis          = "Solución de problemas";
            mcs_erro_log_des            = "App reciente historial de registro de errores, seleccione el botón Enviar para cargar un registro de errores, gracias por su cooperación!";
            mcs_is_submitting           = "Al ser presentado";
            mcs_firmware_version        = "Versión de firmware";
            mcs_device_assembly         = "1.línea eléctrica  2.puerto de alimentación  3.puerto Ethernet  4.cable  5.adaptador";
            mcs_forgetpass_action_wizard_old = "Pulse el botón de reinicio durante un segundo, el dispositivo restaurará la configuración de fábrica y 60 segundos después de la reanudación, la recuperación de la contraseña de administrador";
            mcs_device_assembly_mipc    = "1.línea eléctrica  2.puerto de alimentación  3.puerto Ethernet  4.cable";
            mcs_device_connect_power_prompt = "El equipo no está en línea, por favor, como se muestra en la figura el suministro de equipos de acceso a su fuente de energía, se ha visto la luz roja encendida, el dispositivo de arranque.";
            mcs_lights_sound            = "Ha visto la luz";
            mcs_connect_power           = "Conectar la fuente de alimentación";
            mcs_search_magnetic         = "Como se muestra, la puerta magnético combinado y pulse el botón lateral durante 1 segundo después de la liberación, el indicador parpadea lentamente";
            mcs_add_magnetic            = "Después de abrir el sensor de la puerta a fusionarse, ver el indicador de flash off terminación de la adición";
            mcs_already_downloaded      = "Se han descargado";
            mcs_my_order                = "Mi orden.";
            mcs_auto_mode               = "El modo automático";
            mcs_new_small               = "Menor";
            mcs_new_half                = "La mitad";
            mcs_new_normal              = "Normal";
            mcs_new_hd                  = "HD";
            mcs_scene_now               = "La actual situación";
            mcs_please_install_wechat   = "Instalar WeChat";
            mcs_wechat_not_support      = "WeChat versión no apoyar la actualización de WeChat";
            mcs_motion_alert            = "Alarma de movimiento";
            mcs_io_alert                = "Configurar alarma";
            mcs_valid_user_name         = "Primer paso: escriba el nombre de usuario eficaz";
            mcs_binding_mailbox         = "Segundo paso: escriba un correo";
            mcs_send_mailbox_succuess_prev = "Tenemos a tu buzón de propagación de obligatorio ";
            mcs_send_mailbox_succuess_next = " Enviar una carta de recuperar la contraseña de correo electrónico, por favor espere recibir correo.";
            mcs_all_image               = "Todas las fotos";
            mcs_unavailable_image       = "La foto no está disponible, por favor seleccione";
            mcs_set_nickname            = "Ajuste de apodo";
            mcs_search_timeout          = "Tiempo de buscar , haga clic en Buscar de nuevo";
            mcs_screen_size             = "Ajustes de pantalla";
            mcs_screen_reset            = "Establecer con éxito, es necesario reiniciar la cámara para tomar efecto";
            mcs_wifi_network_prompt     = "Si la Conectando es comprobar la Cámara WiFi WiFi WiFi 5ghz, por favor, que la Cámara está conectada con la de 2,4 GHz";
            mcs_fault_diagnosis         = "El diagnóstico de la red";
            mcs_sever_diagnosis         = "Puede ser debido a problemas con el servidor, lo que impide el uso normal.";
            mcs_select_problem          = "Seleccione un problema";
            mcs_connot_lonin            = "No registrado";
            mcs_connot_play             = "No puede jugar";
            mcs_add_problems            = "Un problema adicional";
            mcs_encounterer_problems    = "Por favor introduzca con problemas";
            mcs_diagnostic_network      = "iniciar el diagnóstico";
            mcs_network_diagnostic_prompt = "El diagnóstico nos ayuda a entrar en la red puede resolver mejor los problemas que encuentran para su diagnóstico, aproximadamente unos minutos";
            mcs_network_diagnostic      = "Solución de problemas";
            mcs_connecting_server       = "A ligação Ao servidor.r";
            mcs_diagnostic_process_prompt = "Proceso de diagnóstico puede tardar varios minutos, durante los diagnósticos no realice otras operaciones, pero siempre se puede detener el diagnóstico";
            mcs_diagnostic_results      = "El diagnóstico de los resultados";
            mcs_diagnostic_results_received = "El diagnóstico se haya completado, los resultados del diagnóstico se han recibido";
            mcs_diagnostic_results_prompt = "Gracias por participar en este diagnóstico, los resultados del diagnóstico nos ayudará a resolver el problema tan pronto como sea posible";
            mcs_results_no_abnormality  = "El diagnóstico de los resultados anormales";
            mcs_no_abnormality_prompt   = "El diagnóstico no se encontró ninguna anormalidad. Se puede elegir la profundidad del diagnóstico, iniciar las capacidades de recopilación de registros nos ayudará a resolver mejor el problema que está experimentando";
            mcs_continue_diagnosis      = "El diagnóstico de profundidad";
            mcs_diagnosis_connot_sent   = "El diagnóstico no puede enviar los resultados";
            mcs_email_sends             = "Enviar correo electrónico";
            mcs_email_sends_prompt      = "Enviar los resultados del diagnóstico a nosotros por correo electrónico, que nos ayudará a resolver el problema tan pronto como sea posible";
            mcs_diagnosis_send          = "Enviar";
            mcs_diagnosis_email         = "E - mail";
            mcs_send_successful         = "enviado con éxito";
            mcs_diagnosis_type_select_prompt = "Por favor seleccione el tipo de diagnóstico";
            mcs_stop_diagnosis          = "Paro del diagnóstico";
            mcs_detail_diagnosis_prompt = "Diagnóstico proceder, puede desactivar el dispositivo de la página";
            mcs_detail_diagnosis_stop_prompt = "El diagnóstico de profundidad está en curso, siempre se puede abortar";
            mcs_exit_detail_diagnosis   = "El diagnóstico de profundidad está en curso, ya sea para detener?";
            mcs_network_connection_unavailable = "Conectando de red no está disponible";
            mcs_Failed_connect_Internet = "No se pudo conectar a Internet";
            mcs_connect_internet_note   = "Si necesita conectarse a Internet, tenga en cuenta lo siguiente:";
            mcs_connect_internet_detail_first = "Compruebe la configuración de LAN inalámbrica del teléfono, para ver si hay acceso a una señal de LAN inalámbrica";
            mcs_connect_internet_detail_second = "Compruebe si su teléfono tiene acceso a una red móvil, y el teléfono no se ha desactivado";
            mcs_connect_wifi_note       = "Si tiene acceso a la LAN inalámbrica:";
            mcs_connect_wifi_detail     = "Compruebe para ver si su Conectando punto de acceso de red LAN inalámbrica tiene acceso a Internet, o si el punto de acceso permite que el dispositivo para acceder a la LAN";
            mcs_device_or_phone_time_zone_not_equals_please_select = "La zona horaria del dispositivo y la zona horaria del teléfono móvil no son iguales, seleccione la zona horaria correcta.";
            mcs_phone_timezone          = "Zona horaria del teléfono";
            mcs_timezone_change         = "Modificar la zona horaria";
            mcs_mail_send               = "Mensaje enviado";
            mcs_yes_verif               = "Si";
            mcs_no_verif                = "No";
            mcs_camera_found_new_version_y_n_upgrade = "Se ha encontrado una nueva versión del sistema de la cámara, ¿desea realizar la actualización?";
            mcs_auto_adapt_split_screen = "La adaptación";
            mcs_four_split_screen       = "La cuarta pantalla";
            mcs_nine_split_screen       = "Nueve puntos de la pantalla";
            mcs_twelve_split_screen     = "Doce puntos de la pantalla";
            mcs_not_connection_server   = "No se puede conectar con el servidor";
            mcs_more_options            = "Más";
            mcs_bind_email_prompt       = "Para tener en cuenta la seguridad, obligar a su buzón de correo";
            mcs_login_now               = "Inicia sesión ahora";
            mcs_device_connect_power    = "1.línea eléctrica      2.puerto de alimentación";
            mcs_device_connect_ethernet = "1. Puerto de red   2. El cable de red";
            mcs_device_connect_ethernet_prompt = "El extremo de un cable de red a la boca, y el otro router de acceso, se ha visto destellos de luz verde de Puerto de red, cables de Conectando.";
            mcs_pwd_format              = "Contraseña: longitud en formato digital, entre 8 a 16 bits caracteres, mayúsculas y minúsculas y símbolos especiales incluye al menos tres";
            mcs_client_new              = "El cliente";
            mcs_user_guide              = "Manual de usuario";
            mcs_ebitcam_download_describe = "Ebitcam es un software de control de servicio de la nube, la nube de software y con cámara de video, que permite a los usuarios ver información en cualquier momento y en cualquier lugar, nos ofrecen una experiencia de visualización clara, suave, control inteligente que en cualquier momento el cuidado de su familia, le gusta el usuario vamos a descargar.";
            mcs_mipc_download_describe  = "Mipc es un software de control de servicio de la nube, la nube de software y con cámara de video, que permite a los usuarios ver información en cualquier momento y en cualquier lugar, nos ofrecen una experiencia de visualización clara, suave, control inteligente que en cualquier momento el cuidado de su familia, le gusta el usuario vamos a descargar.";
            mcs_guide_download          = "Manual de descarga";
            mcs_password_admin          = "Gestión de contraseñas";
            mcs_already_read            = "He leído y estoy de acuerdo con";
            mcs_privacy_policy          = "La política de privacidad";
            mcs_not_agree_privacy_policy = "Usted no está de acuerdo con la política de privacidad";
            mcs_reload                  = "Volver a cargar";
            mcs_start_download          = "Descargar ahora";
            mcs_video_play_fail         = "Video de la derrota";
            mcs_download_app_tips       = "Puedes tratar de usar PC cliente";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = "El tipo de dispositivo";
            mcs_connect_device_wifi     = "La Cámara no soporta WiFi 5ghz";
            mcs_send_diagnosis_results  = "El diagnóstico de la transmisión de los resultados.";
            mcs_local_file              = "Archivo local";
            mcs_local_device            = "El equipo local";
            mcs_export_sd_data          = "Exportar datos de la tarjeta SD";
            mcs_shaking                 = "La cabeza de serie de la máquina";
            mcs_outdoor                 = "Serie de exterior";
            mcs_card                    = "Serie de la tarjeta";
            mcs_wifi_connection         = "Conexión wifi";
            mcs_home_mode               = "modo de Inicio";
            mcs_away_home_mode          = "Modo AWAY";
            mcs_auto_switch_mode        = "cambiará automáticamente";
            mcs_select_scene_mode       = "Por favor, elija un perfil";
            mcs_7x24_hours_prompt       = "7x24 abiertas (h) de grabación";
            mcs_all_day_recording       = "día de vídeo";
            mcs_home_mode_prompt        = "modo de Inicio:Cierre todos los dispositivos de alarma";
            mcs_away_home_mode_prompt   = "Modo AWAY:Todos los dispositivos de alarma abierto";
            mcs_at_home                 = "en casao";
            mcs_away_home               = "fuera";
            mcs_set_timezone_prompt_start = "Su zona horaria es";
            mcs_set_timezone_prompt_end = "Por favor, cambia la \"Fecha/Hora\" en la configuración de zona horaria";
            mcs_set_wifi_remind_head    = "Los problemas que pueden llevar a la Cámara la creación de redes de recomendaciones para evitar el fracaso,";
            mcs_set_wifi_remind_1       = "Comprobar si la apertura de WiFi puso neto, esta configuración puede resultar en una cámara de red puede ser normal.Usted puede evitar el cierre temporal de neto, tras el éxito de la creación de redes de recuperar la Cámara de configuración router";
            mcs_set_wifi_remind_2       = "Si tu casa es un router WiFi de doble banda, compruebe si la conexión wifi de la Cámara es 5ghz, pidió que la Cámara la conexión wifi de 2.4GHz";
            mcs_set_wifi_remind_3       = "La Cámara no apoyo el WIFI WPA / wpa2 Enterprise, elija wifi";
            mcs_set_wifi_remind_4       = "Si el wifi de tu casa es un puente de puente, porque las causas pueden provocar su red WIFI es muy inestable, la propuesta de puentes de conexión";
            mcs_set_wifi_remind_5       = "Cuáles son los requisitos para la Cámara.";
            mcs_record_save_to_my_file  = "El video se guarda en mis archivos";
            mcs_view_now                = "Ver Ahora";
            mcs_search_sos_strat        = "Como se muestra, la parte inferior pulse el botón";
            mcs_search_sos_end          = "Un segundo, el indicador de dispositivo parpadea";
            mcs_search_magnetic_start   = "Como se muestra, la puerta magnético combinado, pulse el botón lateral";
            mcs_search_magnetic_end     = "Un segundo, el indicador de dispositivo parpadea";
            mcs_adding                  = "Adición";
            mcs_record_empty_set_sd     = "Inserte una tarjeta SD puede almacenar el historial de vídeo";
            mcs_video_play_offline      = "El dispositivo está desconectado";
            mcs_video_play_network_fail = "Conexión de red fallado, vuelva a intentarlo más tarde";
            mcs_alert_notify_guide1     = "[Original] operación de detección de movimiento para migrar a [anexo], [por] la configuración del perfil";
            mcs_alert_notify_guide2     = "El funcionamiento es como sigue:";
            mcs_alert_notify_guide3     = "Seleccione [escena], tiene que resultar modo de armado, es necesario abrir en modo de desarmar el hogar; ";
            mcs_alert_notify_guide4     = "Seleccione [Accesorios] - [Lista de los accesorios] - Modo [Detección de movimiento] es resultado de alarma, video, fotografía, función de alarma IO, apagar la alarma en el modo Fácil, vídeo y otras funciones.";
            mcs_plan_protect_guide1     = "[Original] operación de armado plan de migró a la [escenario]";
            mcs_plan_protect_guide2     = "Seleccione el [escenario], perfiles abiertos de conmutación automática;";
            mcs_plan_protect_guide3     = "seleccionar";
            mcs_plan_protect_guide4     = ", La necesidad de periodo de armado (por ejemplo: Mar 7: 00-18: 00) establece el modo; después en Aceptar para guardar y volver a la pestaña Configuración;";
            mcs_plan_record_guide       = "Seleccione [Grabar video], gire a cabo la función de grabación en el modo.";
            mcs_plan_record_guide1      = "[Programar grabaciones] operación de armado plan de migró a la [Grabar video]";
            mcs_plan_record_guide2      = ", La necesidad de grabar período de tiempo (por ejemplo: Mar 7: 00-18: 00) establece el modo; después en Aceptar para guardar y volver a la pestaña de configuración;";
            mcs_forgetpass_action_prompt = "Por favor, pulse el dispositivo de reinicio orificio de reinicio 10 segundos después del lanzamiento, luces y equipos para restaurar la configuración de fábrica de infrarrojos";
            mcs_cloud_box               = "Caja de la nube";
        }/* es */
        else if(lang == "pt")
        {
            mcs_name                    = "Nome";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "Nome";
            mcs_old_nick                = "Utilizador ";
            mcs_linked                  = "Ligado";
            mcs_sign_in                 = "Entrar";
            mcs_back                    = "Voltar";
            mcs_will_back               = "vai voltar";
            mcs_add                     = "Adicionar";
            mcs_add_device              = "Adicionar dispositivo";
            mcs_device_existed          = "Dispositivo já existe";
            mcs_cancel                  = "Cancelar";
            mcs_exit                    = "Sair";
            mcs_remember_password       = "Recordar senha";
            mcs_password_remembered     = "Senha guardada";
            mcs_sign_ining              = "A registar...";
            mcs_cloud_server            = "Servidor cloud";
            mcs_input_device_id         = "Entrar o ID do dispositivo";
            mcs_input_username          = "Entrar o nome de utilizador";
            mcs_input_email_addr        = "Digite o endereço de e-mail";
            mcs_email_address           = "E-mail";
            mcs_email                   = "caixa de correio";
            mcs_binding                 = "obrigatório";
            mcs_binding_email           = "caixa de ligação";
            mcs_binding_send_prompt     = "caixa de ligação";
            mcs_binding_email_prompt    = "caixa de ligação";
            mcs_input_password          = "Inserir o código";
            mcs_access_server_failed    = "Sem acesso ao servidor";
            mcs_device_offline          = "O dispositivo não está online";
            mcs_invalid_password        = "Código errado";
            mcs_invalid_dev             = "Dispositivo não existe";
            mcs_login_faided            = "Erro de acesso";
            mcs_invalid_qrcode          = "Código QR inválido";
            mcs_please_input_username   = "Insira o seu nome de utilizador";
            mcs_please_input_password   = "Inserir o código";
            mcs_qrcode_scan_hint        = "Manter a caixa na parte inferior do dispositivo está alinhado código bidimensional";
            mcs_device_list_empty       = "Lista de dispositivos vazia";
            mcs_record_list_is_empty    = "Lista de dispositivos vazia";
            mcs_password_expired        = "Código expirado";
            mcs_set_video_size          = "Definir a dimensão do vídeo";
            mcs_hd_1280x720             = "HD [1280x720]";
            mcs_auto                    = "Automático";
            mcs_normal_640x360          = "Normal [640x360]";
            mcs_half_320x180            = "Medio [320x180]";
            mcs_small_160x90            = "Pequena [160x90]";
            mcs_play                    = "Ver";
            mcs_settings                = "Definições";
            mcs_messages                = "Mensagens";
            mcs_alarm                   = "Alarme";
            mcs_delete                  = "Apagar";
            mcs_delete_camera           = "Apagar ";
            mcs_apply                   = "Aplicar";
            mcs_speed                   = "Velocidade";
            mcs_others                  = "Outros";
            mcs_audio                   = "Audio";
            mcs_speaker                 = "Alto-falante";
            mcs_mic                     = "Microfone";
            mcs_power_frequency         = "Frequência de alimentação";
            mcs_online_upgrade          = "Atualizar on-line";
            mcs_restore_the_factory_settings = "Restaurar configurações de fábrica";
            mcs_restore                 = "Restaurar";
            mcs_restore_camera          = "dispositivo Restart";
            mcs_start_upgrade           = "Começar actualização";
            mcs_system                  = "Sistema";
            mcs_system_settings         = "Configurações do sistema";
            mcs_online                  = "Dispositivo está online";
            mcs_offline                 = "Dispositivo está offline";
            mcs_query                   = "Pesquisar";
            mcs_begin_time              = "Tempo de início";
            mcs_end_time                = "Tempo fim";
            mcs_mode                    = "Modo";
            mcs_opened                  = "Aberto";
            mcs_high                    = "Alto";
            mcs_middle                  = "Médio";
            mcs_low                     = "Baixo";
            mcs_io_alert_input          = "I/O entrada de Alarme";
            mcs_io_alert_output         = "I/O saída de alarme";
            mcs_normally_open           = "Normalmente Aberto";
            mcs_normally_close          = "Fechado normalmente";
            mcs_motion_detection_sensitivity = "Sensibilidade de detecção de movimento";
            mcs_daytime                 = "Dia";
            mcs_night                   = "Noite";
            mcs_sdcord                  = "Cartão SD";
            mcs_storage_device          = "Os dispositivos de armazenamento";
            mcs_set_mask                = "Set máscara";
            mcs_status                  = "Estado";
            mcs_capacity                = "Capacidade";
            mcs_usage                   = "Usado";
            mcs_format                  = "Formatar";
            mcs_repair                  = "Reparar";
            mcs_formating               = "Formatação em curso";
            mcs_repairing               = "Em processo de reparação";
            mcs_mounted                 = "Carregado";
            mcs_unmounted               = "Ejectar";
            mcs_mount                   = "Carregar";
            mcs_unmount                 = "Ejectar";
            mcs_ethernet                = "Ethernet";
            mcs_wifi                    = "Wi-Fi";
            mcs_enabled                 = "Ativado";
            mcs_mac_address             = "Endereço MAC";
            mcs_network_status          = "Estado da conexão";
            mcs_wifi_mode               = "Modo WI-FI";
            mcs_client                  = "Cliente";
            mcs_ap                      = "Hot spot";
            mcs_start_address           = "Endereço inicial";
            mcs_end_address             = "Endereço final";
            mcs_gateway                 = "Gateway";
            mcs_select_network          = "Seleccione a Rede";
            mcs_dhcp_ip                 = "Obter IP automaticamente";
            mcs_dhcp_dns                = "Obter DNS automaticamente";
            mcs_ip_address              = "Endereço IP";
            mcs_network_mask            = "Máscara de sub-rede";
            mcs_input_secondary_dns     = "Inserir o DNS secundário";
            mcs_secondary_dns           = "DNS secundário";
            mcs_input_dns               = "Entrar DNS";
            mcs_input_alternate_dns     = "Inserir DNS secundário";
            mcs_input_ip                = "Inserir o endereço IP";
            mcs_input_gateway           = "Inserir Gateway";
            mcs_input_network_mask      = "Entrar a máscara de sub-rede";
            mcs_wifi_list               = "Lista de Wi-Fi";
            mcs_display_date            = "Mostrar data";
            mcs_date_format             = "Formato de data";
            mcs_display_time            = "Tempo de mostra";
            mcs_time_format             = "Formato da hora";
            mcs_24_hour                 = "24 Horas";
            mcs_12_hour                 = "12 Horas";
            mcs_display_weeks           = "Mostrar semanas";
            mcs_date_time               = "Data/Hora";
            mcs_set_time                = "Definição da Hora";
            mcs_set_week                = "Estabelecer a semana";
            mcs_stream                  = "Stream";
            mcs_encode                  = "Codificação";
            mcs_resolution              = "Resolução";
            mcs_frame_fate              = "Frame Rate";
            mcs_maximum_bitrate         = "Taxa máxima de bits";
            mcs_minimum_bitrate         = "Taxa mínima de bits";
            mcs_i_frame_interval        = "Intervalo de frame";
            mcs_video                   = "Vídeo";
            mcs_sampling_rate           = "Taxa de amostragem (kHz)";
            mcs_nickname                = "Nickname";
            mcs_old_password            = "Código antigo";
            mcs_confirm_password        = "Confirmar o código";
            mcs_modify_password         = "Alterar o código";
            mcs_password                = "Código";
            mcs_admin_password          = "Codigo Admin";
            mcs_guest_password          = "Guest Senha";
            mcs_product_info            = "Informações sobre o produto";
            mcs_software_version        = "Versão do software";
            mcs_device_id               = "ID do dispositivo";
            mcs_operation               = "Operação";
            mcs_record                  = "Gravar";
            mcs_record_2                = "Gravar";
            mcs_upgrade_now             = "Atualizar agora";
            mcs_upgrading               = "Está a atualizar.";
            mcs_already_latest_version  = "Versão mais recente instalada";
            mcs_sensitivty              = "Sensibilidade";
            mcs_user_defined            = "Definição pelo utilizador";
            mcs_time                    = "Tempo";
            mcs_date                    = "Data";
            mcs_finish                  = "Terminado";
            mcs_delete_fail             = "Apagar não";
            mcs_motion                  = "Detecção de movimento";
            mcs_start                   = "Iniciar";
            mcs_talk                    = "Falar";
            mcs_password_input_inconsistent = "Código inconsistente";
            mcs_input_6_to_20_litters   = "Entrada 6-20 letras (a-z, A-Z) ou números (0-9)";
            mcs_user_letter_range_hint  = "Conta de 6 - 32 dígitos (0 - 9) ou Letra (a - Z, a - z), deve começar com UMA Letra";
            mcs_password_range_hint     = "Código consiste contém 6-32 números ou letras";
            mcs_begin_with_the_letters  = "Começar por uma letra";
            mcs_sign_up                 = "Registar";
            mcs_sign_up_failed          = "Falha ao registar";
            mcs_successful_sign_up      = "Registo bem sucedido";
            mcs_are_you_sure_delete     = "Deseja eliminar?";
            mcs_failed_to_set_the       = "Falha ao instalar";
            mcs_set_successfully        = "Instalação bem sucedida";
            mcs_downloading             = "A descarregar";
            mcs_wrote                   = "Escrito";
            mcs_visit_again_later       = "Por favor voltar mais tarde";
            mcs_restart_failed          = "Reinícialização falhou";
            mcs_upgrade_failed          = "Erro dd atualização";
            mcs_connnected              = "Está conectado";
            mcs_connnected_to           = "Conectado a";
            mcs_not_select              = "Não selecionado";
            mcs_message_list            = "Lista de mensagens";
            mcs_saved_password          = "Código guardado";
            mcs_alert                   = "Alerta";
            mcs_no_record               = "Não há vídeos";
            mcs_new_about               = "Novo : Sobre";
            mcs_device                  = "Dispositivo";
            mcs_config                  = "Configuração";
            mcs_change_password_failed  = "Falha ao alterar o código";
            mcs_do_you_want_restart     = "Deseja reiniciar?";
            mcs_do_you_want_restore     = "Deseja restaurar?";
            mcs_do_you_want_upgrade     = "Deseja atualizar?";
            mcs_load_end                = "Todos os dados foram carregados";
            mcs_loading                 = "A carregar...";
            mcs_down_refresh            = "Para baixo para atualizar";
            mcs_release_refresh         = "liberação de atualização";
            mcs_refreshing              = "refrescante";
            mcs_release_then_loading_data_hint = "Actualizar Download";
            mcs_pull_refresh_hint       = "Puxar para atualizar";
            mcs_restarting              = "Está a reiniciar";
            mcs_upgraded_time           = "Atualizado em : ";
            mcs_done                    = "Terminado";
            mcs_playback                = "Reprodução";
            mcs_i_o_alarm               = "Alarme I/O";
            mcs_alarm_action            = "Ação de alarme";
            mcs_alarm_sources           = "Fonte de alarme";
            mcs_io_output               = "E/S de saída";
            mcs_snapshots               = "Tirar foto";
            mcs_snapshot                = "Tirar foto";
            mcs_snapshot_interval       = "Fotos intervalo (min)";
            mcs_pre_record_length       = "Tempo de pré-gravação (min)";
            mcs_nick_range_hint         = "Erro nickname (máximo de 20 caracteres)";
            mcs_save                    = "Salvar";
            mcs_close                   = "Fechar";
            mcs_snapshoting             = "tirar fotos";
            mcs_snapshot_failed         = "Erro ao tirar foto";
            mcs_record_failed           = "Falha ao gravar vídeo";
            mcs_saved_successfully      = "Guardado com exito";
            mcs_save_failed             = "Falha ao guardar";
            mcs_restart_to_take_effect  = "Reiniciar para atualizar modificações";
            mcs_please_allow_access_album = "Autorizar MIPC a aceder ao seu álbum.";
            mcs_please_allow            = "Autorizar ";
            mcs_access_album            = " a aceder ao seu álbum.";
            mcs_ios_privacy_setting_for_photo_prompt = "Você pode modificar no iPhone \"Configurações -> Privacidade -> Foto \", localize o aplicativo \"";
            mcs_execute_change          = "\" para fazer mudanças.";
            mcs_access_camera           = " para aceder à camera";
            mcs_please_allow_access_camera = "Autorizar o acesso de MIPC para aceder à camera";
            mcs_ios_privacy_setting_for_camera_prompt = "Você pode alterar no iPhone \"Configurações -> Privacidade -> Câmera\", localize o aplicativo \"";
            mcs_busy_when_write         = "Ocupado a gravar";
            mcs_unknown_error           = "Erro desconhecido";
            mcs_i_know                  = "Eu sei";
            mcs_segment                 = "Fragmento";
            mcs_please_relogin          = "Por favor, aceda novamente";
            mcs_change_password_succeed = "Código alterado com sucesso";
            mcs_upgrade_to_ver          = "Atualizar para uma nova versão";
            mcs_restore_failed          = "Falha na restauração";
            mcs_please_restart          = "Reiniciar";
            mcs_keep_network_settings   = "Configurações de rede Reservas e senha";
            mcs_not_connected           = "Não conectado";
            mcs_sdcard_not_ready        = "Cartão SD não está pronto!";
            mcs_device_not_exist        = "Dispositivo não existe";
            mcs_disable                 = "Desactivar";
            mcs_to_determine_the        = "Tem a certeza?";
            mcs_alert_on                = "Activar o alarme";
            mcs_alert_off               = "Desactivar o alarme";
            mcs_alert_onoff             = "Alerte on / off";
            mcs_monday                  = "Segunda-feira";
            mcs_tuesday                 = "Terça-feira";
            mcs_wednesday               = "Quarta-feira";
            mcs_thursday                = "Quinta-feira";
            mcs_friday                  = "Sexta-feira";
            mcs_saturday                = "Sábado";
            mcs_sunday                  = "Domingo";
            mcs_mon                     = "Seg";
            mcs_tue                     = "Ter";
            mcs_wed                     = "Qua";
            mcs_thu                     = "Qui";
            mcs_fri                     = "Sex";
            mcs_sat                     = "Sáb";
            mcs_sun                     = "Dia";
            mcs_scheduled_recording     = "Programar gravação video";
            mcs_schedule                = "Programar";
            mcs_scheduled_recording_status = "Estado da programaçao de gravação";
            mcs_folding                 = "Dobrar";
            mcs_unfolding               = "Desdobrar";
            mcs_end_time_should_lt_begin = "O tempo final deve ser maior do que o tempo de início";
            mcs_recording               = "Gravação em curso";
            mcs_prerecord_interval_range_hint = "O tempo de pré-gravação deve ser inferior a 6 segundos";
            mcs_snapshot_interval_range_hint = "O tempo do intervalo exigido é de 0 ou maior do que 60";
            mcs_not_ready               = "Não pronto";
            mcs_availablesize           = "Espaço disponível";
            mcs_reboot                  = "Reiniciar";
            mcs_alerter                 = "Abra o alarme";
            mcs_pir                     = "PIR";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "Encoder";
            mcs_ok                      = "Ok";
            mcs_fault                   = "Erro";
            mcs_sensor_status           = "Estado do sensor";
            mcs_about                   = "Sobre";
            mcs_reset_now               = "Reiniciar agora";
            mcs_reset_later             = "Reiniciar depois";
            mcs_prompt                  = "Sugestão";
            mcs_select                  = "Selecionar";
            mcs_available_netword       = "A rede não está disponível, configurar a rede?";
            mcs_request_send            = "Está a enviar o pedido...";
            mcs_blank_device_id         = "Introduza o ID";
            mcs_blank_username          = "Introduza um nome de utilizador";
            mcs_blank_password          = "Introduza o código";
            mcs_exist_user              = "O nome de utilizador já existe";
            mcs_invalid_user            = "O nome de usuário inválido";
            mcs_invalid_email_addr      = "Endereço de e-mail inválido";
            mcs_system_err              = "Erro de sistema";
            mcs_exceed_device           = "Passou o limite de utilizadores ligados ";
            mcs_continue                = "Continuar";
            mcs_prompt_exit             = "Se sair?";
            mcs_device_list             = "lista de dispositivos";
            mcs_no_sdcard               = "Nenhum cartão SD";
            mcs_no_hard_disk            = "Nenhuma unidade de disco rígido";
            mcs_show_more               = "mais…";
            mcs_shotsnop_exists         = "Foto já existente";
            mcs_input_nick              = "Entrar o nome de utilizador";
            mcs_nick_not_empty          = "O apelido não pode estar vazio";
            mcs_input_new_pass          = "Entrar o novo código";
            mcs_input_new_pass_again    = "Entrar o novo código outra vez";
            mcs_new_password            = "O código novo";
            mcs_modify_network_prompt   = "Modificar os parâmetros de rede pode causar problemas de ligação, confirmar as modificações?";
            mcs_wifi_disable_prompt     = "Desativar Wi-Fi, continuar?";
            mcs_eth_disable_prompt      = "Desativar a placa Ethernet, continuar?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "Obter automaticamente DHCP";
            mcs_manually_set            = "Configurar manualmente";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "DNS primario";
            mcs_client_mode             = "Modo de cliente";
            mcs_adhoc_mode              = "Modo de hotspot";
            mcs_connect_fail            = "Erro de conexão";
            mcs_dhcp_server             = "Servidor DHCP";
            mcs_display_text            = "Mostrar o texto";
            mcs_repair_prompt_detail    = "Reparar o cartão SD pode resultar em alguma perda de dados, continua?";
            mcs_format_prompt_detail    = "A formatação irá apagar todos os dados do cartão SD, continua?";
            mcs_mount_prompt            = "Carregar o cartão SD, continuar?";
            mcs_umount_prompt           = "Se descarregar o cartão SD não poderá guardar mais videos ou fotos, continuar?";
            mcs_sdcard_reset            = "Configuração  actualizada  com sucesso, você precisará de reiniciar a camera, continuar?";
            mcs_sdcard_repairing        = "Reparação em curso para reiniciar";
            mcs_sdcard_formating        = "Formatação em curso para reiniciar";
            mcs_sdcard_umount           = "Não carregado";
            mcs_valid                   = "Válido";
            mcs_io                      = "Alarme I/O";
            mcs_input                   = "Entrar";
            mcs_outinput                = "Saida";
            mcs_prompt_alert_on         = "Activar o alarme, continuar?";
            mcs_auto_sync_date_time     = "A sincronização automática";
            mcs_alarm_record            = "Gravação de alarme";
            mcs_username                = "Nome de usuário";
            mcs_re_enter_the_password   = "Entrar o código novamente";
            mcs_remember_me             = "Manter inscrito";
            mcs_home                    = "Home";
            mcs_install_the_plug        = "Instalar o plugin";
            mcs_install_the_video_plug  = "Instalar a ligação vídeo";
            mcs_install_now             = "Instalar agora";
            mcs_temporarily_installed_use_ordinary_video = "Não, instalar mais tarde";
            mcs_brightness              = "Luminosidade";
            mcs_contrast                = "Contraste";
            mcs_color_saturation        = "Saturação";
            mcs_sharpness               = "Agudeza";
            mcs_duration                = "Duração";
            mcs_index                   = "Índice";
            mcs_remark                  = "Observação";
            mcs_media_stream            = "Mídia";
            mcs_server                  = "Servidor";
            mcs_media_transfer          = "Transferir mídia";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "Fabricante";
            mcs_model                   = "Modelo";
            mcs_plugin_version          = "A versão do plug-in";
            mcs_network_interface       = "Interface de rede";
            mcs_transfer_protocol       = "O protocolo de transmissão";
            mcs_year                    = "Ano";
            mcs_month                   = "Mês";
            mcs_day                     = "Dia";
            mcs_hour                    = "Hora";
            mcs_minute                  = "Minuto";
            mcs_second                  = "Segundo";
            mcs_millisec                = "Milisegundo";
            mcs_ntp                     = "O endereço do servidor NTP";
            mcs_upload_upgrade          = "Enviar o update";
            mcs_stop                    = "Parar";
            mcs_info_rewind             = "Rebobinar";
            mcs_fast_forward            = "Difundir rápido";
            mcs_previous_frame          = "Foto anterior";
            mcs_next_frame              = "Próxima imagem";
            mcs_record_audio            = "Gravação de áudio";
            mcs_week                    = "Semana";
            mcs_all                     = "Tudo";
            mcs_id                      = "ID";
            mcs_select_all              = "Selecionar tudo";
            mcs_call                    = "Chamar";
            mcs_activation              = "Ativação";
            mcs_caption                 = "Carregar arquivo";
            mcs_alarm_device            = "Equipamento de alarme";
            mcs_not_installed           = "Não instalado";
            mcs_join_us_now             = "Junte-se a nós";
            mcs_reconnect_please_wait   = "Está a ligar novamente, por favor aguarde";
            mcs_erasing                 = "Está a apagar";
            mcs_writing                 = "Está a escrever";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "Existe uma nova versão disponível";
            mcs_equipment_flip          = "FLIP";
            mcs_device_status           = "O estado do dispositivo";
            mcs_audio_setting           = "Configurações de áudio";
            mcs_nick_modify             = "Alterar o nome de utilizador";
            mcs_ready                   = "Está pronto";
            mcs_full                    = "Cheio";
            mcs_connecting              = "Conexão em curso";
            mcs_message_buffering       = "Buffering de Mensagens";
            mcs_upgrade_finish          = "A atualização está concluida";
            mcs_image                   = "Imagem";
            mcs_bar                     = "Registos";
            mcs_init                    = "Inicialização";
            mcs_confirm_new_password    = "Confirmar o novo código";
            mcs_continue_switch_wireless_network = "Alterações na rede podem causar falhas, continuar?";
            mcs_restore_factory_settings_prompt = "Restaurar as configurações de fábrica, o sistema irá reiniciar, continuar?";
            mcs_username_does_not_exis  = "O nome de usuário não existe";
            mcs_username_already_exists = "O nome de usuário já existe";
            mcs_successful_whether_login = "O registo foi bem sucedido, entrar agora?";
            mcs_username_demand         = "Começa por letras com 6-20 letras ou números";
            mcs_the_password_is_empty   = "O código está vazio";
            mcs_password_demand         = "6-20 letras ou números";
            mcs_password_empty          = "O código de confirmação está vazio";
            mcs_two_password_input_inconsistent = "Entrada de códigos incompativeis";
            mcs_the_user_name_is_empty  = "O nome de usuário está vazio";
            mcs_upgrade_to_the_latest_version = "Atualizar para a versão mais recente";
            mcs_subnet_mask_wrong_format = "Erro no formato da máscara de sub-rede";
            mcs_upgrade_successful_restart_to_take_effect = "Atualização foi bem sucedida, você precisa reiniciar a equipamento.";
            mcs_need_to_restart_the_camera_to_take_effect = "Você precisa reiniciar a equipamento para as configurações tomarem efeito";
            mcs_not_allowed_close_two_network_cards = "Você não pode desativar a placa Ethernet e Wi-Fi ao mesmo tempo";
            mcs_modified_successfully   = "Modificado com exito";
            mcs_connection_successfully = "Conexão bem-sucedida";
            mcs_connection_is_interrupted = "Conexão interrompida";
            mcs_devices_in_the_account_overrun = "O número máximo de usuários foi atingido";
            mcs_format_error            = "Erro de formato";
            mcs_change                  = "Modificar";
            mcs_refresh                 = "Actualizar";
            mcs_connect                 = "Conetar";
            mcs_upgrade                 = "Atualizar";
            mcs_activate                = "Ativar";
            mcs_filter                  = "Filtro";
            mcs_reset                   = "Reset";
            mcs_prompt_alert_off        = "Alerta desligado, continuar?";
            mcs_invalid_server          = "O endereço do servidor NTP é inválido";
            mcs_upgrade_prompt          = "Atualizar o programa da equipamento, continua?";
            mcs_restart_prompt          = "Reiniciar a câmera, continua?";
            mcs_repeat                  = "Repetir";
            mcs_scheduled_one           = "Agenda de gravação 1";
            mcs_scheduled_two           = "Agenda de gravação 2";
            mcs_scheduled_three         = "Agendamento de gravação 3";
            mcs_scheduled_four          = "Agendamento de gravação 4";
            mcs_more                    = "Mais";
            mcs_leave                   = "Soltar a carregar mais";
            mcs_qrcode_scan             = "Scanear de código QR";
            mcs_inserted                = "Inserido";
            mcs_removed                 = "Eliminado";
            mcs_upgrade_init            = "Começar a atualização";
            mcs_upgrade_download        = "Descarregar o upgrade";
            mcs_check                   = "Verificar";
            mcs_audio_encoder_config    = "Configurações de codificação de áudio";
            mcs_video_codec             = "Codificação de vídeo";
            mcs_download                = "Descarregar";
            mcs_client_download         = "Baixar o cliente";
            mcs_for_more_clarity_smooth_video_experience = "Obter o vídeo mais nítido e fluido";
            mcs_network                 = "Rede";
            mcs_mobile_client_download  = "Descarregar em cliente móvel";
            mcs_readonly                = "Só ler";
            mcs_please_exit_and_relogin = "Por favor sair e entrar novamente";
            mcs_add_device_failed       = "Falha ao adicionar dispositivo";
            mcs_set_password            = "Alterar código";
            mcs_7x24_hours              = "7x24(hora)";
            mcs_mtalt                   = "%@ : Alerta de movimento";
            mcs_ioalt                   = "%@ : I/O alerta";
            mcs_time_zone               = "Fuso horário";
            mcs_select_time             = "Selecionar o tempo";
            mcs_now                     = "Agora";
            mcs_mipc_have_alert_notification = "MIPC têm notificação de alerta";
            mcs_notification_center     = "Centro de Notificação";
            mcs_sound                   = "Som";
            mcs_vibration               = "Vibração";
            mcs_clear_cache             = "Limpar o cache";
            mcs_clear_cache_hint        = "Tem certeza de que deseja limpar o cache?";
            mcs_successfully_cleared_cache = "Esvaziado com êxito o cache";
            mcs_app_except_exit_hint    = "Lamentamos, mas o aplicação encontrou uma exceção e vai terminar.";
            mcs_rate_us                 = "Avalia-nos";
            mcs_password_too_simple_hint = "Senha é muito simples, modifique para melhorar a segurança.";
            mcs_check_for_new_version   = "Verifique se há uma nova versão";
            mcs_contact_us              = "Contate-nos";
            mcs_buffer_time             = "Buffer de tempo";
            mcs_default                 = "Omissão";
            mcs_alarmed_devices         = "Dispositivos de alarme activados";
            mcs_aec                     = "Cancelamento de eco";
            mcs_permission_denied       = "Permissão negada";
            mcs_full_screen             = "full Screen";
            mcs_forgot_your_password    = "Esqueceu sua senha";
            mcs_your_email              = "Seu e-mail";
            mcs_sign_up_confirmation    = "Um e-mail de confirmação é enviado para verificar o endereço de e-mail enviado. Ao visitar o link enviado neste e-mail irá ativar a conta.";
            mcs_recovery_prompt         = "Digite seu endereço de e-mail (nome de usuário), vamos enviar uma mensagem para dizer-lhe como redefinir a senha.";
            mcs_password_reset_confirmation = "Um e-mail está sendo enviado para o endereço de e-mail enviado, Ao visitar o link enviado neste e-mail para redefinir a senha.";
            mcs_recovery_fail_no_mail   = "Recuperação de senha falhar, esta conta não ligam e-mail";
            mcs_recovery_fail_invalid_link = "Recuperação de senha falhar, por favor, certifique-se o conteúdo do link ou recuperação novamente.";
            mcs_recovery_ok_login       = "Sucesso de recuperação de senha, entrar agora.";
            mcs_active_ok_login         = "Conta sucesso ativa. Entrar agora.";
            mcs_active_fail_invalid_link = "Conta ativa falhar. Por favor, certifique-se o conteúdo do link ou Registe-se novamente.";
            mcs_login_fail_inactive     = "A conta está inativa. Por favor, siga o conteúdo do e-mail ativo para ativo.";
            mcs_sign_up_again           = "Registe-se novamente";
            mcs_press_start_talk        = "Pressione para falar";
            mcs_release_stop_talk       = "Solte para parar";
            mcs_delete_device           = "excluir dispositivo";
            mcs_success_removed_equipment = "Excluir dispositivo com sucesso";
            mcs_remove_equipment_failure = "Remova a falha do equipamento";
            mcs_device_busy             = "O dispositivo está ocupado agora";
            mcs_keep_testing            = "continuar teste";
            mcs_notify_tone             = "toque de notificação";
            mcs_float_video             = "Ativar vídeo flutuante";
            mcs_float_position          = "Posição vídeo flutuante";
            mcs_video_resolution        = "resolução de vídeo";
            mcs_float_resolution        = "Resolução de vídeo flutuante";
            mcs_top_left                = "Top esquerda";
            mcs_top_right               = "Em cima à direita";
            mcs_bottom_left             = "Embaixo à esquerda";
            mcs_bottom_right            = "Em baixo à direita";
            mcs_action_next             = "próximo";
            mcs_action_cancel           = "cancelar";
            mcs_action_retry            = "tentar novamente";
            mcs_action_add              = "adicionar";
            mcs_is_add                  = "Se deseja adicionar";
            mcs_action_apply            = "aplicação";
            mcs_action_config           = "configuração";
            mcs_action_skip             = "pular";
            mcs_action_ok               = "Ok";
            mcs_action_add_device       = "Adicionar dispositivo";
            mcs_action_modify_password  = "alterar senha";
            mcs_action_config_wifi      = "Definir Wi-Fi";
            mcs_state_connect_device    = "Conexão de dispositivos";
            mcs_state_connect_device_fail = "Ligue a falha de equipamento";
            mcs_state_wait_device_online = "À espera de dispositivo para estar on-line";
            mcs_state_device_online     = "On-line";
            mcs_state_success           = "sucesso";
            mcs_fail                    = "Falhou";
            mcs_delete_success          = "Remover com SUCESSO";
            mcs_state_add_device_success = "Adicionar sucesso Dispositivo";
            mcs_state_add_device_fail   = "Adicionar uma falha do dispositivo";
            mcs_state_modify_pass_success = "Senha alterada com sucesso";
            mcs_state_modify_pass_fail  = "Alteração de senha falha";
            mcs_state_config_wifi_success = "Definir sucesso Wi-Fi";
            mcs_state_config_wifi_fail  = "Erro de conexão";
            mcs_state_connecting_to     = "Conectando-se a";
            mcs_network_connect_type    = "O dispositivo não está on-line, você garante que o dispositivo é ligado, e, em seguida, selecione Conexão de rede:";
            mcs_prompt_modify_passwd    = "Por segurança, altere a senha padrão do dispositivo. A nova senha não deve ter menos de seis caracteres.";
            mcs_prompt_config_wifi      = "O dispositivo ainda não está conectado ao seu Wi-Fi, configure sua rede Wi-Fi.";
            mcs_step1_check_connect     = "Passo 1 : Conecte o roteador e uso da câmera cabo de rede.";
            mcs_first_step_ethernet_connect = "Passo 2: Conecte o cabo Ethernet ao roteador e à câmera.";
            mcs_step2_check_connect     = "Passo 2 : Ligue a câmera.";
            mcs_second_step_ethernet_connect = "Passo 1: Certifique-se de dispositivo está ligado.";
            mcs_hint_check_network      = "Nota : a câmera demora cerca de 50 segundos para iniciar, após a inicialização estiver concluída, LED acende três segundo a luz verde pisca três vezes, o que significa que todas as câmeras foi em linha, o assistente vai entrar automaticamente na próxima etapa.";
            mcs_the_end                 = "a extremidade";
            mcs_hint_password_expired   = "Senha expirou, por favor re-adicionar o dispositivo";
            mcs_hint_remove_ethernet    = "Observação : Wi-Fi funcionando corretamente, agora você pode desconectar o cabo de rede.";
            mcs_gateway_format_incorrect = "O endereço de gateway formato incorreto";
            mcs_dns_format_incorrect    = "Formato de endereço DNS está incorreto";
            mcs_subnet_mask_format_incorrect = "Endereço Da máscara de sub - rede não no formato correto";
            mcs_ip_format_incorrect     = "Formato de endereço IP está incorreto";
            mcs_login_sucess            = "login bem-sucedido";
            mcs_donot_remind            = "não lembrar";
            mcs_clear_cache_signout_hint = "Limpar o cache sairá entrar novamente para continuar?";
            mcs_devlist_adddev_hint     = "Clique aqui para adicionar equipamentos";
            mcs_devlist_menu_hint       = "Clique aqui para definir a resolução";
            mcs_update_failed           = "Atualização falhou";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "Local";
            mcs_set_npapi               = "Se o plugin foi instalado, visite \'chrome://flags/#enable-npapi\', permitir NPAPI, ";
            mcs_set_win32k              = "visita \'chrome://flags/#enable-win32k-renderer-lockdown\', win32k deficientes renderizador lockdown,";
            mcs_restart_browser         = "Reinicie o navegador";
            mcs_download_location       = "Localização da transferência";
            mcs_Networking_mode         = "modo de rede";
            mcs_wifi_intelligent_configuration = "conexão Wi-Fi";
            mcs_ethernet_configuration  = "conexão Ethernet";
            mcs_wifi_connect            = "conexão";
            mcs_hard_disk               = "disco rígido";
            mcs_wifi_is_connection      = "Ligar Por favor, aguarde...";
            mcs_wifi_intelligent_configuration_setup_ailure = "falha de configuração de configuração inteligente wi-fi";
            mcs_box_list                = "caixa de listagem";
            mcs_repair_disk_prompt      = "Disco de reparação pode perder alguns dados, continuar?";
            mcs_format_disk_prompt      = "A formatação do disco irá eliminar todos os dados ,continuar?";
            mcs_scheduled_alerting      = "Programa de Armar";
            mcs_scheduled_alerting_one  = "Programa de Armar 1";
            mcs_scheduled_alerting_two  = "Programa de Armar 2";
            mcs_scheduled_alerting_three = "Programa de Armar 3";
            mcs_scheduled_alerting_four = "Programa de Armar 4";
            mcs_wifi_config_cancle      = "configuração de Wi-Fi cancelar";
            mcs_wifi_config_prepare     = "A configuração para";
            mcs_wifi_config_first       = "Os dispositivos e os telefones celulares e routers mantido na gama de 1 m";
            mcs_wifi_config_second      = "Ao configurar Wi-Fi, o dispositivo não pode conectar o cabo de rede";
            mcs_wifi_config_third       = "Pressione o orifício de reposição de RESET um segundo e solte";
            mcs_wifi_config_success     = "configuração de sucesso";
            mcs_wifi_config_failure     = "configuração falhou";
            mcs_failure_prompt          = "Por favor, tente novamente ou voltar a verificar Wi-Fi senha é digitada corretamente";
            mcs_display_password        = "Mostrar senha";
            mcs_action_smart_config_wifi = "Assistente de Configuração";
            mcs_wifi_invalid            = "Sua rede está não Wi-Fi, por favor conectar Wi-Fi";
            mcs_phone_not_connect_wifi  = "Rede Wi-Fi não está conectado";
            mcs_prompt_check_connection = "Sua câmera não é on-line, verifique a conexão de linha da câmera.";
            mcs_wifi_cfg_ready          = "Pronto";
            mcs_reset_complete          = "reposição está concluída";
            mcs_how_to_restore_factory_settings = "Como restaurar as configurações de fábrica: usar o pino de reset pressionando o orifício RESET na parte inferior da câmera por mais de 10 segundos";
            mcs_forgetpass_action_wizard = "Por favor pressione reset reset buraco equipamento de 10 Segundos e depois soltar, você VAI ouvir a voz de equipamentos \"restaurar configurações de fábrica\".";
            mcs_prompt_check_device_connection = "Seu aparelho não está on-line, verifique a fiação para conectar o dispositivo";
            mcs_prompt_select_device_connection = "O SEU aparelho não é on - line, por favor, escolha o modo de rede";
            mcs_input_wifi_name         = "Por favor coloque o nome Wi-Fi";
            mcs_action_previous         = "anterior";
            mcs_io_alert_range_hint     = "IO tempo de alerta deve ser menos de 60 segundos";
            mcs_io_alert_time           = "IO hora do alarme(min)";
            mcs_smart                   = "inteligente";
            mcs_plan                    = "plano";
            mcs_mute                    = "mudo";
            mcs_wind_speed              = "velocidade do vento";
            mcs_one                     = "uma engrenagem";
            mcs_two                     = "dois engrenagem";
            mcs_three                   = "Three gear";
            mcs_purify_mode             = "modo de purificar";
            mcs_video_list              = "lista de vídeos";
            mcs_wifi_cfg_restore_factory_settings = "Segure o telemóvel perto de dispositivo, se o dispositivo não configurou Wi-Fi, pressionar o orifício RESET por um segundo, em seguida, liberar, o dispositivo irá restaurar as configurações de fábrica e reiniciar automaticamente";
            mcs_mask_settings           = "configurações de máscara";
            mcs_notification_settings   = "configurações de máscara";
            mcs_alarm_settings          = "Os ajustes de alarme";
            mcs_motion_detection        = "Detector De Movimento";
            mcs_io_alarm                = "S Alarme /";
            mcs_connect_status          = "status da conexão";
            mcs_motion_notification     = "Alertas e notificações";
            mcs_device_connected        = "Dispositivo está conectado";
            mcs_start_spray             = "Comece a pulverização?";
            mcs_available_network       = "Rede indisponíveis, rede de cheque";
            mcs_select_wifi_wizard      = "Por favor, selecione rede Wi-Fi em primeiro lugar";
            mcs_input_wifi_password     = "Entrada de senha Wi-Fi";
            mcs_device_admin_password   = "Dispositivo senha de administrador";
            mcs_device_guest_password   = "Dispositivo senha hóspede";
            mcs_user_admin_password     = "Senha de administrador do usuário";
            mcs_user_guest_password     = "Usuário convidado senha";
            mcs_save_network_set        = "Salve conjunto da rede ea senha";
            mcs_nickname_not_set        = "Camera apelido não está definido";
            mcs_current_wifi            = "Atual Wi-Fi";
            mcs_current_password_strength = "A força da senha atual";
            mcs_new_password_strength   = "Força nova senha";
            mcs_needs_to_open_the_DHCP  = "Seu roteador precisa abrir o DHCP (obter automaticamente IP) função, se a tentativa for bem-sucedida, entre em contato com o administrador.";
            mcs_picture                 = "quadro";
            mcs_quality                 = "qualidade";
            mcs_size                    = "tamanho";
            mcs_guest_login             = "Hóspede Login";
            mcs_audio_and_video         = "Áudio / Vídeo";
            mcs_volume                  = "O volume";
            mcs_smooth                  = "suave";
            mcs_clear                   = "claro";
            mcs_handsfree               = "Handsfree";
            mcs_headphone               = "Headphone";
            mcs_my                      = "meu";
            mcs_customer_service        = "atendimento ao Cliente";
            mcs_firefox_flash_uninstall = "Seu plugin flash não está disponível, a solução consulte https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "ferramenta";
            mcs_plug_load               = "plugins de carga";
            mcs_plug_load_refuse        = "No cargue plugins";
            mcs_plug_load_auto          = "automático";
            mcs_option                  = "Opciones";
            mcs_option_ok               = "determinar";
            mcs_voice_call_fails        = "Chamada de voz falhar, verifique a rede";
            mcs_umounted_prompt         = "Se desmontar?";
            mcs_mounted_prompt          = "Quer para montar?";
            mcs_format_prompt           = "Se deseja formatar?";
            mcs_repair_prompt           = "se a correcção?";
            mcs_signup_prompt           = "De novo aqui?";
            mcs_wifi_connect_sucess_prompt = "Nota: O Wi-Fi funciona normalmente, Agora você Pode desligar a rede.";
            mcs_manual_input_prompt     = "Dispositivo de Entrada manual.";
            mcs_qrscan_prompt           = "Você não permite que o aplicativo acesse a câmera do iPhone, por favor, a configuração de privacidade ‘’ - ‘’ - \'\', a função de câmera para encontrar o Nome do aplicativo Vimtag \'\' FOI alterado.";
            mcs_select_network_style    = "Escolha o modo de conexão de rede:";
            mcs_push                    = "anúncio";
            mcs_connect_power_prompt    = "Nota: O dispositivo não online, certifique - se de que a ligação de Energia elétrica";
            mcs_fail_microphone         = "Não consigo acessar o microfone";
            mcs_microphone_prompt       = "Você não deve permitir que este aplicativo acesse seu microfone, no \'set\' iPhone - a \\’privacidade’ - recurso de \\’microfone’, encontrar o nome de aplicação »Vimtag \'a ser modificado";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "HD";
            mcs_standard_clear          = "SDTV";
            mcs_fluent_clear            = "Suave";
            mcs_deleting                = "Apagar...";
            mcs_event                   = "Evento";
            mcs_one_hour                = "UMA Hora";
            mcs_half_hour               = "30 min";
            mcs_five_min                = "5 min";
            mcs_category                = "Categorias";
            mcs_time_length             = "A Muito tempo";
            mcs_new                     = "Novo";
            mcs_week_setting_prompt     = "- não Pode ser vazio";
            mcs_time_setting_prompt     = "O tempo não Pode ser vazio";
            mcs_today                   = "Hoje";
            mcs_wifi_password           = "Wi-Fi senha";
            mcs_register_prompt         = "Por favor, primeiro registo de conta";
            mcs_click_login             = "Clique EM login";
            mcs_not_login_prompt        = "Você não está logado, por favor clique EM Entrar!";
            mcs_product_presentation    = "Home page";
            mcs_help_feedback           = "Ajuda";
            mcs_help_information        = "Ajuda";
            mcs_feedback                = "Feedback";
            mcs_feedback_des            = "Obrigado por USAR Nosso aplicativo, BEM - vindo para NOS Dar SUA valiosa opinião";
            mcs_feedback_praise         = "Louvor";
            mcs_feedback_title_prompt   = "O título de feedback";
            mcs_feedback_title          = "Por favor, Digite o título (18 caracteres)";
            mcs_feedback_type_prompt    = "Tipos de problemAs";
            mcs_feedback_please_select  = "Por favor, escolha o Tipo de";
            mcs_feedback_select_option1 = "Interface";
            mcs_feedback_select_option2 = "O problema Da câmera";
            mcs_feedback_select_option9 = "Outras perguntas";
            mcs_feedback_dec_prompt     = "Descrição";
            mcs_feedback_dec            = "Por favor, indique a SUA opinião";
            mcs_feedback_upload_photo   = "Upload de fotos";
            mcs_preview_pic             = "Preview";
            mcs_Album                   = "Selecione a partir de Album";
            mcs_Photograph              = "fotografia";
            mcs_camera_unavailable      = "Não disponível com a sua câmara";
            mcs_feedback_submit         = "A apresentação";
            mcs_feedback_title_alert    = "O título não está de acordo com as Regras";
            mcs_feedback_type_alert     = "Por favor, escolha o Tipo correto";
            mcs_feedback_dec_alert      = "Por favor, indique a SUA opinião";
            mcs_feedback_submit_success = "Apresentação de SUCESSO";
            mcs_feedback_submit_fail    = "A Falta de submissão";
            mcs_connect_wifi_prompt     = "A conexão Wi-Fi";
            mcs_cloud                   = "nuvem";
            mcs_demo                    = "Demo";
            mcs_shortest                = "O Mais curto";
            mcs_no_history              = "Não há histórico";
            mcs_download_pc_client      = "Clique para baixar o cliente do PC";
            mcs_accounts_bind_email_exist = "A conta de caixa de correio está ligado";
            mcs_accounts_bind_email_busy = "A caixa de correio está ligado a conta";
            mcs_systemupdatetip_noversionnodetail = "A versão atual da atualização está disponível, nenhuma informação detalhada atualização";
            mcs_systemupdatetip_nodetail = "Nenhuma informação sobre a actualização detalhada";
            mcs_systemupdatetip_updatefrom = "A versão atual";
            mcs_systemupdatetip_updateto = "Você pode atualizar para";
            mcs_systemupdatetip_sureforupdate = "Determine upgrade?";
            mcs_systemupdatetip_updatecontent = "O conteúdo atualizado";
            mcs_operate_prompt          = "O conteúdo atualizado";
            mcs_operation_prompt        = "prompt de operação";
            mcs_qrcode_prompt_content   = "Use a câmera do dispositivo para digitalizar o código bidimensional móvel";
            mcs_qrcode_camera_distance  = "Código bidimensional com a distância da câmara 12 ~ 14 centímetros";
            mcs_planvideo_datewizard    = "Por favor, definir a data";
            mcs_planvideo_timewizard    = "Configure o tempo";
            mcs_planvideo_wizard        = "Defina a Hora e a data";
            mcs_email_unbind            = "Conta de correio não se liga";
            mcs_email_unmatch           = "Descasamento caixa de correio";
            mcs_email_inactive          = "E-mail não é activado";
            mcs_email_binded            = "E-mail-ban kikötötték";
            mcs_user_binded_bymail      = "A felhasználót nem kötelezett";
            mcs_bind_email_fail         = "Caixa de correio falhou ligação";
            mcs_diagnosis               = "Diagnóstico";
            mcs_delay                   = "Demora";
            mcs_packet_loss_rate        = "Taxa de perda de pacotes";
            mcs_timezone_IDL            = "Linha Internacional de Data";
            mcs_timezone_China          = "China";
            mcs_timezone_Midway         = "Ilhas Midway";
            mcs_timezone_Niue           = "Ilha de Niue";
            mcs_timezone_Samoa          = "Samoa Americana";
            mcs_timezone_Aleutian       = "Ilhas Aleutas";
            mcs_timezone_Hawaii         = "Ilhas Havaianas";
            mcs_timezone_Alaska         = "Alasca";
            mcs_timezone_PSTUSCanada    = "Horário padrão do Pacífico (EUA e Canadá)";
            mcs_timezone_Arizona        = "Arizona";
            mcs_timezone_MSTUSCanada    = "Mountain Standard Time (US & Canada)";
            mcs_timezone_CSTUSCanada    = "Horário Padrão Central (EUA e Canadá)";
            mcs_timezone_ESTUSCanada    = "Eastern Standard Time (US & Canada)";
            mcs_timezone_ASTCanada      = "Horário padrão do atlântico (Canadá)";
            mcs_timezone_Newfoundland   = "Terra Nova";
            mcs_timezone_Brasilia       = "Brasilia";
            mcs_timezone_BuenosAires    = "Buenos Aires";
            mcs_timezone_Santiago       = "Santiago";
            mcs_timezone_Noronha        = "Noronha";
            mcs_timezone_SouthGeorgia   = "Geórgia do Sul";
            mcs_timezone_Azores         = "Açores";
            mcs_timezone_CapeVerde      = "cabo Verde";
            mcs_timezone_London         = "Londres";
            mcs_timezone_Lisbon         = "Lisboa";
            mcs_timezone_Dublin         = "Dublin";
            mcs_timezone_Berlin         = "Berlim";
            mcs_timezone_Amsterdam      = "Amsterdam";
            mcs_timezone_Brussels       = "Bruxelas";
            mcs_timezone_Budapest       = "Budapeste";
            mcs_timezone_Madrid         = "Madri";
            mcs_timezone_Paris          = "Paris";
            mcs_timezone_Rome           = "Roma";
            mcs_timezone_Sarajevo       = "Sarajevo";
            mcs_timezone_Cairo          = "Cairo";
            mcs_timezone_Amman          = "Amã";
            mcs_timezone_Beirut         = "Beirute";
            mcs_timezone_Istanbul       = "Estanbul";
            mcs_timezone_Jerusalem      = "Jerusalém";
            mcs_timezone_Athens         = "Atenas";
            mcs_timezone_Baghdad        = "Bagdá";
            mcs_timezone_Riyadh         = "Riyadh";
            mcs_timezone_Qatar          = "Catar";
            mcs_timezone_Moscow         = "Moscou";
            mcs_timezone_Tehran         = "Teerã";
            mcs_timezone_Baku           = "Baku";
            mcs_timezone_Dubai          = "Dubai";
            mcs_timezone_Tbilisi        = "Tbilisi";
            mcs_timezone_Kabul          = "Cabul";
            mcs_timezone_Karachi        = "Carachi";
            mcs_timezone_Yekaterinburg  = "Yekaterinburg";
            mcs_timezone_Maldives       = "Maldivas";
            mcs_timezone_Calcutta       = "Calcutá";
            mcs_timezone_Colombo        = "Colombo";
            mcs_timezone_Katmandu       = "Kathmandu";
            mcs_timezone_Almaty         = "Almaty";
            mcs_timezone_Dhaka          = "Dhaka";
            mcs_timezone_Omsk           = "Omsk";
            mcs_timezone_Thimbu         = "Thimphu";
            mcs_timezone_Rangoon        = "Rangoon";
            mcs_timezone_Bangkok        = "Bangkok";
            mcs_timezone_Jakarta        = "Jacarta";
            mcs_timezone_Vientiane      = "Vientiane";
            mcs_timezone_Harbin         = "Harbin";
            mcs_timezone_Shanghai       = "Shanghai";
            mcs_timezone_Hongkong       = "Hong Kong";
            mcs_timezone_Singapore      = "Cingapura";
            mcs_timezone_Taipei         = "Taipei";
            mcs_timezone_Ulaanbaatar    = "Ulaanbaatar";
            mcs_timezone_Perth          = "Perth";
            mcs_timezone_Seoul          = "Seul";
            mcs_timezone_Tokyo          = "Tóquio";
            mcs_timezone_Darwin         = "Darwin";
            mcs_timezone_Magadan        = "Magadan";
            mcs_timezone_Vladivostok    = "Vladivostok";
            mcs_timezone_Guam           = "Guam";
            mcs_timezone_Sydney         = "Sydney";
            mcs_timezone_Canberra       = "Canberra";
            mcs_timezone_Melbourne      = "Melbourne";
            mcs_timezone_Queensland     = "Queensland";
            mcs_timezone_LordHowe       = "Lord Howe";
            mcs_timezone_Guadalcanal    = "Guadalcanal";
            mcs_timezone_Fiji           = "Fiji";
            mcs_timezone_Auckland       = "Auckland";
            mcs_timezone_Apia           = "Apia";
            mcs_timezone_Fakaofo        = "Fakaofo";
            mcs_timezone_Tongatapu      = "Tongatapu";
            mcs_timezone_Kiritimati     = "Kiritimati";
            mcs_connect_timeout         = "Une connexion de temporisation";
            mcs_share                   = "Megosztás";
            mcs_share_prompt_start      = "Você pode acessar";
            mcs_share_prompt_end        = "para baixar o vídeo através do navegador no PC ou android telefone que na mesma rede";
            mcs_share_note              = "Processo de download, por favor, não deixar esta página";
            mcs_video_size              = "tamanho";
            mcs_video_duration          = "duração";
            mcs_my_folder               = "minhas pastas";
            mcs_account_no_contain      = "A conta não contêm";
            mcs_edit                    = "editar";
            mcs_video_number            = " video";
            mcs_no_local_video          = "Nenhum vídeo";
            mcs_empty_folder            = "A pasta está vazia";
            mcs_no_history_record       = "Você não tem nenhuma história";
            mcs_no_local_record         = "Seu registro local está vazio";
            mcs_empty_cloud_list_first  = "Sua lista de dispositivos estiver vazia,";
            mcs_empty_cloud_list_second = "Clique no canto superior esquerdo";
            mcs_empty_cloud_list_third  = "Além de equipamentos!";
            mcs_empty_local_list_first  = "A SUA lista de locais vazios,";
            mcs_empty_local_list_second = "A tentativa de";
            mcs_empty_local_list_third  = "- tela";
            mcs_empty_local_list_forth  = "REFRESH!";
            mcs_empty_local_list_fifth  = "（O equipamento no local de Busca）";
            mcs_record_prompt           = "Você pode ver o vídeo no \"meu->minhas pastas\"";
            mcs_record_download_prompt  = "Você pode ver o vídeo no \"minhas pastas\"";
            mcs_register_buton_start    = "Não tem conta,";
            mcs_register_buton_end      = "Registe-se agora";
            mcs_product                 = "produto";
            mcs_user_or_password_invalid = "Nome de usuário ou senha está incorreta";
            mcs_share_video_prompt      = "Você está usando UMA rede wi - fi não, por favor, mudar para a rede WiFi e compartilhar";
            mcs_download_video_prompt   = "Você está usando UMA rede wi - fi para download não TEM custos, fluxo, continuar?";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "Normal";
            mcs_common_problem          = "Perguntas Mais frequentes";
            msc_enter_comment           = "Digite os seus comentários";
            msc_description             = "descrição";
            mcs_parameter               = "parâmetros";
            mcs_help_and_feedback       = "Ajuda e Feedback";
            mcs_personal_center         = "Centro de pessoal";
            mcs_version                 = "lançamento";
            mcs_language                = "idioma";
            mcs_new_user                = "Eu sou um novo usuário";
            mcs_have_account            = "Possui uma conta";
            mcs_try_it                  = "experiência";
            mcs_sign_up_now             = "Registar";
            mcs_input_confirm_password  = "Confirmar o código";
            mcs_warranty_registration   = "Garantia de matrícula";
            mcs_get_more_cameras        = "Ter Mais câmeras";
            mcs_user_inactive           = "O usuário não ativar";
            mcs_format_options          = "Formato";
            mcs_slide_screen            = "Deslize a tela para ajustar o ângulo de vídeo";
            mcs_zoom_in_screen          = "Amassar a tela pode aumentar os detalhes do vídeo";
            mcs_pause                   = "pausa";
            mcs_source                  = "fonte";
            mcs_magnetic                = "magnético";
            mcs_sos                     = "botão de emergência";
            mcs_input_download_path     = "caminho de download";
            mcs_download_path_name_error = "Baixe o nome do caminho do arquivo pode conter somente letras (a-z, A-Z) ou numérico (0-9)";
            mcs_active                  = "atividade";
            mcs_out                     = "deixar";
            mcs_quiet                   = "tranquilo";
            mcs_scenes                  = "cena";
            mcs_accessory               = "acessório";
            mcs_quiet_mode              = "modo silencioso";
            mcs_active_mode             = "modo ativo";
            mcs_out_mode                = "Modo de distância";
            mcs_add_accessory           = "adicionar anexos";
            mcs_accessory_type          = "Tipo de acessório";
            mcs_add_successfully        = "adicionado com sucesso";
            mcs_set_scene               = "Seus anexos ainda não tiver definido a cena , por favor clique";
            mcs_to_set                  = "para definir";
            mcs_add_accessory_button    = "Pressione o botão até que a luz vermelha se apaga novamente para completar o suplemento";
            mcs_auto_monday             = "Segunda-feira";
            mcs_auto_tuesday            = "Terça-feira";
            mcs_auto_wednesday          = "Quarta-feira";
            mcs_auto_thursday           = "Quinta-feira";
            mcs_auto_friday             = "Sexta-feira";
            mcs_auto_saturday           = "Sábado";
            mcs_auto_sunday             = "Domingo";
            mcs_search                  = "pesquisa";
            mcs_format_input            = "Formatar o disco rígido";
            mcs_get_accessory_failed    = "Anexo não conseguiu obter";
            mcs_get_scene_failed        = "Obter cenários de falha";
            mcs_search_failed           = "pesquisa falhar";
            mcs_add_failed              = "Adicionar Falha";
            mcs_ethernet_connect        = "Ethernet";
            mcs_action_click_retry      = "Clique em Repetir";
            mcs_wifi_config_failure_detail = "Ou você pode tentar";
            mcs_qrcode_connect          = "Código bidimensional ligado";
            mcs_close_sound_prompt      = "Open Sound ajuda a conexão Wi-Fi, segure o telefone perto do alto-falante do microfone da câmara";
            mcs_qrcode_prompt_title     = "Por favor operações mostradas na FIG.";
            mcs_qrcode_prompt_detail    = "Por favor, aponte a lente da câmera para o código QR com precisão e manter a distância ser 30 centímetros.";
            mcs_select_wifi_prompt      = "Nenhum cabo Ethernet necessária";
            mcs_select_ethernet_prompt  = "cabo Ethernet necessários para a configuração única";
            mcs_enter_config_mode_prompt = "Por favor, verifique Wifi indicador é de três três vermelho luz verde alternadamente. Se assim for, por favor, clique no botão Avançar. Se não, pressione o botão RESET na câmara. Em seguida, verifique o indicador de Wi-Fi novamente";
            mcs_no_enter_config_mode    = "Não entrar no modo de configuração";
            mcs_record_time             = "A duração da gravação (em segundos)";
            mcs_stop_search             = "pare de procurar";
            mcs_smart_wifi_setup        = "configuração WiFi inteligente";
            mcs_ethernet_setup          = "Configuração Ethernet";
            mcs_wifi_config_restore_start = "1) Certifique-se de dispositivo está ligado";
            mcs_wifi_config_restore_end = "2) Pressione o orifício de reposição por um segundo, o dispositivo irá restaurar e reiniciar após 60 segundos, em seguida, irá entrar no modo de configuração automática";
            mcs_Sense_schedule          = "planejamento de cenários";
            load_succeed                = "Carregando sucesso";
            load_fail                   = "Falha ao carregar";
            refresh_succeed             = "atualizar sucesso";
            refresh_fail                = "Atualizar falhou";
            mcs_ensure_dev_power        = "1) Certifique-se de dispositivo está ligado";
            all_refresh_complete        = "Todos os dados são atualizados";
            mcs_synchronize             = "síncrono";
            mcs_synchronize_detail      = "Perfis dos seguintes equipamentos e configurações inconsistentes , precisam ser sincronizados ao trabalho após";
            mcs_Sense_Schedule_Set      = "Conjunto de planejamento de cenários";
            mcs_Sence_Schedule_detail   = "Se você ativar o modo de cena automático, o sistema muda automaticamente de acordo com cenários de planejamento de cenários em momentos diferentes";
            mcs_Scene_set               = "Profiles";
            mcs_Scene_set_detail        = "Se você ativar um perfil, o perfil de acordo com as definições apresentadas nas páginas seguintes";
            mcs_send_message            = "Enviar uma mensagem";
            mcs_start_recording         = "iniciar a gravação";
            mcs_start_capture           = "iniciar a captura";
            mcs_turn_on_video           = "Para sair do modo de gravação contínua , por favor, abra o vídeo";
            mcs_search_press_button     = "Pressione o botão Voltar durante 1 segundo após o lançamento, o indicador pisca lentamente";
            mcs_add_fail1               = "De acordo com a adição de equipamentos FOI CANCELADO devido Ao curto, por favor, clique novamente para adicionar a Busca de novo";
            mcs_add_fail2               = "Não tente adicionar dispositivos e clique EM adicionar Nova Busca";
            mcs_recording_duration      = "A duração da gravação (em segundos)";
            mcs_settings_unsaved        = "Suas configurações não foram salvas";
            mcs_want_save               = "Será que vai salvar?";
            mcs_camera                  = "filmadora";
            mcs_router                  = "router";
            mcs_start_up                = "começo";
            mcs_cancle_add              = "Equipamento foi cancelado devido ao curto pressione Adicionar";
            mcs_visit_photo_fail        = "Visite o álbum falhou";
            mcs_camera_cell             = "A câmera";
            mcs_myphoto                 = "A minha foto";
            mcs_select_photo            = "Escolha o álbum";
            mcs_app_new_version         = "A Nova versão";
            mcs_update_new_version      = "Atualizar Agora";
            mcs_app_new_version_prompt  = "App tem uma nova versão, selecione Upgrade Baixar Atualizar agora";
            download_failed             = "O download falhou";
            mcs_connect_server_prompt   = "Wi-Fi está ligado, está ligado ao servidor";
            mcs_local_search            = "local Search";
            mcs_choose_device_type      = "Escolha o Tipo de dispositivo";
            mcs_wifi_state              = "Nota: O WiFi funciona normalmente, Agora você Pode desligar (desligar o cabo de rede não Pode ser on - line o equipamento, por favor espere 20 VAI automaticamente para a Linha de produção)";
            mcs_sweep                   = "Sweep";
            mcs_wifi_config_tip         = "Tenho um roteador WiFi, para evitar problemAs com a fiação,";
            mcs_ethernet_config_tip     = "Roteador SEM FIO conveniente.";
            mcs_ethernet_connect_step_one = "Primeiro Passo: certifique - se de que o cabo de alimentação Da Tomada de Energia 2 1.";
            mcs_ethernet_connect_step_two = "Segundo Passo: a conexão de cabo de rede e o roteador 4 Portas webcam.";
            mcs_sweep_qrcode_tip        = "A câmera é de celular o código bidimensional, a distância é de Cerca de 30 cm";
            mcs_sound_config_tip        = "Para reproduzir o SOM com conexão wi - fi.(também TEM a opção de Fechar)";
            mcs_sosalt                  = "%@ : Alarme botão de emergência(%@)";
            mcs_dooralt                 = "%@ : Alerta magnética(%@)";
            mcs_wifi_config_restore     = "Pressione o botão de reset de um Segundo após o \"modo de configuração EM WiFi, equipamentos\".";
            mcs_voice_remind_heard      = "Ouvi a voz";
            mcs_netWork_prompt          = "Dicas de Internet";
            mcs_con_netWork             = "Rede atualmente em uso para a conexão de dados, pode consumir uma grande quantidade de tráfego, se as configurações de interface de rede definida para saltar";
            mcs_no_netWork              = "Atualmente nenhuma conexão de rede, se o salto para configurar a interface de configurações de rede";
            mcs_exception_des           = "Seu aplicativo exit última excepção, quer para enviar um relatório de erro para o servidor";
            mcs_exception_prompt        = "Dica anormal";
            mcs_erro_diagnosis          = "Solução de problemas";
            mcs_erro_log_des            = "Log de erro registro recente aplicativo, selecione o botão enviar para enviar um log de erro, obrigado por sua cooperação!";
            mcs_is_submitting           = "sendo submetido";
            mcs_firmware_version        = "Versão do firmware";
            mcs_device_assembly         = "1.linha de energia  2.porta de alimentação  3.porta Ethernet  4.cabo  5.adaptador";
            mcs_forgetpass_action_wizard_old = "Pressione o botão de reset por um segundo, o dispositivo irá restaurar as configurações de fábrica e 60 segundos após o reatamento, a recuperação senha de administrador";
            mcs_device_assembly_mipc    = "1.linha de energia  2.porta de alimentação  3.porta Ethernet  4.cabo";
            mcs_device_connect_power_prompt = "O equipamento não on - line, por favor, Como mostrado Na Figura de SEU acesso a UMA Fonte de alimentação de equipamentos, já VIU a Luz vermelha ACESA, O dispositivo de boot.";
            mcs_lights_sound            = "Já VIU a Luz";
            mcs_connect_power           = "Conecte a Fonte de alimentação";
            mcs_search_magnetic         = "Como mostrado, a porta magnética combinada e pressione o botão lateral para 1 segundo após o lançamento, o indicador pisca lentamente";
            mcs_add_magnetic            = "Depois de abrir o sensor da porta para mesclar , consulte o indicador de flash desligado conclusão da adição";
            mcs_already_downloaded      = "Download";
            mcs_my_order                = "A minha encomenda";
            mcs_auto_mode               = "modo automático";
            mcs_new_small               = "Pequena";
            mcs_new_half                = "Medio";
            mcs_new_normal              = "Normal";
            mcs_new_hd                  = "HD";
            mcs_scene_now               = "O cenário atual";
            mcs_please_install_wechat   = "Instale o WeChat";
            mcs_wechat_not_support      = "Não é compatível com a versão WeChat atualizar WeChat";
            mcs_motion_alert            = "Alera de Movimento";
            mcs_io_alert                = "I/O alerta";
            mcs_valid_user_name         = "Primeiro Passo: Digite o Nome de usuário eficaz";
            mcs_binding_mailbox         = "Passo 2: Digite um e - mail";
            mcs_send_mailbox_succuess_prev = "Já para a transmissão de e - mail está vinculado ";
            mcs_send_mailbox_succuess_next = " A recuperação de senha de e - mail para enviar UMA Carta de e - mail para receber a SUA atenção, por favor.";
            mcs_all_image               = "Todas as fotos";
            mcs_unavailable_image       = "A foto não está disponível, por favor, escolha";
            mcs_set_nickname            = "Definir apelido";
            mcs_search_timeout          = "Tempo de pesquisa , clique em Pesquisar novamente";
            mcs_screen_size             = "Configurações de tela";
            mcs_screen_reset            = "Configuração  actualizada  com sucesso, você precisará de reiniciar a camera";
            mcs_wifi_network_prompt     = "Por favor, verifique se a conexão de WiFi Da câmera do WiFi de 5GHz é, deixe a câmera conectada a WiFi de 2,4 GHz";
            mcs_fault_diagnosis         = "O diagnóstico de rede";
            mcs_sever_diagnosis         = "Pode ser devido à falha de servidor, que Pode ser usado normalmente.";
            mcs_select_problem          = "Por favor, escolha";
            mcs_connot_lonin            = "Não Pode Entrar";
            mcs_connot_play             = "Não Pode jogar";
            mcs_add_problems            = "Um problema adicional";
            mcs_encounterer_problems    = "Por favor, indique problemAs";
            mcs_diagnostic_network      = "do início do diagnóstico";
            mcs_network_diagnostic_prompt = "Para o diagnóstico de rede Pode NOS ajudar a resolver o SEU problema, tempo de diagnóstico a Cerca de alguns minutos";
            mcs_network_diagnostic      = "Solução de problemas";
            mcs_connecting_server       = "Não Pode jogar";
            mcs_diagnostic_process_prompt = "Processo de diagnóstico pode levar vários minutos, durante o diagnóstico não executar outras operações, mas você sempre pode parar o diagnóstico";
            mcs_diagnostic_results      = "Não Pode jogar";
            mcs_diagnostic_results_received = "O diagnóstico é concluído, os resultados do diagnóstico foram recebidas";
            mcs_diagnostic_results_prompt = "Obrigado por participar neste diagnóstico, resultados de diagnóstico vai nos ajudar a resolver o problema o mais rápido possível";
            mcs_results_no_abnormality  = "O diagnóstico de Anomalias";
            mcs_no_abnormality_prompt   = "O diagnóstico nenhuma anormalidade foi encontrada. Você pode escolher a profundidade do diagnóstico, iniciar os recursos de coleta de log vai nos ajudar a melhor resolver o problema que você está experimentando";
            mcs_continue_diagnosis      = "Diagnóstico profundidade";
            mcs_diagnosis_connot_sent   = "O diagnóstico Pode ser enviado";
            mcs_email_sends             = "Enviar por e - mail";
            mcs_email_sends_prompt      = "Enviar resultados de diagnóstico para nós por e-mail, ele irá nos ajudar a resolver o problema o mais rápido possível";
            mcs_diagnosis_send          = "Enviar";
            mcs_diagnosis_email         = "O e - mail";
            mcs_send_successful         = "enviada com sucesso";
            mcs_diagnosis_type_select_prompt = "selecione o tipo de diagnóstico";
            mcs_stop_diagnosis          = "Parar de Diagnóstico";
            mcs_detail_diagnosis_prompt = "Diagnóstico continuar, você pode desligar a página do dispositivo";
            mcs_detail_diagnosis_stop_prompt = "Diagnóstico profundidade está em andamento, você sempre pode abortar";
            mcs_exit_detail_diagnosis   = "Diagnóstico profundidade está em andamento, quer parar?";
            mcs_network_connection_unavailable = "Conexão de rede não está disponível";
            mcs_Failed_connect_Internet = "Falha ao conectar-se à Internet";
            mcs_connect_internet_note   = "Se você precisa se conectar à Internet, por favor, observe o seguinte:";
            mcs_connect_internet_detail_first = "Verifique as configurações de rede sem fios do seu telefone, para ver se não há acesso a um sinal de LAN sem fios";
            mcs_connect_internet_detail_second = "Verifique se o seu telefone tem acesso a uma rede móvel, e o telefone não foi desativada";
            mcs_connect_wifi_note       = "Se você tiver acesso à LAN sem fios:";
            mcs_connect_wifi_detail     = "Verifique se sua conexão hotspot wireless LAN tem acesso à Internet, ou se o hotspot permitir que o dispositivo para acessar a LAN";
            mcs_device_or_phone_time_zone_not_equals_please_select = "Dispositivo atual fuso horário e o fuso horário do telefone móvel não é, selecione o fuso horário correto";
            mcs_phone_timezone          = "Fuso horário do telefone";
            mcs_timezone_change         = "Modificar o fuso horário";
            mcs_mail_send               = "mensagem enviada";
            mcs_yes_verif               = "é";
            mcs_no_verif                = "não";
            mcs_camera_found_new_version_y_n_upgrade = "Descobrimos uma nova versão da câmera, seja para a atualização?";
            mcs_auto_adapt_split_screen = "Adaptive";
            mcs_four_split_screen       = "Quatro EM TELA dividida";
            mcs_nine_split_screen       = "9.";
            mcs_twelve_split_screen     = "12.";
            mcs_not_connection_server   = "Não é possível conectar ao servidor";
            mcs_more_options            = "Mais";
            mcs_bind_email_prompt       = "Para dar conta de segurança, ligar a caixa de correio";
            mcs_login_now               = "Faça login agora";
            mcs_device_connect_power    = "1.linha de energia      2.porta de alimentação";
            mcs_device_connect_ethernet = "1. A porta de rede    2.Cabo de rede";
            mcs_device_connect_ethernet_prompt = "O cabo de rede e a outra extremidade está ligado, O roteador de acesso a rede, já que a Luz Verde pisca, conexões de cabo.";
            mcs_pwd_format              = "Senha: EM formato de 8 para 16 caracteres de comprimento entre Letras maiúsculas e minúsculas, números e símbolos especiais, contendo, pelo Menos, três";
            mcs_client_new              = "O cliente";
            mcs_user_guide              = "Manual do usuário";
            mcs_ebitcam_download_describe = "Ebitcam é um software de monitoramento de software de serviços de Nuvem, a Nuvem com a câmera para USAR a qualquer Hora e EM qualquer Lugar, permite que o usuário Veja o vídeo, nós fornecer - lhe UMA experiência de visualização Clara, suave, inteligente de controle a qualquer momento que você GOSTA de CUIDAR de SUA família, O usuário para fazer o download!";
            mcs_mipc_download_describe  = "MIPC é um software de monitoramento de software de serviços de Nuvem, a Nuvem com a câmera para USAR a qualquer Hora e EM qualquer Lugar, permite que o usuário Veja o vídeo, nós fornecer - lhe UMA experiência de visualização Clara, suave, inteligente de controle a qualquer momento que você GOSTA de CUIDAR de SUA família, O usuário para fazer o download!";
            mcs_guide_download          = "Download manual";
            mcs_password_admin          = "Gerenciamento de senhas";
            mcs_already_read            = "Gerenciamento de senhas";
            mcs_privacy_policy          = "A política de privacidade";
            mcs_not_agree_privacy_policy = "Você também não concorda com a política de privacidade";
            mcs_reload                  = "Recarregar";
            mcs_start_download          = "Download";
            mcs_video_play_fail         = "A reprodução de vídeo";
            mcs_download_app_tips       = "Você também Pode tentar USAR o PC cliente";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = "Categorias de";
            mcs_connect_device_wifi     = "A câmera não suporta WiFi de 5GHz";
            mcs_send_diagnosis_results  = "Enviar OS resultados de diagnóstico.";
            mcs_local_file              = "Ficheiro local";
            mcs_local_device            = "Dispositivo local";
            mcs_export_sd_data          = "Exportar dados EM cartão SD";
            mcs_shaking                 = "A máquina Da série";
            mcs_outdoor                 = "Fora de série";
            mcs_card                    = "A série de máquina de cartão";
            mcs_wifi_connection         = "Conexão wi - fi";
            mcs_home_mode               = "modo de casa";
            mcs_away_home_mode          = "Modo AWAY";
            mcs_auto_switch_mode        = "alternar automaticamente";
            mcs_select_scene_mode       = "Por favor, escolha um perfil";
            mcs_7x24_hours_prompt       = "7x24 abertos (h) Gravação";
            mcs_all_day_recording       = "vídeo dia";
            mcs_home_mode_prompt        = "modo de casa:Feche todos os dispositivos de alarme";
            mcs_away_home_mode_prompt   = "Modo AWAY:Todos os dispositivos de alarme aberta";
            mcs_at_home                 = "no país";
            mcs_away_home               = "fora";
            mcs_set_timezone_prompt_start = "O fuso horário é";
            mcs_set_timezone_prompt_end = "Por favor mudar \"Data/Hora\" na configuração de fuso horário";
            mcs_set_wifi_remind_head    = "A câmera de rede Pode levar a falha, recomenda evitar";
            mcs_set_wifi_remind_1       = "Verifique se a rede WiFi no se abre, esta configuração não Pode resultar EM câmera normal.Você Pode Fechar - se com a rede Internet, a câmera novamente após a configuração do roteador";
            mcs_set_wifi_remind_2       = "Se a SUA Casa é dual - band router WiFi câmera, verifique se a conexão é Banda de 5GHz WiFi conexão, deixe a câmera WiFi de 2,4 GHz";
            mcs_set_wifi_remind_3       = "A câmera não suporta WPA/WPA2 enterprise WiFi, por favor, escolha outro.";
            mcs_set_wifi_remind_4       = "Se SUA Casa é porque a Ponte Ponte de WiFi, porque Pode levar a SUA rede de conexão é Muito instável, que não a Ponte de WiFi";
            mcs_set_wifi_remind_5       = "A câmera TEM wi - fi";
            mcs_record_save_to_my_file  = "Vídeo salvo em meus arquivos";
            mcs_view_now                = "Ver Agora";
            mcs_search_sos_strat        = "Como mostrado, a imprensa botão inferior";
            mcs_search_sos_end          = "Um segundo, o indicador de dispositivo estiver piscando";
            mcs_search_magnetic_start   = "Como mostrado, a porta magnético combinado, pressione o botão lateral";
            mcs_search_magnetic_end     = "Um segundo, o indicador de dispositivo estiver piscando";
            mcs_adding                  = "adicionando";
            mcs_record_empty_set_sd     = "Insira um cartão SD pode armazenar o histórico de vídeo";
            mcs_video_play_offline      = "O dispositivo está offline";
            mcs_video_play_network_fail = "Conexão de rede falhou, tente novamente mais tarde";
            mcs_alert_notify_guide1     = "[Original] operação de detecção de movimento para migrar para [anexo], [por] as configurações de perfil";
            mcs_alert_notify_guide2     = "A operação é como se segue:";
            mcs_alert_notify_guide3     = "Selecione [cena], você precisa vir modo de armar, você precisa abrir no modo de desarmar casa;";
            mcs_alert_notify_guide4     = "Selecione [Acessórios] - [lista de Acessórios] - Modo [Detecção de movimento] é expulso de alarme, vídeo, fotografia, função de alarme IO, desligar o alarme no modo de repouso, vídeo e outras funções.";
            mcs_plan_protect_guide1     = "[Original] operação de plano de armar migraram para o [cenário]";
            mcs_plan_protect_guide2     = "Selecione o [cenário], perfis abertos comutação automática;";
            mcs_plan_protect_guide3     = "selecionar";
            mcs_plan_protect_guide4     = ", A necessidade de período de armado (por exemplo: Ter 7: 00-18: 00) estabelecido modo, depois OK para salvar e retornar à guia Configurações;";
            mcs_plan_record_guide       = "Seleccione [Gravar], vir a função de gravação de modo.";
            mcs_plan_record_guide1      = "[Programar gravação video] operação de plano de armar migraram para o [Gravar]";
            mcs_plan_record_guide2      = ", A necessidade de gravar período de tempo (por exemplo: Ter 7: 00-18: 00) estabelecido modo, depois OK para salvar e retornar à guia Configurações;";
            mcs_forgetpass_action_prompt = "Por favor, pressione o dispositivo Repor orifício de reposição de 10 segundos após o lançamento, luzes e equipamentos para restaurar as configurações de fábrica de infravermelho";
            mcs_cloud_box               = "Box nuvem";
        }/* pt */
        else if(lang == "it")
        {
            mcs_name                    = "Nome";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "Nome";
            mcs_old_nick                = "Nick";
            mcs_linked                  = "Connesso";
            mcs_sign_in                 = "Accedi";
            mcs_back                    = "Indietro";
            mcs_will_back               = "Salva";
            mcs_add                     = "Aggiungi";
            mcs_add_device              = "Aggiungi dispositivo";
            mcs_device_existed          = "Il dispositivo esiste già";
            mcs_cancel                  = "Annulla";
            mcs_exit                    = "Exit";
            mcs_remember_password       = "Memorizza password";
            mcs_password_remembered     = "Password ricordata";
            mcs_sign_ining              = "Accedi...";
            mcs_cloud_server            = "Cloud server";
            mcs_input_device_id         = "Inserisci ID dispositivo";
            mcs_input_username          = "Inserisci nome utente";
            mcs_input_email_addr        = "Immetti indirizzo di posta elettronica";
            mcs_email_address           = "indirizzo email";
            mcs_email                   = "email";
            mcs_binding                 = "legame";
            mcs_binding_email           = "E-mail vincolante";
            mcs_binding_send_prompt     = "Il messaggio di verifica è stato inviato, per favore cliccare sulla mail di autenticazione il più presto possibile";
            mcs_binding_email_prompt    = "Se si dimentica la password, è possibile reimpostarla con la casella di posta";
            mcs_input_password          = "Inserisci password";
            mcs_access_server_failed    = "Accesso server fallito";
            mcs_device_offline          = "Dispositivo non in linea";
            mcs_invalid_password        = "Password non valida";
            mcs_invalid_dev             = "Dev non valido";
            mcs_login_faided            = "Login fallito";
            mcs_invalid_qrcode          = "Codice QR non valido";
            mcs_please_input_username   = "Si prega di inserire il nome utente";
            mcs_please_input_password   = "Si prega di inserire la password";
            mcs_qrcode_scan_hint        = "Esegui scansione del codice QR";
            mcs_device_list_empty       = "L\'elenco dispositivi è vuoto";
            mcs_record_list_is_empty    = "L\'elenco registri è vuoto";
            mcs_password_expired        = "Password scaduta";
            mcs_set_video_size          = "Risoluzione:";
            mcs_hd_1280x720             = "HD [1280x720]";
            mcs_auto                    = "Automatico";
            mcs_normal_640x360          = "Normal [640x360]";
            mcs_half_320x180            = "Metà [320x180]";
            mcs_small_160x90            = "Piccolo [160x90]";
            mcs_play                    = "Live";
            mcs_settings                = "Impostazioni";
            mcs_messages                = "Registrazioni";
            mcs_alarm                   = "Allarme";
            mcs_delete                  = "Elimina";
            mcs_delete_camera           = "Elimina Dispositivo";
            mcs_apply                   = "Applica";
            mcs_speed                   = "Velocità";
            mcs_others                  = "Altro";
            mcs_audio                   = "Audio";
            mcs_speaker                 = "Altoparlante";
            mcs_mic                     = "Mic";
            mcs_power_frequency         = "Frequenza di alimentazione";
            mcs_online_upgrade          = "Aggiornamento online";
            mcs_restore_the_factory_settings = "Ripristinare le impostazioni predefinite";
            mcs_restore                 = "Ripristina";
            mcs_restore_camera          = "Riavvio dispositivo";
            mcs_start_upgrade           = "Avvia aggiornamento";
            mcs_system                  = "Sistema";
            mcs_system_settings         = "Impostazioni di sistema";
            mcs_online                  = "Online";
            mcs_offline                 = "Offline";
            mcs_query                   = "Query";
            mcs_begin_time              = "Orario iniziale";
            mcs_end_time                = "Orario finale";
            mcs_mode                    = "Modalità";
            mcs_opened                  = "Aperta";
            mcs_high                    = "Alto";
            mcs_middle                  = "Medio";
            mcs_low                     = "Basso";
            mcs_io_alert_input          = "Ingresso I/O";
            mcs_io_alert_output         = "Uscita I/O";
            mcs_normally_open           = "Normalmente Aperto";
            mcs_normally_close          = "Normalmente aperto";
            mcs_motion_detection_sensitivity = "Sensibilità di rilevamento del movimento";
            mcs_daytime                 = "Giorno";
            mcs_night                   = "Notte";
            mcs_sdcord                  = "Secure Digital";
            mcs_storage_device          = "Supporto di memoria";
            mcs_set_mask                = "Imposta maschera";
            mcs_status                  = "Stato";
            mcs_capacity                = "Capacità";
            mcs_usage                   = "Uso";
            mcs_format                  = "Formato";
            mcs_repair                  = "Fisso";
            mcs_formating               = "Formattazione";
            mcs_repairing               = "Riparazione";
            mcs_mounted                 = "Montato";
            mcs_unmounted               = "Smontato";
            mcs_mount                   = "Monta";
            mcs_unmount                 = "Smonta";
            mcs_ethernet                = "Ethernet";
            mcs_wifi                    = "Wi-Fi";
            mcs_enabled                 = "Abilitata";
            mcs_mac_address             = "Indirizzo MAC";
            mcs_network_status          = "Stato della Rete";
            mcs_wifi_mode               = "Modalità Wi-Fi";
            mcs_client                  = "Client";
            mcs_ap                      = "AP";
            mcs_start_address           = "Indirizzo Iniziale";
            mcs_end_address             = "Indirizzo Finale";
            mcs_gateway                 = "Gateway";
            mcs_select_network          = "Seleziona Rete";
            mcs_dhcp_ip                 = "Usa DHCP";
            mcs_dhcp_dns                = "DNS : Usa DHCP";
            mcs_ip_address              = "Indirizzo IP";
            mcs_network_mask            = "Network mask";
            mcs_input_secondary_dns     = "Inserisci DNS secondario";
            mcs_secondary_dns           = "DNS secondario";
            mcs_input_dns               = "Inserisci DNS";
            mcs_input_alternate_dns     = "Inserire DNS alternativo";
            mcs_input_ip                = "Inserisci IP";
            mcs_input_gateway           = "nserisci gateway";
            mcs_input_network_mask      = "Inserisci maschera di rete";
            mcs_wifi_list               = "Elenco Wi-Fi";
            mcs_display_date            = "Visualizza data";
            mcs_date_format             = "Formato data";
            mcs_display_time            = "Visualizza Ora";
            mcs_time_format             = "Formato orario";
            mcs_24_hour                 = "24 ore";
            mcs_12_hour                 = "12 ore";
            mcs_display_weeks           = "Visualizza giorno";
            mcs_date_time               = "Giorno/ora";
            mcs_set_time                = "Imposta Ora";
            mcs_set_week                = "Imposta settimana";
            mcs_stream                  = "Flusso";
            mcs_encode                  = "Codifica";
            mcs_resolution              = "Risoluzione";
            mcs_frame_fate              = "Frame Rate (FPS)";
            mcs_maximum_bitrate         = "Massima frequenza di bit";
            mcs_minimum_bitrate         = "Frequenza di bit minima";
            mcs_i_frame_interval        = "Intervallo fotogrammi:";
            mcs_video                   = "Video";
            mcs_sampling_rate           = "Frequenza di campionamento(kHz)";
            mcs_nickname                = "Nickname";
            mcs_old_password            = "Password precedente";
            mcs_confirm_password        = "Conferma password";
            mcs_modify_password         = "Modifica Password";
            mcs_password                = "Password";
            mcs_admin_password          = "Password Admin";
            mcs_guest_password          = "Password ospite";
            mcs_product_info            = "Informazioni Prodotto";
            mcs_software_version        = "Versione del software";
            mcs_device_id               = "ID Dispositivo";
            mcs_operation               = "Funzionamento";
            mcs_record                  = "Registra";
            mcs_record_2                = "Riproduci";
            mcs_upgrade_now             = "Effettua ora l’aggiornamento";
            mcs_upgrading               = "Aggiornamento";
            mcs_already_latest_version  = "Non è disponibile alcun aggiornamento";
            mcs_sensitivty              = "Sensibilità";
            mcs_user_defined            = "Sensibilità";
            mcs_time                    = "Ora";
            mcs_date                    = "Giorno";
            mcs_finish                  = "Fine";
            mcs_delete_fail             = "La cancellazione di Fallimento";
            mcs_motion                  = "Movimento";
            mcs_start                   = "Inizio";
            mcs_talk                    = "Parla";
            mcs_password_input_inconsistent = "Inserimento password incoerente.";
            mcs_input_6_to_20_litters   = "Il nome utente è di 6-20 lettere (az, AZ) o numeri (0-9) e inizia con una lettera";
            mcs_user_letter_range_hint  = "Il nome utente è di 6-32 lettere (az, AZ) o numeri (0-9) e inizia con una lettera";
            mcs_password_range_hint     = "La password è di 6-32 caratteri - lettere / numeri.";
            mcs_begin_with_the_letters  = " Inizia con le lettere";
            mcs_sign_up                 = "Registrati";
            mcs_sign_up_failed          = "Accesso fallito";
            mcs_successful_sign_up      = "Accesso riuscito";
            mcs_are_you_sure_delete     = "Conferma eliminazione";
            mcs_failed_to_set_the       = "Impostazione fallita";
            mcs_set_successfully        = "Impostazione eseguita";
            mcs_downloading             = "Download in corso";
            mcs_wrote                   = "Scrittura";
            mcs_visit_again_later       = "Vi preghiamo di riprovare più tardi";
            mcs_restart_failed          = "Riavvio fallito";
            mcs_upgrade_failed          = "Aggiornamento Fallito";
            mcs_connnected              = "Connesso";
            mcs_connnected_to           = "Connesso a";
            mcs_not_select              = "Non selezionato";
            mcs_message_list            = "Lista messaggi";
            mcs_saved_password          = "Password salvata";
            mcs_alert                   = "Avviso";
            mcs_no_record               = "Nessuna registrazione";
            mcs_new_about               = "Nuovo Info";
            mcs_device                  = "Dispositivo";
            mcs_config                  = "Config";
            mcs_change_password_failed  = "Modifica password fallita";
            mcs_do_you_want_restart     = "Vuoi riavviare?";
            mcs_do_you_want_restore     = "Conferma ripristino";
            mcs_do_you_want_upgrade     = "Vuoi aggiornare ora?";
            mcs_load_end                = "Fine dei video";
            mcs_loading                 = "Caricamento in corso...";
            mcs_down_refresh            = "Tira verso il basso per aggiornare ...";
            mcs_release_refresh         = "Aggiorna Release";
            mcs_refreshing              = "Ripristinare";
            mcs_release_then_loading_data_hint = "Release da caricare";
            mcs_pull_refresh_hint       = "Tira per aggiornare";
            mcs_restarting              = "Reset";
            mcs_upgraded_time           = "Ora aggiornata: ";
            mcs_done                    = "Fatto";
            mcs_playback                = "Riproduci";
            mcs_i_o_alarm               = "Allarme I/O";
            mcs_alarm_action            = "Azioni di Allarme";
            mcs_alarm_sources           = "Sorgenti di allarme";
            mcs_io_output               = "Uscita relè ";
            mcs_snapshots               = "Istantanee";
            mcs_snapshot                = "Istantanea";
            mcs_snapshot_interval       = "Intervallo istantanea";
            mcs_pre_record_length       = "Lunghezza pre-registrazione";
            mcs_nick_range_hint         = "Il nome della videocamera deve contenere meno di 20 caratteri";
            mcs_save                    = "Salva";
            mcs_close                   = "Chiudi";
            mcs_snapshoting             = "Istantanea";
            mcs_snapshot_failed         = "Istantanea fallita";
            mcs_record_failed           = "Registrazione Fallita";
            mcs_saved_successfully      = "Salvata correttamente";
            mcs_save_failed             = "Salvataggio Fallito";
            mcs_restart_to_take_effect  = "Riavviare per rendere effettivo";
            mcs_please_allow_access_album = "Si prega di consentire maxCam di accedere al vostro album fotografico";
            mcs_please_allow            = "Si prega di consentire ";
            mcs_access_album            = " l\'accesso al vostro album fotografico";
            mcs_ios_privacy_setting_for_photo_prompt = "Può essere modificato in iPhone \"Impostazioni->Privacy->Foto\", trova applicazione \"";
            mcs_execute_change          = "\" modifica.";
            mcs_access_camera           = " per accedere alla vostra videocamera.";
            mcs_please_allow_access_camera = "Si prega di consentire l\'accesso alla vostra videocamera.";
            mcs_ios_privacy_setting_for_camera_prompt = "È possibile modificare le impostazioni in iPhone \"Impostazioni-> Privacy-> videocamera \", trova applicazione \"";
            mcs_busy_when_write         = "Scrittura occupata";
            mcs_unknown_error           = "Errore sconosciuto";
            mcs_i_know                  = "Lo so!";
            mcs_segment                 = "Segmento";
            mcs_please_relogin          = "Si prega di accedere nuovamente";
            mcs_change_password_succeed = "Modifica password riuscita";
            mcs_upgrade_to_ver          = "Aggiorna a";
            mcs_restore_failed          = "Ripristino Fallito";
            mcs_please_restart          = "Pregasi riavviare";
            mcs_keep_network_settings   = "Mantenere le impostazioni di rete e la password";
            mcs_not_connected           = "Non connessa";
            mcs_sdcard_not_ready        = "Scheda SD non pronta!";
            mcs_device_not_exist        = "Dispositivo non\'t esiste.";
            mcs_disable                 = "Disabilita";
            mcs_to_determine_the        = "Per determinare la";
            mcs_alert_on                = "Attiva allarme";
            mcs_alert_off               = "Disattiva avviso";
            mcs_alert_onoff             = "Allarme ON/OFF";
            mcs_monday                  = "Lunedì";
            mcs_tuesday                 = "Martedì";
            mcs_wednesday               = "Mercoledì";
            mcs_thursday                = "Giovedì";
            mcs_friday                  = "Venerdì";
            mcs_saturday                = "Sabato";
            mcs_sunday                  = "Domenica";
            mcs_mon                     = "Lun";
            mcs_tue                     = "Mar";
            mcs_wed                     = "Mer";
            mcs_thu                     = "Gio";
            mcs_fri                     = "Ven";
            mcs_sat                     = "Sab";
            mcs_sun                     = "Dom";
            mcs_scheduled_recording     = "Programma Registrazione";
            mcs_schedule                = "Programma";
            mcs_scheduled_recording_status = "Stato di registrazione programmato";
            mcs_folding                 = "Chiusura";
            mcs_unfolding               = "Apertura";
            mcs_end_time_should_lt_begin = "L\'ora finale deve essere maggiore dell\'ora iniziale.";
            mcs_recording               = "Registrazione";
            mcs_prerecord_interval_range_hint = "L\\’intervallo di pre-rec deve essere meno 6 secondi";
            mcs_snapshot_interval_range_hint = "Intervallo istantanea deve essere 0 o maggiore di 60";
            mcs_not_ready               = "Non pronto";
            mcs_availablesize           = "Dimensione disponibile";
            mcs_reboot                  = "Riavvia";
            mcs_alerter                 = "Avviso";
            mcs_pir                     = "PIR";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "Codificatore";
            mcs_ok                      = "OK";
            mcs_fault                   = "Guasto";
            mcs_sensor_status           = "Stato del sensore";
            mcs_about                   = "Info";
            mcs_reset_now               = "Ripristina subito";
            mcs_reset_later             = "Ripristino in seguito";
            mcs_prompt                  = "Prompt";
            mcs_select                  = "Seleziona";
            mcs_available_netword       = "La rete non è disponibile, configurarla?";
            mcs_request_send            = "Invio richiesta in corso...";
            mcs_blank_device_id         = "L\\’ID del dispositivo non può essere vuoto";
            mcs_blank_username          = "Il nome utente non può essere vuoto";
            mcs_blank_password          = "La password non può essere vuota";
            mcs_exist_user              = "Utente già esistente";
            mcs_invalid_user            = "Utente non valido.";
            mcs_invalid_email_addr      = "Indirizzo e-mail non valido";
            mcs_system_err              = "Errore di sistema";
            mcs_exceed_device           = "Utenti del dispositivo in eccesso.";
            mcs_continue                = "Continua";
            mcs_prompt_exit             = "Desiderate uscire?";
            mcs_device_list             = "Elenco Dispositivi";
            mcs_no_sdcard               = "Nessuna scheda SD";
            mcs_no_hard_disk            = "Nessun Hard Disk";
            mcs_show_more               = "Altro…";
            mcs_shotsnop_exists         = "Foto già esistente";
            mcs_input_nick              = "Inserisci nome del dispositivo";
            mcs_nick_not_empty          = "Il nome del dispositivo non può essere vuoto";
            mcs_input_new_pass          = "Inserisci nuova password";
            mcs_input_new_pass_again    = "Reinserisci nuova password";
            mcs_new_password            = "Nuova password";
            mcs_modify_network_prompt   = "Le modifiche di rete possono causare un guasto alla rete, procedere comunque?";
            mcs_wifi_disable_prompt     = "Disabilita Wi-Fi, continuare?";
            mcs_eth_disable_prompt      = "Disabilita ethernet. Continuare?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "Usa DHCP";
            mcs_manually_set            = "Usa statica";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "DNS primario";
            mcs_client_mode             = "Client";
            mcs_adhoc_mode              = "Adhoc";
            mcs_connect_fail            = "Connessione fallita";
            mcs_dhcp_server             = "Server DHCP";
            mcs_display_text            = "Visulizza testo";
            mcs_repair_prompt_detail    = "La riparazione può causare una perdita di dati. Continuare?";
            mcs_format_prompt_detail    = "La formattazione cancellerà tutti i dati sulla scheda SD. Continuare?";
            mcs_mount_prompt            = "Monta scheda SD. Continuare?";
            mcs_umount_prompt           = "Video e foto non possono essere salvati dopo aver smontato la scheda SD. Continuare?";
            mcs_sdcard_reset            = "Successo. Riavvia per attivare. Continuare?";
            mcs_sdcard_repairing        = "Riparazione, attendi per riavviare";
            mcs_sdcard_formating        = "Formattazione in corso attendere il riavvio";
            mcs_sdcard_umount           = "Smonta";
            mcs_valid                   = "Valido";
            mcs_io                      = "Allarme I/O";
            mcs_input                   = "Ingresso";
            mcs_outinput                = "Uscita";
            mcs_prompt_alert_on         = "Allarme attivo, continuare?";
            mcs_auto_sync_date_time     = "Sincronizzazione automatica";
            mcs_alarm_record            = "Registrazioni di allarme";
            mcs_username                = "Nome utente";
            mcs_re_enter_the_password   = "Reinserisci la password";
            mcs_remember_me             = "Resta connesso";
            mcs_home                    = "Home";
            mcs_install_the_plug        = "Installa plug in";
            mcs_install_the_video_plug  = "Installa plug-in video";
            mcs_install_now             = "Installa adesso";
            mcs_temporarily_installed_use_ordinary_video = "No, installa più tardi";
            mcs_brightness              = "Luminosità";
            mcs_contrast                = "Contrasto";
            mcs_color_saturation        = "Saturazione";
            mcs_sharpness               = "Nitidezza";
            mcs_duration                = "Durata";
            mcs_index                   = "Indice";
            mcs_remark                  = "Nota";
            mcs_media_stream            = "Media";
            mcs_server                  = "Server";
            mcs_media_transfer          = "Trasferimento file multimediali";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "Produttore";
            mcs_model                   = "Modello";
            mcs_plugin_version          = "Versione plug in";
            mcs_network_interface       = "Interfaccia di rete";
            mcs_transfer_protocol       = "Protocollo di trasferimento";
            mcs_year                    = "Anno";
            mcs_month                   = "Mese";
            mcs_day                     = "Giorno";
            mcs_hour                    = "Ora";
            mcs_minute                  = "Minuto";
            mcs_second                  = "Secondo";
            mcs_millisec                = "Millisec";
            mcs_ntp                     = "Server Orario";
            mcs_upload_upgrade          = "Carica aggiornamento";
            mcs_stop                    = "Stop";
            mcs_info_rewind             = "Riavvolgimento";
            mcs_fast_forward            = "FF";
            mcs_previous_frame          = "Fotogramma precedente";
            mcs_next_frame              = "Fotogramma successivo";
            mcs_record_audio            = "Registra Audio";
            mcs_week                    = "Settimana";
            mcs_all                     = "Tutto";
            mcs_id                      = "ID";
            mcs_select_all              = "Seleziona tutto";
            mcs_call                    = "Call";
            mcs_activation              = "Attivazione";
            mcs_caption                 = "Carica file";
            mcs_alarm_device            = "Sensibilità del movimento";
            mcs_not_installed           = "Non installato";
            mcs_join_us_now             = "Iscriviti adesso";
            mcs_reconnect_please_wait   = "Ricollegati, attendere prego";
            mcs_erasing                 = "Cancellazione";
            mcs_writing                 = "Scrittura";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "Prendi la nuova versione";
            mcs_equipment_flip          = "Ribaltato";
            mcs_device_status           = "Stato del dispositivo";
            mcs_audio_setting           = "Impostazione Audio";
            mcs_nick_modify             = "Modifica Nome Camera";
            mcs_ready                   = "Pronto";
            mcs_full                    = "Totale";
            mcs_connecting              = "Connessione";
            mcs_message_buffering       = "Buffer messaggi";
            mcs_upgrade_finish          = "Aggiorna finitura";
            mcs_image                   = "Immagine";
            mcs_bar                     = "Registrazioni";
            mcs_init                    = "Inizializzazione";
            mcs_confirm_new_password    = "Conferma nuova password";
            mcs_continue_switch_wireless_network = "Cambia rete forse a causa di un guasto alla rete. Continuare?";
            mcs_restore_factory_settings_prompt = "Il dispositivo si riavvierà dopo il ripristino. Ripristinare le impostazioni predefinite?";
            mcs_username_does_not_exis  = "Il nome utente non esiste.";
            mcs_username_already_exists = "Nome utente già esistente";
            mcs_successful_whether_login = "Accesso riuscito, accedi adesso?";
            mcs_username_demand         = "6-20 lettere o numeri iniziano con le lettere";
            mcs_the_password_is_empty   = "La password è vuota";
            mcs_password_demand         = "6-20 lettere o numeri iniziano con le lettere";
            mcs_password_empty          = "Reinserisci password";
            mcs_two_password_input_inconsistent = "Le password non corrispondono.";
            mcs_the_user_name_is_empty  = "Il nome utente è vuoto";
            mcs_upgrade_to_the_latest_version = "Passa all\'ultima versione";
            mcs_subnet_mask_wrong_format = "Formato della maschera di rete non valido";
            mcs_upgrade_successful_restart_to_take_effect = "Aggiornamento eseguito correttamente, riavviare il dispositivo.";
            mcs_need_to_restart_the_camera_to_take_effect = "Necessità di riavviare il dispositivo per avere effetto.";
            mcs_not_allowed_close_two_network_cards = "Ethernet e Wi-Fi non possono essere disattivatisimultaneamente";
            mcs_modified_successfully   = "Modificato con successo!";
            mcs_connection_successfully = "Connesso";
            mcs_connection_is_interrupted = "Connessione persa";
            mcs_devices_in_the_account_overrun = "Superamento dei dispositivi nel conto";
            mcs_format_error            = "Errore formato";
            mcs_change                  = "Cambia";
            mcs_refresh                 = "Aggiorna";
            mcs_connect                 = "Connetti";
            mcs_upgrade                 = "Aggiorna";
            mcs_activate                = "Attiva";
            mcs_filter                  = "Filtro";
            mcs_reset                   = "Reset";
            mcs_prompt_alert_off        = "Allarme OFF, continuare?";
            mcs_invalid_server          = "Server orario non valido";
            mcs_upgrade_prompt          = "Aggiorna software dispositivo. Continuare?";
            mcs_restart_prompt          = "Riavvia dispositivo, continuare?";
            mcs_repeat                  = "Ripetere";
            mcs_scheduled_one           = "Programma 1";
            mcs_scheduled_two           = "Programma 2";
            mcs_scheduled_three         = "Programma 3";
            mcs_scheduled_four          = "Programma 4";
            mcs_more                    = "Altro";
            mcs_leave                   = "Release da caricare altro";
            mcs_qrcode_scan             = "Esegui scansione del codice QR";
            mcs_inserted                = "Inserito";
            mcs_removed                 = "Rimosso";
            mcs_upgrade_init            = "Avvia Aggiornamento";
            mcs_upgrade_download        = "Scarica Aggiornamento";
            mcs_check                   = "Controllo";
            mcs_audio_encoder_config    = "Codec audio";
            mcs_video_codec             = "Codec video";
            mcs_download                = "Download";
            mcs_client_download         = "Scarica client";
            mcs_for_more_clarity_smooth_video_experience = "Per maggiore chiarezza, l\'esperienza di fluidità dei video";
            mcs_network                 = "Rete";
            mcs_mobile_client_download  = "Scarica client mobile";
            mcs_readonly                = "Sola lettura";
            mcs_please_exit_and_relogin = "Si prega di uscire e di ri-accedere";
            mcs_add_device_failed       = "Aggiungi dispositivo fallito";
            mcs_set_password            = "Imposta password";
            mcs_7x24_hours              = "24/7";
            mcs_mtalt                   = "%@ : Allarme movimento";
            mcs_ioalt                   = "%@ : Allarme I/O";
            mcs_time_zone               = "Fuso orario";
            mcs_select_time             = "Seleziona l\'orario";
            mcs_now                     = "Ora";
            mcs_mipc_have_alert_notification = "Notifica degli allarmi maxCam";
            mcs_notification_center     = "Centro di notifica";
            mcs_sound                   = "Suono";
            mcs_vibration               = "Vibration";
            mcs_clear_cache             = "Elimina cache";
            mcs_clear_cache_hint        = "Vuoi cancellare la cache?";
            mcs_successfully_cleared_cache = "La cache eliminata con successo";
            mcs_app_except_exit_hint    = "Spiacenti, l\'applicazione ha rilevato un\'eccezione e uscirà";
            mcs_rate_us                 = "Dacci un voto";
            mcs_password_too_simple_hint = "La password è troppo semplice, cambiarla per migliorare la sicurezza.";
            mcs_check_for_new_version   = "Controllare la nuova versione.";
            mcs_contact_us              = "Contattaci";
            mcs_buffer_time             = "Tempo buffer";
            mcs_default                 = "Default";
            mcs_alarmed_devices         = "Dispositivi allarmati";
            mcs_aec                     = "Cancellazione eco";
            mcs_permission_denied       = "Nessuna autorizzazione";
            mcs_full_screen             = "Schermo Intero";
            mcs_forgot_your_password    = "Password dimenticata";
            mcs_your_email              = "La vostra email";
            mcs_sign_up_confirmation    = "Una email di conferma è stata inviata al vostro indirizzo di posta elettronica. Cliccare sul link per attivare il vostro account..";
            mcs_recovery_prompt         = "Inserire il vostro indirizzo e-mail (nome utente) di seguito, vi invieremo una e-mail con le istruzioni su come reimpostare la password.";
            mcs_password_reset_confirmation = "Seguire le istruzioni della mail inviata all\'indirizzo di posta elettronica per reimpostare la password.";
            mcs_recovery_fail_no_mail   = "Recupero della password fallito, senza e-mail collegata a questo conto.";
            mcs_recovery_fail_invalid_link = "Recupero della password fallito, si prega di seguire le istruzioni nella email di recupero..";
            mcs_recovery_ok_login       = "Recupero password riuscito. Accedi subito";
            mcs_active_ok_login         = "Attivazione del conto riuscita. Accedi subito.";
            mcs_active_fail_invalid_link = "Attivazione account fallita. Riprova.";
            mcs_login_fail_inactive     = "Conto non attivo. Si prega di seguire le istruzioni della e-mail attiva per attivare il nuovo conto.";
            mcs_sign_up_again           = "Riaccedi";
            mcs_press_start_talk        = "Premi per parlare";
            mcs_release_stop_talk       = "Rilascia per fermare";
            mcs_delete_device           = "Elimina";
            mcs_success_removed_equipment = "Eliminazione dispositivo riuscita";
            mcs_remove_equipment_failure = "Rimuovi guasto apparecchiatura";
            mcs_device_busy             = "Ora il dispositivo è occupato";
            mcs_keep_testing            = "Continuare la prova";
            mcs_notify_tone             = "Suoneria di notifica";
            mcs_float_video             = "Abilita video mobile";
            mcs_float_position          = "Posizione del video mobile";
            mcs_video_resolution        = "Risoluzione del video";
            mcs_float_resolution        = "Risoluzione del video mobile";
            mcs_top_left                = "In alto a sinistra.";
            mcs_top_right               = "In alto a destra";
            mcs_bottom_left             = "In basso a sinistra.";
            mcs_bottom_right            = "In basso a destra";
            mcs_action_next             = "Successivo";
            mcs_action_cancel           = "Annulla";
            mcs_action_retry            = "Riprova";
            mcs_action_add              = "Aggiungi";
            mcs_is_add                  = "Se aggiungere";
            mcs_action_apply            = "Applica";
            mcs_action_config           = "Config";
            mcs_action_skip             = "Salta";
            mcs_action_ok               = "OK";
            mcs_action_add_device       = "Aggiungi dispositivo";
            mcs_action_modify_password  = "Modifica password";
            mcs_action_config_wifi      = "Configura Wi-Fi";
            mcs_state_connect_device    = "Connessione con il dispositivo";
            mcs_state_connect_device_fail = "Connessione con il dispositivo fallita";
            mcs_state_wait_device_online = "In attesa che il dispositivo sia on-lin";
            mcs_state_device_online     = "Online";
            mcs_state_success           = "Successo";
            mcs_fail                    = "Fallito";
            mcs_delete_success          = "Cancella il successo";
            mcs_state_add_device_success = "Aggiunta dispositivo riuscita";
            mcs_state_add_device_fail   = "Aggiunta dispositivo fallita";
            mcs_state_modify_pass_success = "Modifica password riuscita";
            mcs_state_modify_pass_fail  = "Modifica password fallita";
            mcs_state_config_wifi_success = "Impostazione Wi-Fi riuscita";
            mcs_state_config_wifi_fail  = "Connessione fallita";
            mcs_state_connecting_to     = "Connessione a:";
            mcs_network_connect_type    = "Il dispositivo non è in linea, accertarsi che il dispositivo sia acceso, quindi scegliere il tipo di connessione di rete::";
            mcs_prompt_modify_passwd    = "Per motivi di sicurezza, modificare la password.The nuova password dispositivo predefinito non deve essere inferiore a sei caratteri.";
            mcs_prompt_config_wifi      = "Il vostro dispositivo non è ancora collegato alla rete Wi-Fi, configurare il vostro Wi-Fi.";
            mcs_step1_check_connect     = "Fase 1: collegare la videocamera al vostro router con il cavo.";
            mcs_first_step_ethernet_connect = "Fase 1: collegare un\'estremità di un cavo di rete per collegarsi al router e l\'altra estremità alla porta di rete del dispositivo di accesso.";
            mcs_step2_check_connect     = "Fase 2: accendi la videocamera";
            mcs_second_step_ethernet_connect = "Fase 2: accendi il dispositivo..";
            mcs_hint_check_network      = "Nota: la videocamera impiega circa 50 secondi per avviarsi. Il LED lampeggerà in verde per 3 volte ogni 3 secondi dopo l\'avvio, il che significa che la videocamera è online. La procedura guidata passerà automaticamente alla fase successiva..";
            mcs_the_end                 = "Fine";
            mcs_hint_password_expired   = "La password è scaduta, aggiungere nuovamente il dispositivo";
            mcs_hint_remove_ethernet    = "Nota: il Wi-Fi funziona correttamente, è possibile staccare il cavo adesso.";
            mcs_gateway_format_incorrect = "Porta l\'indirizzo formato non corretta";
            mcs_dns_format_incorrect    = "Formato indirizzo DNS non corretto";
            mcs_subnet_mask_format_incorrect = "Maschera di Rete in formato non corretta.";
            mcs_ip_format_incorrect     = "Formato indirizzo IP non corretto";
            mcs_login_sucess            = "Accesso riuscito";
            mcs_donot_remind            = "Non ricordare";
            mcs_clear_cache_signout_hint = "Si dovrebbe accedere nuovamente dopo aver cancellato la cache. Continuare?";
            mcs_devlist_adddev_hint     = "Clicca qui per aggiungere il dispositivo";
            mcs_devlist_menu_hint       = "Fare clic qui per impostare la risoluzione.";
            mcs_update_failed           = "Aggiornamento fallito";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "Locale";
            mcs_set_npapi               = "Se il plugin è stato installato, si prega di visitare \'chrome://flags/#enable-npapi\', enable NPAPI,, ";
            mcs_set_win32k              = "visitare \'chrome://flags/#enable-win32k-renderer-lockdown\', disabled win32k renderer lockdown,";
            mcs_restart_browser         = "Riavvia il browser";
            mcs_download_location       = "Percorso di Download";
            mcs_Networking_mode         = "Modalità di Rete";
            mcs_wifi_intelligent_configuration = "Connessione Wi-Fi";
            mcs_ethernet_configuration  = "Connessione Ethernet";
            mcs_wifi_connect            = "Connessione";
            mcs_hard_disk               = "Hard Disk";
            mcs_wifi_is_connection      = "Connessione in corso, attendere prego.....";
            mcs_wifi_intelligent_configuration_setup_ailure = "Configurazione WiFi fallita";
            mcs_box_list                = "Casella di riepilogo";
            mcs_repair_disk_prompt      = "La riparazione del disco potrebbe causare la perdita di alcuni dati, continuare?";
            mcs_format_disk_prompt      = "La formattazione del disco cancellerà tutti i dati, continuare?";
            mcs_scheduled_alerting      = "Programma Allarmi";
            mcs_scheduled_alerting_one  = "Programma 1";
            mcs_scheduled_alerting_two  = "Programma 2";
            mcs_scheduled_alerting_three = "Programma 3";
            mcs_scheduled_alerting_four = "Programma 4";
            mcs_wifi_config_cancle      = "Cancellazione config Wi-Fi";
            mcs_wifi_config_prepare     = "La configurazione a";
            mcs_wifi_config_first       = "Dispositivi, telefoni cellulari e router tenuti ad una distanza di 1 m";
            mcs_wifi_config_second      = "Durante la configurazione del Wi-Fi, il dispositivo non può essere collegato al cavo di rete";
            mcs_wifi_config_third       = "Tener premuto il tasto RESET per un secondo e poi rilasciarlo";
            mcs_wifi_config_success     = "Configurazione riuscita";
            mcs_wifi_config_failure     = "Configurazione fallita";
            mcs_failure_prompt          = "Riprova o ricontrolla se è stata inserita correttamente la password Wi-Fi";
            mcs_display_password        = "Mostra Password";
            mcs_action_smart_config_wifi = "Assistente di configurazione";
            mcs_wifi_invalid            = "Si prega di connettersi al Wi-Fi prima con il vostro cellulare";
            mcs_phone_not_connect_wifi  = "La rete Wi-Fi non è collegata";
            mcs_prompt_check_connection = "La videocamera non è online, si prega di controllare il collegamento in linea della videocamera";
            mcs_wifi_cfg_ready          = "Pronto";
            mcs_reset_complete          = "Il reset è completo";
            mcs_how_to_restore_factory_settings = "Come ripristinare le impostazioni di fabbrica: utilizzare il pin di RESET premendo nel foro della parte inferiore della videocamera per più di 10 secondi";
            mcs_forgetpass_action_wizard = "Per favore, lungo Il buco in Base alle attrezzature di riduzione di 10 secondi dopo il rilascio, Avete sentito La Voce per \"attrezzature di ripristinare Le impostazioni di fabbrica\".";
            mcs_prompt_check_device_connection = "Il vostro dispositivo non online, si prega di controllare il collegamento in linea del dispositivo.";
            mcs_prompt_select_device_connection = "IL tuo dispositivo DI SELEZIONE in modo non in Linea, per favore";
            mcs_input_wifi_name         = "Immettere il nome del file WiFi";
            mcs_action_previous         = "Precedente";
            mcs_io_alert_range_hint     = "Il tempo di allarme IO dovrebbe essere meno di 60 secondi";
            mcs_io_alert_time           = "Tempo di allarme IO";
            mcs_smart                   = "intelligente";
            mcs_plan                    = "piano";
            mcs_mute                    = "muto";
            mcs_wind_speed              = "velocità del vento";
            mcs_one                     = "Un marcia";
            mcs_two                     = "Due marcei";
            mcs_three                   = "Tre marce";
            mcs_purify_mode             = "purifica modalità";
            mcs_video_list              = "Lista Video";
            mcs_wifi_cfg_restore_factory_settings = "Tenere il cellulare vicino al dispositivo, se il dispositivo è configurato Wi-Fi, premere RESET per un secondo e poi rilasciare, il dispositivo ripristinerà le impostazioni di fabbrica e si riavvierà automaticamente.";
            mcs_mask_settings           = "impostazioni della maschera";
            mcs_notification_settings   = "Impostazioni delle notifiche";
            mcs_alarm_settings          = "Impostazioni degli allarmi";
            mcs_motion_detection        = "Rilevamento movimento";
            mcs_io_alarm                = "Allarme I/O";
            mcs_connect_status          = "Stato connessione";
            mcs_motion_notification     = "Movimento e notifica";
            mcs_device_connected        = "Il dispositivo è connesso";
            mcs_start_spray             = "Iniziare a spruzzare?";
            mcs_available_network       = "Rete non disponibile, controlla rete";
            mcs_select_wifi_wizard      = "Si prega di selezionare la rete Wi-Fi in primo luogo";
            mcs_input_wifi_password     = "Inserisci password Wi-Fi";
            mcs_device_admin_password   = "Password amministratore dispositivo";
            mcs_device_guest_password   = "Password ospite dispositivo";
            mcs_user_admin_password     = "Password amministratore utente";
            mcs_user_guest_password     = "Password ospite utente";
            mcs_save_network_set        = "Salva rete impostata e password";
            mcs_nickname_not_set        = "Il nickname videocamera non è impostato";
            mcs_current_wifi            = "Wi-Fi corrente";
            mcs_current_password_strength = "L\'attuale robustezza della password";
            mcs_new_password_strength   = "Nuova robustezza della password";
            mcs_needs_to_open_the_DHCP  = "Il vostro router ha bisogno di aprire la funzione DHCP (ottenere automaticamente IP), se il tentativo non ha successo, si prega di contattare l\'amministratore.";
            mcs_picture                 = "Immagine";
            mcs_quality                 = "Qualità";
            mcs_size                    = "Dimensioni";
            mcs_guest_login             = "Accesso ospite";
            mcs_audio_and_video         = "Audio / video";
            mcs_volume                  = "Volume";
            mcs_smooth                  = "Fluido";
            mcs_clear                   = "Trasparente";
            mcs_handsfree               = "HF";
            mcs_headphone               = "Cuffia";
            mcs_my                      = "Account";
            mcs_customer_service        = "Servizio Clienti";
            mcs_firefox_flash_uninstall = "Il tuo flash plugin non è disponibile, per la soluzione consultare https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "Plugin";
            mcs_plug_load               = "Carica plugin";
            mcs_plug_load_refuse        = "Non caricare plugin";
            mcs_plug_load_auto          = "Automatico";
            mcs_option                  = "Opzioni";
            mcs_option_ok               = "Determina";
            mcs_voice_call_fails        = "Chiamata vocale fallita, controllare la rete";
            mcs_umounted_prompt         = "Se smontare?";
            mcs_mounted_prompt          = "Se montare?";
            mcs_format_prompt           = "Se formattare?";
            mcs_repair_prompt           = "Se riparare?";
            mcs_signup_prompt           = "Nuovo qui?";
            mcs_wifi_connect_sucess_prompt = "Nota: normale attività Wi-Fi, è possibile scollegare la rete ora";
            mcs_manual_input_prompt     = "Inserimento manuale dell\'ID dispositivo";
            mcs_qrscan_prompt           = "Questa applicazione non è ancora autorizzata ad accedere alla tua camera, puoi trovare l\'App Vimtag sulle impostazioni dell\'iPhoNon avete ancora permesso a questa applicazione di accedere alla vostra videocamera e potete trovare l\'applicazione denominata \'Vimtag\' nella funzione iPhone \'impostazione\" - \"privacy\" - \"videocamera\".\'";
            mcs_select_network_style    = "Seleziona modalità di connessione di rete";
            mcs_push                    = "Comunicazioni";
            mcs_connect_power_prompt    = "Nota: il dispositivo non è in linea, assicurarsi che l\'alimentazione sia collegata";
            mcs_fail_microphone         = "Impossibile accedere al microfono.";
            mcs_microphone_prompt       = "Non bisogna consentire a questa applicazione di accedere al microfono, nella funzione \'iPhone \"impostata\" - \'privacy\' - \'microfono\', trova il nome dell\'applicazione \'Vimtag\' da modificare";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "HD";
            mcs_standard_clear          = "Standard";
            mcs_fluent_clear            = "Fluido";
            mcs_deleting                = "In eliminazione…";
            mcs_event                   = "Evento";
            mcs_one_hour                = "1 Ora";
            mcs_half_hour               = "30 min";
            mcs_five_min                = "5 min";
            mcs_category                = "Categoria";
            mcs_time_length             = "Durata";
            mcs_new                     = "New";
            mcs_week_setting_prompt     = "L\'impostazione della settimana non può essere vuota";
            mcs_time_setting_prompt     = "L\'impostazione dell\'ora non può essere vuota";
            mcs_today                   = "Oggi";
            mcs_wifi_password           = "Password Wi-Fi";
            mcs_register_prompt         = "Effettuare innanzitutto la registrazione del conto";
            mcs_click_login             = "Clicca qui per effettuare il l’accesso";
            mcs_not_login_prompt        = "Non hai effettuato il login, si prega di cliccare qui per accedere!";
            mcs_product_presentation    = "Home";
            mcs_help_feedback           = "FAQ";
            mcs_help_information        = "FAQ";
            mcs_feedback                = "Commenti";
            mcs_feedback_des            = "Grazie all\'uso di App con noi, CI ha dato il tuo Prezioso parere";
            mcs_feedback_praise         = "Di Lodi";
            mcs_feedback_title_prompt   = "Il titolo di Feedback";
            mcs_feedback_title          = "Inserisci un titolo (18 Parole o meno)";
            mcs_feedback_type_prompt    = "IL tipo di problema";
            mcs_feedback_please_select  = "Per favore, La scelta del tipo di";
            mcs_feedback_select_option1 = "I problemi di interfaccia";
            mcs_feedback_select_option2 = "La telecamera";
            mcs_feedback_select_option9 = "Altri problemi";
            mcs_feedback_dec_prompt     = "In PARTICOLARE la descrizione";
            mcs_feedback_dec            = "Per favore, inserisci il tuo parere";
            mcs_feedback_upload_photo   = "Caricare le Foto";
            mcs_preview_pic             = "Anteprima";
            mcs_Album                   = "Seleziona da Album";
            mcs_Photograph              = "fotografia";
            mcs_camera_unavailable      = "Non disponibile con la fotocamera";
            mcs_feedback_submit         = "La presentazione di";
            mcs_feedback_title_alert    = "Il titolo non è conforme alle regole";
            mcs_feedback_type_alert     = "Per favore, scegliere il Giusto tipo di";
            mcs_feedback_dec_alert      = "Per favore, inserisci il tuo parere";
            mcs_feedback_submit_success = "Presentato con successo";
            mcs_feedback_submit_fail    = "La presentazione di un fallimento";
            mcs_connect_wifi_prompt     = "Connessione Wi-Fi";
            mcs_cloud                   = "Cloud";
            mcs_demo                    = "demo";
            mcs_shortest                = "Più breve";
            mcs_no_history              = "Nessuno storico";
            mcs_download_pc_client      = "Cliccare per scaricare il client PC";
            mcs_accounts_bind_email_exist = "L\'account è stato legato alla casella di posta";
            mcs_accounts_bind_email_busy = "La casella di posta è stata legata al conto";
            mcs_systemupdatetip_noversionnodetail = "Prendi la nuova versione per l\'aggiornamento, ma nessun dettaglio è descritto";
            mcs_systemupdatetip_nodetail = "nessun dettaglio descritto";
            mcs_systemupdatetip_updatefrom = "La vostra versione attuale";
            mcs_systemupdatetip_updateto = "Possibilità di aggiornare a";
            mcs_systemupdatetip_sureforupdate = "sicuri di questo aggiornamento?";
            mcs_systemupdatetip_updatecontent = "dettaglio per questo aggiornamento";
            mcs_operate_prompt          = "Si prega di operare secondo lo schema";
            mcs_operation_prompt        = "Prompt operativo";
            mcs_qrcode_prompt_content   = "Usa la videocamera del dispositivo per la scansione del codice qr mobile";
            mcs_qrcode_camera_distance  = "Codice Qr con la videocamera ad una distanza di 12 ~ 14 cm";
            mcs_planvideo_datewizard    = "Si prega di impostare la data";
            mcs_planvideo_timewizard    = "Si prega di impostare l\'ora";
            mcs_planvideo_wizard        = "Si prega di impostare l\'ora e la data";
            mcs_email_unbind            = "Account di posta elettronica non vincolante";
            mcs_email_unmatch           = "Mancata corrispondenza della casella di posta";
            mcs_email_inactive          = "L\'e-mail non è attivata";
            mcs_email_binded            = "L\'e-mail è stata vincolata";
            mcs_user_binded_bymail      = "L\'utente è stato vincolato";
            mcs_bind_email_fail         = "Vincolo casella di posta fallito";
            mcs_diagnosis               = "Diagnosi";
            mcs_delay                   = "Ritardo";
            mcs_packet_loss_rate        = "Frequenza perdita di pacchetti";
            mcs_timezone_IDL            = "Linea data internazionale";
            mcs_timezone_China          = "Cina";
            mcs_timezone_Midway         = "Isole Midway";
            mcs_timezone_Niue           = "Isola di Niue";
            mcs_timezone_Samoa          = "Samoa americane";
            mcs_timezone_Aleutian       = "Isole Aleutine";
            mcs_timezone_Hawaii         = "Isole Hawaii";
            mcs_timezone_Alaska         = "Alaska";
            mcs_timezone_PSTUSCanada    = "PST (USA e Canada)";
            mcs_timezone_Arizona        = "Arizona";
            mcs_timezone_MSTUSCanada    = "Ora standard sulle Montagne Rocciose (Stati Uniti e Canada)";
            mcs_timezone_CSTUSCanada    = "Ora standard della \"zona centrale\" (Stati Uniti e Canada)";
            mcs_timezone_ESTUSCanada    = "Ora standard orientale (Stati Uniti e Canada)";
            mcs_timezone_ASTCanada      = "AST(Canada)";
            mcs_timezone_Newfoundland   = "Terranova";
            mcs_timezone_Brasilia       = "Brasilia";
            mcs_timezone_BuenosAires    = "Buenos Aires";
            mcs_timezone_Santiago       = "Santiago";
            mcs_timezone_Noronha        = "Noronha";
            mcs_timezone_SouthGeorgia   = "Georgia del Sud";
            mcs_timezone_Azores         = "Azzorre";
            mcs_timezone_CapeVerde      = "capo Verde";
            mcs_timezone_London         = "Londra";
            mcs_timezone_Lisbon         = "Lisbona";
            mcs_timezone_Dublin         = "Dublino";
            mcs_timezone_Berlin         = "Berlino";
            mcs_timezone_Amsterdam      = "Amsterdam";
            mcs_timezone_Brussels       = "Bruxelles";
            mcs_timezone_Budapest       = "Budapest";
            mcs_timezone_Madrid         = "Madrid";
            mcs_timezone_Paris          = "Parigi";
            mcs_timezone_Rome           = "Roma";
            mcs_timezone_Sarajevo       = "Sarajevo";
            mcs_timezone_Cairo          = "Cairo";
            mcs_timezone_Amman          = "Amman";
            mcs_timezone_Beirut         = "Beirut";
            mcs_timezone_Istanbul       = "Istanbul";
            mcs_timezone_Jerusalem      = "Gerusalemme";
            mcs_timezone_Athens         = "Atene";
            mcs_timezone_Baghdad        = "Baghdad";
            mcs_timezone_Riyadh         = "Riad";
            mcs_timezone_Qatar          = "Qatar";
            mcs_timezone_Moscow         = "Mosca";
            mcs_timezone_Tehran         = "Teheran";
            mcs_timezone_Baku           = "Baku";
            mcs_timezone_Dubai          = "Dubai";
            mcs_timezone_Tbilisi        = "Tbilisi";
            mcs_timezone_Kabul          = "Kabul";
            mcs_timezone_Karachi        = "Karachi";
            mcs_timezone_Yekaterinburg  = "Yekaterinburg";
            mcs_timezone_Maldives       = "Maldive";
            mcs_timezone_Calcutta       = "calcutta";
            mcs_timezone_Colombo        = "Colombo";
            mcs_timezone_Katmandu       = "Katmandu";
            mcs_timezone_Almaty         = "Almaty";
            mcs_timezone_Dhaka          = "Dhaka";
            mcs_timezone_Omsk           = "Omsk";
            mcs_timezone_Thimbu         = "Thimphu";
            mcs_timezone_Rangoon        = "Rangoon";
            mcs_timezone_Bangkok        = "Bangkok";
            mcs_timezone_Jakarta        = "Giacarta";
            mcs_timezone_Vientiane      = "Vientiane";
            mcs_timezone_Harbin         = "Harbin";
            mcs_timezone_Shanghai       = "Shanghai";
            mcs_timezone_Hongkong       = "Hong Kong";
            mcs_timezone_Singapore      = "Singapore";
            mcs_timezone_Taipei         = "Taipei";
            mcs_timezone_Ulaanbaatar    = "Ulan Bator";
            mcs_timezone_Perth          = "Perth";
            mcs_timezone_Seoul          = "Seoul";
            mcs_timezone_Tokyo          = "Tokyo";
            mcs_timezone_Darwin         = "Darwin";
            mcs_timezone_Magadan        = "Magadan";
            mcs_timezone_Vladivostok    = "Vladivostok";
            mcs_timezone_Guam           = "Guam";
            mcs_timezone_Sydney         = "Sydney";
            mcs_timezone_Canberra       = "Canberra";
            mcs_timezone_Melbourne      = "Melbourne";
            mcs_timezone_Queensland     = "Queensland";
            mcs_timezone_LordHowe       = "Lord Howe";
            mcs_timezone_Guadalcanal    = "Guadalcanal";
            mcs_timezone_Fiji           = "Isole Figi";
            mcs_timezone_Auckland       = "Auckland";
            mcs_timezone_Apia           = "casa";
            mcs_timezone_Fakaofo        = "Fakaofo";
            mcs_timezone_Tongatapu      = "Tongatapu";
            mcs_timezone_Kiritimati     = "Isola Christmas";
            mcs_connect_timeout         = "Timeout di connessione";
            mcs_share                   = "Condividi";
            mcs_share_prompt_start      = "È possibile accedere";
            mcs_share_prompt_end        = "per scaricare il video attraverso il browser su PC o telefono Android nella stessa rete";
            mcs_share_note              = "Si prega di non lasciare la pagina durante il download";
            mcs_video_size              = "Dimensioni";
            mcs_video_duration          = "Durata";
            mcs_my_folder               = "Cartella";
            mcs_account_no_contain      = "L\'account non contiene";
            mcs_edit                    = "Edit";
            mcs_video_number            = " Video";
            mcs_no_local_video          = "Nessuna registrazione";
            mcs_empty_folder            = "La cartella è vuota";
            mcs_no_history_record       = "Non è necessario registrare";
            mcs_no_local_record         = "Il tuo record locale è vuoto";
            mcs_empty_cloud_list_first  = "L\'elenco cloud è vuoto,";
            mcs_empty_cloud_list_second = "Clicca nell\'angolo in alto a sinistra della";
            mcs_empty_cloud_list_third  = "Aggiungi dispositivo";
            mcs_empty_local_list_first  = "L\'elenco locale è vuoto";
            mcs_empty_local_list_second = "prova";
            mcs_empty_local_list_third  = "Tira verso il basso lo schermo";
            mcs_empty_local_list_forth  = "Aggiorna!";
            mcs_empty_local_list_fifth  = "(Ricerca dei dispositivi all\'interno della LAN)";
            mcs_record_prompt           = "È possibile visualizzare il record in \"My->My Folder\"";
            mcs_record_download_prompt  = "È possibile visualizzare il video nel \"Cartelle\"";
            mcs_register_buton_start    = "Nessun account?";
            mcs_register_buton_end      = "Sfiora per registrarsi";
            mcs_product                 = "Prodotto";
            mcs_user_or_password_invalid = "Nome utente o password non validi";
            mcs_share_video_prompt      = "Si utilizza rete non Wi-Fi, si prega di passare alla rete Wi-Fi per condividere di nuovo";
            mcs_download_video_prompt   = "Si utilizza rete non WiFi, il download genererà costi di traffico, continuare?";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "Normale";
            mcs_common_problem          = "Problema comune";
            msc_enter_comment           = "Inserisci i commenti";
            msc_description             = "descrizione";
            mcs_parameter               = "Parametro";
            mcs_help_and_feedback       = "Guida e Feedback";
            mcs_personal_center         = "Centro personale";
            mcs_version                 = "versione";
            mcs_language                = "lingua";
            mcs_new_user                = "Sono un nuovo utente";
            mcs_have_account            = "Conto già esistente";
            mcs_try_it                  = "Provalo";
            mcs_sign_up_now             = "Registrati";
            mcs_input_confirm_password  = "Conferma password";
            mcs_warranty_registration   = "registrazione della garanzia";
            mcs_get_more_cameras        = "ottieni più fotocamere";
            mcs_user_inactive           = "Utente non attivo";
            mcs_format_options          = "Formato";
            mcs_slide_screen            = "Far scorrere lo schermo per regolare l\'angolo di video";
            mcs_zoom_in_screen          = "Impastare lo schermo può ingrandire i dettagli del video";
            mcs_pause                   = "pausa";
            mcs_source                  = "fonte";
            mcs_magnetic                = "magnetico";
            mcs_sos                     = "pulsante di emergenza";
            mcs_input_download_path     = "Scarica il percorso";
            mcs_download_path_name_error = "Scarica il nome del percorso del file può contenere solo lettere (a-z, A-Z) o numerico (0-9)";
            mcs_active                  = "attività";
            mcs_out                     = "lasciare";
            mcs_quiet                   = "tranquillo";
            mcs_scenes                  = "scena";
            mcs_accessory               = "accessorio";
            mcs_quiet_mode              = "modalità silenziosa";
            mcs_active_mode             = "modalità attiva";
            mcs_out_mode                = "Modalità di distanza";
            mcs_add_accessory           = "Aggiungere allegati";
            mcs_accessory_type          = "Tipo di accessori";
            mcs_add_successfully        = "aggiunto con successo";
            mcs_set_scene               = "Gli allegati non hanno ancora fissato la scena , clicca";
            mcs_to_set                  = "per impostare";
            mcs_add_accessory_button    = "Premere il pulsante fino a quando la luce rossa si spegne di nuovo per completare l\'add";
            mcs_auto_monday             = "Lunedì";
            mcs_auto_tuesday            = "Martedì";
            mcs_auto_wednesday          = "Mercoledì";
            mcs_auto_thursday           = "Giovedì";
            mcs_auto_friday             = "Venerdì";
            mcs_auto_saturday           = "Sabato";
            mcs_auto_sunday             = "Domenica";
            mcs_search                  = "ricerca";
            mcs_format_input            = "Formattazione Hard Disk";
            mcs_get_accessory_failed    = "Allegato non è riuscito a ottenere";
            mcs_get_scene_failed        = "Get scenari di errore";
            mcs_search_failed           = "Ricerca fallisce";
            mcs_add_failed              = "Aggiungere non riuscita";
            mcs_ethernet_connect        = "Ethernet";
            mcs_action_click_retry      = "Fare clic su Riprova";
            mcs_wifi_config_failure_detail = "Oppure si può provare";
            mcs_qrcode_connect          = "Codice bidimensionale collegato";
            mcs_close_sound_prompt      = "Open Sound aiuta la connessione Wi-Fi, tenere il telefono vicino all\'altoparlante del microfono della telecamera";
            mcs_qrcode_prompt_title     = "Si prega operazioni mostrate in FIG.";
            mcs_qrcode_prompt_detail    = "Si prega di puntare l\'obiettivo della fotocamera il codice QR esattamente e mantenere la distanza essere 30 cm.";
            mcs_select_wifi_prompt      = "Nessun cavo Ethernet necessaria";
            mcs_select_ethernet_prompt  = "cavo Ethernet necessaria per la configurazione solo";
            mcs_enter_config_mode_prompt = "Si prega di verificare l\'indicatore Wi-Fi è a tre rosso tre raggio verde alternativamente. In tal caso, si prega di fare clic sul pulsante Avanti. In caso contrario, premere il tasto RESET sulla fotocamera. Poi controlla di nuovo l\'indicatore Wi-Fi";
            mcs_no_enter_config_mode    = "Non entrare in modalità di configurazione";
            mcs_record_time             = "La durata della registrazione(in secondi)";
            mcs_stop_search             = "Interrompere la ricerca";
            mcs_smart_wifi_setup        = "l\'installazione di Smart Wifi";
            mcs_ethernet_setup          = "Configurazione Ethernet";
            mcs_wifi_config_restore_start = "1) accendi il dispositivo";
            mcs_wifi_config_restore_end = "2) Premere il foro di reset per un secondo, il dispositivo ripristina e riavvia dopo 60 secondi, poi entrerà automaticamente nella modalità di configurazione";
            mcs_Sense_schedule          = "pianificazione scenario";
            load_succeed                = "Caricamento successo";
            load_fail                   = "Impossibile caricare";
            refresh_succeed             = "aggiornare il successo";
            refresh_fail                = "aggiornamento non riuscito";
            mcs_ensure_dev_power        = "1) accendi il dispositivo";
            all_refresh_complete        = "Tutti i dati vengono aggiornati";
            mcs_synchronize             = "sincrono";
            mcs_synchronize_detail      = "I profili delle seguenti attrezzature e le impostazioni incoerenti , devono essere sincronizzati al lavoro dopo";
            mcs_Sense_Schedule_Set      = "Set pianificazione Scenario";
            mcs_Sence_Schedule_detail   = "Se si attiva la modalità automatica scena, il sistema passa automaticamente in base a scenari di pianificazione di scenario in tempi diversi";
            mcs_Scene_set               = "Profili";
            mcs_Scene_set_detail        = "Se si abilita un profilo , il profilo in base alle impostazioni presentati nelle pagine seguenti";
            mcs_send_message            = "Invia un messaggio";
            mcs_start_recording         = "Avviare la registrazione";
            mcs_start_capture           = "Inizia la cattura";
            mcs_turn_on_video           = "Per uscire dalla modalità di registrazione continua , si prega di aprire il video";
            mcs_search_press_button     = "Premere il pulsante Indietro per 1 secondo dopo il rilascio, l\'indicatore lampeggia lentamente";
            mcs_add_fail1               = "In breve è stato cancellato a causa di aggiunta di attrezzature, per favore, cerca di nuovo di aggiungere, clicca su Poesia";
            mcs_add_fail2               = "L\'aggiunta di Nuovi dispositivi di Fallimento, per favore, cerca di nuovo di aggiungere, clicca su Poesia.";
            mcs_recording_duration      = "La durata della registrazione ( in secondi )";
            mcs_settings_unsaved        = "Le impostazioni non sono state salvate";
            mcs_want_save               = "Sarà salvare ?";
            mcs_camera                  = "videocamera";
            mcs_router                  = "Router";
            mcs_start_up                = "inizio";
            mcs_cancle_add              = "Attrezzatura è stato annullato a causa della breve premere Aggiungi";
            mcs_visit_photo_fail        = "Fallito l\'accesso Album";
            mcs_camera_cell             = "La telecamera";
            mcs_myphoto                 = "La Mia Foto";
            mcs_select_photo            = "La scelta di Album";
            mcs_app_new_version         = "La Nuova versione";
            mcs_update_new_version      = "Aggiornamento Ora";
            mcs_app_new_version_prompt  = "Applicazione ha una nuova versione, selezionare Aggiorna Scarica Aggiorna Ora";
            download_failed             = "download fallito";
            mcs_connect_server_prompt   = "WiFi è collegato, è collegato al server";
            mcs_local_search            = "Ricerca locale";
            mcs_choose_device_type      = "scegliere il tipo di dispositivo";
            mcs_wifi_state              = "Nota: IL Wi - Fi di lavoro normale, Ora Puoi staccare il Cavo (Staccato il Cavo può verificarsi a seguito di attrezzature non sulla situazione, per favore aspettare vent\'Anni sarà automaticamente on - line)";
            mcs_sweep                   = "rasa";
            mcs_wifi_config_tip         = "UN Router Wi - FI, un impianto, di evitare Guai";
            mcs_ethernet_config_tip     = "Non è conveniente inserire il Cavo Router";
            mcs_ethernet_connect_step_one = "Primo Passo: garantire un approvvigionamento di energia in linea con la presa Elettrica 2 1";
            mcs_ethernet_connect_step_two = "IL secondo Passo attraverso La Rete via Cavo di collegamento Router: Rete 4 e la Bocca di Porto";
            mcs_sweep_qrcode_tip        = "La telecamera di fronte al telefono Due codici di scansione di mantenere a distanza di circa 30 cm,";
            mcs_sound_config_tip        = "IL suono è utile per connessione Wi - Fi.(possono anche scegliere di chiusura)";
            mcs_sosalt                  = "%@ : Allarme pulsante di emergenza(%@)";
            mcs_dooralt                 = "%@ : Allarme magnetico(%@)";
            mcs_wifi_config_restore     = "Per favore, Prema Reset secondi dopo il rilascio di \"chiavi di entrare in modalità di assegnazione di attrezzature, il Wi - Fi\".";
            mcs_voice_remind_heard      = "Ha sentito una voce";
            mcs_netWork_prompt          = "Rete di notifica";
            mcs_con_netWork             = "Rete attualmente in uso per la connessione dati, si può consumare un sacco di traffico, se le impostazioni di interfaccia di rete impostate per saltare";
            mcs_no_netWork              = "Attualmente nessuna connessione di rete, se il salto per impostare l\'interfaccia delle impostazioni di rete";
            mcs_exception_des           = "La vostra applicazione uscita ultima eccezione, se inviare un rapporto di errore al server";
            mcs_exception_prompt        = "Tip anormale";
            mcs_erro_diagnosis          = "Risoluzione dei problemi";
            mcs_erro_log_des            = "App recente record di log degli errori, selezionare il pulsante Invia per caricare un registro degli errori, grazie per la vostra collaborazione!";
            mcs_is_submitting           = "Essere presentato";
            mcs_firmware_version        = "Versione del firmware";
            mcs_device_assembly         = "1.linea elettrica  2.porta di alimentazione  3.porta Ethernet  4.cavo  5.adattatore";
            mcs_forgetpass_action_wizard_old = "Premere il pulsante di reset per un secondo, il dispositivo ripristinare le impostazioni di fabbrica e 60 secondi dopo il riavvio, il recupero della password di amministrazione";
            mcs_device_assembly_mipc    = "1.linea elettrica  2.porta di alimentazione  3.porta Ethernet  4.cavo";
            mcs_device_connect_power_prompt = "IL dispositivo non online, per favore, come mostrato nella Figura sarà il tuo dispositivo di accesso alla Rete Elettrica, è stato Visto spesso il potere della Luce Rosso brillante, di apparecchi di avviamento.";
            mcs_lights_sound            = "Ha visto le Luci";
            mcs_connect_power           = "Collegati con la fornitura di energia";
            mcs_search_magnetic         = "Come si vede, la porta magnetica combinata e premere il pulsante laterale per 1 secondo dopo il rilascio, l\'indicatore lampeggia lentamente";
            mcs_add_magnetic            = "Dopo aver aperto la porta del sensore di fondere , vedere l\'indicatore flash disattivato Completata l\'aggiunta";
            mcs_already_downloaded      = "Ha scaricato";
            mcs_my_order                = "IL Mio Ordine.";
            mcs_auto_mode               = "La modalità automatica";
            mcs_new_small               = "Piccolo";
            mcs_new_half                = "Metà";
            mcs_new_normal              = "Normal";
            mcs_new_hd                  = "HD";
            mcs_scene_now               = "L\'attuale Scenario";
            mcs_please_install_wechat   = "Per favore, l\'installazione di WeChat";
            mcs_wechat_not_support      = "VI Prego di Non sostenere la versione aggiornata WeChat WeChat";
            mcs_motion_alert            = "Allarme movimento";
            mcs_io_alert                = "Allarme I/O";
            mcs_valid_user_name         = "Primo Passo: inserire il nome utente in modo efficace";
            mcs_binding_mailbox         = "IL secondo Passo: inserire vincolanti nella cassetta della posta";
            mcs_send_mailbox_succuess_prev = "Abbiamo la biografia vincolanti nella cassetta della posta per te ";
            mcs_send_mailbox_succuess_next = " L\'invio di Una lettera di Password E - Mail di ricevere E - Mail, La vostra Attenzione, per favore.";
            mcs_all_image               = "Tutte le Foto.";
            mcs_unavailable_image       = "La Foto non e \'disponibile, scegli Di Nuovo";
            mcs_set_nickname            = "soprannome Impostazione";
            mcs_search_timeout          = "Il tempo di ricerca, fare clic di nuovo Ricerca";
            mcs_screen_size             = "Impostazioni schermo";
            mcs_screen_reset            = "Successo. Riavvia per attivare";
            mcs_wifi_network_prompt     = "Per favore, controlla la connessione Wi - Fi 5ghz se è il Wi - FI, per favore, lascia la telecamera e \'collegata a 2,4 GHz Wi - Fi";
            mcs_fault_diagnosis         = "La diagnosi di Rete";
            mcs_sever_diagnosis         = "IL Server può essere a causa di difetti, che non e \'normale.";
            mcs_select_problem          = "Per favore, problemi DI SELEZIONE";
            mcs_connot_lonin            = "Non possiamo identificarla";
            mcs_connot_play             = "Non si può giocare";
            mcs_add_problems            = "Ulteriori problemi";
            mcs_encounterer_problems    = "Per favore, problemi di Input";
            mcs_diagnostic_network      = "inizio diagnostica";
            mcs_network_diagnostic_prompt = "La diagnosi di entrare in Rete possono aiutarci a risolvere I TUOI problemi, necessari per la diagnosi è lungo circa un PAIO di minuti.";
            mcs_network_diagnostic      = "Risoluzione dei problemi";
            mcs_connecting_server       = "In collegamento con il Server.";
            mcs_diagnostic_process_prompt = "Processo diagnostico può richiedere diversi minuti, durante la diagnostica non eseguire altre operazioni, ma si può sempre fermare la diagnostica";
            mcs_diagnostic_results      = "I Risultati diagnostici";
            mcs_diagnostic_results_received = "La diagnosi è completa, i risultati diagnostici sono stati ricevuti";
            mcs_diagnostic_results_prompt = "Grazie per aver partecipato a questa diagnosi, risultati diagnostici aiuteranno a risolvere il problema nel più breve tempo possibile";
            mcs_results_no_abnormality  = "I Risultati diagnostici senza Anomalie";
            mcs_no_abnormality_prompt   = "La diagnosi è stata trovata alcuna anomalia. È possibile scegliere la profondità della diagnosi, avviare le capacità di raccolta di registro ci aiuterà a risolvere al meglio il problema riscontrato";
            mcs_continue_diagnosis      = "profondità Diagnosi";
            mcs_diagnosis_connot_sent   = "La diagnosi non è in grado di trasmettere I Risultati";
            mcs_email_sends             = "L\'invio di e - Mail";
            mcs_email_sends_prompt      = "Invia i risultati diagnostici per via e-mail, che vi aiuterà a risolvere il problema nel più breve tempo possibile";
            mcs_diagnosis_send          = "La Trasmissione";
            mcs_diagnosis_email         = "E - Mail";
            mcs_send_successful         = "inviata con successo";
            mcs_diagnosis_type_select_prompt = "Si prega di selezionare il tipo di diagnosi";
            mcs_stop_diagnosis          = "arresto diagnostica";
            mcs_detail_diagnosis_prompt = "Diagnosi procedere, è possibile disattivare la pagina di dispositivo";
            mcs_detail_diagnosis_stop_prompt = "La diagnosi di profondità è in corso, si può sempre interrompere";
            mcs_exit_detail_diagnosis   = "La diagnosi di profondità è in corso, sia per fermare?";
            mcs_network_connection_unavailable = "La connessione di rete non è disponibile";
            mcs_Failed_connect_Internet = "Impossibile connettersi a Internet";
            mcs_connect_internet_note   = "Se avete bisogno di connettersi a Internet, si prega di notare quanto segue:";
            mcs_connect_internet_detail_first = "Controllare le impostazioni della LAN wireless del telefono, per vedere se vi è l\'accesso a un segnale wireless LAN";
            mcs_connect_internet_detail_second = "Controlla se il tuo telefono è dotato di accesso a una rete di telefonia mobile, e il telefono non è stato disattivato";
            mcs_connect_wifi_note       = "Se si ha accesso alla LAN senza fili:";
            mcs_connect_wifi_detail     = "Controllare per vedere se la connessione hotspot wireless LAN ha accesso a Internet, o se l\'hotspot consentire al dispositivo di accedere alla LAN";
            mcs_device_or_phone_time_zone_not_equals_please_select = "Dispositivo corrente fuso orario e il fuso orario del telefono cellulare non è, selezionare il fuso orario corretto";
            mcs_phone_timezone          = "Fuso orario del telefono";
            mcs_timezone_change         = "Modificare il fuso orario";
            mcs_mail_send               = "Messaggio inviato";
            mcs_yes_verif               = "è";
            mcs_no_verif                = "no";
            mcs_camera_found_new_version_y_n_upgrade = "Abbiamo trovato una nuova versione della fotocamera, se l\'aggiornamento?";
            mcs_auto_adapt_split_screen = "ADATTAMENTO";
            mcs_four_split_screen       = "Quattro punti.";
            mcs_nine_split_screen       = "- Nove.";
            mcs_twelve_split_screen     = "Dodici minuti.";
            mcs_not_connection_server   = "Impossibile connettersi al server";
            mcs_more_options            = "Altro";
            mcs_bind_email_prompt       = "Al fine di tenere conto della sicurezza, legare tua casella di posta";
            mcs_login_now               = "Entra ora";
            mcs_device_connect_power    = "1.linea elettrica      2.porta di alimentazione";
            mcs_device_connect_ethernet = "1. La Rete    2.la tv via cavo";
            mcs_device_connect_ethernet_prompt = "IL Cavo è l\'accesso alla Rete di vie di accesso E, dall\'altra Parte, ha visto Luce Verde lampeggiante Rete di porti, collegamenti via Cavo.";
            mcs_pwd_format              = "La Password in formato: 8 A 16 Bit di lunghezza tra I personaggi, digitale, Le Lettere e simboli Speciale contiene almeno tre Tipi di";
            mcs_client_new              = "Il cliente";
            mcs_user_guide              = "IL Manuale dell\'utente";
            mcs_ebitcam_download_describe = "Ebitcam è un Software per il Cloud dei servizi di controllo, con Le nuvole con telecamera di Software, che permette agli Utenti di vedere Video di informazione ovunque e in qualsiasi momento, dobbiamo fornire una Chiara, perfettamente e guardare l\'esperienza, il controllo intelligente che ti Piace la Cura della sua Famiglia, in qualsiasi momento, l\'utente Per scaricare!";
            mcs_mipc_download_describe  = "Mipc è un Software per il Cloud dei servizi di controllo, con Le nuvole con telecamera di Software, che permette agli Utenti di vedere Video di informazione ovunque e in qualsiasi momento, dobbiamo fornire una Chiara, perfettamente e guardare l\'esperienza, il controllo intelligente che ti Piace la Cura della sua Famiglia, in qualsiasi momento, l\'utente Per scaricare!";
            mcs_guide_download          = "Manuale di scaricare";
            mcs_password_admin          = "Gestione delle password";
            mcs_already_read            = "Gestione delle password";
            mcs_privacy_policy          = "La Politica della Privacy";
            mcs_not_agree_privacy_policy = "Non Hai accettato La Politica della Privacy";
            mcs_reload                  = "Ricarica";
            mcs_start_download          = "Scaricare";
            mcs_video_play_fail         = "IL Video di Fallimento";
            mcs_download_app_tips       = "Puoi anche cercare di usare PC Client";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = "IL tipo di dispositivo";
            mcs_connect_device_wifi     = "La telecamera non 5ghz temporaneo supporto Wi - Fi";
            mcs_send_diagnosis_results  = "La diagnosi di trasmettere I Risultati...";
            mcs_local_file              = "IL File locale";
            mcs_local_device            = "Le attrezzature locali";
            mcs_export_sd_data          = "Scheda di Memoria Dati derivati";
            mcs_shaking                 = "La macchina di Serie";
            mcs_outdoor                 = "La macchina di Serie all\'Aperto";
            mcs_card                    = "La macchina di serie di carte";
            mcs_wifi_connection         = "Connessione Wi - Fi";
            mcs_home_mode               = "modalità casa";
            mcs_away_home_mode          = "Modalità LONTANO";
            mcs_auto_switch_mode        = "passare automaticamente";
            mcs_select_scene_mode       = "Scegliere un profilo";
            mcs_7x24_hours_prompt       = "7x24 aperte (h) Registrazione";
            mcs_all_day_recording       = "Video giorno";
            mcs_home_mode_prompt        = "modalità casa:Chiudere tutti i dispositivi di allarme";
            mcs_away_home_mode_prompt   = "Modalità LONTANO:Tutti i dispositivi di allarme aperto";
            mcs_at_home                 = "a casa";
            mcs_away_home               = "fuori";
            mcs_set_timezone_prompt_start = "Il fuso orario è";
            mcs_set_timezone_prompt_end = "Si prega di cambiare la \"Giorno/ora\" nel fuso orario";
            mcs_set_wifi_remind_head    = "I seguenti problemi potrebbe causare il fallimento della telecamera in Rete, raccomanda di evitare";
            mcs_set_wifi_remind_1       = "Controlla se ha Aperto a strofinare La Rete Wi - FI, questa definizione può causare la telecamera non e \'normale in Rete.Puoi chiudere temporaneamente la telecamera Anti - strofinare La Rete Internet, il Router può essere ripresa dopo la Creazione di";
            mcs_set_wifi_remind_2       = "Se la tua Casa è doppia frequenza Router Wi - FI, per favore, controlla se la telecamera è la connessione Wi - FI, per favore 5ghz lascia la telecamera e \'collegata a 2,4 GHz, Wi - Fi";
            mcs_set_wifi_remind_3       = "La telecamera non WPA/WPA2 temporaneamente Il sostegno a livello di Impresa il Wi - FI, per favore, La scelta di altre Wi - Fi";
            mcs_set_wifi_remind_4       = "Se la tua Casa e \'Il Ponte di colmare il Wi - FI, perché le cause possono causare la tua Rete Molto instabile, La proposta non colmare connessione Wi - Fi";
            mcs_set_wifi_remind_5       = "La telecamera ha I requisiti per il Wi - Fi";
            mcs_record_save_to_my_file  = "Video salvato i miei file";
            mcs_view_now                = "Visualizza Ora";
            mcs_search_sos_strat        = "Come mostrato, il pulsante in basso";
            mcs_search_sos_end          = "Un secondo, l\'indicatore dispositivo lampeggia";
            mcs_search_magnetic_start   = "Come si vede, la porta magnetica combinata, premere il pulsante laterale";
            mcs_search_magnetic_end     = "Un secondo, l\'indicatore dispositivo lampeggia";
            mcs_adding                  = "Aggiunta";
            mcs_record_empty_set_sd     = "Inserire una scheda SD in grado di memorizzare la storia di video";
            mcs_video_play_offline      = "Il dispositivo è collegato";
            mcs_video_play_network_fail = "La connessione di rete non riuscita, riprovare più tardi";
            mcs_alert_notify_guide1     = "Operazione di rilevamento del movimento [originale] per migrare verso [allegato], [da] le impostazioni del profilo";
            mcs_alert_notify_guide2     = "Il funzionamento è il seguente:";
            mcs_alert_notify_guide3     = "Selezionare [scena], è necessario attivare la modalità di inserimento, è necessario aprire in modalità disarmare casa; ";
            mcs_alert_notify_guide4     = "Selezionare [Accessori] - [Lista Accessori] - Modalità [Motion Detection] si accende di allarme, video, fotografia, funzione di allarme IO, spegnere la sveglia in modalità di casa, video e altre funzioni.";
            mcs_plan_protect_guide1     = "[Originale] operazione piano di inserimento migrato al [scenario]";
            mcs_plan_protect_guide2     = "Selezionare il [scenario], profili aperti commutazione automatica;";
            mcs_plan_protect_guide3     = "selezionare";
            mcs_plan_protect_guide4     = ", La necessità di periodo di inserimento (ad esempio: Martedì, 7: 00-18: 00) stabilito modalità, dopo OK per salvare e tornare alla scheda Impostazioni;";
            mcs_plan_record_guide       = "Selezionare [Registra], si rivelano funzione di registrazione in modalità.";
            mcs_plan_record_guide1      = "[Programma Registrazione] operazione piano di inserimento migrato al [Registra]";
            mcs_plan_record_guide2      = ", La necessità di registrazione periodo di tempo (ad esempio: Martedì, 7: 00-18: 00) stabilito modalità, dopo OK per salvare e tornare alla scheda Impostazioni;";
            mcs_forgetpass_action_prompt = "Si prega di premere il dispositivo di reset reset foro 10 secondi dopo il rilascio, le luci e le attrezzature per ripristinare le impostazioni di fabbrica a infrarossi";
            mcs_cloud_box               = "Nube Box";
        }/* it */
        else if(lang == "ar")
        {
            mcs_name                    = "اسم";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "اسم";
            mcs_old_nick                = "اللقب";
            mcs_linked                  = "قد تم توصيله بشكل مباشر";
            mcs_sign_in                 = "تسجيل الدخول";
            mcs_back                    = "العودة";
            mcs_will_back               = "سيعود";
            mcs_add                     = "إضافة";
            mcs_add_device              = "إضافة الأجهزة";
            mcs_device_existed          = "الجهاز موجود بالفعل";
            mcs_cancel                  = "إلغاء";
            mcs_exit                    = "الخروج";
            mcs_remember_password       = "تذكر كلمة المرور";
            mcs_password_remembered     = "تذكرت كلمة المرور";
            mcs_sign_ining              = "يتم تسجيل الدخول...";
            mcs_cloud_server            = "خادم السحابة";
            mcs_input_device_id         = "إدخال معرف الجهاز";
            mcs_input_username          = "أدخل اسم المستخدم";
            mcs_input_email_addr        = "ادخل عنوان البريد الإلكتروني";
            mcs_email_address           = "عنوان البريد الإلكتروني";
            mcs_email                   = "صندوق بريد";
            mcs_binding                 = "ملزم";
            mcs_binding_email           = "علبة ملزمة";
            mcs_binding_send_prompt     = "علبة ملزمة";
            mcs_binding_email_prompt    = "علبة ملزمة";
            mcs_input_password          = "أدخل كلمة المرور";
            mcs_access_server_failed    = "الوصول إلى الملقم فشل.";
            mcs_device_offline          = "جهاز غير متصل";
            mcs_invalid_password        = "كلمة المرور غير صحيحة";
            mcs_invalid_dev             = "لا وجود جهاز";
            mcs_login_faided            = "فشل تسجيل الدخول.";
            mcs_invalid_qrcode          = "رمز الأبعاد غير صالح.";
            mcs_please_input_username   = "يرجى إدخال اسم المستخدم الخاص بك!";
            mcs_please_input_password   = "يرجي إدخال كلمة المرور!";
            mcs_qrcode_scan_hint        = "الاحتفاظ مربع في الجزء السفلي من الجهاز الانحياز رمز ثنائي الأبعاد";
            mcs_device_list_empty       = "قائمة الأجهزة تكون فارغة";
            mcs_record_list_is_empty    = "قائمة الفيديو تكون فارغة";
            mcs_password_expired        = "كلمة المرور  كنت غير صحيحة";
            mcs_set_video_size          = "اعداد حجم الفيديو";
            mcs_hd_1280x720             = "عالية الدقة [1280*720]";
            mcs_auto                    = "التلقائيا";
            mcs_normal_640x360          = "العادي [640*360]";
            mcs_half_320x180            = "لصغيرة [320*180]";
            mcs_small_160x90            = "الأصغر [160*90]";
            mcs_play                    = "التشغيل";
            mcs_settings                = "الاعداد";
            mcs_messages                = "الرسائل";
            mcs_alarm                   = "الإنذار";
            mcs_delete                  = "الحذف";
            mcs_delete_camera           = "الحذف ";
            mcs_apply                   = "التطبيق";
            mcs_speed                   = "السرعة";
            mcs_others                  = "الأخري";
            mcs_audio                   = "الصوت";
            mcs_speaker                 = "مكبر الصوت";
            mcs_mic                     = "ميكروفون";
            mcs_power_frequency         = "تردد الطاقة";
            mcs_online_upgrade          = "الترقية على الانترنت";
            mcs_restore_the_factory_settings = "استعادة إعدادات المصنع";
            mcs_restore                 = "الاستعادة";
            mcs_restore_camera          = "جهاز إعادة التشغيل";
            mcs_start_upgrade           = "يمكن تحديث الإصدارات الجديدة";
            mcs_system                  = "النظام";
            mcs_system_settings         = "اعداد النظام";
            mcs_online                  = "الجهاز منتصل الإنترنت";
            mcs_offline                 = "الجهاز غير متواجد ";
            mcs_query                   = "الاستعلام";
            mcs_begin_time              = "وقت البدء";
            mcs_end_time                = "وقت الانتهاء";
            mcs_mode                    = "الوضع";
            mcs_opened                  = "فتح";
            mcs_high                    = "عالية";
            mcs_middle                  = "متوسطة";
            mcs_low                     = "منخفضة";
            mcs_io_alert_input          = "إدخال التنبيه O/I";
            mcs_io_alert_output         = "اخراج التنبيه O/I";
            mcs_normally_open           = "فتح عادة";
            mcs_normally_close          = "أغلق عادة";
            mcs_motion_detection_sensitivity = "حساسية الكشف المحمول";
            mcs_daytime                 = "النهار";
            mcs_night                   = "في الليل";
            mcs_sdcord                  = "SDبطاقة";
            mcs_storage_device          = "أجهزة التخزين";
            mcs_set_mask                = "مجموعة قناع";
            mcs_status                  = "أحوال";
            mcs_capacity                = "السعة";
            mcs_usage                   = "استخدم";
            mcs_format                  = "تنسيق";
            mcs_repair                  = "اصلاح";
            mcs_formating               = "يتم التنسيق";
            mcs_repairing               = "يتم الإصلاح";
            mcs_mounted                 = "تم التنزيل";
            mcs_unmounted               = "تم الإزالة";
            mcs_mount                   = "تنزيل";
            mcs_unmount                 = "إزالة";
            mcs_ethernet                = "الإيثرنت";
            mcs_wifi                    = "واي فاي";
            mcs_enabled                 = "حالة التمكين";
            mcs_mac_address             = "MAC عنوان";
            mcs_network_status          = "حالة الاتصال";
            mcs_wifi_mode               = "وضع لاسلكي";
            mcs_client                  = "وضع العملاء";
            mcs_ap                      = "نقطة ساخنة";
            mcs_start_address           = "عنوان البداية";
            mcs_end_address             = "عنوان الانتهاء";
            mcs_gateway                 = "بواب الإنترنت";
            mcs_select_network          = "اختيار شبكة الاتصال";
            mcs_dhcp_ip                 = "الحصول تلقائيا على IP";
            mcs_dhcp_dns                = "DNS : استخدام DHCP";
            mcs_ip_address              = "عنوان IP";
            mcs_network_mask            = "قناع الشبكة الفرعية";
            mcs_input_secondary_dns     = "إدخال DNS الثانوي";
            mcs_secondary_dns           = "DNS الثانوي";
            mcs_input_dns               = "يرجي ادخال DNS";
            mcs_input_alternate_dns     = "يرجي ادخال DNS الثانوي";
            mcs_input_ip                = "يرجي ادخال عنوان IP";
            mcs_input_gateway           = "يرجي ادخال البوابة";
            mcs_input_network_mask      = "يرجى إدخال قناع الشبكة الفرعية";
            mcs_wifi_list               = "قائمة شبكة الاتصال";
            mcs_display_date            = "عرض التاريخ";
            mcs_date_format             = "تنسيق التاريخ";
            mcs_display_time            = "عرض الوقت";
            mcs_time_format             = "تنسيق الوقت";
            mcs_24_hour                 = "على مدار 24 ساعة";
            mcs_12_hour                 = "12 ساعة";
            mcs_display_weeks           = "عرض الأسابيع";
            mcs_date_time               = "تاريخ / وقت";
            mcs_set_time                = "ضبط الوقت";
            mcs_set_week                = "اعداد الأسبوع";
            mcs_stream                  = "ستريم";
            mcs_encode                  = "نوع الترميز";
            mcs_resolution              = "القرار";
            mcs_frame_fate              = "معدل الإطارات";
            mcs_maximum_bitrate         = "الحد الأقصى من معدل البت";
            mcs_minimum_bitrate         = "الحد الأدني من معدل البت";
            mcs_i_frame_interval        = "فاصل الاطار I";
            mcs_video                   = "فيديو";
            mcs_sampling_rate           = "معدل أخذ العينات (كيلو هرتز)";
            mcs_nickname                = "لقب الجهاز";
            mcs_old_password            = "كلمة المرور القديمة";
            mcs_confirm_password        = "تأكيد كلمة المرور";
            mcs_modify_password         = "تغيير كلمة المرور";
            mcs_password                = "كلمة المرور";
            mcs_admin_password          = "المشرف كلمة السر";
            mcs_guest_password          = "ضيف كلمة المرور";
            mcs_product_info            = "معلومات المنتج";
            mcs_software_version        = "إصدار البرنامج";
            mcs_device_id               = "جهازID";
            mcs_operation               = "التشغيل";
            mcs_record                  = "فيديو";
            mcs_record_2                = "فيديو";
            mcs_upgrade_now             = "ترقية علي فور";
            mcs_upgrading               = "خلال الترقية";
            mcs_already_latest_version  = "هو أحدث الطبعة";
            mcs_sensitivty              = "الحساسية";
            mcs_user_defined            = "المخصصة";
            mcs_time                    = "الوقت";
            mcs_date                    = "التاريخ";
            mcs_finish                  = "إتمام";
            mcs_delete_fail             = "فشل الحذف ";
            mcs_motion                  = "كشف المنتقل";
            mcs_start                   = "بدء";
            mcs_talk                    = "التعقيبات";
            mcs_password_input_inconsistent = "كلمة المرور المدخلة غير متناسقة";
            mcs_input_6_to_20_litters   = "المدخلات 20/06 الحروف (A-Z، A-Z) أو أرقام (0-9)";
            mcs_user_letter_range_hint  = "حساب  6-32  أرقام  (  0-9  )  أو حرف  (  الألف إلى الياء،  من الألف إلى الياء  )، يجب أن  تبدأ بحرف";
            mcs_password_range_hint     = "كلمة المرور هي 6-32 الأرقام والأحرف";
            mcs_begin_with_the_letters  = "تبدأ بحرف، يمكن أن تحتوي أبجدية رقمية فقط";
            mcs_sign_up                 = "التسجيل";
            mcs_sign_up_failed          = "فشل التسجيل";
            mcs_successful_sign_up      = "قم بالتسجيل الناجح";
            mcs_are_you_sure_delete     = "هل أنت متأكد من حذف؟";
            mcs_failed_to_set_the       = "فشل الإعداد";
            mcs_set_successfully        = "تم الاعداد بنجاح";
            mcs_downloading             = "يتم التحميل";
            mcs_wrote                   = "تم الكتابة";
            mcs_visit_again_later       = "يرجى تسجيل الدخول مرة أخرى في وقت لاحق";
            mcs_restart_failed          = "إعادة تشغيل فشل";
            mcs_upgrade_failed          = "فشل التحديث";
            mcs_connnected              = "تم التوصيل";
            mcs_connnected_to           = "متصلا";
            mcs_not_select              = "دون إختيار";
            mcs_message_list            = "قائمة الرسائل";
            mcs_saved_password          = "كلمة المرور محفوظة";
            mcs_alert                   = "إنذار";
            mcs_no_record               = "لا يوجد فيديو";
            mcs_new_about               = "جديد : حوالي";
            mcs_device                  = "الجهاز";
            mcs_config                  = "المكونات";
            mcs_change_password_failed  = "فشل تغيير كلمة المرور";
            mcs_do_you_want_restart     = "هل تريد إعادة تشغيل؟";
            mcs_do_you_want_restore     = "هل تريد استعادة؟?";
            mcs_do_you_want_upgrade     = "هل تريد الترقية؟";
            mcs_load_end                = "تم تحميل جميع البيانات";
            mcs_loading                 = "...تنزيل";
            mcs_down_refresh            = "إسحب الي تحت فيمكن تحديث";
            mcs_release_refresh         = "إطلاق تحديث";
            mcs_refreshing              = "منعش";
            mcs_release_then_loading_data_hint = "الإفراج لتحميل البيانات";
            mcs_pull_refresh_hint       = "إسحب الي فوق فيمكن تنزيل";
            mcs_restarting              = "يتم إعادة التشغيل";
            mcs_upgraded_time           = "تجديد الي : ";
            mcs_done                    = "فعلت";
            mcs_playback                = "اعادة التشغيل";
            mcs_i_o_alarm               = "الانذار I/O";
            mcs_alarm_action            = "عمل منبه";
            mcs_alarm_sources           = "مصدر الانذار";
            mcs_io_output               = "I/O إخراج";
            mcs_snapshots               = "لقطة";
            mcs_snapshot                = "لقطة";
            mcs_snapshot_interval       = "الفاصل الزمني للصور (ثانية)";
            mcs_pre_record_length       = "وقت التسجيل المسبق (ثواني)";
            mcs_nick_range_hint         = "الإسم المستعار أقل من 20  الأرقام و الأحرف";
            mcs_save                    = "حفظ";
            mcs_close                   = "أغلق";
            mcs_snapshoting             = "التقاط الصور";
            mcs_snapshot_failed         = "فشل تصوير";
            mcs_record_failed           = "فشل التسجيل";
            mcs_saved_successfully      = "حفظ بنجاح إلى الألبوم";
            mcs_save_failed             = "فشل الحفظ";
            mcs_restart_to_take_effect  = "Riav:\"المفعول بعد إعادة تشغيل\"";
            mcs_please_allow_access_album = "اسمحوا MIPC لزيارة ألبوم الصور الخاص بك.";
            mcs_please_allow            = "اسمحوا ";
            mcs_access_album            = " زيارة ألبوم الصور الخاص بك.";
            mcs_ios_privacy_setting_for_photo_prompt = "يمكنك إجراء تغييرات في اي فون \" إعدادات - الخصوصية – الصور \" التطبيق \"";
            mcs_execute_change          = "\" تغيير";
            mcs_access_camera           = " لزيارة الكاميرا";
            mcs_please_allow_access_camera = "اسمحوا MIPC لزيارة الكاميرا";
            mcs_ios_privacy_setting_for_camera_prompt = "يمكنك في اي فون \"إعدادات -> الخصوصية -> كاميرا \"، موقع التطبيق \"";
            mcs_busy_when_write         = "مشغول عند الكتابة";
            mcs_unknown_error           = "خطأ غير معروف";
            mcs_i_know                  = "أنا أعلم ";
            mcs_segment                 = "قطعة";
            mcs_please_relogin          = "يرجى إعادة تسجيل الدخول";
            mcs_change_password_succeed = "تغيير كلمة المرور بنجاح";
            mcs_upgrade_to_ver          = "الترقية إلى الإصدار الجديد";
            mcs_restore_failed          = "الاستعادة فشلت";
            mcs_please_restart          = "يرجى إعادة تشغيل ";
            mcs_keep_network_settings   = "ضبط الحجز شبكة وكلمة المرور";
            mcs_not_connected           = "غير متصل";
            mcs_sdcard_not_ready        = "بطاقة SD غير جاهزة!";
            mcs_device_not_exist        = "الجهاز غير موجودا";
            mcs_disable                 = "تعطيل";
            mcs_to_determine_the        = "هل أنت متأكد";
            mcs_alert_on                = "تسليح";
            mcs_alert_off               = "ايقاف تشغيل الانذار";
            mcs_alert_onoff             = "تنبيه على / قبالة";
            mcs_monday                  = "يوم الإثنين";
            mcs_tuesday                 = "يوم الثلاثاء";
            mcs_wednesday               = "يوم الأربعاء";
            mcs_thursday                = "يوم الخميس";
            mcs_friday                  = "يوم الجمعة";
            mcs_saturday                = "يوم السبت";
            mcs_sunday                  = "يوم الأحد";
            mcs_mon                     = "الإثنين";
            mcs_tue                     = "الثلاثاء";
            mcs_wed                     = "الأربعاء";
            mcs_thu                     = "الخميس";
            mcs_fri                     = "الجمعة";
            mcs_sat                     = "السبت";
            mcs_sun                     = "الأحد";
            mcs_scheduled_recording     = "تخطيط التصوير";
            mcs_schedule                = "جدول";
            mcs_scheduled_recording_status = "حالة التسجيل المقرر";
            mcs_folding                 = "الطي";
            mcs_unfolding               = "تتكشف";
            mcs_end_time_should_lt_begin = "يجب أن يكون وقت النهاية أكبر من وقت البدء";
            mcs_recording               = "يتم التصوير";
            mcs_prerecord_interval_range_hint = "وقت التصوير المتوقع تحتاج الي أقل من 6 ثوان";
            mcs_snapshot_interval_range_hint = "الفاصل الزمني للتصوير هو 0 أو أكبر من 60";
            mcs_not_ready               = "غير جاهز";
            mcs_availablesize           = "القدرات المتاحة";
            mcs_reboot                  = "إعادة التشغيل";
            mcs_alerter                 = "فتح ناقوس الخطر";
            mcs_pir                     = "تفاعل جسم الإنسان";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "جهاز الترميز";
            mcs_ok                      = "موافق";
            mcs_fault                   = "الخطأ";
            mcs_sensor_status           = "حالة جهاز الاستشعار";
            mcs_about                   = "حول";
            mcs_reset_now               = "قم بإعادة تشغيل الأن";
            mcs_reset_later             = "إعادة تعيين في وقت لاحق";
            mcs_prompt                  = "النصيحة";
            mcs_select                  = "يرجي الاختيار";
            mcs_available_netword       = "شبكة الاتصال غير متوفر، ويرجي ضبط الشبكة؟";
            mcs_request_send            = "قم بإرسال الطلب...";
            mcs_blank_device_id         = "الجهاز لا يمكن أن تكون فارغة ID";
            mcs_blank_username          = "اسم المستخدم لا يمكن أن يكون فارغا";
            mcs_blank_password          = "كلمة المرور لا يمكن أن تكون فارغة";
            mcs_exist_user              = "المستخدم موجودا بالفعل";
            mcs_invalid_user            = "اسم المستخدم غير صحيح";
            mcs_invalid_email_addr      = "عنوان البريد الإلكتروني غير صحيح";
            mcs_system_err              = "خطأ في النظام";
            mcs_exceed_device           = "عدد مستخدمي الجهاز يتجاوز الحد";
            mcs_continue                = "متواصل";
            mcs_prompt_exit             = "هل تريد الخروج؟";
            mcs_device_list             = "قائمة الأجهزة";
            mcs_no_sdcard               = "عدم وجود بطاقة SD";
            mcs_no_hard_disk            = "لا القرص الصلب";
            mcs_show_more               = "يعرض أكثر...";
            mcs_shotsnop_exists         = "الصورة موجودة بالفعل";
            mcs_input_nick              = "يرجي ادخال اللقب";
            mcs_nick_not_empty          = "اللقب لا يمكن أن يكون فارغا";
            mcs_input_new_pass          = "أدخل كلمة المرور الجديدة";
            mcs_input_new_pass_again    = "أدخل كلمة المرور الجديدة مرة أخرى";
            mcs_new_password            = "كلمة المرور الجديدة";
            mcs_modify_network_prompt   = "تعديل معلمات الشبكة قد يسبب انقطاع الشبكةيرجى تأكيد التعديلات?";
            mcs_wifi_disable_prompt     = "تعطيل خدمة الواي فاي، هل مواصلة؟";
            mcs_eth_disable_prompt      = "تعطيل بطاقة إيثرنت، هل مواصلة؟";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "الحصول تلقائيا";
            mcs_manually_set            = "الإعداد اليدوي";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "DNS المفضل";
            mcs_client_mode             = "وضع المحطة";
            mcs_adhoc_mode              = "وضع النقاط الساخنة";
            mcs_connect_fail            = "خطأ في الاتصال";
            mcs_dhcp_server             = "خادم DHCP";
            mcs_display_text            = "عرض الاسم";
            mcs_repair_prompt_detail    = "إصلاح بطاقة الذاكرة الرقمية المؤمنة قد يؤدي إلى فقدان بعض البيانات، هل مواصلة؟";
            mcs_format_prompt_detail    = "التنسيق يحذف كافة البيانات الموجودة على بطاقة الذاكرة الرقمية المؤمنة، هل مواصلة؟";
            mcs_mount_prompt            = "تحميل بطاقة الذاكرة الرقمية المؤمنة، هل  مواصلة؟";
            mcs_umount_prompt           = "إلغاء تحميل بطاقة الذاكرة الرقمية المؤمنة يؤدي الي عدم حفظ الفيديو والصور وغيرهامن البيانات ، هل مواصلة ؟";
            mcs_sdcard_reset            = "تم الاعداد بنجاح، تحتاج إلى إعادة تشغيل الكاميرا لالتقاط ، هل مواصلة ؟";
            mcs_sdcard_repairing        = "يتم الإصلاح لانتظار  إعادة التشغيل";
            mcs_sdcard_formating        = "يتم التنسيق لانتظار  إعادة التشغيل";
            mcs_sdcard_umount           = "دون تنزيل";
            mcs_valid                   = "متوفر";
            mcs_io                      = "انذار IO";
            mcs_input                   = "أدخل";
            mcs_outinput                = "أخرج";
            mcs_prompt_alert_on         = "إفتح التسليح ، متواصل؟";
            mcs_auto_sync_date_time     = "التزامن التلقائي";
            mcs_alarm_record            = "تسجيل الانذار";
            mcs_username                = "اسم المستخدم";
            mcs_re_enter_the_password   = "إعادة إدخال كلمة المرور";
            mcs_remember_me             = "الاحتفاظ بتسجيل الدخول";
            mcs_home                    = "منزل";
            mcs_install_the_plug        = "تركيب البرنامج المساعد";
            mcs_install_the_video_plug  = "تركيب البرنامج المساعد للفيديو";
            mcs_install_now             = "قم بالتركيب الآن";
            mcs_temporarily_installed_use_ordinary_video = "لا يتم التركيب مؤقتا ، يتم استخدام الشاشة العادية";
            mcs_brightness              = "السطوع";
            mcs_contrast                = "التباين";
            mcs_color_saturation        = "التشبع";
            mcs_sharpness               = "الحدة";
            mcs_duration                = "فترة الاستمرار";
            mcs_index                   = "المؤشر";
            mcs_remark                  = "الملاحظة";
            mcs_media_stream            = "وسائل الإعلام";
            mcs_server                  = "الخادم";
            mcs_media_transfer          = "نقل وسائل الإعلام";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "صانع";
            mcs_model                   = "النموذج";
            mcs_plugin_version          = "اصدار البرنامج المساعد";
            mcs_network_interface       = "واجهة الشبكة";
            mcs_transfer_protocol       = "بروتوكول النقل";
            mcs_year                    = "السنة";
            mcs_month                   = "الشهر";
            mcs_day                     = "اليوم";
            mcs_hour                    = "الساعة";
            mcs_minute                  = "الدقيقة";
            mcs_second                  = "الثانية";
            mcs_millisec                = "ميلي ثانية واحدة";
            mcs_ntp                     = "عنوان خادم الوقت";
            mcs_upload_upgrade          = "تحميل الترقية";
            mcs_stop                    = "إيقاف";
            mcs_info_rewind             = "الترجيع";
            mcs_fast_forward            = "التقديم السريع";
            mcs_previous_frame          = "الإطار السابق";
            mcs_next_frame              = "الإطار التالي";
            mcs_record_audio            = "تسجيل الصوت";
            mcs_week                    = "الأسبوع";
            mcs_all                     = "جميع";
            mcs_id                      = "الرقم";
            mcs_select_all              = "اختيار جميع";
            mcs_call                    = "الاتصال";
            mcs_activation              = "رمز التفعيل";
            mcs_caption                 = "تحميل الملف";
            mcs_alarm_device            = "جهاز الانذار";
            mcs_not_installed           = "غير مثبت";
            mcs_join_us_now             = "انضم إلينا الآن";
            mcs_reconnect_please_wait   = "إعادة الاتصال، يرجى الانتظار";
            mcs_erasing                 = "يتم المسح";
            mcs_writing                 = "يتم الكتابة";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "طبعة جديدة";
            mcs_equipment_flip          = "تلقب الجهاز";
            mcs_device_status           = "حالة الجهاز";
            mcs_audio_setting           = "إعدادات الصوت";
            mcs_nick_modify             = "تعديل اللقب";
            mcs_ready                   = "جاهزة";
            mcs_full                    = "أكتب كاملا";
            mcs_connecting              = "يتم الاتصال";
            mcs_message_buffering       = "التخزين المؤقت للرسالة";
            mcs_upgrade_finish          = "تم الترقية";
            mcs_image                   = "الصورة";
            mcs_bar                     = "مادة";
            mcs_init                    = "التهيئة";
            mcs_confirm_new_password    = "تأكيد كلمة المرور الجديدة";
            mcs_continue_switch_wireless_network = "تبديل الشبكة قد يسبب انقطاع الشبكة، هل مواصلة؟";
            mcs_restore_factory_settings_prompt = "عند استعادة ضبط المصنع، سيتم إعادة تشغيل النظام ، هل مواصلة؟";
            mcs_username_does_not_exis  = "اسم المستخدم لا يوجد";
            mcs_username_already_exists = "اسم المستخدم موجود بالفعل";
            mcs_successful_whether_login = "تم التسجيل، هل يتم تسجيل الدخول الآن؟";
            mcs_username_demand         = "6-20 حروف أو أرقام مع بداية الحرف";
            mcs_the_password_is_empty   = "كلمة المرور تكون فارغة";
            mcs_password_demand         = "حروف أو أرقام20الي6";
            mcs_password_empty          = "تأكيد كلمة المرور فارغة";
            mcs_two_password_input_inconsistent = "كلمة المرور المدخلة مرتين غير متناسقة";
            mcs_the_user_name_is_empty  = "اسم المستخدم يكون فارغا";
            mcs_upgrade_to_the_latest_version = "الترقية إلى أحدث الطبعة";
            mcs_subnet_mask_wrong_format = "خطأ تنسيق قناع الشبكة الفرعية";
            mcs_upgrade_successful_restart_to_take_effect = "ترقية ناجحا، تحتاج إلى إعادة تشغيل الجهاز حتى تصبح نافذة المفعول";
            mcs_need_to_restart_the_camera_to_take_effect = "تحتاج إلى إعادة تشغيل الجهاز حتى تصبح نافذة المفعول";
            mcs_not_allowed_close_two_network_cards = "لا يمكنك تعطيل بطاقة إيثرنت وواي فاي في نفس الوقت";
            mcs_modified_successfully   = "تم التعديل بنجاح";
            mcs_connection_successfully = "تم الاتصال بنجاح";
            mcs_connection_is_interrupted = "انقطع الاتصال";
            mcs_devices_in_the_account_overrun = "عدد أجهزة المستخدم يتجاوز الحد";
            mcs_format_error            = "خطأ التنسيق";
            mcs_change                  = "التعديل";
            mcs_refresh                 = "التحديث";
            mcs_connect                 = "ربط";
            mcs_upgrade                 = "ترقية";
            mcs_activate                = "تفعيل";
            mcs_filter                  = "تصفية";
            mcs_reset                   = "إعادة الوضع";
            mcs_prompt_alert_off        = "يتم ايقاف تشغيل الانذار ، هل موصلة؟";
            mcs_invalid_server          = "عنوان خادم الوقت غير صالح";
            mcs_upgrade_prompt          = "ترقية برنامج الجهاز. استمر";
            mcs_restart_prompt          = "جهاز إعادة التشغيل، ومواصلة?";
            mcs_repeat                  = "تكرار";
            mcs_scheduled_one           = "التسجيل المسبق 1";
            mcs_scheduled_two           = "التسجيل المسبق 2";
            mcs_scheduled_three         = "التسجيل المسبق 3";
            mcs_scheduled_four          = "التسجيل المسبق 4";
            mcs_more                    = "انظر المزيد من";
            mcs_leave                   = "يتم الافراج لتحميل الأكثر";
            mcs_qrcode_scan             = "مسح رمز الأبعاد";
            mcs_inserted                = "تم إدراج";
            mcs_removed                 = "تم إزالة";
            mcs_upgrade_init            = "تبدأ الترقية";
            mcs_upgrade_download        = "ترقية التنزيل";
            mcs_check                   = "ترقية الفحص";
            mcs_audio_encoder_config    = "إعدادات ترميز الصوت";
            mcs_video_codec             = "ترميز الفيديو";
            mcs_download                = "تحميل";
            mcs_client_download         = "تنزيل محطة العملاء";
            mcs_for_more_clarity_smooth_video_experience = "الحصول على تجربة الفيديو أكثر وضوحا و أكثر سلاسة";
            mcs_network                 = "إنترنت";
            mcs_mobile_client_download  = "تنزيل محطة العملاء للهاتف المحمول";
            mcs_readonly                = "قراءة فقط";
            mcs_please_exit_and_relogin = "يرجي قراءة بالدخول مرة أخرى بعد الخروج";
            mcs_add_device_failed       = "فشل من إضافة الجهااز";
            mcs_set_password            = "تغيير كلمة المرور";
            mcs_7x24_hours              = "7x24(ساعة)";
            mcs_mtalt                   = "%@ : الحركة في حالة تأهب";
            mcs_ioalt                   = "%@ : I/O حالة تأهب";
            mcs_time_zone               = "منطقة زمنية";
            mcs_select_time             = "حدد وقت";
            mcs_now                     = "الآن";
            mcs_mipc_have_alert_notification = "MIPC يكون الإخطار التنبيه";
            mcs_notification_center     = "مركز إعلام";
            mcs_sound                   = "صوت";
            mcs_vibration               = "اهتزاز";
            mcs_clear_cache             = "مسح ذاكرة التخزين المؤقت";
            mcs_clear_cache_hint        = "هل أنت متأكد من أنك تريد مسح ذاكرة التخزين المؤقت؟";
            mcs_successfully_cleared_cache = "مسح ذاكرة التخزين المؤقت بنجاح";
            mcs_app_except_exit_hint    = "عذرا، التطبيق واجه استثناء وسيتم إنهاء.";
            mcs_rate_us                 = "معدل بنا";
            mcs_password_too_simple_hint = "كلمة السر هي بسيطة جدا، وتعديلها لتحسين الأمن.";
            mcs_check_for_new_version   = "التحقق من وجود إصدار جديد";
            mcs_contact_us              = "اتصل بنا";
            mcs_buffer_time             = "التخزين المؤقت الوقت";
            mcs_default                 = "الافتراضي";
            mcs_alarmed_devices         = "أجهزة المذعورة";
            mcs_aec                     = "إلغاء الصدى";
            mcs_permission_denied       = "تم رفض الإذن";
            mcs_full_screen             = "كامل الشاشة";
            mcs_forgot_your_password    = "نسيت كلمة السر";
            mcs_your_email              = "بريدك الإلكتروني";
            mcs_sign_up_confirmation    = "يتم إرسال رسالة تأكيد للتحقق من عنوان البريد الإلكتروني المقدمة. سوف زيارة الرابط أرسلت في هذا البريد الالكتروني تفعيل الحساب.";
            mcs_recovery_prompt         = "يرجى إدخال عنوان البريد الإلكتروني الخاص بك (اسم المستخدم)، وسوف نرسل رسالة لاقول لكم كيفية إعادة تعيين كلمة المرو.";
            mcs_password_reset_confirmation = "يتم إرسال رسالة بريد إلكتروني إلى عنوان البريد الإلكتروني المقدمة. زيارة الرابط أرسلت في هذا البريد الالكتروني لإعادة تعيين كلمة المرور";
            mcs_recovery_fail_no_mail   = "فشل استرداد كلمة المرور. وهذا الحساب لا ربط البريد الإلكتروني";
            mcs_recovery_fail_invalid_link = "فشل استرداد كلمة المرور. يرجى التأكد من محتوى رابط أو الانتعاش مرة أخرى";
            mcs_recovery_ok_login       = "نجاح استعادة كلمة السر. تسجيل الدخول الآن";
            mcs_active_ok_login         = "حساب نجاح نشطة. تسجيل الدخول الآن";
            mcs_active_fail_invalid_link = "حساب نشط تفشل. الرجاء التأكد من أن محتوى الرابط أو الاشتراك مرة أخرى";
            mcs_login_fail_inactive     = "حساب غير نشط. يرجى اتباع محتوى البريد الإلكتروني النشطة إلى نشطة";
            mcs_sign_up_again           = "الاشتراك مرة أخرى";
            mcs_press_start_talk        = "الصحافة في الكلام";
            mcs_release_stop_talk       = "إطلاق سراح لوقف";
            mcs_delete_device           = "حذف الجهاز";
            mcs_success_removed_equipment = "حذف الجهاز بنجاح";
            mcs_remove_equipment_failure = "إزالة تعطل المعدات";
            mcs_device_busy             = "الجهاز هو مشغول الآن";
            mcs_keep_testing            = "يستمر الاختبار";
            mcs_notify_tone             = "نغمة إعلام";
            mcs_float_video             = "تمكين العائمة الفيديو";
            mcs_float_position          = "العائمة موقف الفيديو";
            mcs_video_resolution        = "دقة الفيديو";
            mcs_float_resolution        = "العائمة دقة الفيديو";
            mcs_top_left                = "أعلى اليسار";
            mcs_top_right               = "أعلى اليمين";
            mcs_bottom_left             = "أسفل اليسار";
            mcs_bottom_right            = "أسفل اليمين";
            mcs_action_next             = "التالي";
            mcs_action_cancel           = "إلغاء";
            mcs_action_retry            = "إعادة المحاولة";
            mcs_action_add              = "إضافة";
            mcs_is_add                  = "سواء لإضافة";
            mcs_action_apply            = "تطبيق";
            mcs_action_config           = "ترتيب";
            mcs_action_skip             = "تخطى";
            mcs_action_ok               = "حسنا";
            mcs_action_add_device       = "إضافة جهاز";
            mcs_action_modify_password  = "تغيير كلمة المرور";
            mcs_action_config_wifi      = "تعيين واي فاي";
            mcs_state_connect_device    = "أجهزة الاتصال";
            mcs_state_connect_device_fail = "ربط فشل المعدات";
            mcs_state_wait_device_online = "ينتظر الجهاز لتكون على الانترنت";
            mcs_state_device_online     = "على الانترنت";
            mcs_state_success           = "نجاح";
            mcs_fail                    = "فشل";
            mcs_delete_success          = " حذف بنجاح ";
            mcs_state_add_device_success = "إضافة جهاز النجاح";
            mcs_state_add_device_fail   = "إضافة فشل الجهاز";
            mcs_state_modify_pass_success = "تغيير كلمة المرور بنجاح";
            mcs_state_modify_pass_fail  = "فشل تغيير كلمة المرور";
            mcs_state_config_wifi_success = "تعيين نجاح Wi-Fi";
            mcs_state_config_wifi_fail  = "خطأ في الاتصال";
            mcs_state_connecting_to     = "الاتصال";
            mcs_network_connect_type    = "الجهاز غير متواجد، يمكنك التأكد من أن الجهاز هو مدعوم على، ثم حدد اتصال الشبكة:";
            mcs_prompt_modify_passwd    = "لأسباب أمنية، وتغيير كلمة المرور الافتراضية للجهاز. يجب أن تكون كلمة المرور الجديدة ستة أحرف على الأقل";
            mcs_prompt_config_wifi      = "لا يزال غير جهازك متصلا واي فاي الخاص بك، يرجى تكوين خدمة الواي فاي الخاص بك.";
            mcs_step1_check_connect     = "فإن الخطوة الأولى تكون واحدة من نهاية كبل الشبكة للاتصال جهاز التوجيه الخاص بك وعلى الطرف الآخر من الوصول عبر منفذ إيثرنت الكاميرا";
            mcs_first_step_ethernet_connect = "الخطوة 2: قم بتوصيل كابل إيثرنت جهاز التوجيه والكاميرا.";
            mcs_step2_check_connect     = "الخطوة الثانية ستكون على كاميرا الفيديو الخاصة بك الكهرباء، بدء تشغيل الكاميرا";
            mcs_second_step_ethernet_connect = "هو مدعوم من جعل الجهاز على يقين على: الخطوة 1";
            mcs_hint_check_network      = "ملاحظة: الكاميرا يستغرق حوالي 50 ثانية لتبدأ، بعد بدء التشغيل الكامل، LED أضواء ثلاث ثوان ومضات الضوء الأخضر ثلاث مرات، وهو ما يعني أن كل كاميرا كانت الانترنت، وسوف يدخل تلقائيا المعالج الخطوة التالية";
            mcs_the_end                 = "نهاية";
            mcs_hint_password_expired   = "انتهت صلاحية كلمة السر، يرجى إضافته الجهاز";
            mcs_hint_remove_ethernet    = "ملاحظة : Wi-Fi يعمل بشكل صحيح، يمكنك الآن افصل كابل الشبكة";
            mcs_gateway_format_incorrect = " بوابة  شكل العنوان  غير صحيح ";
            mcs_dns_format_incorrect    = "تنسيق عنوان DNS غير صحيح";
            mcs_subnet_mask_format_incorrect = " قناع الشبكة الفرعية  شكل العنوان  غير صحيح ";
            mcs_ip_format_incorrect     = "تنسيق عنوان IP غير صحيح";
            mcs_login_sucess            = "نجاح تسجيل الدخول ";
            mcs_donot_remind            = "لا تذكرني مجددًا ";
            mcs_clear_cache_signout_hint = "مسح ذاكرة التخزين المؤقت وإنهاء تسجيل الدخول مرة أخرى إلى الاستمرار؟";
            mcs_devlist_adddev_hint     = "انقر هنا لإضافة معدات";
            mcs_devlist_menu_hint       = "انقر هنا لتهيئة هذا القرار";
            mcs_update_failed           = "فشل الترقية";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "محلي";
            mcs_set_npapi               = "إذا تم تثبيت البرنامج المساعد، يرجى زيارة \'chrome://flags/#enable-npapi\' تمكين NPAPI, ";
            mcs_set_win32k              = "زيارة \'chrome://flags/#enable-win32k-renderer-lockdown\', win32k تعطيل العارض تأمين,";
            mcs_restart_browser         = "إعادة تشغيل المتصفح";
            mcs_download_location       = "حفظ التزيلات في المجلد";
            mcs_Networking_mode         = "وضع الشبكات";
            mcs_wifi_intelligent_configuration = "اتصال Wi-Fi";
            mcs_ethernet_configuration  = "اتصال إيثرنت";
            mcs_wifi_connect            = "صلة";
            mcs_hard_disk               = "القرص الصلب";
            mcs_wifi_is_connection      = "الاتصال، يرجى الانتظار...";
            mcs_wifi_intelligent_configuration_setup_ailure = "واي فاي فشل الإعداد التكوين الذكي";
            mcs_box_list                = "مربع القائمة";
            mcs_repair_disk_prompt      = "قرص الإصلاح قد فقد بعض  البيانات ، المتابعة؟";
            mcs_format_disk_prompt      = "و شكل القرص حذف جميع البيانات و المتابعة؟";
            mcs_scheduled_alerting      = " خطة  الدفاع ";
            mcs_scheduled_alerting_one  = " خطة  الدفاع 1";
            mcs_scheduled_alerting_two  = " خطة  الدفاع 2";
            mcs_scheduled_alerting_three = " خطة  الدفاع 3";
            mcs_scheduled_alerting_four = " خطة  الدفاع 4";
            mcs_wifi_config_cancle      = "التكوين واي فاي إلغاء";
            mcs_wifi_config_prepare     = " تكوين الاستعداد";
            mcs_wifi_config_first       = "الأجهزة والهواتف النقالة وأجهزة التوجيه تبقى في حدود 1 متر";
            mcs_wifi_config_second      = "عند تكوين واي فاي، ويمكن للجهاز تقم بتوصيل كابل الشبكة";
            mcs_wifi_config_third       = "اضغط على RESET إعادة تعيين حفرة ثانية واحدة ثم حرر";
            mcs_wifi_config_success     = "نجاح التكوين";
            mcs_wifi_config_failure     = "فشل التكوين";
            mcs_failure_prompt          = "يرجى المحاولة مرة أخرى أو العودة للتحقق Wi-Fi كلمة المرور يتم إدخالها بشكل صحيح";
            mcs_display_password        = "عرض كلمة المرور";
            mcs_action_smart_config_wifi = "معالج التكوين";
            mcs_wifi_invalid            = "الشبكة لا واي فاي، يرجى الاتصال واي فاي";
            mcs_phone_not_connect_wifi  = "شبكة واي فاي غير متصل";
            mcs_prompt_check_connection = "الكاميرا ليست على الانترنت، والتحقق من خط اتصال الكامير";
            mcs_wifi_cfg_ready          = "استعداد";
            mcs_reset_complete          = "إعادة تعيين اكتمال";
            mcs_how_to_restore_factory_settings = "كيفية استعادة ضبط المصنع: استخدام دبوس RESET الضغط على اعادة فتحه في أسفل الكاميرا لأكثر من 10 ثوان";
            mcs_forgetpass_action_wizard = " من فضلك  اضغط على  إعادة  تعيين  جهاز  ثقب  بعد 10 ثواني  فك  الجهاز  ، سوف  تسمع  صوت  \'استعادة  ضبط المصنع  \'. ";
            mcs_prompt_check_device_connection = "الجهاز لا غير متواجد، والتحقق من الأسلاك لتوصيل الجهاز";
            mcs_prompt_select_device_connection = "هل  الجهاز لا  على الإنترنت،  الرجاء اختيار  طريقة التواصل";
            mcs_input_wifi_name         = "يرجى إدخال اسم واي فاي";
            mcs_action_previous         = "سابق";
            mcs_io_alert_range_hint     = "IO الوقت في حالة تأهب يجب أن تكون أقل من 60 ثانية";
            mcs_io_alert_time           = "الوقت IO إنذار (في ثواني)";
            mcs_smart                   = "ذكي";
            mcs_plan                    = "خطة";
            mcs_mute                    = "أخرس";
            mcs_wind_speed              = "سرعة الرياح";
            mcs_one                     = "والعتاد واحد";
            mcs_two                     = "اثنين من العتاد";
            mcs_three                   = "ثلاثة العتاد";
            mcs_purify_mode             = "وضع تنقية";
            mcs_video_list              = "قائمة الفيديو";
            mcs_wifi_cfg_restore_factory_settings = "عقد الهاتف المحمول بالقرب من الجهاز، إذا لم يقم جهاز واي فاي، واضغط على اعادة فتحه لثانية واحدة ثم الإفراج عنهم، الجهاز سوف استعادة لضبط المصنع وإعادة تشغيل تلقائيا";
            mcs_mask_settings           = "ضبط قناع";
            mcs_notification_settings   = "إعدادات الإشعار";
            mcs_alarm_settings          = "ضبط المنبه";
            mcs_motion_detection        = "تحسس الحركة";
            mcs_io_alarm                = "I/O إنذار";
            mcs_connect_status          = "حالة الاتصال";
            mcs_motion_notification     = "التنبيهات والإشعارات";
            mcs_device_connected        = "يتم توصيل الجهاز";
            mcs_start_spray             = "بدء الرش؟";
            mcs_available_network       = "شبكة متوفرة، شبكة الاختيار";
            mcs_select_wifi_wizard      = "الرجاء اختيار شبكة واي فاي أولا";
            mcs_input_wifi_password     = "إدخال واي فاي كلمة المرور";
            mcs_device_admin_password   = "الجهاز المشرف كلمة السر";
            mcs_device_guest_password   = "جهاز كلمة ضيف";
            mcs_user_admin_password     = "المشرف المستخدم كلمة السر";
            mcs_user_guest_password     = "المستخدم كلمة السر ضيف";
            mcs_save_network_set        = "حفظ مجموعة شبكة وكلمة المرور";
            mcs_nickname_not_set        = "لم يتم تعيين الكاميرا كنية";
            mcs_current_wifi            = "واي فاي الحالي";
            mcs_current_password_strength = "قوة كلمة المرور الحالية";
            mcs_new_password_strength   = "قوة كلمة المرور الجديدة";
            mcs_needs_to_open_the_DHCP  = "يحتاج جهاز التوجيه الخاص بك لفتح DHCP (تلقائيا الحصول على IP) وظيفة، وإذا كانت محاولة غير ناجحة، يرجى الاتصال بمسؤول.";
            mcs_picture                 = "صورة";
            mcs_quality                 = "جودة";
            mcs_size                    = "حجم";
            mcs_guest_login             = "دخول النزيل";
            mcs_audio_and_video         = "الصوت / الفيديو";
            mcs_volume                  = "حجم ";
            mcs_smooth                  = "ناعم";
            mcs_clear                   = "واضح";
            mcs_handsfree               = "تكلم الحر";
            mcs_headphone               = "سماعة";
            mcs_my                      = "لي";
            mcs_customer_service        = "خدمة العملاء";
            mcs_firefox_flash_uninstall = "البرنامج المساعد فلاش الخاص بك هو غير متوفر، والحل يرجى الرجوع https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "القطعة";
            mcs_plug_load               = "الإضافات الحمل";
            mcs_plug_load_refuse        = "لا تقم بتحميل الإضافات";
            mcs_plug_load_auto          = "أوتوماتيكي";
            mcs_option                  = "خيارات";
            mcs_option_ok               = "حدد";
            mcs_voice_call_fails        = "فشلت المكالمة الصوتية، والتحقق من الشبكة";
            mcs_umounted_prompt         = "إذا كان إلغاء تحميل?";
            mcs_mounted_prompt          = "سواء لتحميل?";
            mcs_format_prompt           = "سواء لتهيئة؟?";
            mcs_repair_prompt           = "ما إذا كان الإصلاح?";
            mcs_signup_prompt           = "الجديد هنا?";
            mcs_wifi_connect_sucess_prompt = " ملاحظة:  واي فاي  تعمل بشكل صحيح،  يمكنك الآن  قطع الشبكة ";
            mcs_manual_input_prompt     = " أجهزة الإدخال  معرف";
            mcs_qrscan_prompt           = "كنت عدم السماح لهذا التطبيق للوصول إلى الكاميرا الخاصة بك في، \'الخصوصية\'، ميزة فون \'الإعدادات\' \'كاميرا\'، والعثور على اسم التطبيق Vimtag إلى تعديل.";
            mcs_select_network_style    = " اختر شبكة  الاتصال: ";
            mcs_push                    = "إعلان";
            mcs_connect_power_prompt    = " ملاحظة:  الجهاز لا  على الانترنت،  يرجى  التأكد من  توصيل الطاقة ";
            mcs_fail_microphone         = " لا يمكن الوصول إلى  ميكروفون ";
            mcs_microphone_prompt       = "لم تكن للسماح لهذا التطبيق للوصول إلى الميكروفون، في \\’مجموعة’ اي فون - لخصوصية \\’- ميزة’ ميكروفون \\’، والعثور على اسم التطبيق’ Vimtag \\’إلى تعديل";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "هد";
            mcs_standard_clear          = "علامة واضحة";
            mcs_fluent_clear            = "بطلاقة";
            mcs_deleting                = " حذف ...";
            mcs_event                   = "الحدث";
            mcs_one_hour                = "ساعة";
            mcs_half_hour               = "نصف ساعة";
            mcs_five_min                = "خمس دقائق";
            mcs_category                = "الفئات";
            mcs_time_length             = "طول الوقت";
            mcs_new                     = "جديد";
            mcs_week_setting_prompt     = "يوم  لا يمكن أن تكون فارغة";
            mcs_time_setting_prompt     = "تحديد الوقت  لا يمكن أن تكون فارغة";
            mcs_today                   = "اليوم";
            mcs_wifi_password           = "واي فاي كلمة المرور";
            mcs_register_prompt         = "يرجى  تسجيل حسابك  ";
            mcs_click_login             = "اضغط على تسجيل الدخول";
            mcs_not_login_prompt        = "كنت  لا  تسجيل الدخول  ، انقر فوق  تسجيل الدخول  !";
            mcs_product_presentation    = "الصفحة الرئيسية";
            mcs_help_feedback           = "مساعدة";
            mcs_help_information        = "مساعدة";
            mcs_feedback                = " ملاحظات ";
            mcs_feedback_des            = "شكرا  لدينا استخدام  التطبيق  ،  مرحبا بكم  في طرح اقتراحاتكم ";
            mcs_feedback_praise         = " الثناء ";
            mcs_feedback_title_prompt   = " ردود الفعل على  العنوان";
            mcs_feedback_title          = "  الرجاء إدخال عنوان  (18  كلمة أو أقل  )";
            mcs_feedback_type_prompt    = " أنواع الأسئلة ";
            mcs_feedback_please_select  = "الرجاء اختيار  نوع";
            mcs_feedback_select_option1 = " واجهة مشكلة";
            mcs_feedback_select_option2 = "مشكلة  الكاميرا ";
            mcs_feedback_select_option9 = " مسائل أخرى";
            mcs_feedback_dec_prompt     = "وصف محدد ";
            mcs_feedback_dec            = " الرجاء كتابة  تعليقاتكم ";
            mcs_feedback_upload_photo   = " تحميل الصور";
            mcs_preview_pic             = " معاينة";
            mcs_Album                   = "اختر من البوم";
            mcs_Photograph              = "صورة";
            mcs_camera_unavailable      = "غير متوفر مع الكاميرا";
            mcs_feedback_submit         = " تقديم";
            mcs_feedback_title_alert    = "العنوان  لا يتوافق مع  القواعد";
            mcs_feedback_type_alert     = "الرجاء اختيار  النوع الصحيح ";
            mcs_feedback_dec_alert      = " الرجاء كتابة  تعليقاتكم";
            mcs_feedback_submit_success = "تقدم ناجح";
            mcs_feedback_submit_fail    = "فشل في تقديم";
            mcs_connect_wifi_prompt     = "اتصال  واي فاي";
            mcs_cloud                   = "سحابة";
            mcs_demo                    = "عرض";
            mcs_shortest                = "أقصر";
            mcs_no_history              = "لا يوجد شئ";
            mcs_download_pc_client      = "اضغط هنا لتحميل العميل PC";
            mcs_accounts_bind_email_exist = " هذا الحساب  قد تم  ربط  أكثر من  بريد ";
            mcs_accounts_bind_email_busy = " هذا البريد  قد  تم  ربط  الحساب ";
            mcs_systemupdatetip_noversionnodetail = "الإصدار الحالي من التحديث هو متاح، أي معلومات مفصلة التحديث";
            mcs_systemupdatetip_nodetail = "لا توجد معلومات مفصلة التحديث";
            mcs_systemupdatetip_updatefrom = "النسخة الحالية";
            mcs_systemupdatetip_updateto = "يمكنك  الترقية إلى";
            mcs_systemupdatetip_sureforupdate = "تحديد  الترقية؟";
            mcs_systemupdatetip_updatecontent = "هذا  تحديث المحتوى";
            mcs_operate_prompt          = "من فضلك تعمل وفقا للمخطط";
            mcs_operation_prompt        = "تشغيل موجه";
            mcs_qrcode_prompt_content   = "استخدام الكاميرا جهاز لفحص المحمول رمز ثنائي الأبعاد";
            mcs_qrcode_camera_distance  = "ثنائي الأبعاد الرمز مع مسافة كاميرا 12 ~ ل 14cm";
            mcs_planvideo_datewizard    = "يرجى تحديد  تاريخ ";
            mcs_planvideo_timewizard    = " يرجى  تحديد الوقت ";
            mcs_planvideo_wizard        = "الرجاء  تحديد الوقت  و التاريخ ";
            mcs_email_unbind            = "لا يلزم حساب البريد";
            mcs_email_unmatch           = "عدم تطابق صندوق البريد";
            mcs_email_inactive          = "لم يتم تنشيط البريد الإلكتروني";
            mcs_email_binded            = "تم ملزمة البريد الإلكتروني";
            mcs_user_binded_bymail      = "تم ملزمة المستخدم";
            mcs_bind_email_fail         = "صندوق الربط الفاشلة";
            mcs_diagnosis               = "التشخيص";
            mcs_delay                   = "تأخير";
            mcs_packet_loss_rate        = "معدل فقدان الحزمة";
            mcs_timezone_IDL            = "خط التاريخ الدولي";
            mcs_timezone_China          = "الصين";
            mcs_timezone_Midway         = "جزر ميدواي";
            mcs_timezone_Niue           = "جزيرة نيوي";
            mcs_timezone_Samoa          = "ساموا الأمريكية";
            mcs_timezone_Aleutian       = "جزر ألوشيان";
            mcs_timezone_Hawaii         = "جزر هاواي";
            mcs_timezone_Alaska         = "ألاسكا";
            mcs_timezone_PSTUSCanada    = "التوقيت الباسيفيكي (الولايات المتحدة وكندا)";
            mcs_timezone_Arizona        = "أريزونا";
            mcs_timezone_MSTUSCanada    = "التوقيت الجبلي الرسمي (الولايات المتحدة وكندا)";
            mcs_timezone_CSTUSCanada    = "التوقيت المركزي (الولايات المتحدة وكندا)";
            mcs_timezone_ESTUSCanada    = "التوقيت الشرقي (الولايات المتحدة وكندا)";
            mcs_timezone_ASTCanada      = "الأطلسي التوقيت (كندا)";
            mcs_timezone_Newfoundland   = "نيوفاوندلاند";
            mcs_timezone_Brasilia       = "برازيليا";
            mcs_timezone_BuenosAires    = "بوينس آيرس";
            mcs_timezone_Santiago       = "سانتياغو";
            mcs_timezone_Noronha        = "نورونا";
            mcs_timezone_SouthGeorgia   = "جورجيا الجنوبية";
            mcs_timezone_Azores         = "الازور";
            mcs_timezone_CapeVerde      = "الرأس الأخضر";
            mcs_timezone_London         = "لندن";
            mcs_timezone_Lisbon         = "لشبونة";
            mcs_timezone_Dublin         = "دبلن";
            mcs_timezone_Berlin         = "برلين";
            mcs_timezone_Amsterdam      = "أمستردام";
            mcs_timezone_Brussels       = "بروكسل";
            mcs_timezone_Budapest       = "بودابست";
            mcs_timezone_Madrid         = "مدريد";
            mcs_timezone_Paris          = "باريس";
            mcs_timezone_Rome           = "روما";
            mcs_timezone_Sarajevo       = "سراييفو";
            mcs_timezone_Cairo          = "القاهرة";
            mcs_timezone_Amman          = "عمان";
            mcs_timezone_Beirut         = "بيروت";
            mcs_timezone_Istanbul       = "اسطنبول";
            mcs_timezone_Jerusalem      = "القدس";
            mcs_timezone_Athens         = "أثينا";
            mcs_timezone_Baghdad        = "بغداد";
            mcs_timezone_Riyadh         = "الرياض";
            mcs_timezone_Qatar          = "دولة قطر";
            mcs_timezone_Moscow         = "موسكو";
            mcs_timezone_Tehran         = "طهران";
            mcs_timezone_Baku           = "باكو";
            mcs_timezone_Dubai          = "دبي";
            mcs_timezone_Tbilisi        = "تبليسي";
            mcs_timezone_Kabul          = "كابول";
            mcs_timezone_Karachi        = "كراتشي";
            mcs_timezone_Yekaterinburg  = "يكاترينبورغ";
            mcs_timezone_Maldives       = "جزر المالديف";
            mcs_timezone_Calcutta       = "كلكوتا";
            mcs_timezone_Colombo        = "كولومبو";
            mcs_timezone_Katmandu       = "كاتماندو";
            mcs_timezone_Almaty         = "ألماتي";
            mcs_timezone_Dhaka          = "دكا";
            mcs_timezone_Omsk           = "أومسك";
            mcs_timezone_Thimbu         = "تيمفو";
            mcs_timezone_Rangoon        = "رانغون";
            mcs_timezone_Bangkok        = "بانكوك";
            mcs_timezone_Jakarta        = "جاكرتا";
            mcs_timezone_Vientiane      = "فينتيان";
            mcs_timezone_Harbin         = "هاربين";
            mcs_timezone_Shanghai       = "شنغهاي";
            mcs_timezone_Hongkong       = "هونغ كونغ";
            mcs_timezone_Singapore      = "سنغافورة";
            mcs_timezone_Taipei         = "تايبيه";
            mcs_timezone_Ulaanbaatar    = "أولان باتور";
            mcs_timezone_Perth          = "بيرث";
            mcs_timezone_Seoul          = "سيول";
            mcs_timezone_Tokyo          = "طوكيو";
            mcs_timezone_Darwin         = "داروين";
            mcs_timezone_Magadan        = "ماجادان";
            mcs_timezone_Vladivostok    = "فلاديفوستوك";
            mcs_timezone_Guam           = "غوام";
            mcs_timezone_Sydney         = "سيدني";
            mcs_timezone_Canberra       = "كانبيرا";
            mcs_timezone_Melbourne      = "ملبورن";
            mcs_timezone_Queensland     = "كوينزلاند";
            mcs_timezone_LordHowe       = "لورد هاو";
            mcs_timezone_Guadalcanal    = "القنال";
            mcs_timezone_Fiji           = "فيجي";
            mcs_timezone_Auckland       = "أوكلاند";
            mcs_timezone_Apia           = "آبيا";
            mcs_timezone_Fakaofo        = "فاكاأوفو";
            mcs_timezone_Tongatapu      = "تونغاتابو";
            mcs_timezone_Kiritimati     = "كيريتيماتي";
            mcs_connect_timeout         = "مهلة الاتصال";
            mcs_share                   = "حصة";
            mcs_share_prompt_start      = "يمكنك الوصول";
            mcs_share_prompt_end        = "لتحميل الفيديو من خلال متصفح على الكمبيوتر أو الروبوت الهاتف الذي في نفس الشبكة";
            mcs_share_note              = "عملية التحميل، من فضلك لا تترك هذه الصفحة";
            mcs_video_size              = "حجم";
            mcs_video_duration          = "مدة";
            mcs_my_folder               = "بلدي المجلدات";
            mcs_account_no_contain      = "لا يحتوي الحساب";
            mcs_edit                    = "تحرير";
            mcs_video_number            = "فيديو";
            mcs_no_local_video          = "لا يوجد فيديو";
            mcs_empty_folder            = "مجلد فارغ";
            mcs_no_history_record       = "لا يوجد لديك التاريخ";
            mcs_no_local_record         = "سجل المحلي فارغ";
            mcs_empty_cloud_list_first  = "قائمة الأجهزة الخاصة بك فارغة،";
            mcs_empty_cloud_list_second = "انقر على  الزاوية اليسرى";
            mcs_empty_cloud_list_third  = "إضافة جهاز  !";
            mcs_empty_local_list_first  = "قائمة  الخاص بك المحلية  فارغة،";
            mcs_empty_local_list_second = "محاولة";
            mcs_empty_local_list_third  = "الشاشة  المنسدلة";
            mcs_empty_local_list_forth  = "تحديث  !";
            mcs_empty_local_list_fifth  = "（البحث  في  الشبكة المحلية  المعدات）";
            mcs_record_prompt           = "يمكنك عرض الفيديو في   لي ->بلدي المجلدات";
            mcs_record_download_prompt  = "يمكنك عرض السجل في\"مجلد بلدي\"";
            mcs_register_buton_start    = "ليس لديك حساب،";
            mcs_register_buton_end      = "إشترك الآن";
            mcs_product                 = "نتاج";
            mcs_user_or_password_invalid = "اسم المستخدم أو كلمة المرور غير صحيحة";
            mcs_share_video_prompt      = "كنت تستخدم  غير  شبكة واي فاي  التبديل إلى  شبكة واي فاي  ، يرجى  إعادة  تقاسم ";
            mcs_download_video_prompt   = "كنت تستخدم  غير  شبكة واي فاي،  تحميل  سوف يولد  تدفق  التكاليف  في الاستمرار؟";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "عادي";
            mcs_common_problem          = "أسئلة وأجوبة";
            msc_enter_comment           = "أدخل التعليق";
            msc_description             = "وصف";
            mcs_parameter               = "المعلمات";
            mcs_help_and_feedback       = "مساعدة واقتراحات";
            mcs_personal_center         = "مركز الشخصية";
            mcs_version                 = "إطلاق";
            mcs_language                = "لغة";
            mcs_new_user                = "أنا مستخدم جديد";
            mcs_have_account            = "هل لديك حساب";
            mcs_try_it                  = "تجربة";
            mcs_sign_up_now             = "التسجيل";
            mcs_input_confirm_password  = "تأكيد كلمة المرور";
            mcs_warranty_registration   = "ضمان التسجيل";
            mcs_get_more_cameras        = "الحصول على مزيد من الكاميرات";
            mcs_user_inactive           = " المستخدمين  غير نشط ";
            mcs_format_options          = "شكل";
            mcs_slide_screen            = "تنزلق الشاشة لضبط زاوية الفيديو";
            mcs_zoom_in_screen          = "يمكن العجن الشاشة تكبير تفاصيل الفيديو";
            mcs_pause                   = "وقفة";
            mcs_source                  = "مصدر";
            mcs_magnetic                = "جذاب";
            mcs_sos                     = "زر الطوارئ";
            mcs_input_download_path     = "تحميل مسار";
            mcs_download_path_name_error = "تحميل اسم مسار الملف يمكن أن تحتوي على حروف فقط (أ-z و A-Z) أو رقمية (0-9)";
            mcs_active                  = "نشاط";
            mcs_out                     = "ترك";
            mcs_quiet                   = "هدوء";
            mcs_scenes                  = "مشهد";
            mcs_accessory               = "ملحق";
            mcs_quiet_mode              = "الوضع الصامت";
            mcs_active_mode             = "الوضع النشط";
            mcs_out_mode                = "وضع بالخارج";
            mcs_add_accessory           = "إضافة مرفقات";
            mcs_accessory_type          = "الإكسسوارات نوع";
            mcs_add_successfully        = "وأضاف بنجاح";
            mcs_set_scene               = "وقد المرفقات لم تحدد بعد مكان الحادث، الرجاء الضغط";
            mcs_to_set                  = "لتعيين";
            mcs_add_accessory_button    = "اضغط على الزر حتى يذهب الضوء الأحمر مرة أخرى لاستكمال الوظيفة";
            mcs_auto_monday             = "يوم الإثنين";
            mcs_auto_tuesday            = "يوم الثلاثاء";
            mcs_auto_wednesday          = "يوم الأربعاء";
            mcs_auto_thursday           = "يوم الخميس";
            mcs_auto_friday             = "يوم الجمعة";
            mcs_auto_saturday           = "يوم السبت";
            mcs_auto_sunday             = "يوم الأحد";
            mcs_search                  = "بحث";
            mcs_format_input            = "تهيئة القرص الصلب";
            mcs_get_accessory_failed    = "فشل المرفق للحصول على";
            mcs_get_scene_failed        = "الحصول على سيناريوهات الفشل";
            mcs_search_failed           = "البحث فشل";
            mcs_add_failed              = "إضافة فشل";
            mcs_ethernet_connect        = "اتصال إيثرنت";
            mcs_action_click_retry      = "انقر فوق إعادة المحاولة";
            mcs_wifi_config_failure_detail = "أو يمكنك محاولة";
            mcs_qrcode_connect          = "رمز ثنائي الأبعاد على اتصال";
            mcs_close_sound_prompt      = "مفتوحة الصوت يساعد على اتصال واي فاي، أمسك الهاتف مقربة من رئيس الميكروفون كاميرا";
            mcs_qrcode_prompt_title     = "إرضاء العمليات هو مبين في الشكل";
            mcs_qrcode_prompt_detail    = "يرجى تهدف عدسة الكاميرا على رمز الاستجابة السريعة بالضبط والحفاظ على المسافة تكون 30CM.";
            mcs_select_wifi_prompt      = "لا كابل إيثرنت اللازمة";
            mcs_select_ethernet_prompt  = "كابل إيثرنت حاجة لإعداد فقط";
            mcs_enter_config_mode_prompt = "يرجى مراجعة مؤشر واي فاي هو ثلاثة الحمراء ثلاث فلاش أخضر بالتناوب. إذا كان الأمر كذلك، يرجى النقر على زر التالي. إن لم يكن، اضغط على زر إعادة الضبط على الكاميرا. ثم تحقق من المؤشر واي فاي مرة أخرى";
            mcs_no_enter_config_mode    = "لا يدخل وضع التكوين";
            mcs_record_time             = "تسجيل مدة (ثانية )";
            mcs_stop_search             = "التوقف عن البحث";
            mcs_smart_wifi_setup        = "الإعداد واي فاي الذكية";
            mcs_ethernet_setup          = "إعداد إيثرنت";
            mcs_wifi_config_restore_start = "1) أكد من أن الجهاز  تم  توصيل التيار الكهربائي";
            mcs_wifi_config_restore_end = "2) اضغط على اعادة فتحه لثانية واحدة، وسيقوم الجهاز استعادة وإعادة تشغيل بعد 60 ثانية، ثم ستدخل وضع التكوين تلقائيا";
            mcs_Sense_schedule          = "تخطيط السيناريو";
            load_succeed                = "نجاح التحميل";
            load_fail                   = "فشل تحميل";
            refresh_succeed             = "تحديث النجاح";
            refresh_fail                = "فشل التحديث";
            mcs_ensure_dev_power        = "1) تأكد من أن الجهاز  تم  توصيل التيار الكهربائي";
            all_refresh_complete        = "جميع البيانات يتم تحديث";
            mcs_synchronize             = "متزامن";
            mcs_synchronize_detail      = "لمحات من المعدات والإعدادات غير متناسقة التالية ، تحتاج إلى أن تكون متزامنة إلى العمل بعد";
            mcs_Sense_Schedule_Set      = "مجموعة تخطيط السيناريو";
            mcs_Sence_Schedule_detail   = "إذا قمت بتمكين وضع المشهد التلقائي ، سيقوم النظام تلقائيا التبديل وفقا ل سيناريوهات التخطيط السيناريو في أوقات مختلفة";
            mcs_Scene_set               = "لمحات";
            mcs_Scene_set_detail        = "إذا قمت بتمكين الشخصية ، و الشخصية وفقا للإعدادات التي قدمت في الصفحات التالية";
            mcs_send_message            = "إرسال رسالة";
            mcs_start_recording         = "بدء التسجيل";
            mcs_start_capture           = "القبض على بدء";
            mcs_turn_on_video           = "ل ترك وضع التسجيل مستمر ، يرجى فتح الفيديو";
            mcs_search_press_button     = "اضغط على الزر مرة أخرى لمدة 1 ثانية بعد الإفراج عنهم، ويومض المؤشر ببطء";
            mcs_add_fail1               = "كما   تم إلغاء   إضافة   معدات   الصحافة قصيرة   ، انقر فوق   إعادة   المحاولة   في البحث   إضافة";
            mcs_add_fail2               = "إضافة إلى   فشل   المعدات   ، انقر فوق   إعادة   المحاولة   في البحث   إضافة";
            mcs_recording_duration      = "تسجيل مدة (ثانية )";
            mcs_settings_unsaved        = "لم يتم حفظ الإعدادات الخاصة بك";
            mcs_want_save               = "هل حفظ ؟";
            mcs_camera                  = "كاميرا فيديو";
            mcs_router                  = "راوتر";
            mcs_start_up                = "بداية";
            mcs_cancle_add              = "تم إلغاء المعدات بسبب الصحافة إضافة قصيرة";
            mcs_visit_photo_fail        = "فشل  زيارة  البوم";
            mcs_camera_cell             = "الكاميرا";
            mcs_myphoto                 = "صور لي ";
            mcs_select_photo            = "اختر الألبوم";
            mcs_app_new_version         = "النسخة الجديدة";
            mcs_update_new_version      = " ترقية على الفور";
            mcs_app_new_version_prompt  = "التطبيق لديه الإصدار الجديد، حدد ترقية تحميل التحديث الآن";
            download_failed             = "فشل تحميل";
            mcs_connect_server_prompt   = "يتم توصيل واي فاي، وتوصيله إلى خادم";
            mcs_local_search            = "البحث المحلي";
            mcs_choose_device_type      = "اختيار نوع الجهاز";
            mcs_wifi_state              = " ملاحظة:  واي فاي  يعمل بشكل صحيح،  يمكنك الآن  قطع  الكابل  (  افصل  الكابل  قد تظهر بعد  المعدات  لا على الانترنت  ، يرجى  الانتظار  20 ثانية  تلقائيا  على الانترنت  ) ";
            mcs_sweep                   = "اكتساح";
            mcs_wifi_config_tip         = " كان  هناك  واي فاي  جهاز التوجيه،  وتجنب  الأسلاك من الم";
            mcs_ethernet_config_tip     = " يوجد  راوتر  مريحة  توصيل كبل الشبكة";
            mcs_ethernet_connect_step_one = " الخطوة الأولى:  تأكد من  توصيل  سلك الطاقة  1  مقبس";
            mcs_ethernet_connect_step_two = " الخطوة الثانية:  من خلال  كابل  ربط  راوتر  4  منافذ  شبكة فتح  الكا";
            mcs_sweep_qrcode_tip        = " الكاميرا  هو  2D الباركود  المسح الضوئي،  على  مسافة حوالي  30";
            mcs_sound_config_tip        = " تشغيل الصوت  يساعد على  اتصال واي فاي  .  (  أو يمكنك اختيار  إيقاف";
            mcs_sosalt                  = "%@ : إنذار زر الطوارئ(%@)";
            mcs_dooralt                 = "%@ : تنبيه المغناطيسي(%@)";
            mcs_wifi_config_restore     = " اضغط  على مفتاح إعادة  ثانية  بعد  فك  \'  وصلت الجهاز  واي فاي  تكوين  نموذج\' ";
            mcs_voice_remind_heard      = "قد   تسمع   صوت موجه";
            mcs_netWork_prompt          = " شبكة  عاجل";
            mcs_con_netWork             = "شبكة قيد الاستخدام حاليا لاتصال البيانات، فإنه قد تستهلك الكثير من حركة المرور، إذا حددت إعدادات واجهة الشبكة للقفز";
            mcs_no_netWork              = " حاليا لا يوجد اتصال الشبكة، سواء كانت القفزة لاقامة واجهة إعدادات الشبكة";
            mcs_exception_des           = "لديك التطبيق خروج استثناء الماضي، سواء بإرسال تقرير عن الخطأ إلى خادم";
            mcs_exception_prompt        = "تلميح غير طبيعي";
            mcs_erro_diagnosis          = "استكشاف الأخطاء وإصلاحها";
            mcs_erro_log_des            = "التطبيق سجل مؤخرا سجل خطأ، حدد زر الإرسال لتحميل سجل خطأ، وشكرا لكم لتعاونكم!";
            mcs_is_submitting           = "تقديمها";
            mcs_firmware_version        = "إصدار البرنامج الثابت";
            mcs_device_assembly         = "1. سلك الطاقة 2. منفذ الطاقة منفذ إيثرنت 3. 4. 5. كابل محول";
            mcs_forgetpass_action_wizard_old = "اضغط على زر إعادة الضبط لثانية واحدة، وسيقوم الجهاز استعادة ضبط المصنع و 60 ثانية بعد بداية الشوط الثاني، واستعادة كلمة السر المشرف";
            mcs_device_assembly_mipc    = "1. سلك الطاقة 2. منفذ الطاقة 3. منفذ إيثرنت 4. كابل";
            mcs_device_connect_power_prompt = " الجهاز لا  على الانترنت،  يرجى  كما هو مبين  على الجهاز الخاص بك  الوصول إلى  إمدادات الطاقة  إمدادات الطاقة  ،  قد  ترى  الضوء الأحمر  المعدات  دائما على،  بدء  الانتهاء. ";
            mcs_lights_sound            = " قد  ترى  الضوء  ";
            mcs_connect_power           = " ربط السلطة";
            mcs_search_magnetic         = "كما هو مبين، الباب المغناطيسي جنبا إلى جنب واضغط على زر الجانب لمدة 1 ثانية بعد الإفراج عنهم، ويومض المؤشر ببطء";
            mcs_add_magnetic            = "بعد فتح باب استشعار لدمج ، راجع مؤشر فلاش قبالة الانتهاء من إضافة";
            mcs_already_downloaded      = "تحميل";
            mcs_my_order                = " طلبي ";
            mcs_auto_mode               = "الوضع التلقائي";
            mcs_new_small               = "الأصغر";
            mcs_new_half                = "لصغيرة";
            mcs_new_normal              = "العادي";
            mcs_new_hd                  = "عالية الدقة";
            mcs_scene_now               = "المشهد   الحالي";
            mcs_please_install_wechat   = " الرجاء تثبيت  WeChat";
            mcs_wechat_not_support      = " WeChat  النسخة لا تدعم  يرجى تحديث  WeChat ";
            mcs_motion_alert            = "الحركة في حالة تأهب";
            mcs_io_alert                = "I/O حالة تأهب";
            mcs_valid_user_name         = " الخطوة الأولى:  الرجاء إدخال  اسم مستخدم صالح ";
            mcs_binding_mailbox         = " الخطوة الثانية:  أدخل  البريد  ملزم ";
            mcs_send_mailbox_succuess_prev = " ونحن قد  نقل  لك  ربط  صندوق البريد  ";
            mcs_send_mailbox_succuess_next = "  إرسال  رسالة  كلمة السر استرداد  البريد الإلكتروني،  يرجى ملاحظة أن  تلقي البريد  .  ";
            mcs_all_image               = " جميع الصور ";
            mcs_unavailable_image       = " الصور  غير متوفرة،  يرجى إعادة  اختيار ";
            mcs_set_nickname            = "وضع لقب";
            mcs_search_timeout          = "الوقت للبحث ، انقر فوق بحث مرة أخرى";
            mcs_screen_size             = "إعدادات الشاشة";
            mcs_screen_reset            = "تعيين بنجاح، تحتاج إلى إعادة تشغيل الكاميرا لالتقاط تأثير";
            mcs_wifi_network_prompt     = " الرجاء التحقق من  اتصال  واي فاي  كاميرا  هل  هو  5GHz  واي فاي  ، يرجى الحصول على  اتصال  واي فاي  الكاميرا  2.4 غيغاهرتز ";
            mcs_fault_diagnosis         = "تشخيص الشبكة";
            mcs_sever_diagnosis         = " ربما بسبب  فشل الخادم  ، مما أدى إلى عدم  الاستخدام العادي. ";
            mcs_select_problem          = " يرجى  اختيار المشكلة ";
            mcs_connot_lonin            = " لا يمكن  تسجيل الدخول";
            mcs_connot_play             = "  لا يمكن تشغيل ";
            mcs_add_problems            = " أسئلة إضافية ";
            mcs_encounterer_problems    = " الرجاء إدخال  المشاكل ";
            mcs_diagnostic_network      = "بدء التشخيص";
            mcs_network_diagnostic_prompt = "دخلت  شبكة التشخيص  يمكن أن  تساعدنا على  حل  المشاكل الخاصة بك  ، تشخيص  الاحتياجات من  حوالي  بضع دقائق";
            mcs_network_diagnostic      = "استكشاف الأخطاء وإصلاحها";
            mcs_connecting_server       = " الاتصال إلى الملقم  ....... ";
            mcs_diagnostic_process_prompt = "قد تستغرق عملية التشخيص عدة دقائق، أثناء التشخيص لا إجراء عمليات أخرى، ولكن يمكنك وقف دائما التشخيص";
            mcs_diagnostic_results      = " نتائج التشخيص ";
            mcs_diagnostic_results_received = "تشخيص كاملة، وقد وردت نتائج التشخيص";
            mcs_diagnostic_results_prompt = "شكرا لك على المشاركة في هذا التشخيص، ونتائج التشخيص تساعدنا على حل المشكلة في أقرب وقت ممكن";
            mcs_results_no_abnormality  = " نتائج التشخيص  دون استثناء ";
            mcs_no_abnormality_prompt   = "التشخيص وجد أي خلل. يمكنك اختيار عمق التشخيص، وبدء قدرات جمع السجل سوف تساعدنا على تحسين حل المشكلة التي تواجهها";
            mcs_continue_diagnosis      = "عمق التشخيص";
            mcs_diagnosis_connot_sent   = " نتائج التشخيص  لا يمكن إرسال ";
            mcs_email_sends             = " إرسال البريد الإلكتروني ";
            mcs_email_sends_prompt      = "إرسال نتائج التشخيص لنا عن طريق البريد الإلكتروني، وسوف تساعدنا في حل المشكلة في أقرب وقت ممكن";
            mcs_diagnosis_send          = " إرسال";
            mcs_diagnosis_email         = "البريد الإلكتروني";
            mcs_send_successful         = "أرسلت بنجاح";
            mcs_diagnosis_type_select_prompt = "الرجاء اختيار نوع من التشخيص";
            mcs_stop_diagnosis          = "توقف التشخيص";
            mcs_detail_diagnosis_prompt = "التشخيص المضي قدما، يمكنك إيقاف صفحة الجهاز";
            mcs_detail_diagnosis_stop_prompt = "التشخيص عمق قيد التقدم، يمكنك إجهاض دائما";
            mcs_exit_detail_diagnosis   = "التشخيص عمق في التقدم، سواء لوقف؟";
            mcs_network_connection_unavailable = "اتصال الشبكة غير متوفر";
            mcs_Failed_connect_Internet = "فشل في الاتصال بالإنترنت";
            mcs_connect_internet_note   = "إذا كنت بحاجة إلى الاتصال بالإنترنت، يرجى ملاحظة ما يلي:";
            mcs_connect_internet_detail_first = "تحقق من إعدادات الشبكة المحلية اللاسلكية الهاتف الخاص بك، لمعرفة ما إذا كان هناك إمكانية الوصول إلى إشارة الشبكة المحلية اللاسلكية";
            mcs_connect_internet_detail_second = "معرفة ما اذا كان الهاتف الخاص بك لديه حق الوصول إلى شبكة للهاتف المحمول، وأنه لم يتم تعطيل الهاتف";
            mcs_connect_wifi_note       = "إذا كان لديك الوصول إلى الشبكة المحلية اللاسلكية:";
            mcs_connect_wifi_detail     = "تحقق لمعرفة ما إذا كان لديك اتصال لاسلكي الساخنة LAN لديه حق الوصول إلى شبكة الإنترنت، أو إذا كانت ساخنة يسمح الجهاز للوصول إلى LAN";
            mcs_device_or_phone_time_zone_not_equals_please_select = "جهاز المنطقة الزمنية الحالية والمنطقة الزمنية للهاتف المحمول لا، حدد المنطقة الزمنية الصحيحة";
            mcs_phone_timezone          = "المنطقة الزمنية الهاتف";
            mcs_timezone_change         = "تعديل المنطقة الزمنية";
            mcs_mail_send               = "رسالة أرسلت";
            mcs_yes_verif               = "ومن";
            mcs_no_verif                = "لا";
            mcs_camera_found_new_version_y_n_upgrade = "لقد وجدنا نسخة جديدة من الكاميرا، سواء للترقية؟";
            mcs_auto_adapt_split_screen = " التكيف ";
            mcs_four_split_screen       = " ربع  الشاشة ";
            mcs_nine_split_screen       = " 9  تقسيم الشاشة ";
            mcs_twelve_split_screen     = " 12  تقسيم الشاشة ";
            mcs_not_connection_server   = "غير قادر على الاتصال بخادم";
            mcs_more_options            = "انظر المزيد من";
            mcs_bind_email_prompt       = "وذلك لحساب الأمن، ربط صندوق البريد الخاص بك";
            mcs_login_now               = "تسجيل الدخول الآن";
            mcs_device_connect_power    = " 1 -  2  -  فتح  خط إمدادات الطاقة  إمدادات الطاقة ";
            mcs_device_connect_ethernet = " 1 -  منفذ الشبكة 2.كابل";
            mcs_device_connect_ethernet_prompt = " نهاية  الوصول إلى  منفذ شبكة  الكابلات  ، والطرف الآخر  الوصول إلى جهاز التوجيه  ،  قد  ترى  منفذ شبكة  مصباح  وميض أخضر  ،  شبكة  اتصال كاملة  . ";
            mcs_pwd_format              = " شكل كلمة السر  :  من 8 إلى  16 بت  في الطول  بين الحروف  ، الأرقام،  حروف  و  رموز خاصة  تحتوي على ما لا يقل عن  ثلاثة ";
            mcs_client_new              = " العميل ";
            mcs_user_guide              = " دليل المستخدم ";
            mcs_ebitcam_download_describe = " ebitcam  هو  رصد  البرمجيات خدمة  سحابة  ،  سحابة  هذا البرنامج  مع  كاميرا  الفيديو  في أي وقت وفي أي مكان  ،  يسمح للمستخدمين  لعرض  المعلومات،  ونحن نقدم لك  تجربة مشاهدة  واضحة  ، على نحو سلس  ،  التحكم الذكي  يجعلك  تتردد في  رعاية  أسرهم  ، مثل  المستخدمين  تحميل تعال  ! ";
            mcs_mipc_download_describe  = " mipc  هو  رصد  البرمجيات خدمة  سحابة  ،  سحابة  هذا البرنامج  مع  كاميرا  الفيديو  في أي وقت وفي أي مكان  ،  يسمح للمستخدمين  لعرض  المعلومات،  ونحن نقدم لك  تجربة مشاهدة  واضحة  ، على نحو سلس  ،  التحكم الذكي  يجعلك  تتردد في  رعاية  أسرهم  ، مثل  المستخدمين  تحميل تعال  ! ";
            mcs_guide_download          = " تحميل كتاب ";
            mcs_password_admin          = "إدارة كلمة المرور";
            mcs_already_read            = "كنت قد  قرأت ووافقت على";
            mcs_privacy_policy          = "سياسة الخصوصية";
            mcs_not_agree_privacy_policy = " أنت لم  توافق على  سياسة الخصوصية";
            mcs_reload                  = "إعادة تحميل";
            mcs_start_download          = "تحميل الآن";
            mcs_video_play_fail         = "فشل  تشغيل الفيديو";
            mcs_download_app_tips       = "يمكنك أيضا  محاولة استخدام الكمبيوتر العميل";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = " نوع الجهاز ";
            mcs_connect_device_wifi     = " الكاميرا  لا يدعم  5GHz  واي فاي ";
            mcs_send_diagnosis_results  = "نتائج التشخيص  في  ارسال  ...";
            mcs_local_file              = " الملفات المحلية ";
            mcs_local_device            = "جهاز محلي ";
            mcs_export_sd_data          = " تصدير  البيانات  من بطاقة الذاكرة الرقمية المؤمنة ";
            mcs_shaking                 = "هز رأسه  سلسلة آلة ";
            mcs_outdoor                 = "في الهواء الطلق  سلسلة آلة";
            mcs_card                    = "بطاقة آلة  سلسلة";
            mcs_wifi_connection         = "اتصال واي فاي";
            mcs_home_mode               = "وضع المنزل";
            mcs_away_home_mode          = "الوضع بعيدا";
            mcs_auto_switch_mode        = "التبديل تلقائيا";
            mcs_select_scene_mode       = "الرجاء اختيار الشخصية";
            mcs_7x24_hours_prompt       = "7X24 المفتوحة (ح) تسجيل";
            mcs_all_day_recording       = "فيديو اليوم";
            mcs_home_mode_prompt        = "وضع الرئيسية: جميع أجهزة الإنذار المعدات إغلاق";
            mcs_away_home_mode_prompt   = "من وضع: إيقاف جميع أجهزة الإنذار المعدات";
            mcs_at_home                 = "في المنزل";
            mcs_away_home               = "خارج";
            mcs_set_timezone_prompt_start = "المنطقة الزمنية الخاصة بك";
            mcs_set_timezone_prompt_end = "تاريخ / وقت";
            mcs_set_wifi_remind_head    = "الأسئلة التالية   قد تؤدي إلى   فشل   التوصية   تجنب   كاميرا   شبكة   ،";
            mcs_set_wifi_remind_1       = "تحقق ما إذا كان   فتح   شبكة   واي فاي   على   فرك   ،   هذه الإعدادات   قد يؤدي إلى   كاميرا   الشبكات   غير طبيعي   .   يمكنك   إغلاق مؤقت   لمنع   فرك   شبكة،   شبكة   كاميرات   النجاح   بعد   استعادة   إعدادات   جهاز التوجيه";
            mcs_set_wifi_remind_2       = "إذا كان   منزلك   هو   تردد   جهاز التوجيه،   الرجاء التحقق من   اتصال   واي فاي   كاميرا   هل   هو   5GHz   واي فاي،   يرجى الحصول على   اتصال   واي فاي   الكاميرا   2.4 غيغاهرتز";
            mcs_set_wifi_remind_3       = "الكاميرا   لا تدعم   وبا   /   WPA2   على مستوى المؤسسة   واي فاي   واي فاي   ،   الرجاء   اختيار آخر";
            mcs_set_wifi_remind_4       = "إذا كان   منزلك   هو   سد   سد   واي فاي   ، لأن   الأسباب   قد يؤدي إلى   الشبكة الخاصة بك   غير مستقرة جدا،   توصيات   غير   سد   اتصال   واي فاي";
            mcs_set_wifi_remind_5       = "واي فاي   كاميرا   على   ما طلب";
            mcs_record_save_to_my_file  = "حفظ الفيديو إلى ملفات بلدي";
            mcs_view_now                = "عرض الآن";
            mcs_search_sos_strat        = "كما هو مبين، واضغط على الزر السفلي";
            mcs_search_sos_end          = "ثانية واحدة، ومؤشر الجهاز وميض";
            mcs_search_magnetic_start   = "كما هو مبين، الباب المغناطيسي جنبا إلى جنب، اضغط على زر الجانب";
            mcs_search_magnetic_end     = "ثانية واحدة، ومؤشر الجهاز وميض";
            mcs_adding                  = "مضيفا";
            mcs_record_empty_set_sd     = "إدراج بطاقة الذاكرة الرقمية المؤمنة يمكن تخزين التاريخ فيديو";
            mcs_video_play_offline      = "الجهاز غير متواجد حاليا";
            mcs_video_play_network_fail = "اتصال الشبكة فشلت، حاول مرة أخرى في وقت لاحق";
            mcs_alert_notify_guide1     = "[الأصل] عملية كشف الحركة على الهجرة إلى [مرفق]، [من] إعدادات ملف التعريف";
            mcs_alert_notify_guide2     = "العملية على النحو التالي:";
            mcs_alert_notify_guide3     = "اختر [مشهد]، تحتاج إلى تشغيل من وضع تسليح، تحتاج لفتح في وضع نزع المنزل;";
            mcs_alert_notify_guide4     = "حدد [اكسسوارات] - [قائمة اكسسوارات] - تشغيل وضع [كشف الحركة] من الإنذار، والفيديو، والتصوير الفوتوغرافي، وظيفة التنبيه IO، إيقاف التنبيه على وضع المنزل والفيديو وغيرها من المهام.";
            mcs_plan_protect_guide1     = "[الأصل] عملية خطة تسليح هاجرت إلى [سيناريو]";
            mcs_plan_protect_guide2     = "حدد [سيناريو]، وملامح مفتوحة التبديل التلقائي؛";
            mcs_plan_protect_guide3     = "اختر";
            mcs_plan_protect_guide4     = "، والحاجة إلى فترة تسليح (على سبيل المثال: الثلاثاء، 7: 00-18: 00) الواردة اسطة؛ بعد موافق لحفظ والعودة إلى علامة التبويب إعدادات.";
            mcs_plan_record_guide       = "حدد [فيديو]، وتتحول وظيفة تسجيل واسطة.";
            mcs_plan_record_guide1      = "[فيديو] عملية خطة تسليح هاجرت إلى [تخطيط التصوير]";
            mcs_plan_record_guide2      = "إن الحاجة لتسجيل الفترة الزمنية (على سبيل المثال: الثلاثاء، 7: 00-18: 00) الواردة اسطة؛ بعد موافق لحفظ والعودة إلى علامة التبويب إعدادات.";
            mcs_forgetpass_action_prompt = "يرجى الضغط على جهاز إعادة تعيين حفرة إعادة تعيين 10 ثانية بعد الإفراج عنهم، أضواء والمعدات لاستعادة إعدادات المصنع الأشعة تحت الحمراء";
            mcs_cloud_box               = "سحابة صندوق";
        }/* ar */
        else if(lang == "ru")
        {
            mcs_name                    = "Имя";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "Имя";
            mcs_old_nick                = "Имя пользователя";
            mcs_linked                  = "Подключено";
            mcs_sign_in                 = "Войти";
            mcs_back                    = "Назад";
            mcs_will_back               = "вернется";
            mcs_add                     = "Добавить";
            mcs_add_device              = "Добавить камеру";
            mcs_device_existed          = "Устройство уже добавлено";
            mcs_cancel                  = "Отмена";
            mcs_exit                    = "Выход";
            mcs_remember_password       = "Сохранить пароль";
            mcs_password_remembered     = "Пароль сохранен";
            mcs_sign_ining              = "Авторизация...";
            mcs_cloud_server            = "Облачный сервер";
            mcs_input_device_id         = "Введите ID номер камеры";
            mcs_input_username          = "Введите логин";
            mcs_input_email_addr        = "Введите адрес электронной почты";
            mcs_email_address           = "адрес электронной почты";
            mcs_email                   = "почтовый ящик";
            mcs_binding                 = "обязательный";
            mcs_binding_email           = "Связывание сообщения";
            mcs_binding_send_prompt     = "Связывание сообщения";
            mcs_binding_email_prompt    = "Связывание сообщения";
            mcs_input_password          = "Введите пароль";
            mcs_access_server_failed    = "Ошибка подключения к серверу";
            mcs_device_offline          = "Камера не в сети";
            mcs_invalid_password        = "Неверный пароль";
            mcs_invalid_dev             = "Устройство не существует";
            mcs_login_faided            = "Ошибка при входе";
            mcs_invalid_qrcode          = "Неверный QR-код ";
            mcs_please_input_username   = "Введите логин";
            mcs_please_input_password   = "Вводите пароль";
            mcs_qrcode_scan_hint        = "Держите окно в нижней части устройства выравнивается двумерный код";
            mcs_device_list_empty       = "Список оборудование пуст";
            mcs_record_list_is_empty    = "Список видиеозаписей пуст";
            mcs_password_expired        = "Истек срок действия пароля";
            mcs_set_video_size          = "Задать разрешение видеопотока";
            mcs_hd_1280x720             = "HD [1280x720]";
            mcs_auto                    = "Автоматически";
            mcs_normal_640x360          = "Стандартное [640x360]";
            mcs_half_320x180            = "Среднее [320x180]";
            mcs_small_160x90            = "Минимальное [160x90]";
            mcs_play                    = "Воспроизведение";
            mcs_settings                = "Настройки";
            mcs_messages                = "Сообщения";
            mcs_alarm                   = "Тревога";
            mcs_delete                  = "Удалить";
            mcs_delete_camera           = "Удалить ";
            mcs_apply                   = "Применить";
            mcs_speed                   = "Скорость";
            mcs_others                  = "Другие";
            mcs_audio                   = "Звук";
            mcs_speaker                 = "Динамик";
            mcs_mic                     = "Микрофон";
            mcs_power_frequency         = "Частота сети питания";
            mcs_online_upgrade          = "Обновить ПО через интернет";
            mcs_restore_the_factory_settings = "Восстановить заводские установки";
            mcs_restore                 = "Восстановить";
            mcs_restore_camera          = "Перезапуск устройства";
            mcs_start_upgrade           = "Начать обновление";
            mcs_system                  = "Системные";
            mcs_system_settings         = "Системные установки";
            mcs_online                  = "В сети";
            mcs_offline                 = "Не в сети";
            mcs_query                   = "Показать";
            mcs_begin_time              = "Начало интервала";
            mcs_end_time                = "Конец интервала";
            mcs_mode                    = "Режим";
            mcs_opened                  = "Открытый";
            mcs_high                    = "Высокий";
            mcs_middle                  = "Средний";
            mcs_low                     = "Низкий";
            mcs_io_alert_input          = "Вход I/O";
            mcs_io_alert_output         = "Выход I/O";
            mcs_normally_open           = "Н.О.";
            mcs_normally_close          = "Н.З.";
            mcs_motion_detection_sensitivity = "Чувствительность датчика движения";
            mcs_daytime                 = "День";
            mcs_night                   = "Ночь";
            mcs_sdcord                  = "SD карта";
            mcs_storage_device          = "Устройства хранения данных";
            mcs_set_mask                = "Маска";
            mcs_status                  = "Состояние";
            mcs_capacity                = "Объем";
            mcs_usage                   = "Занято";
            mcs_format                  = "Форматировать";
            mcs_repair                  = "Восстановить";
            mcs_formating               = "Форматирование";
            mcs_repairing               = "Восстановление";
            mcs_mounted                 = "Подключена";
            mcs_unmounted               = "Отключена";
            mcs_mount                   = "Подключить";
            mcs_unmount                 = "Отключить";
            mcs_ethernet                = "Проводная сеть";
            mcs_wifi                    = "Беспроводная сеть";
            mcs_enabled                 = "Включено";
            mcs_mac_address             = "MAC адрес";
            mcs_network_status          = "Состояние сети";
            mcs_wifi_mode               = "Режим Wi-Fi";
            mcs_client                  = "Клиент";
            mcs_ap                      = "ТД";
            mcs_start_address           = "Начальный адрес";
            mcs_end_address             = "Конечный адрес";
            mcs_gateway                 = "Шлюз";
            mcs_select_network          = "Выберите сеть";
            mcs_dhcp_ip                 = "Использовать DHCP для получения IP";
            mcs_dhcp_dns                = "Использовать DHCP для получения DNS";
            mcs_ip_address              = "IP адрес";
            mcs_network_mask            = "Маска подсети";
            mcs_input_secondary_dns     = "Введите вторичный DNS";
            mcs_secondary_dns           = "Вторичный DNS";
            mcs_input_dns               = "Введите DNS";
            mcs_input_alternate_dns     = "Введите запасной DNS";
            mcs_input_ip                = "Введите IP адрес";
            mcs_input_gateway           = "Введите шлюз";
            mcs_input_network_mask      = "Введите маску подсети";
            mcs_wifi_list               = "Wi-Fi сети";
            mcs_display_date            = "Отображать дату";
            mcs_date_format             = "Формат даты";
            mcs_display_time            = "Отображать время";
            mcs_time_format             = "Формат времени";
            mcs_24_hour                 = "24 часовой";
            mcs_12_hour                 = "12 часовой";
            mcs_display_weeks           = "Отображать день недели";
            mcs_date_time               = "Дата/время";
            mcs_set_time                = "Задать время";
            mcs_set_week                = "Задать неделю";
            mcs_stream                  = "Поток данных";
            mcs_encode                  = "Тип кодека";
            mcs_resolution              = "Разрешение";
            mcs_frame_fate              = "Кадров в секунду";
            mcs_maximum_bitrate         = "Максимальный битрейт";
            mcs_minimum_bitrate         = "Минимальный битрейт";
            mcs_i_frame_interval        = "Интервал I-Frame";
            mcs_video                   = "Видео";
            mcs_sampling_rate           = "Частота отбора(kHz)";
            mcs_nickname                = "Никнейм";
            mcs_old_password            = "Старый пароль";
            mcs_confirm_password        = "Подтвердить пароль";
            mcs_modify_password         = "Изменить пароль";
            mcs_password                = "Пароль";
            mcs_admin_password          = "Пароль администратора";
            mcs_guest_password          = "Гостевой Пароль";
            mcs_product_info            = "Информация о камере";
            mcs_software_version        = "Версия ПО";
            mcs_device_id               = "Код камеры";
            mcs_operation               = "Операция";
            mcs_record                  = "Видеозапись";
            mcs_record_2                = "Видеозапись";
            mcs_upgrade_now             = "Обновить сейчас";
            mcs_upgrading               = "Идет обновление";
            mcs_already_latest_version  = "Установлена последняя версия";
            mcs_sensitivty              = "Чувствительность";
            mcs_user_defined            = "Пользовтельский";
            mcs_time                    = "Время";
            mcs_date                    = "Дата";
            mcs_finish                  = "Закончить";
            mcs_delete_fail             = "Исключить неудачи";
            mcs_motion                  = "По движению";
            mcs_start                   = "Начать";
            mcs_talk                    = "Говорите";
            mcs_password_input_inconsistent = "Пароли не совпадают";
            mcs_input_6_to_20_litters   = "Входные 6-20 буквы (A-Z, Z-) или цифры (0-9)";
            mcs_user_letter_range_hint  = "счета  для  32  цифр  или  букв  (  0 - 9  )  (  a - z  ,  должны  начинаться с буквы  a - z  )";
            mcs_password_range_hint     = "Пароль должен быть 6-32 букв или цифр";
            mcs_begin_with_the_letters  = "Должен начинаться с буквы";
            mcs_sign_up                 = "Войти";
            mcs_sign_up_failed          = "Ошибка входа";
            mcs_successful_sign_up      = "Выполнен вход";
            mcs_are_you_sure_delete     = "Вы уверены, что хотите удалить?";
            mcs_failed_to_set_the       = "Ошибка сохранения настроек";
            mcs_set_successfully        = "Настройки сохранены";
            mcs_downloading             = "Скачивание";
            mcs_wrote                   = "Записано";
            mcs_visit_again_later       = "Пожалуйста, попробуйте зайти позже";
            mcs_restart_failed          = "Ошибка перезапуска";
            mcs_upgrade_failed          = "Ошибка при обновлении";
            mcs_connnected              = "Соединено";
            mcs_connnected_to           = "Подключение к";
            mcs_not_select              = "Не выбрано";
            mcs_message_list            = "Список тревог";
            mcs_saved_password          = "Пароль сохранен";
            mcs_alert                   = "Тревога";
            mcs_no_record               = "Нет видеозаписи";
            mcs_new_about               = "Новый : об устройстве";
            mcs_device                  = "Камера";
            mcs_config                  = "Настройка";
            mcs_change_password_failed  = "Ошибка при смене пароля";
            mcs_do_you_want_restart     = "Перезапустить камеру?";
            mcs_do_you_want_restore     = "Восстановить заводские настройки?";
            mcs_do_you_want_upgrade     = "Обновить версию ПО?";
            mcs_load_end                = "Данные загружены";
            mcs_loading                 = "Загружаю...";
            mcs_down_refresh            = "Потяните вниз для обновления";
            mcs_release_refresh         = "Обновить релиз";
            mcs_refreshing              = "освежающий";
            mcs_release_then_loading_data_hint = "Очистить загруженные данные";
            mcs_pull_refresh_hint       = "Потяните вверх для обновления";
            mcs_restarting              = "Перезапускаю";
            mcs_upgraded_time           = "Время обновления : ";
            mcs_done                    = "Готово";
            mcs_playback                = "Повтор видео";
            mcs_i_o_alarm               = "Тревожный вход";
            mcs_alarm_action            = "Действие при тревоге";
            mcs_alarm_sources           = "Тип тревоги";
            mcs_io_output               = "Тревожный выход";
            mcs_snapshots               = "Скриншот";
            mcs_snapshot                = "Скриншот";
            mcs_snapshot_interval       = "Интервал снятия скриншотов (сек.)";
            mcs_pre_record_length       = "Длительность предварительной записи (сек.)";
            mcs_nick_range_hint         = "Никнейм должен быть менше 20 букв или цифр";
            mcs_save                    = "Сохранить";
            mcs_close                   = "Закрыть";
            mcs_snapshoting             = "Фотосъемка";
            mcs_snapshot_failed         = "Ошибка скриншота";
            mcs_record_failed           = "Ошибка видеозаписи";
            mcs_saved_successfully      = "Сохранен в фотоальбоме";
            mcs_save_failed             = "Ошибка сохранения";
            mcs_restart_to_take_effect  = "Необходим перезапуск";
            mcs_please_allow_access_album = "Пожалуйста, разрешите программе доступ к Вашему фотоальбому.";
            mcs_please_allow            = "Пожалуйста, разрешите ";
            mcs_access_album            = "чтобы получить доступ к фотоальбом";
            mcs_ios_privacy_setting_for_photo_prompt = "может быть изменение дин iPhone \"настройки-> privacy-> фотографии \" найти T, и приложение \"";
            mcs_execute_change          = "\" изменение";
            mcs_access_camera           = " получить доступ к камере";
            mcs_please_allow_access_camera = "Пожалуйста, разрешите доступ программе к вашей камере";
            mcs_ios_privacy_setting_for_camera_prompt = "может быть изменение дин iPhone \"настройки-> privacy-> фотографии \" найти T, и приложение \"";
            mcs_busy_when_write         = "Недоступно для записи";
            mcs_unknown_error           = "Неизвестная ошибка";
            mcs_i_know                  = "Да, я знаю";
            mcs_segment                 = "Сегмент";
            mcs_please_relogin          = "Пожалуйста, зайдите заново";
            mcs_change_password_succeed = "Пароль изменен";
            mcs_upgrade_to_ver          = "Обновить версию";
            mcs_restore_failed          = "Ошибка восстановления";
            mcs_please_restart          = "Пожалуйста, перезапустите ";
            mcs_keep_network_settings   = "Настройки Бронирование сети и пароль";
            mcs_not_connected           = "Нет соединения";
            mcs_sdcard_not_ready        = "SD карта не готова";
            mcs_device_not_exist        = "Устройство недоступно";
            mcs_disable                 = "Отключено";
            mcs_to_determine_the        = "Для определения";
            mcs_alert_on                = "Включить тревогу";
            mcs_alert_off               = "Выключить тревогу";
            mcs_alert_onoff             = "Оповещать вкл / выкл";
            mcs_monday                  = "Понедельник";
            mcs_tuesday                 = "Вторник";
            mcs_wednesday               = "Среда";
            mcs_thursday                = "Четверг";
            mcs_friday                  = "Пятница";
            mcs_saturday                = "Суббота";
            mcs_sunday                  = "Воскресенье";
            mcs_mon                     = "Понедельник";
            mcs_tue                     = "Вторник";
            mcs_wed                     = "Среда";
            mcs_thu                     = "Четверг";
            mcs_fri                     = "Пятница";
            mcs_sat                     = "Суббота";
            mcs_sun                     = "Воскресенье";
            mcs_scheduled_recording     = "Видеозапись по расписанию";
            mcs_schedule                = "Видеозапись по расписанию";
            mcs_scheduled_recording_status = "Состояние видеозаписи по расписанию ";
            mcs_folding                 = "Сворачивать";
            mcs_unfolding               = "Разворачивать";
            mcs_end_time_should_lt_begin = "Время окончания должно быть больше времени начала";
            mcs_recording               = "Идет видеозапись";
            mcs_prerecord_interval_range_hint = "Интервал предварительной записи должен быть меньше 6 секунд";
            mcs_snapshot_interval_range_hint = "Интервал снапшота должен быть от 0 до 60";
            mcs_not_ready               = "Не готово";
            mcs_availablesize           = "Доступное место";
            mcs_reboot                  = "Перезапустить";
            mcs_alerter                 = "Тревога";
            mcs_pir                     = "Пассивный ИК-датчик";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "Кодек";
            mcs_ok                      = "ОК";
            mcs_fault                   = "Ошибка";
            mcs_sensor_status           = "Статус датчика";
            mcs_about                   = "О программе";
            mcs_reset_now               = "Перезапустить сейчас";
            mcs_reset_later             = "Перезапустить позже";
            mcs_prompt                  = "Напоминание";
            mcs_select                  = "Выбор";
            mcs_available_netword       = "Сеть недоступна, запустить настройки сети?";
            mcs_request_send            = "Загрузка...";
            mcs_blank_device_id         = "Задайте код(ID) камеры";
            mcs_blank_username          = "Задайте имя пользователя ";
            mcs_blank_password          = "Задайте пароль";
            mcs_exist_user              = "Такой пользователь уже существует";
            mcs_invalid_user            = "Имя пользователя недействительно";
            mcs_invalid_email_addr      = "Неверный адрес электронной почты";
            mcs_system_err              = "Ошибка системы";
            mcs_exceed_device           = "Достигнуто предельное количсевто одновременных пользователей";
            mcs_continue                = "Продолжить";
            mcs_prompt_exit             = " ли  выход  ?";
            mcs_device_list             = "список устройств";
            mcs_no_sdcard               = "Нет SD карты";
            mcs_no_hard_disk            = "нет жесткого диска";
            mcs_show_more               = "Показать еще...";
            mcs_shotsnop_exists         = "Снапшот уже создан";
            mcs_input_nick              = "Введите имя";
            mcs_nick_not_empty          = "Задайте имя";
            mcs_input_new_pass          = "Введите новый пароль";
            mcs_input_new_pass_again    = "Введите новый пароль еще раз";
            mcs_new_password            = "Новый пароль";
            mcs_modify_network_prompt   = "Изменения настроек сети может привести к ошибке подключения. Пожалуйста, подтвердите свои изменения?";
            mcs_wifi_disable_prompt     = "Отключить Wi-Fi?";
            mcs_eth_disable_prompt      = "Отключить Ethernet?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "Получать автоматически";
            mcs_manually_set            = "Задать в ручную";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "Первичный DNS";
            mcs_client_mode             = "Пользовательский";
            mcs_adhoc_mode              = "Ad-Hoc";
            mcs_connect_fail            = "Ошибка cоединения";
            mcs_dhcp_server             = "DHCP сервер";
            mcs_display_text            = "Отобразить текст";
            mcs_repair_prompt_detail    = "Восстановление может привести к потере некоторых данных на SD-карте. Продолжить?";
            mcs_format_prompt_detail    = "Форматирование удалит все данные на SD-карте. Продолжить?";
            mcs_mount_prompt            = "Загрузить SD карточку, продолжить?";
            mcs_umount_prompt           = "После отключение SD-карты сохранение видеозаписей и скриншотов будет невозможно. Продолжить?";
            mcs_sdcard_reset            = "Настройки сохранены. Перезапустите камеру, чтобы применить настройки.";
            mcs_sdcard_repairing        = "Идет восстановление, ожидайте перезапуска";
            mcs_sdcard_formating        = "Идет форматирование, ожидайте перезапуска";
            mcs_sdcard_umount           = "Отключена";
            mcs_valid                   = "Корректно";
            mcs_io                      = "Тревога внешнего датчика";
            mcs_input                   = "Ввод";
            mcs_outinput                = "Вывод";
            mcs_prompt_alert_on         = "Тревоги включены, продолжить?";
            mcs_auto_sync_date_time     = "автоматическая синхронизация";
            mcs_alarm_record            = "Видеозапись тревоги";
            mcs_username                = "Имя пользователя";
            mcs_re_enter_the_password   = "Введите пароль еще раз";
            mcs_remember_me             = "Запомнить меня";
            mcs_home                    = "Домой";
            mcs_install_the_plug        = "Установить плагин";
            mcs_install_the_video_plug  = "Установиь плагин видео";
            mcs_install_now             = "Установить сейчас";
            mcs_temporarily_installed_use_ordinary_video = "Установить позже";
            mcs_brightness              = "Яркость";
            mcs_contrast                = "Контрастность";
            mcs_color_saturation        = "Насыщенность";
            mcs_sharpness               = "Резкость";
            mcs_duration                = "Продолжительность";
            mcs_index                   = "Индекс";
            mcs_remark                  = "Примечания";
            mcs_media_stream            = "Данные";
            mcs_server                  = "Сервер";
            mcs_media_transfer          = "Передача данных";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "Изготовитель";
            mcs_model                   = "Модель";
            mcs_plugin_version          = "Версия плагина";
            mcs_network_interface       = "Сетевой протокол";
            mcs_transfer_protocol       = "Протокол передачи";
            mcs_year                    = "Год";
            mcs_month                   = "Месяц";
            mcs_day                     = "день";
            mcs_hour                    = "Час";
            mcs_minute                  = "Минута";
            mcs_second                  = "Секунда";
            mcs_millisec                = "Mиллисекунды";
            mcs_ntp                     = "Адрес сервера времени";
            mcs_upload_upgrade          = "Скачать и обновить";
            mcs_stop                    = "Остановить";
            mcs_info_rewind             = "Перемотать назад";
            mcs_fast_forward            = "Перемотать вперед";
            mcs_previous_frame          = "Предыдущий кадр";
            mcs_next_frame              = "Следующий кадр";
            mcs_record_audio            = "Запись звука";
            mcs_week                    = "Неделя";
            mcs_all                     = "Все";
            mcs_id                      = "Номер";
            mcs_select_all              = "Выбрать все";
            mcs_call                    = "Вызвать";
            mcs_activation              = "Код активации";
            mcs_caption                 = "Загрузить файл";
            mcs_alarm_device            = "Тревога устройства";
            mcs_not_installed           = "Не установлено";
            mcs_join_us_now             = "Присоединяйтесь к нам";
            mcs_reconnect_please_wait   = "Идет соединение, подождите";
            mcs_erasing                 = "Удаление";
            mcs_writing                 = "Идет запись";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "Доступна новая версия";
            mcs_equipment_flip          = "Перевернуть камеру";
            mcs_device_status           = "Состояние камеры";
            mcs_audio_setting           = "Настройка звука";
            mcs_nick_modify             = "Изменить никнейм";
            mcs_ready                   = "Готово";
            mcs_full                    = "Заполнено";
            mcs_connecting              = "Соединяюсь";
            mcs_message_buffering       = "Буферизация сообщений";
            mcs_upgrade_finish          = "Завершить обновление";
            mcs_image                   = "Картинка";
            mcs_bar                     = "Записи";
            mcs_init                    = "Инициализация";
            mcs_confirm_new_password    = "Подтвердите новый пароль";
            mcs_continue_switch_wireless_network = "Переключение сети может вызывать неполадки сети. Продолжить?";
            mcs_restore_factory_settings_prompt = "Восстановление заводских настроек. После восстнаволения настроек оборудование перезапустится. Продолжить?";
            mcs_username_does_not_exis  = "Имя пользователя не существует";
            mcs_username_already_exists = "Имя пользователя уже существует";
            mcs_successful_whether_login = "Регистрация выполнена. Войти?";
            mcs_username_demand         = "Должен начинаться с буквы и содержать 6-20 букв или цифр.";
            mcs_the_password_is_empty   = "Пароль не задан";
            mcs_password_demand         = "Должен начинаться с буквы и содержать 6-20 букв или цифр.";
            mcs_password_empty          = "Пароль не задан";
            mcs_two_password_input_inconsistent = "Введенные пароли не совпадают";
            mcs_the_user_name_is_empty  = "Имя пользователя не задано";
            mcs_upgrade_to_the_latest_version = "Обновить до последней версии";
            mcs_subnet_mask_wrong_format = "Неправильная маска подсети";
            mcs_upgrade_successful_restart_to_take_effect = "Обновление успешно, необходимо перезапустить оборудование для принятия настроек.";
            mcs_need_to_restart_the_camera_to_take_effect = "Необходимо перезапустить оборудование для принятия настроек.";
            mcs_not_allowed_close_two_network_cards = "Нельзя одновременно отключить Ethernet и Wi-Fi";
            mcs_modified_successfully   = "Изменение сохранено";
            mcs_connection_successfully = "Соединение установлено.";
            mcs_connection_is_interrupted = "Соединение разорвано.";
            mcs_devices_in_the_account_overrun = "Достигнуто максимальное количество подключенных камер для пользователя";
            mcs_format_error            = "Формат не верен";
            mcs_change                  = "Изменить";
            mcs_refresh                 = "Обновить";
            mcs_connect                 = "Соединить";
            mcs_upgrade                 = "Обновить ПО";
            mcs_activate                = "Активировать";
            mcs_filter                  = "Фильтровать";
            mcs_reset                   = "Сбросить";
            mcs_prompt_alert_off        = "Отключить тревогу?";
            mcs_invalid_server          = "Адрес сервера времени недействителен";
            mcs_upgrade_prompt          = "Обновить ПО оборудование?";
            mcs_restart_prompt          = "Перезапуск устройства, продолжают?";
            mcs_repeat                  = "Повторить";
            mcs_scheduled_one           = "Вариант расписание записи №1";
            mcs_scheduled_two           = "Вариант расписание записи №2";
            mcs_scheduled_three         = "Вариант расписание записи №3";
            mcs_scheduled_four          = "Вариант расписание записи №4";
            mcs_more                    = "Посмотреть больше";
            mcs_leave                   = "Отпустить для загрузки еще";
            mcs_qrcode_scan             = "Сканирование QR-кода";
            mcs_inserted                = "Установлено";
            mcs_removed                 = "Извлечено";
            mcs_upgrade_init            = "Начать обновление";
            mcs_upgrade_download        = "Скачать обновление";
            mcs_check                   = "Проверить обновление";
            mcs_audio_encoder_config    = "Аудио кодек";
            mcs_video_codec             = "Видео кодек";
            mcs_download                = "Скачать";
            mcs_client_download         = "Скачать клиент";
            mcs_for_more_clarity_smooth_video_experience = "Для более четкого и плавного видео";
            mcs_network                 = "Сеть";
            mcs_mobile_client_download  = "Скачать мобильное приложение";
            mcs_readonly                = "Только для чтения";
            mcs_please_exit_and_relogin = "Пожалуйста, выйдите и войдите еще раз.";
            mcs_add_device_failed       = "Ошибка добавления устройсва";
            mcs_set_password            = "Установить пароль";
            mcs_7x24_hours              = "Круглосуточно";
            mcs_mtalt                   = "%@ : Тревога по движению";
            mcs_ioalt                   = "%@ : I/O оповещения";
            mcs_time_zone               = "Часовой пояс";
            mcs_select_time             = "Выберите время";
            mcs_now                     = "Сейчас";
            mcs_mipc_have_alert_notification = "Уведомление о тревогах";
            mcs_notification_center     = "Центр уведомлений";
            mcs_sound                   = "Звук";
            mcs_vibration               = "Вибро";
            mcs_clear_cache             = "Очистить кэш";
            mcs_clear_cache_hint        = "Вы уверены, что хотите очистить кэш?";
            mcs_successfully_cleared_cache = "Успешная очистка кэш";
            mcs_app_except_exit_hint    = "Ошибка приложения, программа будет закрыта.";
            mcs_rate_us                 = "Оцените программу";
            mcs_password_too_simple_hint = "Пароль слишком простой, рекомендуем изменить его для улучшения безопасности.";
            mcs_check_for_new_version   = "Проверка наличия новой версии";
            mcs_contact_us              = "Связаться с нами";
            mcs_buffer_time             = "Время буферизации";
            mcs_default                 = "По умолчанию";
            mcs_alarmed_devices         = "Тревога с устройств";
            mcs_aec                     = "Подавление эхо";
            mcs_permission_denied       = "Доступ запрещен";
            mcs_full_screen             = "Во весь экран";
            mcs_forgot_your_password    = "Забыли пароль";
            mcs_your_email              = "Ваш адрес электронной почты";
            mcs_sign_up_confirmation    = "Для подтверждения регистрации пройдите по ссылке, высланной в письме на ваш электронный адрес.";
            mcs_recovery_prompt         = "Пожалуйста, введите адрес электронной почты (имя пользователя), на него будет отправлено сообщение с инструкцией по изменению пароля .";
            mcs_password_reset_confirmation = "Для изменения пароля следуйте инструкциям в письме, высланным на ваш электронный адрес.";
            mcs_recovery_fail_no_mail   = "Не удалось восстановить пароль, введенный адрес электронной почты не найден.";
            mcs_recovery_fail_invalid_link = "Не удалось восстановить пароль, пожалуйста, следуйте инструкции, высланной на ваш электронный адрес";
            mcs_recovery_ok_login       = "Восстановление пароля успешно завершено. Вход в систему.";
            mcs_active_ok_login         = "Успешная активация аккаунта. Вход в систему.";
            mcs_active_fail_invalid_link = "Ошибка активации аккаунта, пожалуйста, попробуйте снова.";
            mcs_login_fail_inactive     = "Аккаунт не активирован. Для активации, пожалуйста, следуйте инструкции, высланной на ваш электронный адрес.";
            mcs_sign_up_again           = "Зарегистрироваться снова";
            mcs_press_start_talk        = "Нажмите, чтобы говорить";
            mcs_release_stop_talk       = "Отпустите, чтобы остановить";
            mcs_delete_device           = "Удалить устройство";
            mcs_success_removed_equipment = "Удалить устройство успешно";
            mcs_remove_equipment_failure = "Удалить отказа оборудования";
            mcs_device_busy             = "Устройство сейчас занято";
            mcs_keep_testing            = "Продолжить тест";
            mcs_notify_tone             = "Мелодия уведомления";
            mcs_float_video             = "Включить всплывающее видео";
            mcs_float_position          = "Плавающее положение видео";
            mcs_video_resolution        = "Разрешение видео";
            mcs_float_resolution        = "Плавающие разрешение видео";
            mcs_top_left                = "Вверху слева";
            mcs_top_right               = "Вверху справа";
            mcs_bottom_left             = "Внизу слева";
            mcs_bottom_right            = "Внизу справа";
            mcs_action_next             = "Следующий";
            mcs_action_cancel           = "Отменить";
            mcs_action_retry            = "Повторите";
            mcs_action_add              = "Добавить";
            mcs_is_add                  = "Независимо от того, чтобы добавить";
            mcs_action_apply            = "Применить";
            mcs_action_config           = "Конфигурация";
            mcs_action_skip             = "Пропустить";
            mcs_action_ok               = "Ок";
            mcs_action_add_device       = "Добавить устройство";
            mcs_action_modify_password  = "Изменить пароль";
            mcs_action_config_wifi      = "Настройки Wi-Fi";
            mcs_state_connect_device    = "Подключение устройства";
            mcs_state_connect_device_fail = "Ошибка подключения к устройству.";
            mcs_state_wait_device_online = "В ожидании когда устройство появится онлайн";
            mcs_state_device_online     = "Онлайн";
            mcs_state_success           = "Онлайн";
            mcs_fail                    = "Произошла ошибка";
            mcs_delete_success          = " Удалить  успеха ";
            mcs_state_add_device_success = "Устройство успешно добавлено";
            mcs_state_add_device_fail   = "Ошибка добавления устройства";
            mcs_state_modify_pass_success = "Пароль успешно изменен";
            mcs_state_modify_pass_fail  = "Ошибка изменения пароля";
            mcs_state_config_wifi_success = "Успешная настройка Wi-Fi";
            mcs_state_config_wifi_fail  = "Ошибка cоединения";
            mcs_state_connecting_to     = "Подключение к";
            mcs_network_connect_type    = "Устройство не в сети, вы убедитесь, что устройство работает-на, а затем выберите Подключение к сети:";
            mcs_prompt_modify_passwd    = "По соображениям безопасности изменить пароль по умолчанию для данного устройства. Новый пароль должен быть не менее шести символов";
            mcs_prompt_config_wifi      = "Ваше устройство по-прежнему не подключен к Wi-Fi, пожалуйста, настроить Wi-Fi.";
            mcs_step1_check_connect     = "Шаг 1 : Подключите камеру к роутеру/маршрутизатору сетевым кабелем(он идет в комплекте с камерой).";
            mcs_first_step_ethernet_connect = "Шаг 2: Подключите кабель Ethernet к маршрутизатору и к камере.";
            mcs_step2_check_connect     = "Шаг 2: Включите  питание камеры.";
            mcs_second_step_ethernet_connect = "Шаг 1: Убедитесь, что устройство включено.";
            mcs_hint_check_network      = "Примечание : Камере Zodikam нужно около 50 секунд для подключения к сети после того, как вы присоединили ее сетевым кабелем к роутеру/маршрутизатору. Если индикатор State2(на корпусе камеры) мигает зеленым, это значит, что соединение произошло успешно, камера онлайн и вы можете перейти к следующему шагу настройки.";
            mcs_the_end                 = "Конец";
            mcs_hint_password_expired   = "Срок действия пароля истек, пожалуйста, повторно добавьте камеру";
            mcs_hint_remove_ethernet    = "Примечание : Соединение по Wi-Fi работает корректно, теперь вы можете отключить сетевой кабель от камеры.";
            mcs_gateway_format_incorrect = "адрес шлюза  не правильный формат ";
            mcs_dns_format_incorrect    = "Формат DNS-адреса введен неверно";
            mcs_subnet_mask_format_incorrect = " Маска подсети  адрес  не правильный формат ";
            mcs_ip_format_incorrect     = "Формат IP-адреса введен неверно";
            mcs_login_sucess            = "Успешный вход";
            mcs_donot_remind            = "Отключить напоминание";
            mcs_clear_cache_signout_hint = "После очистки кэш-памяти вам нужно будет заново войти в систему.Продолжить?";
            mcs_devlist_adddev_hint     = "Нажмите здесь, чтобы добавить оборудование";
            mcs_devlist_menu_hint       = "Нажмите здесь, чтобы установить разрешение";
            mcs_update_failed           = "Ошибка обновления";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "Локальный";
            mcs_set_npapi               = "Если был установлен плагин, пожалуйста посетите \'chrome://flags/#enable-npapi\', Включить NPAPI, ";
            mcs_set_win32k              = "визит \'chrome://flags/#enable-win32k-renderer-lockdown\', инвалидов win32k визуализации блокировки,";
            mcs_restart_browser         = "Перезапустите браузер";
            mcs_download_location       = "Расположение скачиваемых файлов";
            mcs_Networking_mode         = "режим сети";
            mcs_wifi_intelligent_configuration = "подключение Wi-Fi";
            mcs_ethernet_configuration  = "подключение Ethernet";
            mcs_wifi_connect            = "подключение";
            mcs_hard_disk               = "жесткий диск";
            mcs_wifi_is_connection      = "Подключение, пожалуйста, подождите...";
            mcs_wifi_intelligent_configuration_setup_ailure = "Wi-Fi умный конфигурации отказ установки";
            mcs_box_list                = "Список окно";
            mcs_repair_disk_prompt      = "Ремонт диска может потерял некоторые данные, продолжать?";
            mcs_format_disk_prompt      = "Формат диска будут удалены все данные, продолжать?";
            mcs_scheduled_alerting      = "Постановка Программа";
            mcs_scheduled_alerting_one  = "Постановка Программа 1";
            mcs_scheduled_alerting_two  = "Постановка Программа 2";
            mcs_scheduled_alerting_three = "Постановка Программа 3";
            mcs_scheduled_alerting_four = "Постановка Программа 4";
            mcs_wifi_config_cancle      = "Конфигурация Wi-Fi отменить";
            mcs_wifi_config_prepare     = "Настроить  готов";
            mcs_wifi_config_first       = "Устройства и мобильные телефоны и маршрутизаторы поддерживают в интервале 1 м";
            mcs_wifi_config_second      = "При настройке Wi-Fi, устройство не может подключить сетевой кабель";
            mcs_wifi_config_third       = "Нажмите RESET, отверстие сброса один второй и затем отпустите";
            mcs_wifi_config_success     = "успех конфигурации";
            mcs_wifi_config_failure     = "Конфигурация не удалось";
            mcs_failure_prompt          = "Пожалуйста, попробуйте еще раз или вернуться, чтобы проверить Wi-Fi пароль введен правильно";
            mcs_display_password        = "показать пароль";
            mcs_action_smart_config_wifi = "Мастер настройки";
            mcs_wifi_invalid            = "Ваша сеть не Wi-Fi, подключите Wi-Fi";
            mcs_phone_not_connect_wifi  = "Wi-Fi сеть не подключены";
            mcs_prompt_check_connection = "Камера не в сети, проверьте подключение камеры.";
            mcs_wifi_cfg_ready          = "Готовы";
            mcs_reset_complete          = "Сброс полная";
            mcs_how_to_restore_factory_settings = "Как восстановить заводские настройки: используйте сброса ПИН нажав RESET, отверстие в нижней части камеры в течение более 10 секунд";
            mcs_forgetpass_action_wizard = "Пожалуйста,  секретаря  по  оборудования  сбросить  сбросить  дыры  после 10 секунд  ослабить  ,  вы услышите  оборудования  голосовые подсказки\"восстановить заводские настройки\". ";
            mcs_prompt_check_device_connection = "Ваше устройство не в сети, проверить проводку для подключения устройства";
            mcs_prompt_select_device_connection = " Ваше устройство  не онлайн  , пожалуйста, выберите  способ взаимодействия ";
            mcs_input_wifi_name         = "Пожалуйста, название входа Wi-Fi";
            mcs_action_previous         = "предыдущий";
            mcs_io_alert_range_hint     = "IO оповещения время должно быть меньше, чем 60 секунд";
            mcs_io_alert_time           = "IO время сигнала(cek.)";
            mcs_smart                   = "умный";
            mcs_plan                    = "план";
            mcs_mute                    = "mute";
            mcs_wind_speed              = "скорость ветра";
            mcs_one                     = "одна передача";
            mcs_two                     = "Два передач";
            mcs_three                   = "Три передач";
            mcs_purify_mode             = "режим очистки";
            mcs_video_list              = "список видео";
            mcs_wifi_cfg_restore_factory_settings = "Halten Sie das Mobiltelefon in der Nähe von Gerät, wenn Gerät ist Wi-Fi konfiguriert, drücken Sie die RESET-Öffnung für eine Sekunde dann los, wird das Gerät auf die Werkseinstellungen wiederherstellen und automatisch neu startet";
            mcs_mask_settings           = "настройки маски";
            mcs_notification_settings   = "настройки уведомлений";
            mcs_alarm_settings          = "настройки сигнализации";
            mcs_motion_detection        = "Определение Движения";
            mcs_io_alarm                = "О сигнализации I /";
            mcs_connect_status          = "Состояние подключения";
            mcs_motion_notification     = "Предупреждения и уведомления";
            mcs_device_connected        = "Устройство подключено";
            mcs_start_spray             = "Начните распыление?";
            mcs_available_network       = "Сеть недоступна, Проверка Настроеной";
            mcs_select_wifi_wizard      = "Пожалуйста, выберите Wi-Fi сеть во-первых";
            mcs_input_wifi_password     = "Input Wi-Fi jelszót";
            mcs_device_admin_password   = "Пароль администратора устройства";
            mcs_device_guest_password   = "Гостевой пароль устройства";
            mcs_user_admin_password     = "Пользователь Admin Password";
            mcs_user_guest_password     = "Гостевой пароль пользователя";
            mcs_save_network_set        = "Сохранить настройки сети и пароль";
            mcs_nickname_not_set        = "Ник камера не установлена";
            mcs_current_wifi            = "Текущий Wi-Fi";
            mcs_current_password_strength = "В настоящее время численность пароль";
            mcs_new_password_strength   = "Новая сила пароль";
            mcs_needs_to_open_the_DHCP  = "Маршрутизатор должен открыть DHCP (автоматическое получение IP) функцию, если попытка будет неудачной, обратитесь к администратору.";
            mcs_picture                 = "картина";
            mcs_quality                 = "качество";
            mcs_size                    = "размер";
            mcs_guest_login             = "Гость Войти";
            mcs_audio_and_video         = "Аудио / Видео";
            mcs_volume                  = " громкость ";
            mcs_smooth                  = "гладкий";
            mcs_clear                   = "ясно";
            mcs_handsfree               = "Громкая связь";
            mcs_headphone               = "наушники";
            mcs_my                      = "мой";
            mcs_customer_service        = "обслуживание клиентов";
            mcs_firefox_flash_uninstall = "Ваш флэш-плагин не доступен, пожалуйста, обратитесь решение https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "Виджет";
            mcs_plug_load               = "плагины нагрузки";
            mcs_plug_load_refuse        = "Не загружать плагины";
            mcs_plug_load_auto          = "автоматическая";
            mcs_option                  = "опции";
            mcs_option_ok               = "определить";
            mcs_voice_call_fails        = "Голосовой вызов не удается, проверьте сеть";
            mcs_umounted_prompt         = "о том, чтобы отключить?";
            mcs_mounted_prompt          = "Будь монтировать?";
            mcs_format_prompt           = "Будь форматировать?";
            mcs_repair_prompt           = "Будь исправления?";
            mcs_signup_prompt           = "здесь?";
            mcs_wifi_connect_sucess_prompt = " Примечание  :  Wi-Fi  нормальной работы,  теперь вы можете  отключить  сети ";
            mcs_manual_input_prompt     = "ручной ввод оборудования id";
            mcs_qrscan_prompt           = " Вы еще не  позволяет  этого  приложения для доступа к  вашей  камеры,  пожалуйста,  в  iPhone  \'  Настройки  конфиденциальности  \'  -  \'  \'  -  \'  фотоаппарат  ‘  в  ‘  имя  функции  ,  найти  для  Vimtag  \\’  приложений  для пересмотра. ";
            mcs_select_network_style    = " режим  выбора  сети связи  : ";
            mcs_push                    = "объявление";
            mcs_connect_power_prompt    = " Примечание  :  оборудование  не онлайн  ,  пожалуйста,  убедитесь, что  уже  подключения электроснабжения ";
            mcs_fail_microphone         = " Невозможно получить доступ к  микрофон";
            mcs_microphone_prompt       = "Вы не позволяют это приложение, чтобы получить доступ к микрофон, в «набор» iPhone - СО «конфиденциальность» - функция ‘Микрофон’, найти имя приложения \\’Vimtag \'быть изменены";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "HD";
            mcs_standard_clear          = "Ур";
            mcs_fluent_clear            = "свободно";
            mcs_deleting                = "Удалить...";
            mcs_event                   = "Мероприятия";
            mcs_one_hour                = "час";
            mcs_half_hour               = "полчаса";
            mcs_five_min                = "пять  минут";
            mcs_category                = "категории";
            mcs_time_length             = "продолжительность";
            mcs_new                     = "новый";
            mcs_week_setting_prompt     = "недели  не может быть пустым";
            mcs_time_setting_prompt     = "время установки  не может быть пустым";
            mcs_today                   = "сегодня";
            mcs_wifi_password           = "Wi-Fi пароль";
            mcs_register_prompt         = " Пожалуйста,  зарегистрируйтесь  счета  ";
            mcs_click_login             = "Нажмите кнопку  входа";
            mcs_not_login_prompt        = "Вы также  не  войти, пожалуйста,  нажмите на кнопку  войти  !";
            mcs_product_presentation    = "Домашняя страница";
            mcs_help_feedback           = "помочь";
            mcs_help_information        = "помочь";
            mcs_feedback                = " обратной связи";
            mcs_feedback_des            = "Спасибо за использование  мы  app  ,  приветствует  дает нам  Ваши ценные  мнения ";
            mcs_feedback_praise         = " признание";
            mcs_feedback_title_prompt   = " название  обратной связи";
            mcs_feedback_title          = " Пожалуйста, введите название  (18  слов  ) ";
            mcs_feedback_type_prompt    = " вопрос типа";
            mcs_feedback_please_select  = " Пожалуйста,  выберите тип ";
            mcs_feedback_select_option1 = "интерфейс";
            mcs_feedback_select_option2 = "камера  проблемы ";
            mcs_feedback_select_option9 = " Другие вопросы";
            mcs_feedback_dec_prompt     = "конкретное описание";
            mcs_feedback_dec            = "Пожалуйста, введите  ваше мнение";
            mcs_feedback_upload_photo   = "загружать фотографии ";
            mcs_preview_pic             = " Просмотр ";
            mcs_Album                   = "Выберите из альбома";
            mcs_Photograph              = "фотография";
            mcs_camera_unavailable      = "Недоступен с вашей камеры";
            mcs_feedback_submit         = " представления";
            mcs_feedback_title_alert    = " название  не соответствует правилам";
            mcs_feedback_type_alert     = " Пожалуйста, выберите  правильный тип";
            mcs_feedback_dec_alert      = "Пожалуйста, введите  ваше мнение";
            mcs_feedback_submit_success = "представлен успех";
            mcs_feedback_submit_fail    = " представления не";
            mcs_connect_wifi_prompt     = "соединение  Wi-Fi";
            mcs_cloud                   = "облако";
            mcs_demo                    = "демо -";
            mcs_shortest                = "кратчайший";
            mcs_no_history              = "Нет истории";
            mcs_download_pc_client      = "Нажмите, чтобы скачать клиент PC";
            mcs_accounts_bind_email_exist = " этот номер счета  уже  связывают с  почтовый ящик ";
            mcs_accounts_bind_email_busy = "этот ящик  уже  связывают с  счета ";
            mcs_systemupdatetip_noversionnodetail = "Не Текущая версия обновления доступна, подробная информация не обновление";
            mcs_systemupdatetip_nodetail = "Нет подробная информация обновление";
            mcs_systemupdatetip_updatefrom = "Текущая версия";
            mcs_systemupdatetip_updateto = "Вы можете перейти на";
            mcs_systemupdatetip_sureforupdate = "Определить обновить?";
            mcs_systemupdatetip_updatecontent = "Обновленный содержание";
            mcs_operate_prompt          = "Kérjük, hogy az ábra szerint";
            mcs_operation_prompt        = "операция быстрое";
            mcs_qrcode_prompt_content   = "Használja a készülék kamerájával beolvasni mobil kétdimenziós kód";
            mcs_qrcode_camera_distance  = "Двумерный код с расстоянием камеры 12 ~ 14cm";
            mcs_planvideo_datewizard    = "Пожалуйста,  установить дату ";
            mcs_planvideo_timewizard    = "Пожалуйста,  установить время ";
            mcs_planvideo_wizard        = "Пожалуйста,  установить время  и дата";
            mcs_email_unbind            = "Счета: не связываться";
            mcs_email_unmatch           = "Несоответствие Почта";
            mcs_email_inactive          = "Электронная почта не активирована";
            mcs_email_binded            = "Электронная почта была связана";
            mcs_user_binded_bymail      = "Пользователь был связан";
            mcs_bind_email_fail         = "Почта Ошибка привязки";
            mcs_diagnosis               = "диагноз";
            mcs_delay                   = "задержка";
            mcs_packet_loss_rate        = "Скорость потери пакетов";
            mcs_timezone_IDL            = "Демаркационная линия времени";
            mcs_timezone_China          = "китай";
            mcs_timezone_Midway         = "Мидуэй";
            mcs_timezone_Niue           = "Остров Ниуэ";
            mcs_timezone_Samoa          = "американское Самоа";
            mcs_timezone_Aleutian       = "Алеутские острова";
            mcs_timezone_Hawaii         = "Гавайские острова";
            mcs_timezone_Alaska         = "Аляска";
            mcs_timezone_PSTUSCanada    = "Стандартное тихоокеанское время (США & Канада)";
            mcs_timezone_Arizona        = "Аризона";
            mcs_timezone_MSTUSCanada    = "Горное время (США и Канада)";
            mcs_timezone_CSTUSCanada    = "Центральное стандартное время (США & Канада)";
            mcs_timezone_ESTUSCanada    = "По восточному поясному времени (США и Канада)";
            mcs_timezone_ASTCanada      = "Атлантический Стандартное время (Канада)";
            mcs_timezone_Newfoundland   = "Ньюфаундленд";
            mcs_timezone_Brasilia       = "Бразилиа";
            mcs_timezone_BuenosAires    = "Буэнос айрес";
            mcs_timezone_Santiago       = "Сантьяго";
            mcs_timezone_Noronha        = "Норонья";
            mcs_timezone_SouthGeorgia   = "Южная Джорджия";
            mcs_timezone_Azores         = "Азорские острова";
            mcs_timezone_CapeVerde      = "Кабо-Верде";
            mcs_timezone_London         = "Лондон";
            mcs_timezone_Lisbon         = "Лиссабон";
            mcs_timezone_Dublin         = "Дублин";
            mcs_timezone_Berlin         = "Берлин";
            mcs_timezone_Amsterdam      = "Амстердам";
            mcs_timezone_Brussels       = "Брюссель";
            mcs_timezone_Budapest       = "Будапешт";
            mcs_timezone_Madrid         = "Мадрид";
            mcs_timezone_Paris          = "Париж";
            mcs_timezone_Rome           = "Рим";
            mcs_timezone_Sarajevo       = "Сараево";
            mcs_timezone_Cairo          = "Каир";
            mcs_timezone_Amman          = "Амман";
            mcs_timezone_Beirut         = "Бейрут";
            mcs_timezone_Istanbul       = "Стамбул";
            mcs_timezone_Jerusalem      = "Иерусалим";
            mcs_timezone_Athens         = "Афины";
            mcs_timezone_Baghdad        = "Багдад";
            mcs_timezone_Riyadh         = "Рияд";
            mcs_timezone_Qatar          = "Катар";
            mcs_timezone_Moscow         = "Москва";
            mcs_timezone_Tehran         = "Тегеран";
            mcs_timezone_Baku           = "Баку";
            mcs_timezone_Dubai          = "Дубай";
            mcs_timezone_Tbilisi        = "Тбилиси";
            mcs_timezone_Kabul          = "Кабул";
            mcs_timezone_Karachi        = "Карачи";
            mcs_timezone_Yekaterinburg  = "Екатеринбург";
            mcs_timezone_Maldives       = "Мальдивы";
            mcs_timezone_Calcutta       = "Калькутта";
            mcs_timezone_Colombo        = "Коломбо";
            mcs_timezone_Katmandu       = "Катманду";
            mcs_timezone_Almaty         = "Алматы";
            mcs_timezone_Dhaka          = "Дакка";
            mcs_timezone_Omsk           = "Омск";
            mcs_timezone_Thimbu         = "Тхимпху";
            mcs_timezone_Rangoon        = "Рангун";
            mcs_timezone_Bangkok        = "Бангкок";
            mcs_timezone_Jakarta        = "Джакарта";
            mcs_timezone_Vientiane      = "Вьентьян";
            mcs_timezone_Harbin         = "Харбин";
            mcs_timezone_Shanghai       = "Шанхай";
            mcs_timezone_Hongkong       = "Гонконг";
            mcs_timezone_Singapore      = "Сингапур";
            mcs_timezone_Taipei         = "Тайбэй";
            mcs_timezone_Ulaanbaatar    = "Улан-Батор";
            mcs_timezone_Perth          = "Перт";
            mcs_timezone_Seoul          = "Сеул";
            mcs_timezone_Tokyo          = "Токио";
            mcs_timezone_Darwin         = "Дарвин";
            mcs_timezone_Magadan        = "Магадан";
            mcs_timezone_Vladivostok    = "Владивосток";
            mcs_timezone_Guam           = "Гуам";
            mcs_timezone_Sydney         = "Сидней";
            mcs_timezone_Canberra       = "Канберра";
            mcs_timezone_Melbourne      = "Мельбурн";
            mcs_timezone_Queensland     = "Квинсленд";
            mcs_timezone_LordHowe       = "Лорд-Хау";
            mcs_timezone_Guadalcanal    = "Гуадалканал";
            mcs_timezone_Fiji           = "Фиджи";
            mcs_timezone_Auckland       = "Окленд";
            mcs_timezone_Apia           = "Апиа";
            mcs_timezone_Fakaofo        = "Факаофо";
            mcs_timezone_Tongatapu      = "Тонгатапу";
            mcs_timezone_Kiritimati     = "Киритимати";
            mcs_connect_timeout         = "Истекло время ожидания соединения";
            mcs_share                   = "доля";
            mcs_share_prompt_start      = "Вы можете получить доступ";
            mcs_share_prompt_end        = "скачать видео через браузер на ПК или телефон андроид, что в той же сети";
            mcs_share_note              = "Процесс загрузки, пожалуйста, не оставляйте эту страницу";
            mcs_video_size              = "размер";
            mcs_video_duration          = "продолжительность";
            mcs_my_folder               = "Мои папки";
            mcs_account_no_contain      = "Счет не содержит";
            mcs_edit                    = "редактировать";
            mcs_video_number            = " Видео";
            mcs_no_local_video          = "Нет видео";
            mcs_empty_folder            = "Папка пуста";
            mcs_no_history_record       = "У вас нет истории";
            mcs_no_local_record         = "Ваш местный рекорд пуст";
            mcs_empty_cloud_list_first  = "Ваш список устройств пуст,";
            mcs_empty_cloud_list_second = "Нажмите кнопку  в верхнем левом углу";
            mcs_empty_cloud_list_third  = " Добавить устройство  ! ";
            mcs_empty_local_list_first  = "Ваш локальный  список пуст  , ";
            mcs_empty_local_list_second = "попытка ";
            mcs_empty_local_list_third  = "выпадающий  экран ";
            mcs_empty_local_list_forth  = "Обновить  ! ";
            mcs_empty_local_list_fifth  = "（Поиск  в интернет  , где  оборудование）";
            mcs_record_prompt           = "Вы можете просматривать видео в \"мой->Мои папки\"";
            mcs_record_download_prompt  = "Вы можете просматривать видео в \"Мои папки\"";
            mcs_register_buton_start    = "Нет учетной записи,";
            mcs_register_buton_end      = "Зарегистрируйтесь сейчас";
            mcs_product                 = "продукт";
            mcs_user_or_password_invalid = "Имя пользователя или неверный пароль";
            mcs_share_video_prompt      = "Вы используете  не  сети WiFi  ,  пожалуйста, переключиться на  сети WiFi  снова  поделиться  под";
            mcs_download_video_prompt   = "Вы используете  не  будет иметь  трафика  загрузки  сети WiFi  ,  расходы  ,  продолжать  ? ";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "обычный";
            mcs_common_problem          = "Часто задаваемые вопросы";
            msc_enter_comment           = "Введите ваши комментарии";
            msc_description             = "описание";
            mcs_parameter               = "параметры";
            mcs_help_and_feedback       = "Помощь и обратная связь";
            mcs_personal_center         = "Персональный центр";
            mcs_version                 = "релиз";
            mcs_language                = "язык";
            mcs_new_user                = "Я новый пользователь";
            mcs_have_account            = "Уже зарегистрированы";
            mcs_try_it                  = "опыт";
            mcs_sign_up_now             = "Войти";
            mcs_input_confirm_password  = "Подтвердить пароль";
            mcs_warranty_registration   = "регистрации гарантии";
            mcs_get_more_cameras        = "все камеры";
            mcs_user_inactive           = "пользователь не  активации ";
            mcs_format_options          = "формат";
            mcs_slide_screen            = "Сдвиньте экран для регулировки угла видео";
            mcs_zoom_in_screen          = "Замес экран можно увеличить видео детали";
            mcs_pause                   = "пауза";
            mcs_source                  = "источник";
            mcs_magnetic                = "магнитные";
            mcs_sos                     = "кнопка аварийного";
            mcs_input_download_path     = "Скачать путь";
            mcs_download_path_name_error = "Загрузите имя пути к файлу может содержать только буквы (A-Z, A-Z) или цифровой (0-9)";
            mcs_active                  = "деятельность";
            mcs_out                     = "отпуск";
            mcs_quiet                   = "бесшумный";
            mcs_scenes                  = "сцена";
            mcs_accessory               = "аксессуар";
            mcs_quiet_mode              = "Тихий режим";
            mcs_active_mode             = "Активный режим";
            mcs_out_mode                = "Away Mode";
            mcs_add_accessory           = "Добавление вложений";
            mcs_accessory_type          = "Аксессуар Тип";
            mcs_add_successfully        = "Успешно добавлен";
            mcs_set_scene               = "Ваши вложения еще не установили сцену , пожалуйста, нажмите";
            mcs_to_set                  = "Для того, чтобы установить";
            mcs_add_accessory_button    = "Нажмите на кнопку , пока красный свет не погаснет снова, чтобы завершить надстройку";
            mcs_auto_monday             = "Понедельник";
            mcs_auto_tuesday            = "Вторник";
            mcs_auto_wednesday          = "Среда";
            mcs_auto_thursday           = "Четверг";
            mcs_auto_friday             = "Пятница";
            mcs_auto_saturday           = "Суббота";
            mcs_auto_sunday             = "Воскресенье";
            mcs_search                  = "поиск";
            mcs_format_input            = "форматирования жесткого диска";
            mcs_get_accessory_failed    = "Приложение не удалось получить";
            mcs_get_scene_failed        = "Получить сценарии отказов";
            mcs_search_failed           = "Поиск терпит неудачу";
            mcs_add_failed              = "Добавить Ошибка";
            mcs_ethernet_connect        = "Ethernet";
            mcs_action_click_retry      = "Нажмите Повторить";
            mcs_wifi_config_failure_detail = "Или вы можете попробовать";
            mcs_qrcode_connect          = "Двумерный код, связанный";
            mcs_close_sound_prompt      = "Open Sound помогает Wi-Fi соединение, держите телефон близко к динамик микрофона камеры";
            mcs_qrcode_prompt_title     = "Пожалуйста операции, показанные на фиг.";
            mcs_qrcode_prompt_detail    = "Пожалуйста, направляйте объектив камеры на QR-код точно и держать расстояние быть 30см.";
            mcs_select_wifi_prompt      = "Нет Ethernet кабель, необходимый для";
            mcs_select_ethernet_prompt  = "Кабель Ethernet необходим для установки только";
            mcs_enter_config_mode_prompt = "Пожалуйста, проверьте индикатор Wi-Fi есть три красных три зеленых попеременно мигают. Если это так, пожалуйста, нажмите на кнопку Далее. Если нет, то нажмите кнопку сброса на камеру. Затем проверьте индикатор Wi-Fi снова";
            mcs_no_enter_config_mode    = "Не войти в режим настройки";
            mcs_record_time             = "Длительность записи(в секундах)";
            mcs_stop_search             = "Хватит искать";
            mcs_smart_wifi_setup        = "Смарт настройка WiFi";
            mcs_ethernet_setup          = "Настройка Ethernet";
            mcs_wifi_config_restore_start = "1) Убедитесь, что устройство включено";
            mcs_wifi_config_restore_end = "2) Нажмите отверстие для перезагрузки в течение одной секунды, то устройство будет восстановить и перезапустить через 60 секунд, а затем автоматически перейдет в режим настройки";
            mcs_Sense_schedule          = "планирование сценариев";
            load_succeed                = "Загрузка успеха";
            load_fail                   = "Не удалось загрузить";
            refresh_succeed             = "Обновить успех";
            refresh_fail                = "Не удалось обновить";
            mcs_ensure_dev_power        = "1) Убедитесь, что устройство включено";
            all_refresh_complete        = "Все данные обновляются";
            mcs_synchronize             = "синхронный";
            mcs_synchronize_detail      = "Профили следующего оборудования и установок , несовместимых , должны быть синхронизированы , чтобы работать после того, как";
            mcs_Sense_Schedule_Set      = "Набор сценарного планирования";
            mcs_Sence_Schedule_detail   = "Если включить автоматический режим сцены , система будет автоматически переключаться в зависимости от сценариев планирования сценариев в разное время";
            mcs_Scene_set               = "профили";
            mcs_Scene_set_detail        = "Если включить профиль , профиль в соответствии с параметрами , представленными на следующих страницах";
            mcs_send_message            = "Отправить сообщение";
            mcs_start_recording         = "Начать запись";
            mcs_start_capture           = "Начать захват";
            mcs_turn_on_video           = "Для того, чтобы выйти из режима непрерывной записи , пожалуйста, откройте видео";
            mcs_search_press_button     = "Нажмите кнопку возврата в течение 1 секунды после выхода, мигает индикатор медленно";
            mcs_add_fail1               = "Поскольку  в соответствии с  уже  отменить  добавить  короткий  оборудования  , пожалуйста, нажмите  повторить  поиск снова  добавить";
            mcs_add_fail2               = "Добавить  отказ  оборудования  ,  пожалуйста, нажмите  повторить  поиск снова  добавить";
            mcs_recording_duration      = "Длительность записи (в секундах )";
            mcs_settings_unsaved        = "Ваши настройки не были сохранены";
            mcs_want_save               = "Будет ли это сохранить ?";
            mcs_camera                  = "Видео камеры";
            mcs_router                  = "маршрутизатор";
            mcs_start_up                = "старт";
            mcs_cancle_add              = "Оборудование было отменено из-за короткого нажмите Добавить";
            mcs_visit_photo_fail        = "альбом  не  доступа";
            mcs_camera_cell             = " фотоаппарат";
            mcs_myphoto                 = "мои фото";
            mcs_select_photo            = "Выбрать альбом";
            mcs_app_new_version         = "новая версия ";
            mcs_update_new_version      = "Обновить";
            mcs_app_new_version_prompt  = "Приложение имеет новую версию, выберите пункт Обновить Скачать Обновить сейчас";
            download_failed             = "Ошибка загрузки";
            mcs_connect_server_prompt   = "WiFi подключен, он подключен к серверу";
            mcs_local_search            = "Локальный поиск";
            mcs_choose_device_type      = "выберите тип устройства";
            mcs_wifi_state              = " Примечание  :  WiFi  работает нормально  ,  теперь вы можете  отключить  кабель  (  Отключить  кабель  может появиться после  оборудования  не онлайн  , пожалуйста,  ждать  20 лет  будет  автоматически, в режиме он - лайн  ) ";
            mcs_sweep                   = "зачистка";
            mcs_wifi_config_tip         = " есть  есть  wifi  маршрутизатор  , чтобы избежать  неприятностей  ,  проводка ";
            mcs_ethernet_config_tip     = " Маршрутизатор  удобно  не  отключил кабель ";
            mcs_ethernet_connect_step_one = " первый шаг:  обеспечить  энергоснабжение  линии  связи  розетку  2  1 ";
            mcs_ethernet_connect_step_two = " Шаг 2:  4  подключения  через  прицел  камеры  маршрутизатор порт  и  порт ";
            mcs_sweep_qrcode_tip        = " камера  на  мобильный телефон - код  для сканирования  ,  сохранить  на расстояние около  30  см ";
            mcs_sound_config_tip        = " Воспроизвести звук  помогает  wi - fi  соединения.  (  также можно выбрать  закрыть  ) ";
            mcs_sosalt                  = "%@ : Сигнализации Кнопка аварийного(%@)";
            mcs_dooralt                 = "%@ : Магнитный оповещения(%@)";
            mcs_wifi_config_restore     = " Пожалуйста, нажмите  reset  второй после  \"ослабить  ,  WiFi  в режим конфигурации  оборудования  в \" .";
            mcs_voice_remind_heard      = "уже  слышал  голосовые подсказки";
            mcs_netWork_prompt          = " сеть  подсказки ";
            mcs_con_netWork             = "Сеть используется в настоящее время для подключения к данным, он может потреблять много трафика, если настройки сетевого интерфейса установите для перехода";
            mcs_no_netWork              = "На данный момент нет подключения к сети, будь то прыжок, чтобы настроить интерфейс настройки сети";
            mcs_exception_des           = " Ваше приложение выход Последнее исключение, следует ли отправить отчет об ошибке на сервере";
            mcs_exception_prompt        = "Совет ненормальным";
            mcs_erro_diagnosis          = "поиск неисправностей";
            mcs_erro_log_des            = "App последние записи журнала ошибок, выберите кнопку отправки, чтобы отправить отчет об ошибке, спасибо за сотрудничество!";
            mcs_is_submitting           = "представляется";
            mcs_firmware_version        = "Версия прошивки";
            mcs_device_assembly         = "1.линия электропередачи  2.Stromanschluss  3.порт Ethernet  4.кабель  5.адаптер";
            mcs_forgetpass_action_wizard_old = "Нажмите кнопку сброса в течение одной секунды, устройство восстановит заводские настройки и через 60 секунд после перезагрузки, восстановление пароля администратора";
            mcs_device_assembly_mipc    = "1.линия электропередачи  2.Stromanschluss  3.порт Ethernet  4.кабель";
            mcs_device_connect_power_prompt = " оборудование  не онлайн  ,  пожалуйста,  как показано на рисунке  будет  ваше устройство  доступа к энергии,  уже  видел  питания  лампы  часто  ярко  красный свет  ,  запуск оборудования  завершена. ";
            mcs_lights_sound            = " свет  уже  увидеть ";
            mcs_connect_power           = " Соединения электропитания ";
            mcs_search_magnetic         = "Как показано, комбинированная магнитная дверь и нажмите боковую кнопку в течение 1 секунды после выхода, индикатор медленно мигает";
            mcs_add_magnetic            = "После открытия датчика открытия двери , чтобы сливаться , индикатор состояния мигает от завершения добавления";
            mcs_already_downloaded      = "Загрузить";
            mcs_my_order                = " мой заказ ";
            mcs_auto_mode               = "Автоматический режим";
            mcs_new_small               = "Минимальное";
            mcs_new_half                = "Среднее";
            mcs_new_normal              = "Стандартное";
            mcs_new_hd                  = "HD";
            mcs_scene_now               = "Текущий  сценарий";
            mcs_please_install_wechat   = " Пожалуйста, установите  WeChat ";
            mcs_wechat_not_support      = "WeChat  версии не поддерживается  просьба обновить  WeChat ";
            mcs_motion_alert            = "Тревога по движению";
            mcs_io_alert                = "I/O оповещения";
            mcs_valid_user_name         = " первый шаг:  пожалуйста, введите  имя пользователя ";
            mcs_binding_mailbox         = "Второй шаг: пожалуйста, введите  обязательную  почтовый ящик ";
            mcs_send_mailbox_succuess_prev = "Второй шаг: пожалуйста, введите  обязательную  почтовый ящик  ";
            mcs_send_mailbox_succuess_next = " Отправить  пароль  по электронной почте, пожалуйста,  Ваше внимание  получать почту  . ";
            mcs_all_image               = "все фотографии ";
            mcs_unavailable_image       = " Фотографии  не имеется,  просьба  вновь  выбирает ";
            mcs_set_nickname            = "Настройка ник";
            mcs_search_timeout          = "Время поиска , снова нажмите кнопку Поиск";
            mcs_screen_size             = "Настройки экрана";
            mcs_screen_reset            = "Набор успешно, необходимо перезагрузить камеру вступили в силу";
            mcs_wifi_network_prompt     = " Пожалуйста, проверьте  камеры  подключения  WiFi  -  частот  5 ГГц  ли  камеры  подключения  WiFi  ,  пожалуйста,  пусть  2,4 ГГц  WiFi ";
            mcs_fault_diagnosis         = "сети диагностических";
            mcs_sever_diagnosis         = " Может  , поскольку сервер  вина  , в результате чего  не  нормального использования. ";
            mcs_select_problem          = "Пожалуйста, выберите  проблемы ";
            mcs_connot_lonin            = " не могу  войти ";
            mcs_connot_play             = " не могу  войти ";
            mcs_add_problems            = " Дополнительные  вопросы ";
            mcs_encounterer_problems    = " Пожалуйста, введите  проблемы  ";
            mcs_diagnostic_network      = "Начать диагностику";
            mcs_network_diagnostic_prompt = " в  сети диагностических  может  помочь нам лучше  решить  ваши проблемы  ,  диагностики  , когда  секретаря  необходимых  около  несколько минут";
            mcs_network_diagnostic      = "поиск неисправностей";
            mcs_connecting_server       = " подключение к  серверу.  .  . ";
            mcs_diagnostic_process_prompt = "Диагностический процесс может занять несколько минут, во время диагностики не выполнять другие операции, но вы всегда можете остановить диагностический";
            mcs_diagnostic_results      = " Результаты диагностики ";
            mcs_diagnostic_results_received = "Диагностика завершена, диагностические результаты были получены";
            mcs_diagnostic_results_prompt = "Благодарим Вас за участие в этой диагностики, результаты диагностики поможет нам решить проблему как можно скорее";
            mcs_results_no_abnormality  = "Результаты  без  диагностики  аномалий ";
            mcs_no_abnormality_prompt   = "Диагноз не был найден отклонений от нормы. Вы можете выбрать глубину диагностики, начните возможности сбора журнал поможет нам более эффективно решить эту проблему вы столкнулись";
            mcs_continue_diagnosis      = "Глубина Диагностика";
            mcs_diagnosis_connot_sent   = "Не удалось отправить  результаты диагностики ";
            mcs_email_sends             = "Отправить по электронной почте ";
            mcs_email_sends_prompt      = "Отправить результаты диагностики к нам по электронной почте, это поможет нам решить проблему как можно скорее";
            mcs_diagnosis_send          = "отправить";
            mcs_diagnosis_email         = "электронная почта ";
            mcs_send_successful         = "успешно отправлено";
            mcs_diagnosis_type_select_prompt = "пожалуйста, выберите тип диагноза";
            mcs_stop_diagnosis          = "Стоп Диагностика";
            mcs_detail_diagnosis_prompt = "Диагноз продолжить, вы можете отключить страницу устройства";
            mcs_detail_diagnosis_stop_prompt = "Глубина диагноз продолжается, вы всегда можете прервать";
            mcs_exit_detail_diagnosis   = "Глубина диагноз продолжается, следует ли остановить?";
            mcs_network_connection_unavailable = "Сетевое соединение недоступно";
            mcs_Failed_connect_Internet = "Не удалось подключиться к Интернету";
            mcs_connect_internet_note   = "Если вам нужно подключиться к Интернету, обратите внимание на следующее:";
            mcs_connect_internet_detail_first = "Проверьте настройки беспроводной локальной сети вашего телефона, чтобы увидеть, если есть доступ к беспроводной локальной сети сигнала";
            mcs_connect_internet_detail_second = "Проверьте, если ваш телефон имеет доступ к сети мобильной связи, так и не был отключен телефон";
            mcs_connect_wifi_note       = "Если у вас есть доступ к беспроводной локальной сети:";
            mcs_connect_wifi_detail     = "Проверьте, чтобы увидеть, если ваше беспроводное подключение к локальной сети точки доступа имеет доступ к Интернету, или если хот-спота разрешить устройству доступ к локальной сети";
            mcs_device_or_phone_time_zone_not_equals_please_select = "Устройство тока часового пояса и часовой пояс мобильного телефона не выберите правильный часовой пояс";
            mcs_phone_timezone          = "Часовой пояс телефона";
            mcs_timezone_change         = "Изменение часового пояса";
            mcs_mail_send               = "Сообщение отправлено";
            mcs_yes_verif               = "Здесь";
            mcs_no_verif                = "Нет";
            mcs_camera_found_new_version_y_n_upgrade = "Мы нашли новую версию камеры, нужно ли обновления?";
            mcs_auto_adapt_split_screen = " адаптивный ";
            mcs_four_split_screen       = " четыре  разделить экран ";
            mcs_nine_split_screen       = "9  разделить экран ";
            mcs_twelve_split_screen     = "Двенадцать  разделить экран ";
            mcs_not_connection_server   = "Невозможно подключиться к серверу";
            mcs_more_options            = "Посмотреть больше";
            mcs_bind_email_prompt       = "Для того чтобы учесть безопасности, связать свой почтовый ящик";
            mcs_login_now               = "Войти прямо сейчас";
            mcs_device_connect_power    = "1.линия электропередачи 2.Stromanschluss";
            mcs_device_connect_ethernet = "1.чистый рот    2.кабель";
            mcs_device_connect_ethernet_prompt = "кабель  доступа к сети  будет  один конец  рот  ,  другой конец  доступ к маршрутизатору  ,  сетевой порт  уже  видел  свет  зеленый мигает  ,  кабель  связи  завершена. ";
            mcs_pwd_format              = " Формат  :  пароль  длиной  в  8 до  16 бит  между  регистру  символов  ,  цифр,  букв и  специальных символов  содержит, по крайней мере,  три ";
            mcs_client_new              = "клиент ";
            mcs_user_guide              = "Руководство пользователя ";
            mcs_ebitcam_download_describe = " Ebitcam  это  облачные  службы мониторинга  программное обеспечение  с  использованием  облачных  камеры  ,  позволяет пользователям  просматривать  видео  информации  в любое время и в любом месте  ,  мы предоставляем вам  ясно  ,  свободно  смотреть на опыт  контроля  позволяет вам  в любое время  ,  интеллектуальные  заботиться о собственной  семьей  ,  нравится  пользователям  быстро  для  загрузки! ";
            mcs_mipc_download_describe  = " Mipc  это  облачные  службы мониторинга  программное обеспечение  с  использованием  облачных  камеры  ,  позволяет пользователям  просматривать  видео  информации  в любое время и в любом месте  ,  мы предоставляем вам  ясно  ,  свободно  смотреть на опыт  контроля  позволяет вам  в любое время  ,  интеллектуальные  заботиться о собственной  семьей  ,  нравится  пользователям  быстро  для  загрузки! ";
            mcs_guide_download          = " справочник  скачать ";
            mcs_password_admin          = "Управление паролями";
            mcs_already_read            = "Я прочитал и  согласия";
            mcs_privacy_policy          = "политика конфиденциальности ";
            mcs_not_agree_privacy_policy = "Вы также  не  согласен с  политикой конфиденциальности";
            mcs_reload                  = "Обновить";
            mcs_start_download          = "скачать сейчас";
            mcs_video_play_fail         = "воспроизведение видео  провал";
            mcs_download_app_tips       = "Вы также  можете попробовать использовать pc - клиента";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = "тип устройства ";
            mcs_connect_device_wifi     = " камера  временно  не поддерживает  частот  5 ГГц  WiFi ";
            mcs_send_diagnosis_results  = " Результаты диагностики  отправить  в  ... ";
            mcs_local_file              = " локальный файл ";
            mcs_local_device            = "локальное устройство ";
            mcs_export_sd_data          = " Экспорт  данных для sd карт ";
            mcs_shaking                 = "головой  машины серии";
            mcs_outdoor                 = "открытый  машины серии";
            mcs_card                    = "карта машины  серии";
            mcs_wifi_connection         = "WiFi соединения ";
            mcs_home_mode               = "режим Home";
            mcs_away_home_mode          = "AWAY режим";
            mcs_auto_switch_mode        = "Автоматическое переключение";
            mcs_select_scene_mode       = "Пожалуйста, выберите профиль";
            mcs_7x24_hours_prompt       = "Open 7x24 (ч) Запись";
            mcs_all_day_recording       = "День видео";
            mcs_home_mode_prompt        = "режим Home:Закройте все устройства сигнализации";
            mcs_away_home_mode_prompt   = "AWAY режим:Все устройства открыты сигнализации";
            mcs_at_home                 = "домаe";
            mcs_away_home               = "из";
            mcs_set_timezone_prompt_start = "Ваш часовой пояс";
            mcs_set_timezone_prompt_end = "Пожалуйста, включите дату и время в настройки часового пояса";
            mcs_set_wifi_remind_head    = "следующие  проблемы могут привести к  сетевой  камеры  не  избежать  ,  рекомендации";
            mcs_set_wifi_remind_1       = "Проверьте,  открыл  сеть  WiFi  поставить  руб  ,  этот параметр  может привести к  не может нормально  сетевые  камеры  .  Вы можете  временно закрыть  анти -  Руб чистая  ,  успешно  сетевой  камеры  после  восстановления  маршрутизатора  настройки";
            mcs_set_wifi_remind_2       = "если ваш дом  является  двухчастотный  маршрутизатор  ,  пожалуйста, проверьте  камеры  подключения  WiFi  -  частот  5 ГГц  ли  WiFi  ,  пожалуйста,  пусть  камеры  подключения  WiFi  2,4 ггц";
            mcs_set_wifi_remind_3       = "камера  временно  не поддерживает  WPA/WPA2  на уровне предприятий  WiFi  ,  пожалуйста, выберите  другие  WiFi";
            mcs_set_wifi_remind_4       = "если  ваш дом  является  преодоление  WiFi  ,  потому что  преодоление  причин  может привести к  вашей сети  не очень стабильно  ,  рекомендации  не  преодоление  подключения  WiFi";
            mcs_set_wifi_remind_5       = "каковы требования  к  WiFi  камера";
            mcs_record_save_to_my_file  = "Видео сохраняется в моих файлах";
            mcs_view_now                = "Посмотреть сейчас";
            mcs_search_sos_strat        = "Как показано, в нижней части нажмите кнопку";
            mcs_search_sos_end          = "Одна секунда, индикатор устройства мигает";
            mcs_search_magnetic_start   = "Как показано, комбинированная магнитная дверь, нажмите на боковую кнопку";
            mcs_search_magnetic_end     = "Одна секунда, индикатор устройства мигает";
            mcs_adding                  = "Добавление";
            mcs_record_empty_set_sd     = "Вставьте SD-карту может хранить историю видео";
            mcs_video_play_offline      = "Устройство отсутствует";
            mcs_video_play_network_fail = "Сетевое соединение не удалось, повторите попытку позже";
            mcs_alert_notify_guide1     = "[Оригинал] операция обнаружения движения мигрировать к [приложению], [к] настройки профиля";
            mcs_alert_notify_guide2     = "Операция выглядит следующим образом:";
            mcs_alert_notify_guide3     = "Выберите [сцена], необходимо вывернуть режим постановки на охрану, вам необходимо открыть у себя дома режим снятия с охраны;";
            mcs_alert_notify_guide4     = "Выберите [Аксессуары] - [список Аксессуары] - Режим [Детектор движения] наработан сигнализации, видео, фотографии, функцией будильника IO, отключить сигнализацию в домашнем режиме, видео и другие функции.";
            mcs_plan_protect_guide1     = "[Оригинал] план операции постановки на охрану мигрировали в [сценарий]";
            mcs_plan_protect_guide2     = "Выберите [сценарий], открытый профиль автоматическое переключение;";
            mcs_plan_protect_guide3     = "выбрать";
            mcs_plan_protect_guide4     = ", Потребность в период постановки на охрану (например: вт 7: 00-18: 00) устанавливают режим, после того, как ОК, чтобы сохранить изменения и вернуться на вкладку Настройки;";
            mcs_plan_record_guide       = "Выберите [Видеозапись], выверните функцию записи режима.";
            mcs_plan_record_guide1      = "[Видеозапись по расписанию] план операции постановки на охрану мигрировали в [Видеозапись]";
            mcs_plan_record_guide2      = ", Необходимость в записи периода времени (например: вторник, 7: 00-18: 00) устанавливают режим, после того, как ОК, чтобы сохранить изменения и вернуться на вкладку Настройки;";
            mcs_forgetpass_action_prompt = "Пожалуйста, нажмите устройство сброса Reset отверстие 10 секунд после выхода, инфракрасные лампы и оборудование для восстановления заводских настроек";
            mcs_cloud_box               = "Облако Box";
        }/* ru */
        else if(lang == "hu")
        {
            mcs_name                    = "Név";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "Név";
            mcs_old_nick                = "Becenév";
            mcs_linked                  = "Kapcsolódva";
            mcs_sign_in                 = "Belépés";
            mcs_back                    = "Vissza";
            mcs_will_back               = "visszatér";
            mcs_add                     = "Hozzáadás";
            mcs_add_device              = "Eszköz hozzáadása";
            mcs_device_existed          = "Eszköz már létezik";
            mcs_cancel                  = "Törlés";
            mcs_exit                    = "Kilépés";
            mcs_remember_password       = "Emlékezzen a jelszóra";
            mcs_password_remembered     = "Jelszó megjegyezve";
            mcs_sign_ining              = "Belépés...";
            mcs_cloud_server            = "Cloud szerver";
            mcs_input_device_id         = "Adja meg az eszköz azonosítóját!";
            mcs_input_username          = "Adja meg a felhasználónevet!";
            mcs_input_email_addr        = "Adja meg e-mail címét";
            mcs_email_address           = "E-mail cím:";
            mcs_email                   = "Postafiók";
            mcs_binding                 = "Binding";
            mcs_binding_email           = "Binding postafiók";
            mcs_binding_send_prompt     = "Binding postafiók";
            mcs_binding_email_prompt    = "Binding postafiók";
            mcs_input_password          = "Adja meg a jelszót!";
            mcs_access_server_failed    = "A szerver nem elérhető.";
            mcs_device_offline          = "A kamera nem elérhető.";
            mcs_invalid_password        = "Hibás jelszó";
            mcs_invalid_dev             = "Eszköz nem létezik";
            mcs_login_faided            = "Sikertelen bejelentkezés.";
            mcs_invalid_qrcode          = "Hibás QR kód.";
            mcs_please_input_username   = "Adja meg a felhasználónevet!";
            mcs_please_input_password   = "Adja meg a jelszót!";
            mcs_qrcode_scan_hint        = "Tartsa a doboz alján a készülék igazodik kétdimenziós kód";
            mcs_device_list_empty       = "Nincs beállítva berendezés";
            mcs_record_list_is_empty    = "Nincs rögzített felvétel.";
            mcs_password_expired        = "A jelszó lejárt.";
            mcs_set_video_size          = "Felbontás beállítása";
            mcs_hd_1280x720             = "HD [1280x720]";
            mcs_auto                    = "Automatikus";
            mcs_normal_640x360          = "Normál [640x360]";
            mcs_half_320x180            = "Közepes [320x180]";
            mcs_small_160x90            = "Alacsony [160x90]";
            mcs_play                    = "Lejátszás";
            mcs_settings                = "Beállítások";
            mcs_messages                = "Üzenetek";
            mcs_alarm                   = "Riasztás";
            mcs_delete                  = "Törlés";
            mcs_delete_camera           = "Törlés ";
            mcs_apply                   = "Alkalmaz";
            mcs_speed                   = "Sebesség";
            mcs_others                  = "Egyebek";
            mcs_audio                   = "Audió";
            mcs_speaker                 = "Hangszóró";
            mcs_mic                     = "Mikrofon";
            mcs_power_frequency         = "Táp frekvencia";
            mcs_online_upgrade          = "Online frissítés";
            mcs_restore_the_factory_settings = "Alapértelmezett beállítások";
            mcs_restore                 = "Visszaállítás";
            mcs_restore_camera          = "Újraindítás eszköz";
            mcs_start_upgrade           = "Frissítés elindítása";
            mcs_system                  = "Rendszer";
            mcs_system_settings         = "Rendszer beállítások";
            mcs_online                  = "Bekapcsolva";
            mcs_offline                 = "Kikapcsolva";
            mcs_query                   = "Keresés";
            mcs_begin_time              = "Felvétel kezdete";
            mcs_end_time                = "Felvétel vége";
            mcs_mode                    = "Mód";
            mcs_opened                  = "Megnyitva";
            mcs_high                    = "Magas";
            mcs_middle                  = "Közepes";
            mcs_low                     = "Alacsony";
            mcs_io_alert_input          = "I/O bemenet";
            mcs_io_alert_output         = "I/O kimenet";
            mcs_normally_open           = "Rendben megnyitva";
            mcs_normally_close          = "Rendben bezárva";
            mcs_motion_detection_sensitivity = "Mozgásérzékelő érzékenysége";
            mcs_daytime                 = "Nappal";
            mcs_night                   = "Éjszaka";
            mcs_sdcord                  = "SD kártya";
            mcs_storage_device          = "tárolóeszközök";
            mcs_set_mask                = "Set maszk";
            mcs_status                  = "Státusz";
            mcs_capacity                = "Kapacitás";
            mcs_usage                   = "Kihasználtság";
            mcs_format                  = "Formázás";
            mcs_repair                  = "Helyreállítás";
            mcs_formating               = "Formázás";
            mcs_repairing               = "Helyreállítás";
            mcs_mounted                 = "Hozzárendelve";
            mcs_unmounted               = "Leválasztva";
            mcs_mount                   = "Hozzárendelés";
            mcs_unmount                 = "Leválasztás";
            mcs_ethernet                = "Ethernet";
            mcs_wifi                    = "Wi-Fi";
            mcs_enabled                 = "Engedélyezett";
            mcs_mac_address             = "MAC address";
            mcs_network_status          = "Státusz";
            mcs_wifi_mode               = "Wi-Fi mód";
            mcs_client                  = "Kliens";
            mcs_ap                      = "Access Point";
            mcs_start_address           = "Kezdő IP cím";
            mcs_end_address             = "Záró IP cím";
            mcs_gateway                 = "Átjáró";
            mcs_select_network          = "Hálózat kiválasztása";
            mcs_dhcp_ip                 = "IP : DHCP engedélyezése";
            mcs_dhcp_dns                = "DNS : DHCP engedélyezése";
            mcs_ip_address              = "IP cím";
            mcs_network_mask            = "Hálózati maszk";
            mcs_input_secondary_dns     = "Másodlagos DNS megadása";
            mcs_secondary_dns           = "Másodlagos DNS";
            mcs_input_dns               = "DNS megadása";
            mcs_input_alternate_dns     = "Alternatív DNS megadása";
            mcs_input_ip                = "IP cím megadása";
            mcs_input_gateway           = "Átjáró megadása";
            mcs_input_network_mask      = "Hálózati maszk megadása";
            mcs_wifi_list               = "Wi-Fi lista";
            mcs_display_date            = "Dátum kijelzése";
            mcs_date_format             = "Dátum formátum";
            mcs_display_time            = "Idő kijelzése";
            mcs_time_format             = "Idő formátum";
            mcs_24_hour                 = "24 órás";
            mcs_12_hour                 = "12 órás";
            mcs_display_weeks           = "Hét kijelzése";
            mcs_date_time               = "Dátum/Idő";
            mcs_set_time                = "Idő beállítása";
            mcs_set_week                = "Hét beállítása";
            mcs_stream                  = "Adatátvitel";
            mcs_encode                  = "Kódolás";
            mcs_resolution              = "Felbontás";
            mcs_frame_fate              = "Képfrissítés (FPS)";
            mcs_maximum_bitrate         = "Мaximum bitráta";
            mcs_minimum_bitrate         = "Minimum bitráta";
            mcs_i_frame_interval        = "I-Frame időköz";
            mcs_video                   = "Videó";
            mcs_sampling_rate           = "Mintavételezési frekvencia(kHz)";
            mcs_nickname                = "Becenév";
            mcs_old_password            = "Régi jelszó";
            mcs_confirm_password        = "Jelszó megerősítése";
            mcs_modify_password         = "Jelszó módosítása";
            mcs_password                = "Jelszó";
            mcs_admin_password          = "Admin jelszó";
            mcs_guest_password          = "Vendég jelszó";
            mcs_product_info            = "Termék infó";
            mcs_software_version        = "Szoftver verzió";
            mcs_device_id               = "Eszköz azonosító";
            mcs_operation               = "Művelet";
            mcs_record                  = "Felvétel";
            mcs_record_2                = "Felvétel";
            mcs_upgrade_now             = "Frissítés most";
            mcs_upgrading               = "Frissítés";
            mcs_already_latest_version  = "Legfrissebb verzió";
            mcs_sensitivty              = "Érzékenység";
            mcs_user_defined            = "Egyedi";
            mcs_time                    = "Idő";
            mcs_date                    = "Dátum";
            mcs_finish                  = "Befejezés";
            mcs_delete_fail             = "törölve";
            mcs_motion                  = "Mozgás";
            mcs_start                   = "Indítás";
            mcs_talk                    = "Beszéd";
            mcs_password_input_inconsistent = "A jelszó nem megfelelő";
            mcs_input_6_to_20_litters   = "Input 6-20 betű (a-z, A-Z) vagy számokat (0-9)";
            mcs_user_letter_range_hint  = "a számlaszám a 32 szám (0 - 9) (a-z, vagy abc betűvel kezdődik, szükséges A-Z)";
            mcs_password_range_hint     = "Jelszó : 6-32 betű vagy szám";
            mcs_begin_with_the_letters  = "Betűvel kezdődjön!";
            mcs_sign_up                 = "Regisztráció";
            mcs_sign_up_failed          = "Hibás regisztáció";
            mcs_successful_sign_up      = "Sikeres regisztáció";
            mcs_are_you_sure_delete     = "Valóban törölni akarja?";
            mcs_failed_to_set_the       = "Sikertelen beállítás";
            mcs_set_successfully        = "Sikeres beállítás";
            mcs_downloading             = "Letöltés";
            mcs_wrote                   = "Kiírás befejzve";
            mcs_visit_again_later       = "Kérem látogasson vissza később!";
            mcs_restart_failed          = "Az újraindítás nem sikerült";
            mcs_upgrade_failed          = "A firssítés nem sikerült";
            mcs_connnected              = "Kapcsolódva";
            mcs_connnected_to           = "Kapcsolódva";
            mcs_not_select              = "Nincs kiválasztva";
            mcs_message_list            = "Üzenetlista";
            mcs_saved_password          = "Jelszó elmentve";
            mcs_alert                   = "Riasztás";
            mcs_no_record               = "Nincs felvétel";
            mcs_new_about               = "Új : A készülék";
            mcs_device                  = "Eszköz";
            mcs_config                  = "Konfiguráció";
            mcs_change_password_failed  = "A jelszó megváltoztatása nem sikerült";
            mcs_do_you_want_restart     = "Szeretné újraindítani?";
            mcs_do_you_want_restore     = "Szeretné visszaállítani?";
            mcs_do_you_want_upgrade     = "Szeretné frissíteni";
            mcs_load_end                = "Betöltés vége";
            mcs_loading                 = "Betöltés...";
            mcs_down_refresh            = "Léptessen le a frissítéshez!";
            mcs_release_refresh         = "Frissítés kiadás";
            mcs_refreshing              = "üdítő";
            mcs_release_then_loading_data_hint = "A betöltött adatok törlése";
            mcs_pull_refresh_hint       = "Léptessen fel a frissítéshez!";
            mcs_restarting              = "Újraindítás";
            mcs_upgraded_time           = "Frissítési idő : ";
            mcs_done                    = "Befejezve";
            mcs_playback                = "Lejátszás";
            mcs_i_o_alarm               = "I/O riasztás";
            mcs_alarm_action            = "Esemény riasztáskor";
            mcs_alarm_sources           = "Riasztási források";
            mcs_io_output               = "I/O bemenet";
            mcs_snapshots               = "Fénykép";
            mcs_snapshot                = "Fénykép";
            mcs_snapshot_interval       = "Fénykép időköz";
            mcs_pre_record_length       = "az előre rögzített felvétel hossza";
            mcs_nick_range_hint         = "a név nem lehet több 20 karakternél";
            mcs_save                    = "Mentés";
            mcs_close                   = "Bezár";
            mcs_snapshoting             = "fényképezett";
            mcs_snapshot_failed         = "Sikertelen képfelvétel";
            mcs_record_failed           = "Sikertelen videófelvétel";
            mcs_saved_successfully      = "Sikeresen elmentve";
            mcs_save_failed             = "A mentés nem sikerült";
            mcs_restart_to_take_effect  = "Az érvényesítéshez indítson újra!";
            mcs_please_allow_access_album = "Engedélyezze a hozzáférést a MIPC részére a fotóalbumához!";
            mcs_please_allow            = "Kérjük, hogy";
            mcs_access_album            = "eléréséhez a fénykép album";
            mcs_ios_privacy_setting_for_photo_prompt = "A hozzáférést Iphonon a \"Beállítások->Privát->Fotók\", menüpontban a \"";
            mcs_execute_change          = "\" \" alkalmazásnál tudja megváltoztatni";
            mcs_access_camera           = " hozzáférhet a kamera!";
            mcs_please_allow_access_camera = "Engedélyezze a hozzáférést a MIPC részére a kamerához!";
            mcs_ios_privacy_setting_for_camera_prompt = "A hozzáférést Iphonon a \"Beállítások->Privát->Kamera\", menüpontban a \"";
            mcs_busy_when_write         = "Nem tud rögzíteni";
            mcs_unknown_error           = "Ismeretlen hiba";
            mcs_i_know                  = "Igen, tudom";
            mcs_segment                 = "Szegmens";
            mcs_please_relogin          = "Kérem, jelentkezzen be újra!";
            mcs_change_password_succeed = "A jelszót sikeresen megváltoztatta";
            mcs_upgrade_to_ver          = "Verzió frissítés";
            mcs_restore_failed          = "Sikertelen visszaállítás";
            mcs_please_restart          = "Kérem, indítsa újra!";
            mcs_keep_network_settings   = "Fenntartások hálózati beállítások és jelszó";
            mcs_not_connected           = "Nincs kapcsolatban";
            mcs_sdcard_not_ready        = "Az SD kártya nem üzemkész";
            mcs_device_not_exist        = "Nem létező eszköz";
            mcs_disable                 = "Nem aktiv";
            mcs_to_determine_the        = "Meghatározni a";
            mcs_alert_on                = "Riasztás bekapcsolása";
            mcs_alert_off               = "Riasztás kikapcsolása";
            mcs_alert_onoff             = "Alert on / off";
            mcs_monday                  = "hétfő";
            mcs_tuesday                 = "kedd";
            mcs_wednesday               = "szerda";
            mcs_thursday                = "csütörtök";
            mcs_friday                  = "péntek";
            mcs_saturday                = "szombat";
            mcs_sunday                  = "vasárnap";
            mcs_mon                     = "hétfő";
            mcs_tue                     = "kedd";
            mcs_wed                     = "szerda";
            mcs_thu                     = "csütörtök";
            mcs_fri                     = "péntek";
            mcs_sat                     = "szombat";
            mcs_sun                     = "vasárnap";
            mcs_scheduled_recording     = "Programozott felvétel";
            mcs_schedule                = "Programozott felvétel";
            mcs_scheduled_recording_status = "Programozott felvétel állapota";
            mcs_folding                 = "Összecsomagolás";
            mcs_unfolding               = "Kibontás";
            mcs_end_time_should_lt_begin = "A befejezés ideje későbbi kell legyen, mint a kezdési idő!";
            mcs_recording               = "Felvétel";
            mcs_prerecord_interval_range_hint = "Az előfelvétel ideje 6 másodpercnél kevesebb kell legyen!";
            mcs_snapshot_interval_range_hint = "A képfelvétel intervallumának 0 és 60 között kell lennie!";
            mcs_not_ready               = "Nem áll készen";
            mcs_availablesize           = "Rendekezésre álló hely";
            mcs_reboot                  = "Újraindítás";
            mcs_alerter                 = "Figyelmeztetés jelző";
            mcs_pir                     = "IR érzékelő";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "Kodolás";
            mcs_ok                      = "OK";
            mcs_fault                   = "Hiba";
            mcs_sensor_status           = "Az érzékelő állapota";
            mcs_about                   = "Az alkalmazásról";
            mcs_reset_now               = "Újraindítás most";
            mcs_reset_later             = "Újraindítás később";
            mcs_prompt                  = "Súgó";
            mcs_select                  = "Kiválasztás";
            mcs_available_netword       = "A hálózat nem elérhető, szeretné beállítani?";
            mcs_request_send            = "Kérés küldése...";
            mcs_blank_device_id         = "Az eszközazonosító megadása kötelező!";
            mcs_blank_username          = "A felhasználónév megadása kötelező!";
            mcs_blank_password          = "A jelszó megadása kötelező";
            mcs_exist_user              = "A felhasználó már létezik";
            mcs_invalid_user            = "Hibás felhasználónév";
            mcs_invalid_email_addr      = "Hibás e-mail cím";
            mcs_system_err              = "Rendszerhiba";
            mcs_exceed_device           = "Elérte az egyidejű felhasználók maximális számát";
            mcs_continue                = "Folytatás";
            mcs_prompt_exit             = "- felmondott?";
            mcs_device_list             = "eszköz lista";
            mcs_no_sdcard               = "SD kártya nem található";
            mcs_no_hard_disk            = "nem merevlemez";
            mcs_show_more               = "További lehetőségek";
            mcs_shotsnop_exists         = "A kép már létezik";
            mcs_input_nick              = "Adja meg a becenevet";
            mcs_nick_not_empty          = "A becenév megadása kötelező!";
            mcs_input_new_pass          = "Adjon meg egy új jelszót!";
            mcs_input_new_pass_again    = "Adja meg az új jelszót újra!";
            mcs_new_password            = "Új jelszó";
            mcs_modify_network_prompt   = "A hálózati beállítás megváltoztatása kapcsolódási hibát okozhat. Kívánja folytatni?";
            mcs_wifi_disable_prompt     = "Kikapcsola a Wi-Fi-t?";
            mcs_eth_disable_prompt      = "Kikapcsolja az Ethernet-et?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "Automatikus DHCP használata";
            mcs_manually_set            = "Manuális megadás";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "Elsődleges DNS";
            mcs_client_mode             = "Kliens";
            mcs_adhoc_mode              = "Ad-hoc";
            mcs_connect_fail            = "Kapcsolódási hiba";
            mcs_dhcp_server             = "DHCP szerver";
            mcs_display_text            = "Szöveg megjelenítése";
            mcs_repair_prompt_detail    = "A helyreállítás adatvesztést okozhat. Kívánja folytatni?";
            mcs_format_prompt_detail    = "A formazás minden adatot törölni fog az SD kártyán, kívánja folytatni?";
            mcs_mount_prompt            = "Az SD kártya hozzárendelése. Kívánja folytatni?";
            mcs_umount_prompt           = "Az SD kártya leválasztása után a felvételek mentése nem lehetséges. Kívánja folytatni?";
            mcs_sdcard_reset            = "A beállítások elmentve. Indítsa újra a kamerát!";
            mcs_sdcard_repairing        = "A helyreállítás folyamatban, várjon az újraindulásig!";
            mcs_sdcard_formating        = "Formázás, várjon az újraindításra!";
            mcs_sdcard_umount           = "SD kártya leválasztása";
            mcs_valid                   = "Érvényes";
            mcs_io                      = "IO riasztás";
            mcs_input                   = "Bemenet";
            mcs_outinput                = "Kimenet";
            mcs_prompt_alert_on         = "A riasztás bekapcsolva. Kívánja folytatni?";
            mcs_auto_sync_date_time     = "automatikus fordítás";
            mcs_alarm_record            = "Viedófelvétel riasztás";
            mcs_username                = "Felhasználó név";
            mcs_re_enter_the_password   = "Adja meg a jelszót újra!";
            mcs_remember_me             = "Maradjon bejelentkezve";
            mcs_home                    = "Vissza a kezdéshez";
            mcs_install_the_plug        = "Telepítse a csatlakozót!";
            mcs_install_the_video_plug  = "Telepítse a videó csatlakozót!";
            mcs_install_now             = "Telepítés most";
            mcs_temporarily_installed_use_ordinary_video = "Telepítés később";
            mcs_brightness              = "Fényerő";
            mcs_contrast                = "Kontraszt";
            mcs_color_saturation        = "Színtelítettség";
            mcs_sharpness               = "Élesség";
            mcs_duration                = "Időtartam";
            mcs_index                   = "Index";
            mcs_remark                  = "Megjegyzés";
            mcs_media_stream            = "Adathordozó";
            mcs_server                  = "Szerver";
            mcs_media_transfer          = "Adatok átvitele";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "Gyártó";
            mcs_model                   = "Modell";
            mcs_plugin_version          = "Plug-in verziószám";
            mcs_network_interface       = "Hálózati csatlakozás";
            mcs_transfer_protocol       = "Adatátviteli protokol";
            mcs_year                    = "Év";
            mcs_month                   = "Hónap";
            mcs_day                     = "nap";
            mcs_hour                    = "Óra";
            mcs_minute                  = "Perc";
            mcs_second                  = "Másodperc";
            mcs_millisec                = "Tizedmásodperc";
            mcs_ntp                     = "Idő-szerver címe";
            mcs_upload_upgrade          = "A frissítés feltöltése ";
            mcs_stop                    = "STOP";
            mcs_info_rewind             = "Visszatekerés";
            mcs_fast_forward            = "Előretekerés";
            mcs_previous_frame          = "Előző képkocka";
            mcs_next_frame              = "Következő képkocka";
            mcs_record_audio            = "Hangfelvétel";
            mcs_week                    = "Hét";
            mcs_all                     = "Minden";
            mcs_id                      = "Azonosító";
            mcs_select_all              = "Összes kiválasztása";
            mcs_call                    = "Hívás";
            mcs_activation              = "Aktiválás";
            mcs_caption                 = "File feltöltése";
            mcs_alarm_device            = "Eszközriasztás";
            mcs_not_installed           = "Nincs telepítve";
            mcs_join_us_now             = "Csatlakozzon hozzánk!";
            mcs_reconnect_please_wait   = "Újra csatlakozás, kérem várjon!";
            mcs_erasing                 = "Törlés";
            mcs_writing                 = "Írás";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "Elérhető frissebb verzió";
            mcs_equipment_flip          = "Forgatás";
            mcs_device_status           = "AZ eszköz állapota";
            mcs_audio_setting           = "Hangbeállítás";
            mcs_nick_modify             = "Becenév megváltoztatása";
            mcs_ready                   = "Kész";
            mcs_full                    = "Megtelt";
            mcs_connecting              = "Csatlakozás";
            mcs_message_buffering       = "Üzenet pufferelés";
            mcs_upgrade_finish          = "A frissítés kész";
            mcs_image                   = "Kép";
            mcs_bar                     = "Felvétel";
            mcs_init                    = "Inicializálás";
            mcs_confirm_new_password    = "Új jelszó megerősítése";
            mcs_continue_switch_wireless_network = "A hálózat váltás a kapcsolat megszakadását eredményezheti. Kívánja folytatni?";
            mcs_restore_factory_settings_prompt = "Gyári beállítások visszaállítása. A berendezés újraindul a visszaállítás után. Kívánja folytatni?";
            mcs_username_does_not_exis  = "A felhasználónév nem létezik";
            mcs_username_already_exists = "A felhasználónév már létezik";
            mcs_successful_whether_login = "Sikeres regisztráció, szeretne belépni?";
            mcs_username_demand         = "6-20 karakter, betűvel kezdve";
            mcs_the_password_is_empty   = "A jelszó üres";
            mcs_password_demand         = "6-20 karakter, betűvel kezdve";
            mcs_password_empty          = "Nincs jelszó megerősítés";
            mcs_two_password_input_inconsistent = "A jelszavak nem egyeznek";
            mcs_the_user_name_is_empty  = "A felhasználónév nincs megadva";
            mcs_upgrade_to_the_latest_version = "Frissítés a legutóbbi verzióra";
            mcs_subnet_mask_wrong_format = "A hálózati maszk hibás formátumú";
            mcs_upgrade_successful_restart_to_take_effect = "Sikeresen frissítve, indítsa újra a berendezés!";
            mcs_need_to_restart_the_camera_to_take_effect = "Az érvényesítéshez indítsa újra a berendezés";
            mcs_not_allowed_close_two_network_cards = "A Wi-Fi és az Ethernet egyidejűleg nem választható le";
            mcs_modified_successfully   = "Sikeresen megváltoztatva";
            mcs_connection_successfully = "Sikeres csatlakozás";
            mcs_connection_is_interrupted = "A kapcsolat megszakadt";
            mcs_devices_in_the_account_overrun = "Elérte az egy felhasználóhoz rendelhető maximális kamerák számát";
            mcs_format_error            = "Formázási hiba";
            mcs_change                  = "Megváltoztatás";
            mcs_refresh                 = "Frissítés";
            mcs_connect                 = "Csatlakozás";
            mcs_upgrade                 = "Frissítés";
            mcs_activate                = "Aktiválás";
            mcs_filter                  = "Szűrés";
            mcs_reset                   = "Újraindítás";
            mcs_prompt_alert_off        = "A riasztás kikapcsolása. Kívánja folytatni?";
            mcs_invalid_server          = "Hibás időszerver";
            mcs_upgrade_prompt          = "A berendezés szoftver frissítése. Kívánja folytatni?";
            mcs_restart_prompt          = "Újraindítás eszköz, továbbra is?";
            mcs_repeat                  = "Ismétlés";
            mcs_scheduled_one           = "Időzített felvétel 1";
            mcs_scheduled_two           = "Időzített felvétel 2";
            mcs_scheduled_three         = "Időzített felvétel 3";
            mcs_scheduled_four          = "Időzített felvétel 4";
            mcs_more                    = "Több";
            mcs_leave                   = "Még több betöltése";
            mcs_qrcode_scan             = "QR kód beolvasása";
            mcs_inserted                = "Beillesztve";
            mcs_removed                 = "Eltávolítva";
            mcs_upgrade_init            = "A frissítés indítása";
            mcs_upgrade_download        = "A frissítés letöltése";
            mcs_check                   = "Ellenőrzés";
            mcs_audio_encoder_config    = "Audió kodek";
            mcs_video_codec             = "Videó kodek";
            mcs_download                = "Letöltés";
            mcs_client_download         = "Kliens letöltése";
            mcs_for_more_clarity_smooth_video_experience = "A tiszta és még élvezhetőbb képért";
            mcs_network                 = "Hálózat";
            mcs_mobile_client_download  = "Mobil kliens letöltése";
            mcs_readonly                = "Csak olvasható";
            mcs_please_exit_and_relogin = "Lépjen ki és lépjen be újra!";
            mcs_add_device_failed       = "Az eszköz hozzáadása sikertelen volt";
            mcs_set_password            = "Jelszó beállítása";
            mcs_7x24_hours              = "7x24 órás";
            mcs_mtalt                   = "%@ : Mozgás riasztás";
            mcs_ioalt                   = "%@ : I/O riasztás";
            mcs_time_zone               = "Időzóna";
            mcs_select_time             = "Adja meg az időt!";
            mcs_now                     = "Most";
            mcs_mipc_have_alert_notification = "MIPC risztási értesítés";
            mcs_notification_center     = "Értesítési központ";
            mcs_sound                   = "Hang";
            mcs_vibration               = "Vibráció";
            mcs_clear_cache             = "A cache kiürítése";
            mcs_clear_cache_hint        = "Biztos, hogy ki szeretné üríteni a cachet?";
            mcs_successfully_cleared_cache = "A cache sikeresen kiürítve";
            mcs_app_except_exit_hint    = "Elnézést, az alkalmazás kritikus hiba miatt leáll.";
            mcs_rate_us                 = "Kérem, értékelje az alkalmazást!";
            mcs_password_too_simple_hint = "A jelszó túl egyszerű, változtasson rajta a nagyobb biztonságért!";
            mcs_check_for_new_version   = "Frissítések keresése";
            mcs_contact_us              = "Lépjen velünk kapcsolatba!";
            mcs_buffer_time             = "Pufferelési idő";
            mcs_default                 = "Alapértelmezett";
            mcs_alarmed_devices         = "Beélesített eszköz";
            mcs_aec                     = "Visszhang törlése";
            mcs_permission_denied       = "A hozzáférés megtagadva";
            mcs_full_screen             = "Teljes képernyő";
            mcs_forgot_your_password    = "Elfelejtett jelszó";
            mcs_your_email              = "E-mail cím";
            mcs_sign_up_confirmation    = "A visszaigazoló e-mailt küldött, hogy ellenőrizze a benyújtott e-mail címét. Látogatás a linket küldött e-mailben található aktiválja a fiókot.";
            mcs_recovery_prompt         = "Kérjük, adja meg e-mail címét (felhasználói név), akkor küldjön egy üzenetet, hogy megmondja, hogyan kell a jelszót.";
            mcs_password_reset_confirmation = "Egy e-mailt küldött a benyújtott e-mail címre, Látogatás a linket küldött e-mail, hogy a jelszót.";
            mcs_recovery_fail_no_mail   = "Jelszó visszaállítás nem, ez a számla nem kötelező az e-mail";
            mcs_recovery_fail_invalid_link = "Jelszó visszaállítás nem, kérjük, ellenőrizze, hogy a tartalmat a kapcsolat vagy hasznosítás újra.";
            mcs_recovery_ok_login       = "Jelszó visszaállítás sikerét, jelentkezzen be most.";
            mcs_active_ok_login         = "Számla aktív siker. Jelentkezzen be most.";
            mcs_active_fail_invalid_link = "Fiók aktív nem. Kérjük, ellenőrizze, hogy a tartalmat a kapcsolat vagy Regisztráció újra.";
            mcs_login_fail_inactive     = "Fiók inaktív. Kérjük, kövesse a tartalom aktív e-mail, hogy aktív.";
            mcs_sign_up_again           = "Regisztrálj újra";
            mcs_press_start_talk        = "Nyomja meg beszélni";
            mcs_release_stop_talk       = "Engedje, hogy hagyja abba";
            mcs_delete_device           = "törlése eszköz";
            mcs_success_removed_equipment = "Eszköz törlése sikeresen";
            mcs_remove_equipment_failure = "Távolítsuk el a berendezés meghibásodását";
            mcs_device_busy             = "A készülék most elfoglalt";
            mcs_keep_testing            = "Folytatás teszt";
            mcs_notify_tone             = "Értesítési csengőhang";
            mcs_float_video             = "Engedélyezze a lebegő video";
            mcs_float_position          = "Lebegő video pozíció";
            mcs_video_resolution        = "Videó felbontás";
            mcs_float_resolution        = "Lebegő videó felbontás";
            mcs_top_left                = "balra fent";
            mcs_top_right               = "jobb felső";
            mcs_bottom_left             = "bal alsó";
            mcs_bottom_right            = "jobb alsó";
            mcs_action_next             = "következő";
            mcs_action_cancel           = "Mégsem";
            mcs_action_retry            = "Próbálja újra";
            mcs_action_add              = "hozzáad";
            mcs_is_add                  = "Hogy hozzá";
            mcs_action_apply            = "alkalmaz";
            mcs_action_config           = "Config";
            mcs_action_skip             = "Ugrás";
            mcs_action_ok               = "Rendben";
            mcs_action_add_device       = "eszköz hozzáadása";
            mcs_action_modify_password  = "Jelszó módosítása";
            mcs_action_config_wifi      = "Config Wi-Fi";
            mcs_state_connect_device    = "Csatlakoztatása eszközök";
            mcs_state_connect_device_fail = "Csatlakoztassa a berendezés meghibásodása";
            mcs_state_wait_device_online = "Várja meg, amíg a készülék on-line";
            mcs_state_device_online     = "Online";
            mcs_state_success           = "Sikeres";
            mcs_fail                    = "Sikertelen";
            mcs_delete_success          = "törölve";
            mcs_state_add_device_success = "Az eszköz hozzáadása sikerült";
            mcs_state_add_device_fail   = "Az eszköz hozzáadása sikertelen";
            mcs_state_modify_pass_success = "A jelszót sikeresen megváltoztatta";
            mcs_state_modify_pass_fail  = "A jelszó megváltoztatása sikertelen";
            mcs_state_config_wifi_success = "Set Wi-Fi siker";
            mcs_state_config_wifi_fail  = "Kapcsolódási hiba";
            mcs_state_connecting_to     = "Csatlakozás";
            mcs_network_connect_type    = "Az eszköz nem online, akkor arról, hogy a készülék be van-e kapcsolva, majd válasszuk a Hálózati kapcsolat:";
            mcs_prompt_modify_passwd    = "Biztonsági okokból a jelszó megváltoztatását az eszközhöz. Az új jelszó legalább hat karakter";
            mcs_prompt_config_wifi      = "A készülék még nem csatlakozik a Wi-Fi, kérjük, állítsa be a Wi-Fi.";
            mcs_step1_check_connect     = "1. lépés : Csatlakoztassa a kamerát a routerhez, az Ethernet kábel segítségével! ";
            mcs_first_step_ethernet_connect = "2. lépés: Csatlakoztassa az Ethernet kábelt a router és a kamera.";
            mcs_step2_check_connect     = "2. lépés : Kapcsolja be a kamerát!";
            mcs_second_step_ethernet_connect = "1. lépés: Győződjön meg arról készülék be van kapcsolva.";
            mcs_hint_check_network      = "Megjegyzés : a kamera kb. 1 perc alatt indul el, ezután a LED zöld státusz led 3 másodpercenként háromszor felvillan, ami azt jelenti, hogy a kamera sikeresen kapcsolódott az internethez. A telepítés varázsló automatikusan a következő lépésre ugrik.";
            mcs_the_end                 = "vége";
            mcs_hint_password_expired   = "A jelszó lejárt, kérjük újra hozzá az eszköz";
            mcs_hint_remove_ethernet    = "Megjegyzés : Wi-Fi működik megfelelően, akkor most húzza ki a hálózati kábelt.";
            mcs_gateway_format_incorrect = "átjáró címe hibás formátuma";
            mcs_dns_format_incorrect    = "DNS cím formátuma nem megfelelő";
            mcs_subnet_mask_format_incorrect = "Subnet mask cím formátuma nem megfelelő";
            mcs_ip_format_incorrect     = "IP cím formátuma nem megfelelő";
            mcs_login_sucess            = "sikeres bejelentkezés";
            mcs_donot_remind            = "ne emlékeztessen";
            mcs_clear_cache_signout_hint = "Törölje a cache kilép jelentkezzen be újra, hogy továbbra is?";
            mcs_devlist_adddev_hint     = "Kattintson ide, hogy eszközök";
            mcs_devlist_menu_hint       = "Kattintson ide, hogy a felbontást";
            mcs_update_failed           = "Frissítés sikertelen";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "helyi";
            mcs_set_npapi               = "Ha a plugin telepítése, Kérjük, látogasson el \'chrome://flags/#enable-npapi\', engedélyezze NPAPI, ";
            mcs_set_win32k              = "látogatás \'chrome://flags/#enable-win32k-renderer-lockdown\', fogyatékkal Win32k renderelő zárlatot,";
            mcs_restart_browser         = "Indítsa újra a böngészőt";
            mcs_download_location       = "Letöltés helye";
            mcs_Networking_mode         = "hálózati módot";
            mcs_wifi_intelligent_configuration = "Wi-Fi kapcsolat";
            mcs_ethernet_configuration  = "Ethernet csatlakozás";
            mcs_wifi_connect            = "kapcsolat";
            mcs_hard_disk               = "merevlemez";
            mcs_wifi_is_connection      = "Csatlakozó, kérem várjon...";
            mcs_wifi_intelligent_configuration_setup_ailure = "Wi-Fi intelligens konfigurációs beállítási hiba";
            mcs_box_list                = "lista box";
            mcs_repair_disk_prompt      = "Lemezt is veszített, folytatás?";
            mcs_format_disk_prompt      = "Lemez formázása törli az összes adatot, folytatás?";
            mcs_scheduled_alerting      = "élesítés Program";
            mcs_scheduled_alerting_one  = "élesítés Program 1";
            mcs_scheduled_alerting_two  = "élesítés Program 2";
            mcs_scheduled_alerting_three = "élesítés Program 3";
            mcs_scheduled_alerting_four = "élesítés Program 4";
            mcs_wifi_config_cancle      = "Wi-Fi konfiguráció törléséhez";
            mcs_wifi_config_prepare     = "Wi-Fi előfeltételek";
            mcs_wifi_config_first       = "Az eszközök és a mobiltelefonok és routerek tartományban tartjuk 1 m";
            mcs_wifi_config_second      = "Amikor konfigurálja a Wi-Fi, a készülék nem dugja a hálózati kábelt";
            mcs_wifi_config_third       = "Nyomja meg a reset lyuk egy másodpercig, majd engedje";
            mcs_wifi_config_success     = "Configuration siker";
            mcs_wifi_config_failure     = "Configuration nem sikerült";
            mcs_failure_prompt          = "Próbálja újra, vagy visszatér, hogy ellenőrizze Wi-Fi jelszó helyes";
            mcs_display_password        = "Mutasd a jelszót";
            mcs_action_smart_config_wifi = "Configuration Wizard";
            mcs_wifi_invalid            = "A hálózat nincs Wi-Fi, csatlakoztassa Wi-Fi";
            mcs_phone_not_connect_wifi  = "Wi-Fi hálózat nem csatlakozik";
            mcs_prompt_check_connection = "A kamera nem elérhető, ellenőrizze a kapcsolatot!";
            mcs_wifi_cfg_ready          = "Kész";
            mcs_reset_complete          = "Reset befejeződött";
            mcs_how_to_restore_factory_settings = "Hogyan lehet visszaállítani a gyári beállításokat: használhatja a RESET láb megnyomja a RESET alján kamera több mint 10 másodperc";
            mcs_forgetpass_action_wizard = "kérem az eszközök hosszú Reset reset lyuk után 10 másodperccel a meg fogja hallani: \"a gyártelepi meghatározott berendezések\".";
            mcs_prompt_check_device_connection = "A készülék nem elérhető, ellenőrizze a vezetékeket csatlakoztatni az eszközt";
            mcs_prompt_select_device_connection = "a műszert nem sok online módon kiválasztásához";
            mcs_input_wifi_name         = "Írja be Wi-Fi név";
            mcs_action_previous         = "előző";
            mcs_io_alert_range_hint     = "IO riasztási időt kell kevesebb, mint 60 másodperc";
            mcs_io_alert_time           = "IO riasztás idő(másodpercben)";
            mcs_smart                   = "okos";
            mcs_plan                    = "terv";
            mcs_mute                    = "néma";
            mcs_wind_speed              = "szélsebesség";
            mcs_one                     = "egy fogaskerék";
            mcs_two                     = "két sebességfokozat";
            mcs_three                   = "három fokozatban";
            mcs_purify_mode             = "megtisztítani mód";
            mcs_video_list              = "videó lista";
            mcs_wifi_cfg_restore_factory_settings = "Tartsa a mobiltelefon közel készüléket, ha az eszköz már konfigurálva Wi-Fi, nyomja meg a RESET lyukat egy másodpercig, majd engedje, a készülék visszaállítja a gyári beállításokat, és automatikusan újraindul";
            mcs_mask_settings           = "Mask beállítások";
            mcs_notification_settings   = "értesítési beállítások";
            mcs_alarm_settings          = "riasztás beállítások";
            mcs_motion_detection        = "Motion Detection";
            mcs_io_alarm                = "I/O Alarm";
            mcs_connect_status          = "Connection Status";
            mcs_motion_notification     = "Riasztások és értesítések";
            mcs_device_connected        = "Készülék csatlakozik";
            mcs_start_spray             = "Kezdje permetezés?";
            mcs_available_network       = "Hálózat nem elérhető, ellenőrizze a hálózati";
            mcs_select_wifi_wizard      = "Kérjük, válasszon Wi-Fi hálózatot először";
            mcs_input_wifi_password     = "Kérjük, válasszon Wi-Fi hálózatot először";
            mcs_device_admin_password   = "Készülék admin jelszó";
            mcs_device_guest_password   = "Device vendég jelszót";
            mcs_user_admin_password     = "Felhasználó admin jelszó";
            mcs_user_guest_password     = "Felhasználói vendég jelszót";
            mcs_save_network_set        = "Mentsd hálózati készlet és jelszó";
            mcs_nickname_not_set        = "Kamera becenév nincs megadva";
            mcs_current_wifi            = "A jelenlegi Wi-Fi";
            mcs_current_password_strength = "A jelenlegi jelszó erőssége";
            mcs_new_password_strength   = "Új jelszó erőssége";
            mcs_needs_to_open_the_DHCP  = "A router kell megnyitni a DHCP (automatikusan az IP) funkció, ha a kísérlet sikertelen, kérjük, vegye fel a kapcsolatot a rendszergazdával.";
            mcs_picture                 = "kép";
            mcs_quality                 = "minőség";
            mcs_size                    = "méret";
            mcs_guest_login             = "Vendég Bejelentkezés";
            mcs_audio_and_video         = "Audio / Videó";
            mcs_volume                  = "hangerő";
            mcs_smooth                  = "sima";
            mcs_clear                   = "tiszta";
            mcs_handsfree               = "kihangosító";
            mcs_headphone               = "fejhallgató";
            mcs_my                      = "My";
            mcs_customer_service        = "Ügyfélszolgálat";
            mcs_firefox_flash_uninstall = "A flash plugin nem elérhető, az oldat olvassa https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "Widget";
            mcs_plug_load               = "Load plugins";
            mcs_plug_load_refuse        = "Ne töltsön plugins";
            mcs_plug_load_auto          = "automatikus";
            mcs_option                  = "Beállítások";
            mcs_option_ok               = "Határozza";
            mcs_voice_call_fails        = "Hang hívás sikertelen, ellenőrizze a hálózati";
            mcs_umounted_prompt         = "Akár lecsatolni?";
            mcs_mounted_prompt          = "Akár szerelhető?";
            mcs_format_prompt           = "Akár formázás";
            mcs_repair_prompt           = "Azt, hogy a gyorsjavítás?";
            mcs_signup_prompt           = "új itt.?";
            mcs_wifi_connect_sucess_prompt = "Nota: O Wi-Fi funciona normalmente, Agora você Pode desligar a rede.";
            mcs_manual_input_prompt     = "kézi bevitel berendezés azonosítója";
            mcs_qrscan_prompt           = "- még nem teszi lehetővé a kérelem hozzáférni a kamerát, kérem az iphone \\’kész\\’ - \\’privát\\’ - \\’a\\’ funkció, meg Vimtag neve ‘’ kérelmek felülvizsgálatát.";
            mcs_select_network_style    = "alternatív hálózati összekapcsolhatóság:";
            mcs_push                    = "Hirdetmény";
            mcs_connect_power_prompt    = "megjegyzés: a berendezés nem online, kérem, először, hogy már indulhat";
            mcs_fail_microphone         = "Nem sikerült elérni a mikrofont";
            mcs_microphone_prompt       = "Ön ne engedjék, hogy az alkalmazás hozzáférjen a mikrofon, a \\’set’ iPhone - a \\’magánélet’ - \\’mikrofon’ funkció, keresse meg a nevét \\’Vimtag’ alkalmazás módosítani kell";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "HD";
            mcs_standard_clear          = "SDTV";
            mcs_fluent_clear            = "folyékonyan";
            mcs_deleting                = "most el kell hagyni...";
            mcs_event                   = "események";
            mcs_one_hour                = "egy óra";
            mcs_half_hour               = "fél óra";
            mcs_five_min                = "öt perc";
            mcs_category                = "kategória";
            mcs_time_length             = "ha a hosszú";
            mcs_new                     = "új";
            mcs_week_setting_prompt     = "a héten nem.";
            mcs_time_setting_prompt     = "időegyeztetés nem maradhat üresen";
            mcs_today                   = "ma";
            mcs_wifi_password           = "Wi-Fi jelszót";
            mcs_register_prompt         = "kérem, előbb regisztrált számlaszámot";
            mcs_click_login             = "a bejelentkezés";
            mcs_not_login_prompt        = "- hogy be nem írja alá, kérem!";
            mcs_product_presentation    = "homepage";
            mcs_help_feedback           = "segíts";
            mcs_help_information        = "segíts";
            mcs_feedback                = "véleményét";
            mcs_feedback_des            = "hála használjuk app hozott nekünk köszönöm értékes véleményeiket";
            mcs_feedback_praise         = "ez";
            mcs_feedback_title_prompt   = "a visszajelzés";
            mcs_feedback_title          = "kérem, adja meg a címet (18 szóban vagy kevesebb)";
            mcs_feedback_type_prompt    = "a probléma típusa";
            mcs_feedback_please_select  = "kérem válasszon típusa";
            mcs_feedback_select_option1 = "interfész probléma";
            mcs_feedback_select_option2 = "a kamera";
            mcs_feedback_select_option9 = "egyéb kérdések";
            mcs_feedback_dec_prompt     = "részletes leírása";
            mcs_feedback_dec            = "kérem, üsse be a vélemény";
            mcs_feedback_upload_photo   = "kép feltöltése";
            mcs_preview_pic             = "a bemutató";
            mcs_Album                   = "Válasszunk album";
            mcs_Photograph              = "fénykép";
            mcs_camera_unavailable      = "Nem érhető el a kamerával";
            mcs_feedback_submit         = "a benyújtott";
            mcs_feedback_title_alert    = "nem felel meg a szabályoknak";
            mcs_feedback_type_alert     = "kérjük, válassza ki a megfelelő típusú";
            mcs_feedback_dec_alert      = "kérem, üsse be a vélemény";
            mcs_feedback_submit_success = "a benyújtott sikeres";
            mcs_feedback_submit_fail    = "a benyújtott";
            mcs_connect_wifi_prompt     = "kapcsolat a Wi-Fi";
            mcs_cloud                   = "felhő";
            mcs_demo                    = "demo";
            mcs_shortest                = "a legrövidebb";
            mcs_no_history              = "Nem története";
            mcs_download_pc_client      = "Ide kattintva letöltheti a PC kliens";
            mcs_accounts_bind_email_exist = "a számla kötelező postaládát is.";
            mcs_accounts_bind_email_busy = "az a postaláda már kötelező erejű volt.";
            mcs_systemupdatetip_noversionnodetail = "A jelenlegi verzió a frissítés, de nincs részletes frissítési információk";
            mcs_systemupdatetip_nodetail = "Nincs részletes frissítési információk";
            mcs_systemupdatetip_updatefrom = "a jelenlegi változat";
            mcs_systemupdatetip_updateto = "lehet korszerűsítése";
            mcs_systemupdatetip_sureforupdate = "biztos a fejlődéssel?";
            mcs_systemupdatetip_updatecontent = "ezen alkalommal frissített tartalom";
            mcs_operate_prompt          = "Пожалуйста, работать в соответствии со схемой";
            mcs_operation_prompt        = "működés azonnali";
            mcs_qrcode_prompt_content   = "Используйте камеру устройства для сканирования мобильных двумерного кода";
            mcs_qrcode_camera_distance  = "Kétdimenziós kódot a kamera távolság 12 ~ 14cm";
            mcs_planvideo_datewizard    = "kérem egyeztessünk";
            mcs_planvideo_timewizard    = "kérem határozza meg az idő";
            mcs_planvideo_wizard        = "kérem határozza meg az idő és dátum";
            mcs_email_unbind            = "Mail fiók nem köti";
            mcs_email_unmatch           = "Postafiók mismatch";
            mcs_email_inactive          = "E-mail nincs aktiválva";
            mcs_email_binded            = "E-mail-ban kikötötték";
            mcs_user_binded_bymail      = "A felhasználót nem kötelezett";
            mcs_bind_email_fail         = "Postafiók kötődést nem sikerült";
            mcs_diagnosis               = "Diagnózis";
            mcs_delay                   = "Késleltetés";
            mcs_packet_loss_rate        = "Packet loss arány";
            mcs_timezone_IDL            = "Nemzetközi dátumválasztó vonal";
            mcs_timezone_China          = "kína";
            mcs_timezone_Midway         = "Midway-szigetek";
            mcs_timezone_Niue           = "Sziget Niue";
            mcs_timezone_Samoa          = "Amerikai Szamoa";
            mcs_timezone_Aleutian       = "aleuti-szigetek";
            mcs_timezone_Hawaii         = "Hawaii-szigetek";
            mcs_timezone_Alaska         = "Alaszka";
            mcs_timezone_PSTUSCanada    = "Pacific Standard Time (USA és Kanada)";
            mcs_timezone_Arizona        = "Arizona";
            mcs_timezone_MSTUSCanada    = "Hegyi idő (USA & Kanada)";
            mcs_timezone_CSTUSCanada    = "Central Standard Time (USA és Kanada)";
            mcs_timezone_ESTUSCanada    = "Keleti idő (USA & Kanada)";
            mcs_timezone_ASTCanada      = "Atlanti idő (Kanada)";
            mcs_timezone_Newfoundland   = "újfundlandi";
            mcs_timezone_Brasilia       = "Brasilia";
            mcs_timezone_BuenosAires    = "Buenos Aires";
            mcs_timezone_Santiago       = "Santiago";
            mcs_timezone_Noronha        = "Noronha";
            mcs_timezone_SouthGeorgia   = "Dél-Georgia";
            mcs_timezone_Azores         = "Azori-";
            mcs_timezone_CapeVerde      = "Zöld-foki Köztársaság";
            mcs_timezone_London         = "London";
            mcs_timezone_Lisbon         = "Lisszabon";
            mcs_timezone_Dublin         = "Dublin";
            mcs_timezone_Berlin         = "Berlin";
            mcs_timezone_Amsterdam      = "Amszterdam";
            mcs_timezone_Brussels       = "Brüsszel";
            mcs_timezone_Budapest       = "Budapest";
            mcs_timezone_Madrid         = "Madrid";
            mcs_timezone_Paris          = "Párizs";
            mcs_timezone_Rome           = "Róma";
            mcs_timezone_Sarajevo       = "Szarajevó";
            mcs_timezone_Cairo          = "Kairó";
            mcs_timezone_Amman          = "Amman";
            mcs_timezone_Beirut         = "Bejrút";
            mcs_timezone_Istanbul       = "Isztambul";
            mcs_timezone_Jerusalem      = "Jeruzsálem";
            mcs_timezone_Athens         = "Athén";
            mcs_timezone_Baghdad        = "Bagdad";
            mcs_timezone_Riyadh         = "Rijád";
            mcs_timezone_Qatar          = "Katar";
            mcs_timezone_Moscow         = "Moszkva";
            mcs_timezone_Tehran         = "Teherán";
            mcs_timezone_Baku           = "Baku";
            mcs_timezone_Dubai          = "Dubai";
            mcs_timezone_Tbilisi        = "Tbiliszi";
            mcs_timezone_Kabul          = "Kabul";
            mcs_timezone_Karachi        = "Karachi";
            mcs_timezone_Yekaterinburg  = "Jekatyerinburg";
            mcs_timezone_Maldives       = "Maldív-szigetek";
            mcs_timezone_Calcutta       = "Calcutta";
            mcs_timezone_Colombo        = "Colombo";
            mcs_timezone_Katmandu       = "Kathmandu";
            mcs_timezone_Almaty         = "Almaty";
            mcs_timezone_Dhaka          = "Dhaka";
            mcs_timezone_Omsk           = "Omszk";
            mcs_timezone_Thimbu         = "Thimphu";
            mcs_timezone_Rangoon        = "Rangoon";
            mcs_timezone_Bangkok        = "Bangkok";
            mcs_timezone_Jakarta        = "Jakarta";
            mcs_timezone_Vientiane      = "Vientiane";
            mcs_timezone_Harbin         = "Harbin";
            mcs_timezone_Shanghai       = "Shanghai";
            mcs_timezone_Hongkong       = "Hongkongban";
            mcs_timezone_Singapore      = "Szingapúr";
            mcs_timezone_Taipei         = "Taipei";
            mcs_timezone_Ulaanbaatar    = "Ulánbátor";
            mcs_timezone_Perth          = "Perth";
            mcs_timezone_Seoul          = "Szöul";
            mcs_timezone_Tokyo          = "Tokió";
            mcs_timezone_Darwin         = "Darwin";
            mcs_timezone_Magadan        = "Magadan";
            mcs_timezone_Vladivostok    = "Vlagyivosztok";
            mcs_timezone_Guam           = "Guam";
            mcs_timezone_Sydney         = "Sydney";
            mcs_timezone_Canberra       = "Canberra";
            mcs_timezone_Melbourne      = "Melbourne";
            mcs_timezone_Queensland     = "Queensland";
            mcs_timezone_LordHowe       = "Lord Howe-";
            mcs_timezone_Guadalcanal    = "Guadalcanal";
            mcs_timezone_Fiji           = "Fidzsi-szigetek";
            mcs_timezone_Auckland       = "Auckland";
            mcs_timezone_Apia           = "Apia";
            mcs_timezone_Fakaofo        = "Fakaofo";
            mcs_timezone_Tongatapu      = "Tongatapu";
            mcs_timezone_Kiritimati     = "Kiritimati";
            mcs_connect_timeout         = "a kapcsolat -";
            mcs_share                   = "Megosztás";
            mcs_share_prompt_start      = "érheti";
            mcs_share_prompt_end        = "letölteni a videót a böngésző PC-n vagy Android telefon, amely ugyanabban a hálózatban";
            mcs_share_note              = "Letöltés folyamatban, kérem, ne hagyja ezt az oldalt";
            mcs_video_size              = "Méret";
            mcs_video_duration          = "Időtartam";
            mcs_my_folder               = "Saját mappák";
            mcs_account_no_contain      = "A számla nem tartalmaz";
            mcs_edit                    = "szerkesztése";
            mcs_video_number            = " video";
            mcs_no_local_video          = "No video";
            mcs_empty_folder            = "Mappa üres";
            mcs_no_history_record       = "Ön nincs történelem";
            mcs_no_local_record         = "A helyi rekord üres";
            mcs_empty_cloud_list_first  = "Az eszköz lista üres,";
            mcs_empty_cloud_list_second = "klikk bal felső";
            mcs_empty_cloud_list_third  = "új berendezés!";
            mcs_empty_local_list_first  = "az ön helyi lista üres,";
            mcs_empty_local_list_second = "próbáld";
            mcs_empty_local_list_third  = "a legördülő";
            mcs_empty_local_list_forth  = "a legördülő";
            mcs_empty_local_list_fifth  = "（- ian belül található berendezések）";
            mcs_record_prompt           = "Megnézheti a videót \"My->Saját mappák\"";
            mcs_record_download_prompt  = "Megnézheti a videót \"Saját mappák\"";
            mcs_register_buton_start    = "Nem veszi,";
            mcs_register_buton_end      = "Regisztrálj most";
            mcs_product                 = "termék";
            mcs_user_or_password_invalid = "Felhasználónév vagy jelszó helytelen";
            mcs_share_video_prompt      = "ön nem wifi hálózatát használják, átkapcsolna a wifi - hálózat keretében újra megosztani";
            mcs_download_video_prompt   = "ön nem wifi hálózatát használják, amely továbbra is letölthető - díjat?";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "közönséges";
            mcs_common_problem          = "gyakran ismételt Kérdések";
            msc_enter_comment           = "Írja meg észrevételeit";
            msc_description             = "leírás";
            mcs_parameter               = "paraméterek";
            mcs_help_and_feedback       = "Súgó és Visszajelzés";
            mcs_personal_center         = "személyes Center";
            mcs_version                 = "kioldó";
            mcs_language                = "nyelv";
            mcs_new_user                = "Én egy új felhasználói";
            mcs_have_account            = "van egy fiókot";
            mcs_try_it                  = "tapasztalat";
            mcs_sign_up_now             = "Regisztráció";
            mcs_input_confirm_password  = "Jelszó megerősítése";
            mcs_warranty_registration   = "garancia a nyilvántartásba vétel";
            mcs_get_more_cameras        = "több kamera";
            mcs_user_inactive           = "a felhasználók nem aktivált";
            mcs_format_options          = "Formátum";
            mcs_slide_screen            = "Csúsztassa a képernyő beállításához videó szöget";
            mcs_zoom_in_screen          = "Gyúrás a képernyőn lehet nagyítani a videó adatai";
            mcs_pause                   = "szünet";
            mcs_source                  = "forrás";
            mcs_magnetic                = "mágneses";
            mcs_sos                     = "sürgősségi gomb";
            mcs_input_download_path     = "Letöltés útvonal";
            mcs_download_path_name_error = "Töltse le a fájl elérési útját név csak betűket (a-z, A-Z) vagy numerikus (0-9)";
            mcs_active                  = "tevékenység";
            mcs_out                     = "hagy";
            mcs_quiet                   = "csendes";
            mcs_scenes                  = "színhely";
            mcs_accessory               = "tartozék";
            mcs_quiet_mode              = "csendes üzemmód";
            mcs_active_mode             = "aktív üzemmód";
            mcs_out_mode                = "Idegenben Mode";
            mcs_add_accessory           = "Add mellékletek";
            mcs_accessory_type          = "Accessory Type";
            mcs_add_successfully        = "sikeresen hozzáadott";
            mcs_set_scene               = "A mellékletek még nem állította be a jelenetet , kérem kattintson";
            mcs_to_set                  = "beállítása";
            mcs_add_accessory_button    = "Nyomja meg a gombot, amíg a piros lámpa kialszik a teljes kiegészítő";
            mcs_auto_monday             = "hétfő";
            mcs_auto_tuesday            = "kedd";
            mcs_auto_wednesday          = "szerda";
            mcs_auto_thursday           = "csütörtök";
            mcs_auto_friday             = "péntek";
            mcs_auto_saturday           = "szombat";
            mcs_auto_sunday             = "vasárnap";
            mcs_search                  = "keresés";
            mcs_format_input            = "a hard drive - formátum";
            mcs_get_accessory_failed    = "Attachment sikerült megszerezni";
            mcs_get_scene_failed        = "Get hiba forgatókönyvek";
            mcs_search_failed           = "Keresés sikertelen";
            mcs_add_failed              = "Add sikerült";
            mcs_ethernet_connect        = "Ethernet";
            mcs_action_click_retry      = "Kattintson az Újra";
            mcs_wifi_config_failure_detail = "Of u kunt proberen";
            mcs_qrcode_connect          = "Kétdimenziós kód csatlakoztatva";
            mcs_close_sound_prompt      = "Open Sound segít Wi-Fi kapcsolat, tartsa a telefont közel a hangszóró a kamera mikrofon";
            mcs_qrcode_prompt_title     = "Kérjük műveletek ábrán látható.";
            mcs_qrcode_prompt_detail    = "Kérjük, célja a kamera lencséjét a QR kódot pontosan és tartsa a távolságot lehet 30cm.";
            mcs_select_wifi_prompt      = "Nem Ethernet-kábel szükséges";
            mcs_select_ethernet_prompt  = "Ethernet kábel szükséges beállítás csak";
            mcs_enter_config_mode_prompt = "Kérjük, ellenőrizze Wifi jelző három piros három zöld felváltva villog. Ha igen, kérjük, kattintson a Tovább gombra. Ha nem, nyomja meg a RESET gombot a fényképezőgépen. Ezután ellenőrizze a Wi-Fi jelzőfény ismét";
            mcs_no_enter_config_mode    = "Nem adja konfigurációs módba";
            mcs_record_time             = "Felvételi idő(ásodpercben)";
            mcs_stop_search             = "A keresés leállításához";
            mcs_smart_wifi_setup        = "Intelligens Wifi beállítás";
            mcs_ethernet_setup          = "Ethernet beállítása";
            mcs_wifi_config_restore_start = "1) lépés: Győződjön meg arról készülék be van kapcsolva";
            mcs_wifi_config_restore_end = "2) Nyomja meg a reset lyuk egy másodpercig a készülék visszaállítja, és indítsa újra a 60 másodpercet, majd belép konfigurációs módba";
            mcs_Sense_schedule          = "forgatókönyv tervezés";
            load_succeed                = "Loading siker";
            load_fail                   = "Nem sikerült betölteni";
            refresh_succeed             = "Frissítés siker";
            refresh_fail                = "A frissítés nem sikerült";
            mcs_ensure_dev_power        = "1)lépés: Győződjön meg arról készülék be van kapcsolva";
            all_refresh_complete        = "Minden adat frissül";
            mcs_synchronize             = "egyidejű";
            mcs_synchronize_detail      = "Profilok a következő eszközök és beállítások következetlen , szinkronizálni kell a munka után";
            mcs_Sense_Schedule_Set      = "Forgatókönyv tervezés készlet";
            mcs_Sence_Schedule_detail   = "Ha engedélyezi az automatikus motívumprogram , a rendszer automatikusan szerinti forgatókönyv tervezés forgatókönyvek különböző időpontokban";
            mcs_Scene_set               = "profilok";
            mcs_Scene_set_detail        = "Ha engedélyezi egy profilt a profil beállításai szerint történik : az alábbiakban bemutatott oldalak";
            mcs_send_message            = "üzenet küldése";
            mcs_start_recording         = "A felvétel elindításához";
            mcs_start_capture           = "Start capture";
            mcs_turn_on_video           = "Hogy hagyja el a folyamatos felvételi mód , kérjük, nyissa meg a videót";
            mcs_search_press_button     = "Nyomja meg a Vissza gombot 1 másodpercig megjelenése után, a kijelző lassan villog,";
            mcs_add_fail1               = "a berendezés hozzáadása miatt törölt rövid keresés, kérlek kattints újra vissza hozzá";
            mcs_add_fail2               = "kérlek, kattints a berendezés hozzáadott elveszett. újra át egyszersem egészül ki";
            mcs_recording_duration      = "Felvételi idő ( másodpercben)";
            mcs_settings_unsaved        = "A beállításokat nem menti";
            mcs_want_save               = "Lesz menteni?";
            mcs_camera                  = "videokamera";
            mcs_router                  = "Router";
            mcs_start_up                = "kezdet";
            mcs_cancle_add              = "Berendezés törölték rövidsége miatt a Hozzáadás gombra";
            mcs_visit_photo_fail        = "nem látogatott";
            mcs_camera_cell             = "a kamera";
            mcs_myphoto                 = "- kép";
            mcs_select_photo            = "kiválasztott albumok";
            mcs_app_new_version         = "az új változat";
            mcs_update_new_version      = "azonnal új";
            mcs_app_new_version_prompt  = "App van egy új verzió, válassza a Frissítés letöltése Frissítés most";
            download_failed             = "A letöltés nem sikerült";
            mcs_connect_server_prompt   = "WiFi van csatlakoztatva, van csatlakoztatva a szerverhez";
            mcs_local_search            = "helyi keresés";
            mcs_choose_device_type      = "válassz berendezés típusa";
            mcs_wifi_state              = "megjegyzés: a wifi működik, amit most is kapcsolható (kapcsolható egy régi vezeték nem jelenhet meg egy régi vezeték berendezések után online esetében, kérlek, várj 20s automatikusan vezérelhető)";
            mcs_sweep                   = "Sweep";
            mcs_wifi_config_tip         = "van egy router, van wifi, elkerülni.";
            mcs_ethernet_config_tip     = "egy régi vezeték nélkül hozzáférhető beilleszteni a router";
            mcs_ethernet_connect_step_one = "első lépés: annak biztosítása, hogy az 1 - 2 összekötő vezetékek csap";
            mcs_ethernet_connect_step_two = "második lépés: a kikötő és a kamera egy régi vezeték a router 4 kapcsolat háló nyílása";
            mcs_sweep_qrcode_tip        = "de az. a kétdimenziós kódok átfésülném a kamerákat, hogy 30 cm távolságra";
            mcs_sound_config_tip        = "játssza le újra hozzájárul a wi - fi kapcsolat.(be is választható)";
            mcs_sosalt                  = "%@ : Sürgősségi gomb riasztás(%@)";
            mcs_dooralt                 = "%@ : mágneses Alert(%@)";
            mcs_wifi_config_restore     = "nyomja meg a RESET 1 másodperc után csak \"a berendezést wifi konfigurációs mód\".";
            mcs_voice_remind_heard      = "már hallottam a tippet";
            mcs_netWork_prompt          = "networking tippek";
            mcs_con_netWork             = "Használatban lévő hálózat az adatkapcsolat, akkor fogyaszt a nagy forgalmú, ha a hálózati interfész beállítások beállítása ugrik";
            mcs_no_netWork              = "Jelenleg nincs hálózati kapcsolat, hogy a folytatásban, hogy hozzanak létre a hálózati beállításokat interfész";
            mcs_exception_des           = "Az alkalmazás utolsó kivételével kilépés, hogy küldjön-e hibajelentést a szerver";
            mcs_exception_prompt        = "Tipp kóros";
            mcs_erro_diagnosis          = "hibaelhárítás";
            mcs_erro_log_des            = "App mostani rekord error log, válassza a Küldés gombra a hibanaplót, köszönöm az együttműködést!";
            mcs_is_submitting           = "nyújtanak be";
            mcs_firmware_version        = "firmware verzió";
            mcs_device_assembly         = "1.távvezeték  2.hálózati port  3.Ethernet port  4.kábel  5.adapter";
            mcs_forgetpass_action_wizard_old = "Nyomja meg a reset gombot egy másodpercig, a készülék visszaállítja a gyári beállításokat, és 60 másodperc után az újraindítás, akkor az admin jelszó visszaszerzés";
            mcs_device_assembly_mipc    = "1.távvezeték  2.hálózati port  3.Ethernet port  4.kábel";
            mcs_device_connect_power_prompt = "a készülék nem online, kérem az ábrán látható módon kell, hogy a berendezés hálózati hozzáférési hálózati, már láttam a piros mindig fényes, berendezések újraindítva.";
            mcs_lights_sound            = "Nyisd ki az ajtót érzékelőt";
            mcs_connect_power           = "a kapcsolat.";
            mcs_search_magnetic         = "Mint látható, a kombinált mágneses ajtót és nyomja meg az oldalsó gombot 1 másodpercig megjelenése után, a kijelző lassan villog,";
            mcs_add_magnetic            = "Az ajtó nyitása után érzékelő egyesíteni , hogy a kijelző villog ki az adagolás befejezése";
            mcs_already_downloaded      = "már letöltött";
            mcs_my_order                = "a parancs";
            mcs_auto_mode               = "Automata üzemmód";
            mcs_new_small               = "Alacsony";
            mcs_new_half                = "Közepes";
            mcs_new_normal              = "Normál";
            mcs_new_hd                  = "HD";
            mcs_scene_now               = "a jelenlegi forgatókönyv";
            mcs_please_install_wechat   = "kérem, helyezze WeChat";
            mcs_wechat_not_support      = "nem támogatott verziót tegye naprakésszé WeChat WeChat";
            mcs_motion_alert            = "Mozgás riasztás";
            mcs_io_alert                = "I/O riasztás";
            mcs_valid_user_name         = "első lépés: adja érvényes felhasználónév";
            mcs_binding_mailbox         = "második lépés: adja meg a kötelező email";
            mcs_send_mailbox_succuess_prev = "már kötelező önöknek egy postaládát ";
            mcs_send_mailbox_succuess_next = " küldött egy levelet, amit a postát, a figyelmüket kérem üzenetet.";
            mcs_all_image               = "az összes kép";
            mcs_unavailable_image       = "kérem, hogy a kiválasztott kép nem elérhető,";
            mcs_set_nickname            = "Beállítás beceneve";
            mcs_search_timeout          = "Keresési idő , kattintson a Keresés újra";
            mcs_screen_size             = "Screen Settings";
            mcs_screen_reset            = "Állítsa sikeres, akkor újra kell indítani a kamerát, hogy hatása";
            mcs_wifi_network_prompt     = "kérlek, ellenőrizd a kamerákat a wifi - e kapcsolatot 5GHz sáv a wifi, kérlek 2.4GHz sáv wifi kapcsolat";
            mcs_fault_diagnosis         = "hálózati diagnosztikai";
            mcs_sever_diagnosis         = "a szerver hiba lehet, ami nem megfelelő használatát.";
            mcs_select_problem          = "kérem válasszon.";
            mcs_connot_lonin            = "nem tudok bejelentkezni";
            mcs_connot_play             = "nem.";
            mcs_add_problems            = "további probléma";
            mcs_encounterer_problems    = "kérem, adja meg a problémák";
            mcs_diagnostic_network      = "Kezdés diagnózis";
            mcs_network_diagnostic_prompt = "a hálózati diagnosztikai segíthet, hogy jobban felmerült problémák megoldása során diagnosztikai szükséges hosszú pár percig";
            mcs_network_diagnostic      = "Hiba diagnosztizálása";
            mcs_connecting_server       = "keresem a szervert.";
            mcs_diagnostic_process_prompt = "Diagnosztikai folyamat eltarthat néhány percig, amíg a diagnosztika nem más műveletet hajtson végre, de mindig lehet megállítani a diagnosztikai";
            mcs_diagnostic_results      = "a diagnózis";
            mcs_diagnostic_results_received = "Diagnózis befejeződött, a diagnosztikai eredmények érkezett";
            mcs_diagnostic_results_prompt = "Köszönjük, hogy részt vesz ebben a diagnózis, diagnosztikai eredmények segít megoldani a problémát a lehető leghamarabb";
            mcs_results_no_abnormality  = "nem szokatlan a diagnózis";
            mcs_no_abnormality_prompt   = "A diagnózis nem rendellenességet találtak. Kiválaszthatja a mélysége diagnózis, indítsa el a naplógyűjtés képességeit segít, hogy jobban megoldani a problémát tapasztal";
            mcs_continue_diagnosis      = "mélység Diagnózis";
            mcs_diagnosis_connot_sent   = "nem küldünk a diagnózis";
            mcs_email_sends             = "e - mailben";
            mcs_email_sends_prompt      = "Küldje diagnosztikai eredmények nekünk e-mailt, akkor segíthet megoldani a problémát a lehető leghamarabb";
            mcs_diagnosis_send          = "küldjön";
            mcs_diagnosis_email         = "e - mail";
            mcs_send_successful         = "sikeresen elküldve";
            mcs_diagnosis_type_select_prompt = "válassza ki, hogy milyen típusú diagnózis";
            mcs_stop_diagnosis          = "leállítása Diagnózis";
            mcs_detail_diagnosis_prompt = "Diagnózis eljárni, akkor kapcsolja ki a készüléket oldalra";
            mcs_detail_diagnosis_stop_prompt = "Mélység diagnózis folyamatban van, akkor mindig megszakítja";
            mcs_exit_detail_diagnosis   = "Mélység diagnózis folyamatban van, függetlenül attól, hogy hagyja abba?";
            mcs_network_connection_unavailable = "A hálózati kapcsolat nem érhető el";
            mcs_Failed_connect_Internet = "Nem sikerült csatlakozni az internethez";
            mcs_connect_internet_note   = "Ha meg kell csatlakozni az internethez, kérjük, vegye figyelembe az alábbiakat:";
            mcs_connect_internet_detail_first = "Ellenőrizze a telefon vezeték nélküli LAN beállításokat, hogy ha van elérhető vezeték nélküli LAN-jel";
            mcs_connect_internet_detail_second = "Ellenőrizze, hogy a telefon hozzáfér egy mobilhálózat, és a telefon nem lett felfüggesztve";
            mcs_connect_wifi_note       = "Ha van, hogy a vezeték nélküli LAN:";
            mcs_connect_wifi_detail     = "Ellenőrizze, hogy a vezeték nélküli LAN-hotspot kapcsolat van hozzáférése az internethez, vagy ha a hotspot, hogy a készülék hozzáférést a LAN";
            mcs_device_or_phone_time_zone_not_equals_please_select = "Eszköz jelenlegi időzóna és az időzónát a mobiltelefon nem, válassza ki a megfelelő időzónát";
            mcs_phone_timezone          = "Telefon időzóna";
            mcs_timezone_change         = "Módosítani az időzónát";
            mcs_mail_send               = "üzenet elküldve";
            mcs_yes_verif               = "van";
            mcs_no_verif                = "nincs";
            mcs_camera_found_new_version_y_n_upgrade = "Találtunk egy új változata a kamera, hogy a frissítés?";
            mcs_auto_adapt_split_screen = "adaptív";
            mcs_four_split_screen       = "a negyedik képernyő";
            mcs_nine_split_screen       = "9 - kor képernyő";
            mcs_twelve_split_screen     = "12. képernyő";
            mcs_not_connection_server   = "Nem sikerült csatlakozni a szerverhez";
            mcs_more_options            = "Több";
            mcs_bind_email_prompt       = "Annak érdekében, hogy a fiók biztonsági, kösse be a postafiók";
            mcs_login_now               = "jelentkezzen most";
            mcs_device_connect_power    = "1.távvezeték      2.hálózati port";
            mcs_device_connect_ethernet = "1.harapás    2.kábel";
            mcs_device_connect_ethernet_prompt = "a végén lesz egy régi vezeték való hozzáférési hálózat mouth, a másik pedig a nettó export router, látni egy régi vezeték a zöld lámpa, kapcsolat vége.";
            mcs_pwd_format              = "formátum: hossza 8 - tól a 16 bites karakter között, számok, betűk mérete és különleges jelet tartalmaz írni legalább három";
            mcs_client_new              = "az ügyfél";
            mcs_user_guide              = "a felhasználói kézikönyv";
            mcs_ebitcam_download_describe = "ebitcam egy bekezdés felhőkben felügyeleti szolgáltatások szoftver használata, a szoftver együttműködött a felhőkben kamera meg a videót, hogy a felhasználók bármikor drót, hogy világos, folyékonyan nézéshez, hogy bármikor intelligencia irányítása. a saját családját, mint a felhasználók gyorsan jön le!";
            mcs_mipc_download_describe  = "mipc egy bekezdés felhőkben felügyeleti szolgáltatások szoftver használata, a szoftver együttműködött a felhőkben kamera meg a videót, hogy a felhasználók bármikor drót, hogy világos, folyékonyan nézéshez, hogy bármikor intelligencia irányítása. a saját családját, mint a felhasználók gyorsan jön le!";
            mcs_guide_download          = "kézikönyv letölthető";
            mcs_password_admin          = "Şifre Yönetimi";
            mcs_already_read            = "elolvastam és egyetértek";
            mcs_privacy_policy          = "tempósan";
            mcs_not_agree_privacy_policy = "még nem értek egyet, hogy adatvédelmi politika";
            mcs_reload                  = "újratölteni";
            mcs_start_download          = "azonnal letöltés";
            mcs_video_play_fail         = "videolejátszó";
            mcs_download_app_tips       = "te is próbáld pc kliens";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = "eszköz típusa";
            mcs_connect_device_wifi     = "5GHz - es ideiglenesen nem támogatja a wifi";
            mcs_send_diagnosis_results  = "küld a diagnózis...";
            mcs_local_file              = "a helyi iratok";
            mcs_local_device            = "a helyi berendezések";
            mcs_export_sd_data          = "az exportált sd - kártya";
            mcs_shaking                 = "bólogató gép sorozat";
            mcs_outdoor                 = "kültéri egység sorozat";
            mcs_card                    = "a kártyás fizetés sorozat";
            mcs_wifi_connection         = "wifi";
            mcs_home_mode               = "Otthoni mód";
            mcs_away_home_mode          = "AWAY";
            mcs_auto_switch_mode        = "automatikus váltás";
            mcs_select_scene_mode       = "Kérjük, válasszon egy profilt";
            mcs_7x24_hours_prompt       = "Nyitott 7x24 (h) Felvételi";
            mcs_all_day_recording       = "Day video";
            mcs_home_mode_prompt        = "Otthoni mód:Zárja be az összes riasztó készülékek";
            mcs_away_home_mode_prompt   = "AWAY:Az összes készülék nyitott riasztó";
            mcs_at_home                 = "otthon";
            mcs_away_home               = "ki";
            mcs_set_timezone_prompt_start = "Az időzóna";
            mcs_set_timezone_prompt_end = "Kérjük, váltson az időt és a dátumot időzóna beállítása";
            mcs_set_wifi_remind_head    = "a következő kérdést nem vezethet 连网 elkerülése érdekében a javaslat";
            mcs_set_wifi_remind_1       = "megvizsgálták, hogy nyitja fel a hálót meg izélni wifi kamerát, nem 连网 vezethet.akár ideiglenes bezárása elleni sikeres dörzsöli a hálót, később a router rendszerösszekötők meghatározott helyreállítása";
            mcs_set_wifi_remind_2       = "ha ön otthon 双频 router, ellenőrizd a kamerákat a wifi kapcsolat, hogy 5GHz sáv wifi, kérlek, hogy a 2.4GHz sáv wifi kapcsolat";
            mcs_set_wifi_remind_3       = "WPA/WPA2 ideiglenesen nem támogatja a vállalati szintű wifi, válasszon más wifi";
            mcs_set_wifi_remind_4       = "ha ön ház wifi az összekötő áthidaló azért, mert vezethet a neten nagyon instabil, a javaslat nem áthidaló wifi kapcsolat";
            mcs_set_wifi_remind_5       = "mi a wifi kamerát kért";
            mcs_record_save_to_my_file  = "Videó mentve fájljaimhoz";
            mcs_view_now                = "Tekintse most";
            mcs_search_sos_strat        = "Mint látható, az alsó gomb lenyomását";
            mcs_search_sos_end          = "Egy másik, a készülék kijelzője villog";
            mcs_search_magnetic_start   = "Mint látható, a kombinált mágneses ajtót nyomja az oldalsó nyomógomb";
            mcs_search_magnetic_end     = "Egy másik, a készülék kijelzője villog";
            mcs_adding                  = "hozzáadása";
            mcs_record_empty_set_sd     = "Helyezze be az SD kártyán tárolható videoelőzmények";
            mcs_video_play_offline      = "Az eszköz nem elérhető";
            mcs_video_play_network_fail = "Hálózati csatlakozás sikertelen, próbálja újra később";
            mcs_alert_notify_guide1     = "[Eredeti] mozgásérzékelés művelet vándorolnak [melléklet], [a] a profil beállítások";
            mcs_alert_notify_guide2     = "Операция выглядит следующим образом:...";
            mcs_alert_notify_guide3     = "Válassza a [színhely], meg kell, hogy kiderülhet, élesítés mód, meg kell nyitni otthon hatástalanítás mód;";
            mcs_alert_notify_guide4     = "Válassza a [Eszközök] - [Tartozékok lista] - [Motion Detection] módot kiderült riasztó, videó, fotó, IO riasztási funkció, ébresztés kikapcsolásához otthon mód, videó és egyéb funkciók.";
            mcs_plan_protect_guide1     = "[Eredeti] terv élesítés művelet vándorolt [forgatókönyv]";
            mcs_plan_protect_guide2     = "Válassza ki a [forgatókönyv], nyitott profilok automatikus váltás;";
            mcs_plan_protect_guide3     = "választ";
            mcs_plan_protect_guide4     = ", A szükséges élesítési időszak (pl: hétfő, 7: 00-18: 00) meghatározott mód, miután az OK gombra, és térjen vissza a Beállítások lapra;";
            mcs_plan_record_guide       = "Válassza a [Felvétel], kiderülhet mód felvétel funkciót.";
            mcs_plan_record_guide1      = "[Programozott felvétel] terv élesítés művelet vándorolt [Felvétel]";
            mcs_plan_record_guide2      = ", A szükséges felvételi időtartam (pl: K 7: 00-18: 00) meghatározott mód, miután az OK gombra, és térjen vissza a Beállítások lapra;";
            mcs_forgetpass_action_prompt = "Kérjük, nyomja meg a készülék reset Reset után 10 másodperccel a kiadás, infravörös lámpák és berendezések a gyári beállítások";
            mcs_cloud_box               = "Cloud Box";
        }/* hu */
        else if(lang == "nl")
        {
            mcs_name                    = "Naam";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "Naam";
            mcs_old_nick                = "Nick";
            mcs_linked                  = "Gelinkt";
            mcs_sign_in                 = "Inloggen";
            mcs_back                    = "terug";
            mcs_will_back               = "Teruggaan";
            mcs_add                     = "toevoegen";
            mcs_add_device              = "voeg camera toe";
            mcs_device_existed          = "Apparaat is reeds bekend";
            mcs_cancel                  = "Annuleren";
            mcs_exit                    = "Afsluiten";
            mcs_remember_password       = "Wachtwoord onthouden";
            mcs_password_remembered     = "Wachtwoord bewaard";
            mcs_sign_ining              = "Log in";
            mcs_cloud_server            = "Cloud omgeving";
            mcs_input_device_id         = "Geef camera ID in";
            mcs_input_username          = "Geef gebruikersnaam in";
            mcs_input_email_addr        = "Inlog emailadres";
            mcs_email_address           = "E-mail adres";
            mcs_email                   = "email";
            mcs_binding                 = "Gekoppeld";
            mcs_binding_email           = "Gekoppeld e-mail adres";
            mcs_binding_send_prompt     = "De verificatie email is verzonden";
            mcs_binding_email_prompt    = "Indien uw wachtwoord is vergeten kunt u dit ";
            mcs_input_password          = "Geef wachtwoord in";
            mcs_access_server_failed    = "Verbinding met server mislukt";
            mcs_device_offline          = "Camera offline";
            mcs_invalid_password        = "Ongeldig wachtwoord";
            mcs_invalid_dev             = "Ongeldig device";
            mcs_login_faided            = "Inloggen mislukt";
            mcs_invalid_qrcode          = "Ongeldige QR code";
            mcs_please_input_username   = "Geef a.u.b. Uw gebruikersnaam in";
            mcs_please_input_password   = "Geef a.u.b. Uw wachtwoord in";
            mcs_qrcode_scan_hint        = "QR code scannen";
            mcs_device_list_empty       = "De camera lijst is leeg";
            mcs_record_list_is_empty    = "Geen opnames zichtbaar";
            mcs_password_expired        = "Wachtwoord verlopen";
            mcs_set_video_size          = "Resolutie";
            mcs_hd_1280x720             = "HD 720P";
            mcs_auto                    = "Automatisch";
            mcs_normal_640x360          = "Normaal";
            mcs_half_320x180            = "QVGA";
            mcs_small_160x90            = "VGA";
            mcs_play                    = "Live";
            mcs_settings                = "Instellingen";
            mcs_messages                = "Opnames";
            mcs_alarm                   = "Alarm";
            mcs_delete                  = "Verwijderen";
            mcs_delete_camera           = "Verwijder camera";
            mcs_apply                   = "Toepassen";
            mcs_speed                   = "Snelheid";
            mcs_others                  = "Overige";
            mcs_audio                   = "Geluid";
            mcs_speaker                 = "Speaker";
            mcs_mic                     = "Microfoon";
            mcs_power_frequency         = "Stroom frequentie";
            mcs_online_upgrade          = "Online upgrade";
            mcs_restore_the_factory_settings = "Herstel naar fabrieksinstellingen ";
            mcs_restore                 = "Herstellen";
            mcs_restore_camera          = "Opnieuw opstarten";
            mcs_start_upgrade           = "Upgrade starten";
            mcs_system                  = "Systeem";
            mcs_system_settings         = "Systeem instellingen";
            mcs_online                  = "Online";
            mcs_offline                 = "Offline";
            mcs_query                   = "Zoekopdracht";
            mcs_begin_time              = "Starttijd";
            mcs_end_time                = "Eindtijd";
            mcs_mode                    = "Modus";
            mcs_opened                  = "Geopend";
            mcs_high                    = "Hoog";
            mcs_middle                  = "Gemiddeld";
            mcs_low                     = "Laag";
            mcs_io_alert_input          = "I/O alarm input";
            mcs_io_alert_output         = "I/O alarm output";
            mcs_normally_open           = "Normaal open";
            mcs_normally_close          = "Normaal gesloten";
            mcs_motion_detection_sensitivity = "Bewegingsdetectie gevoeligheid";
            mcs_daytime                 = "Dag";
            mcs_night                   = "Nacht";
            mcs_sdcord                  = "SD kaart";
            mcs_storage_device          = "Opslag medium";
            mcs_set_mask                = "Stel maskering in";
            mcs_status                  = "Status";
            mcs_capacity                = "Capaciteit";
            mcs_usage                   = "Verbruik";
            mcs_format                  = "Formaat";
            mcs_repair                  = "Herstel";
            mcs_formating               = "Formatering";
            mcs_repairing               = "Herstelling";
            mcs_mounted                 = "Gemonteerd";
            mcs_unmounted               = "Gedemonteerd";
            mcs_mount                   = "Monteer";
            mcs_unmount                 = "Demonteer";
            mcs_ethernet                = "Ethernet";
            mcs_wifi                    = "Wi-fi";
            mcs_enabled                 = "Aangezet";
            mcs_mac_address             = "MAC adres";
            mcs_network_status          = "Netwerk status";
            mcs_wifi_mode               = "Wi-Fi mode";
            mcs_client                  = "Client";
            mcs_ap                      = "AP";
            mcs_start_address           = "Start adres";
            mcs_end_address             = "Eind adres";
            mcs_gateway                 = "Poort";
            mcs_select_network          = "Selecteer netwerk";
            mcs_dhcp_ip                 = "Gebruik DHCP";
            mcs_dhcp_dns                = "DNS: gebruik DHCP";
            mcs_ip_address              = "IP Adres";
            mcs_network_mask            = "Netwerk mask";
            mcs_input_secondary_dns     = "Voeg secundaire DNS toe";
            mcs_secondary_dns           = "Secundaire DNS";
            mcs_input_dns               = "Voeg DNS toe";
            mcs_input_alternate_dns     = "Voeg alternatieve DNS tpe";
            mcs_input_ip                = "Voeg IP toe";
            mcs_input_gateway           = "Voeg gateway toe";
            mcs_input_network_mask      = "Geef netwerk mask in";
            mcs_wifi_list               = "Wi-Fi lijst";
            mcs_display_date            = "Display datum";
            mcs_date_format             = "Formatteer datum";
            mcs_display_time            = "Display tijd";
            mcs_time_format             = "Formatteer tijd";
            mcs_24_hour                 = "24-uur";
            mcs_12_hour                 = "12-uur";
            mcs_display_weeks           = "Display dag";
            mcs_date_time               = "Dag/Tijd";
            mcs_set_time                = "Stel de tijd in";
            mcs_set_week                = "Stel de week in";
            mcs_stream                  = "Stream";
            mcs_encode                  = "Coderen";
            mcs_resolution              = "Resolutie";
            mcs_frame_fate              = "Framesnelheid (frames per seconde)";
            mcs_maximum_bitrate         = "Maximale bitrate";
            mcs_minimum_bitrate         = "Minimale bitrate";
            mcs_i_frame_interval        = "I-Frame interval";
            mcs_video                   = "Video";
            mcs_sampling_rate           = "Beeld frequentie";
            mcs_nickname                = "Gebruikersnaam";
            mcs_old_password            = "Oude wachtwoord";
            mcs_confirm_password        = "Bevestig wachtwoord";
            mcs_modify_password         = "Verander wachtwoord";
            mcs_password                = "Wachtwoord";
            mcs_admin_password          = "Admin wachtwoord";
            mcs_guest_password          = "Gast wachtwoord";
            mcs_product_info            = "Product informatie";
            mcs_software_version        = "Software versie";
            mcs_device_id               = "Apparaat nummer";
            mcs_operation               = "Werking";
            mcs_record                  = "Opnemen";
            mcs_record_2                = "Terugspelen";
            mcs_upgrade_now             = "Upgrade nu";
            mcs_upgrading               = "Upgraden";
            mcs_already_latest_version  = "Geen update beschikbaar";
            mcs_sensitivty              = "Gevoeligheid";
            mcs_user_defined            = "Gebruiker gedefinieerde";
            mcs_time                    = "Tijd";
            mcs_date                    = "Dag";
            mcs_finish                  = "Afwerking";
            mcs_delete_fail             = "Het schrappen van niet";
            mcs_motion                  = "Beweging";
            mcs_start                   = "Begin";
            mcs_talk                    = "Praten";
            mcs_password_input_inconsistent = "Wachtwoord invoeren inconsistent";
            mcs_input_6_to_20_litters   = "Input 6-20 letters (a-z, A-Z) en cijfers (0-9)";
            mcs_user_letter_range_hint  = "Gebruikersnaam is 6-32 letters (a-z, A-Z) of cijfers (0-9) en beginnen met een letter";
            mcs_password_range_hint     = "Wachtwoord is 6-32 tekens - letters / cijfers.";
            mcs_begin_with_the_letters  = "Beginnen met de letters.";
            mcs_sign_up                 = "Registreer";
            mcs_sign_up_failed          = "Registratie mislukt";
            mcs_successful_sign_up      = "Registratie geslaagd";
            mcs_are_you_sure_delete     = "Bevestig verwijdering";
            mcs_failed_to_set_the       = "Instellen mislukt";
            mcs_set_successfully        = "Instellen geslaagd";
            mcs_downloading             = "Downloaden";
            mcs_wrote                   = "Schreef";
            mcs_visit_again_later       = "Bezoek later opnieuw";
            mcs_restart_failed          = "Opnieuw opstarten mislukt";
            mcs_upgrade_failed          = "Upgrade mislukt";
            mcs_connnected              = "Verbonden";
            mcs_connnected_to           = "Verbonden met";
            mcs_not_select              = "Niet geselecteerd";
            mcs_message_list            = "Berichten lijst";
            mcs_saved_password          = "Bewaard wachtwoord";
            mcs_alert                   = "Alarm";
            mcs_no_record               = "Geen opname";
            mcs_new_about               = "Nieuw: over";
            mcs_device                  = "Apparaat";
            mcs_config                  = "Configuratie";
            mcs_change_password_failed  = "Wijzing wachtwoord mislukt";
            mcs_do_you_want_restart     = "Wilt u opnieuw opstarten?";
            mcs_do_you_want_restore     = "Bevestig herstel";
            mcs_do_you_want_upgrade     = "Wilt u updaten?";
            mcs_load_end                = "Einde van opnames";
            mcs_loading                 = "Laden...";
            mcs_down_refresh            = "Trek omlaag om te vernieuwen";
            mcs_release_refresh         = "Laat los om te vernieuwen";
            mcs_refreshing              = "Vernieuwen";
            mcs_release_then_loading_data_hint = "Laat los om te laden";
            mcs_pull_refresh_hint       = "Trek omlaag om te vernieuwen";
            mcs_restarting              = "Opnieuw opstarten";
            mcs_upgraded_time           = "Geüpdatet tijd:";
            mcs_done                    = "Klaar";
            mcs_playback                = "Terugspelen";
            mcs_i_o_alarm               = "I/O alarm";
            mcs_alarm_action            = "Bewegingsdetectie";
            mcs_alarm_sources           = "Alarm bronnen";
            mcs_io_output               = "I/O output";
            mcs_snapshots               = "Moment opnames";
            mcs_snapshot                = "Moment opname";
            mcs_snapshot_interval       = "Moment opname interval(s)";
            mcs_pre_record_length       = "Pre-opname lengte";
            mcs_nick_range_hint         = "Camera naam dient minder dan 20 tekens te bevatten";
            mcs_save                    = "Opslaan";
            mcs_close                   = "Sluiten";
            mcs_snapshoting             = "Moment opname maken";
            mcs_snapshot_failed         = "Moment opname mislukt";
            mcs_record_failed           = "Opname mislukt";
            mcs_saved_successfully      = "Opslaan geslaagd";
            mcs_save_failed             = "Opslaan mislukt";
            mcs_restart_to_take_effect  = "Start opnieuw op om veranderingen door te voeren";
            mcs_please_allow_access_album = "Sta MIPC toe om toegang te krijgen tot het foto album  ";
            mcs_please_allow            = "Sta ";
            mcs_access_album            = "toe om toegang te krijgen tot het foto album ";
            mcs_ios_privacy_setting_for_photo_prompt = "Kan veranderd worden in iPhone \"Settings->Privacy->Photos\", find the application \"";
            mcs_execute_change          = "\" verander";
            mcs_access_camera           = "om toegang te krijgen tot uw camera";
            mcs_please_allow_access_camera = "Sta MIPC toe om toegang te krijgen tot uw camera";
            mcs_ios_privacy_setting_for_camera_prompt = "Instellingen kunnen veranderd worden in iPhone \"Settings->Privacy->Photos\", find the application \"";
            mcs_busy_when_write         = "Bezig met overschrijven";
            mcs_unknown_error           = "Onbekende error";
            mcs_i_know                  = "Ik weet het!";
            mcs_segment                 = "Segment";
            mcs_please_relogin          = "Meld u opnieuw aan";
            mcs_change_password_succeed = "Wachtwoord succesvol veranderd";
            mcs_upgrade_to_ver          = "Update naar versie";
            mcs_restore_failed          = "Herstellen is mislukt";
            mcs_please_restart          = "Start opnieuw op";
            mcs_keep_network_settings   = "Bewaar netwerkinstellingen en wachtwoord";
            mcs_not_connected           = "Niet verbonden";
            mcs_sdcard_not_ready        = "SD kaart nog niet gereed";
            mcs_device_not_exist        = "Apparaat bestaat niet";
            mcs_disable                 = "Deactiveren";
            mcs_to_determine_the        = "Om te bepalen";
            mcs_alert_on                = "Zet alarm aan";
            mcs_alert_off               = "Zet alarm uit";
            mcs_alert_onoff             = "alarm aan/uit";
            mcs_monday                  = "maandag";
            mcs_tuesday                 = "dinsdag";
            mcs_wednesday               = "woensdag";
            mcs_thursday                = "donderdag";
            mcs_friday                  = "vrijdag";
            mcs_saturday                = "zaterdag";
            mcs_sunday                  = "zondag";
            mcs_mon                     = "Maan";
            mcs_tue                     = "Din";
            mcs_wed                     = "Woen";
            mcs_thu                     = "Don";
            mcs_fri                     = "Vrij";
            mcs_sat                     = "Zat";
            mcs_sun                     = "Zon";
            mcs_scheduled_recording     = "Plan opname in";
            mcs_schedule                = "Inplannen";
            mcs_scheduled_recording_status = "Plan opname status in";
            mcs_folding                 = "Inklappen";
            mcs_unfolding               = "Uitklappen";
            mcs_end_time_should_lt_begin = "Eindtijd moet later zijn als begintijd";
            mcs_recording               = "Opnemen";
            mcs_prerecord_interval_range_hint = "Tijd voor opname moet minden dan 6 seconden zijn";
            mcs_snapshot_interval_range_hint = "Moment opname interval moet tussen de 0 en 60 zitten";
            mcs_not_ready               = "Nog niet gereed";
            mcs_availablesize           = "Beschikbare maat";
            mcs_reboot                  = "Herstarten";
            mcs_alerter                 = "Alarm";
            mcs_pir                     = "PIR";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "Codeerder";
            mcs_ok                      = "OK";
            mcs_fault                   = "Fout";
            mcs_sensor_status           = "Sensor status";
            mcs_about                   = "Over";
            mcs_reset_now               = "Reset nu";
            mcs_reset_later             = "Reset later";
            mcs_prompt                  = "Onmiddelijk";
            mcs_select                  = "Selecteer";
            mcs_available_netword       = "Netwerk is niet beschikbaar, configureren?";
            mcs_request_send            = "Verzoek verzenden...";
            mcs_blank_device_id         = "Apparaat ID kan niet leeg zijn";
            mcs_blank_username          = "Gebruikersnaam kan niet leeg zijn";
            mcs_blank_password          = "Wachtwoord kan niet leeg zijn";
            mcs_exist_user              = "Gebruikersnaam bestaat al";
            mcs_invalid_user            = "Ongeldige gebruikersnaam";
            mcs_invalid_email_addr      = "Ongeldig e-mailadres";
            mcs_system_err              = "Systeem error";
            mcs_exceed_device           = "Aantal gebruikers overschreden";
            mcs_continue                = "Doorgaan";
            mcs_prompt_exit             = "Wilt u afsluiten?";
            mcs_device_list             = "Lijst met apparaten";
            mcs_no_sdcard               = "Geen SD kaart";
            mcs_no_hard_disk            = "Geen harde schijf";
            mcs_show_more               = "Meer...";
            mcs_shotsnop_exists         = "Foto bestaat al";
            mcs_input_nick              = "Geef apparaat naam in";
            mcs_nick_not_empty          = "Apparaat naam kan niet leeg zijn";
            mcs_input_new_pass          = "Geef nieuwe wachtwoord in";
            mcs_input_new_pass_again    = "Geef nieuwe wachtwoord opnieuw in";
            mcs_new_password            = "Niet wachtwoord";
            mcs_modify_network_prompt   = "Netwerk aanpassingen kunnen fouten veroorzaken, toch doorgaan?";
            mcs_wifi_disable_prompt     = "Wi-Fi deactiveren, doorgaan?";
            mcs_eth_disable_prompt      = "Ethernet deactiveren, doorgaan?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "Gebruik DHCP";
            mcs_manually_set            = "Gebruik statisch";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "Primaire DNS";
            mcs_client_mode             = "Client";
            mcs_adhoc_mode              = "Adhoc";
            mcs_connect_fail            = "Verbinding mislukt";
            mcs_dhcp_server             = "DHCP server";
            mcs_display_text            = "Geeft tekst weer";
            mcs_repair_prompt_detail    = "Reparatie kan enige verlies van gegevens tot gevolg hebben. Doorgaan?";
            mcs_format_prompt_detail    = "Format zal alle gegevens op de SD-kaart te wissen. Doorgaan?";
            mcs_mount_prompt            = "Mount SD-kaart. voortzetten";
            mcs_umount_prompt           = "Video en foto kan niet worden opgeslagen nadat de SD-kaart wordt ontkoppeld. Doorgaan?";
            mcs_sdcard_reset            = "Succes. Herstart om te activeren. Doorgaan?";
            mcs_sdcard_repairing        = "Repareren, wachten om opnieuw op te starten.";
            mcs_sdcard_formating        = "Formatteren, wachten om opnieuw op te starten.";
            mcs_sdcard_umount           = "ontkoppelen";
            mcs_valid                   = "Valide ";
            mcs_io                      = "IO alarm";
            mcs_input                   = "Input";
            mcs_outinput                = "Output";
            mcs_prompt_alert_on         = "Alarm aan, doorgaan?";
            mcs_auto_sync_date_time     = "Automatische synchronisatie";
            mcs_alarm_record            = "Alarm opname";
            mcs_username                = "Gebruikersnaam";
            mcs_re_enter_the_password   = "Geef wachtwoord opnieuw in";
            mcs_remember_me             = "Blijf ingelogd";
            mcs_home                    = "Home";
            mcs_install_the_plug        = "Plug-in installeren";
            mcs_install_the_video_plug  = "Video plug-in installeren";
            mcs_install_now             = "Installeer nu";
            mcs_temporarily_installed_use_ordinary_video = "Nee, installeer later";
            mcs_brightness              = "Helderheid";
            mcs_contrast                = "Contrast";
            mcs_color_saturation        = "Verzadiging";
            mcs_sharpness               = "Scherpstelling";
            mcs_duration                = "Duur";
            mcs_index                   = "Index";
            mcs_remark                  = "Opmerking";
            mcs_media_stream            = "Media";
            mcs_server                  = "Server";
            mcs_media_transfer          = "Media overdragen";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "Fabrikant";
            mcs_model                   = "Model";
            mcs_plugin_version          = "Plug-in versie";
            mcs_network_interface       = "Netwerk interface";
            mcs_transfer_protocol       = "Overdracht protocol";
            mcs_year                    = "Jaar";
            mcs_month                   = "Maand";
            mcs_day                     = "Dag";
            mcs_hour                    = "Uur";
            mcs_minute                  = "Minuut";
            mcs_second                  = "Seconde";
            mcs_millisec                = "Milliseconde";
            mcs_ntp                     = "Tijdserver";
            mcs_upload_upgrade          = "Upload upgrade";
            mcs_stop                    = "Stop";
            mcs_info_rewind             = "Rewind";
            mcs_fast_forward            = "Fast forward";
            mcs_previous_frame          = "Vorig beeld";
            mcs_next_frame              = "volgend beeld";
            mcs_record_audio            = "Geluid opnemen";
            mcs_week                    = "Week";
            mcs_all                     = "Alle";
            mcs_id                      = "ID";
            mcs_select_all              = "Selecteer alles";
            mcs_call                    = "telefoontje";
            mcs_activation              = "activering";
            mcs_caption                 = "Upload bestand";
            mcs_alarm_device            = "bewegingsgevoeligheid";
            mcs_not_installed           = "Niet geïnstalleerd";
            mcs_join_us_now             = "Sluit je nu bij ons aan";
            mcs_reconnect_please_wait   = "Sluit, even geduld aub";
            mcs_erasing                 = "Uitwissen";
            mcs_writing                 = "Schrijven";
            mcs_dhcp                    = "SHCP";
            mcs_new_version             = "Nieuwe versie";
            mcs_equipment_flip          = "Omdraaien";
            mcs_device_status           = "Status apparaat";
            mcs_audio_setting           = "Audio instellingen";
            mcs_nick_modify             = "Pas camera naam aan";
            mcs_ready                   = "Klaar";
            mcs_full                    = "Vol";
            mcs_connecting              = "Verbinden";
            mcs_message_buffering       = "Bericht bufferen";
            mcs_upgrade_finish          = "Voltooi upgrade";
            mcs_image                   = "Afbeelding";
            mcs_bar                     = "Opnames";
            mcs_init                    = "Init";
            mcs_confirm_new_password    = "Bevestig nieuwe wachtwoord";
            mcs_continue_switch_wireless_network = "Wisselen van netwerk kan netwerkfouten veroorzaken, doorgaan?";
            mcs_restore_factory_settings_prompt = "Apparaat zal opnieuw opstarten bij herstellen. Herstellen naar fabrieksinstellingen?";
            mcs_username_does_not_exis  = "Gebruikersnaam bestaan niet";
            mcs_username_already_exists = "Gebruikersnaam bestaat al";
            mcs_successful_whether_login = "Registratie geslaagd, nu inloggen?";
            mcs_username_demand         = "6 tot 20 letters of nummers, begin met letters.";
            mcs_the_password_is_empty   = "Wachtwoord kan niet leeg zijn";
            mcs_password_demand         = "6 tot 20 letters of nummers, begin met letters.";
            mcs_password_empty          = "Voer wachtwoord opnieuw in";
            mcs_two_password_input_inconsistent = "Wachtwoorden komen niet overeen";
            mcs_the_user_name_is_empty  = "Gebruikersnaam is leeg";
            mcs_upgrade_to_the_latest_version = "Update naar de laatste versie";
            mcs_subnet_mask_wrong_format = "Netwerk mask ongeldig formaat";
            mcs_upgrade_successful_restart_to_take_effect = "Update succesvol, opnieuw opstarten";
            mcs_need_to_restart_the_camera_to_take_effect = "Start opnieuw op om veranderingen door te voeren";
            mcs_not_allowed_close_two_network_cards = "Ethernet en Wi-Fi kunnen niet tegelijk worden uitgeschakeld";
            mcs_modified_successfully   = "Succesvol gewijzigd";
            mcs_connection_successfully = "Verbonden";
            mcs_connection_is_interrupted = "Verbinding verbroken";
            mcs_devices_in_the_account_overrun = "Apparaten in het account overschreven";
            mcs_format_error            = "Formatteer error";
            mcs_change                  = "Wijzig";
            mcs_refresh                 = "Vernieuw";
            mcs_connect                 = "Verbind";
            mcs_upgrade                 = "Update";
            mcs_activate                = "Activeer";
            mcs_filter                  = "Filter";
            mcs_reset                   = "Reset";
            mcs_prompt_alert_off        = "Alarm uitgeschakeld, doorgaan?";
            mcs_invalid_server          = "Ongeldige tijd server";
            mcs_upgrade_prompt          = "Updaten van de software, doorgaan?";
            mcs_restart_prompt          = "Apparaat opnieuw opstarten, doorgaan?";
            mcs_repeat                  = "Herhaal";
            mcs_scheduled_one           = "Schema 1";
            mcs_scheduled_two           = "Schema 2";
            mcs_scheduled_three         = "Schema 3";
            mcs_scheduled_four          = "Schema 4";
            mcs_more                    = "Meer";
            mcs_leave                   = "Laat los om meer te laden";
            mcs_qrcode_scan             = "QR Code scan";
            mcs_inserted                = "Ingevoegd";
            mcs_removed                 = "Verwijderd";
            mcs_upgrade_init            = "Start update";
            mcs_upgrade_download        = "Download update";
            mcs_check                   = "Check";
            mcs_audio_encoder_config    = "Audio codec";
            mcs_video_codec             = "Video codec";
            mcs_download                = "Download";
            mcs_client_download         = "Client download";
            mcs_for_more_clarity_smooth_video_experience = "Voor meer helderheid en een soepelere video ervaring";
            mcs_network                 = "Netwerk";
            mcs_mobile_client_download  = "Mobiele client download";
            mcs_readonly                = "Alleen lezen";
            mcs_please_exit_and_relogin = "Graag afsluiten en opnieuw inloggen";
            mcs_add_device_failed       = "Toevoegen van apparaat mislukt";
            mcs_set_password            = "Geef wachtwoord in";
            mcs_7x24_hours              = "Continue";
            mcs_mtalt                   = "%@ : Bewegingsdetectie alarm";
            mcs_ioalt                   = "%@ : I/O alarm";
            mcs_time_zone               = "Tijdzone";
            mcs_select_time             = "Selecteer de tijd";
            mcs_now                     = "Nu";
            mcs_mipc_have_alert_notification = "MIPC alarm notificatie";
            mcs_notification_center     = "Notificatie centrum";
            mcs_sound                   = "Geluid";
            mcs_vibration               = "Vibratie";
            mcs_clear_cache             = "Leeg cache";
            mcs_clear_cache_hint        = "Weet u zeker dat u de cache wil leegmaken?";
            mcs_successfully_cleared_cache = "Cache succesvol geleegd";
            mcs_app_except_exit_hint    = "Sorry, the app heeft een probleem geconstateerd en sluit zich nu af";
            mcs_rate_us                 = "Geef ons een waardering";
            mcs_password_too_simple_hint = "Wachtwoord is te eenvoudig, wijzig deze om de beveiliging te verbeteren";
            mcs_check_for_new_version   = "Check voor updates";
            mcs_contact_us              = "Contacteer ons";
            mcs_buffer_time             = "Buffer tijd";
            mcs_default                 = "Standaard";
            mcs_alarmed_devices         = "Gealarmeerde apparaten";
            mcs_aec                     = "Echo onderdrukking";
            mcs_permission_denied       = "Geen bevoegdheid";
            mcs_full_screen             = "Volledig scherm";
            mcs_forgot_your_password    = "Wachtwoord vergeten";
            mcs_your_email              = "Uw e-mail adres";
            mcs_sign_up_confirmation    = "Een bevestigings e-mail wordt verzonden naar uw e-mailadres te verifiëren. Klik op de link om je account te activeren.";
            mcs_recovery_prompt         = "Vul uw e-mailadres (gebruikersnaam) hieronder, zullen wij u een e-mail met instructies over hoe u uw wachtwoord te resetten.";
            mcs_password_reset_confirmation = "Volg de aanwijzingen in de e-mail naar de ingediende e-mailadres wordt verzonden naar wachtwoord te resetten.";
            mcs_recovery_fail_no_mail   = "Wachtwoord herstel mislukken, geen e-mail in verband met deze account.";
            mcs_recovery_fail_invalid_link = "Wachtwoord herstel mislukken, volg dan de instructies in het herstel e-mail.";
            mcs_recovery_ok_login       = "Wachtwoord herstel succes. Meld u nu aan.";
            mcs_active_ok_login         = "Account activering met succes. Meld u nu aan.";
            mcs_active_fail_invalid_link = "Account activering is mislukt. Probeer het nog eens.";
            mcs_login_fail_inactive     = "Inactief account. Volg de instructies van het actieve e-mail adres om een nieuw account te activeren";
            mcs_sign_up_again           = "Opnieuw registreren";
            mcs_press_start_talk        = "Druk om te spreken";
            mcs_release_stop_talk       = "Laat los om te stoppen";
            mcs_delete_device           = "Verwijderen";
            mcs_success_removed_equipment = "Apparaat succesvol verwijderd";
            mcs_remove_equipment_failure = "Verwijder storingen";
            mcs_device_busy             = "Apparaat is bezig";
            mcs_keep_testing            = "Blijf testen";
            mcs_notify_tone             = "Notificatie geluidssignaal";
            mcs_float_video             = "Sta zwevende video toe";
            mcs_float_position          = "Zwevende video positie";
            mcs_video_resolution        = "Video resolutie";
            mcs_float_resolution        = "Zwevende video resolutie";
            mcs_top_left                = "Links bovenin";
            mcs_top_right               = "Rechts bovenin";
            mcs_bottom_left             = "Links onderaan";
            mcs_bottom_right            = "Rechts onderaan";
            mcs_action_next             = "Volgende";
            mcs_action_cancel           = "Annuleren";
            mcs_action_retry            = "Opnieuw";
            mcs_action_add              = "Toevoegen";
            mcs_is_add                  = "Om toe te voegen";
            mcs_action_apply            = "Toepassen";
            mcs_action_config           = "Configureren";
            mcs_action_skip             = "Overslaan";
            mcs_action_ok               = "Oke";
            mcs_action_add_device       = "Camera toevoegen";
            mcs_action_modify_password  = "Wachtwoord aanpassen";
            mcs_action_config_wifi      = "Wi-fi configureren";
            mcs_state_connect_device    = "Camera verbinden";
            mcs_state_connect_device_fail = "Verbinden mislukt";
            mcs_state_wait_device_online = "In afwachting op verbinding";
            mcs_state_device_online     = "Online";
            mcs_state_success           = "Succes";
            mcs_fail                    = "Mislukt";
            mcs_delete_success          = "Het schrappen van het succes";
            mcs_state_add_device_success = "Toevoegen gelukt";
            mcs_state_add_device_fail   = "Toevoegen mislukt";
            mcs_state_modify_pass_success = "Wachtwoord aangepast";
            mcs_state_modify_pass_fail  = "Wachtwoord aanpassing mislukt";
            mcs_state_config_wifi_success = "Wi-fi setup afgerond";
            mcs_state_config_wifi_fail  = "Verbinding mislukt";
            mcs_state_connecting_to     = "Verbinden";
            mcs_network_connect_type    = "Camera is offline, test a.u.b. of de camera is ingeschakeld en aangesloten";
            mcs_prompt_modify_passwd    = "Om veiligheidsredenen, wijzigt u het standaard wachtwoord voor het apparaat. Het nieuwe wachtwoord moet ten minste zes tekens lang zijn";
            mcs_prompt_config_wifi      = "De camera is nog steeds niet verbonden met Wi-fi, stel a.u.b.  De verbinding in.";
            mcs_step1_check_connect     = "Stap 1: Sluit de camera aan met een netwerkkabel";
            mcs_first_step_ethernet_connect = "Stap 2: Sluit de Ethernet-kabel aan op de router en de Camera.";
            mcs_step2_check_connect     = "Stap 2: Schakel de camera in";
            mcs_second_step_ethernet_connect = "Stap 1: Zorg ervoor dat het apparaat is ingeschakeld.";
            mcs_hint_check_network      = "Let op: de camera start binnen 1 minut. de groene Led verlichting zal gaan knipperen, vervolgens is de camera verbonden met uw netwerk.";
            mcs_the_end                 = "Einde.";
            mcs_hint_password_expired   = "Wachtwoord is verlopen, voeg uw camera opnieuw toe a.u.b.";
            mcs_hint_remove_ethernet    = "Let op: Wi-fi verbinding setup is afgerond, u kunt de netwerkkabel loskoppelen.";
            mcs_gateway_format_incorrect = "De poort adres niet in de juiste vorm";
            mcs_dns_format_incorrect    = "DNS adres onjuist";
            mcs_subnet_mask_format_incorrect = "Het adres van het subnet niet in de juiste vorm";
            mcs_ip_format_incorrect     = "IP adres onjuist";
            mcs_login_sucess            = "Login gelukt";
            mcs_donot_remind            = "Niet opnieuw melden";
            mcs_clear_cache_signout_hint = "Cache opschonen, u dient opnieuw in te loggen. Doorgaan?";
            mcs_devlist_adddev_hint     = "Voeg een camera toe.";
            mcs_devlist_menu_hint       = "Stel de resolutie in";
            mcs_update_failed           = "Update mislukt";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "HD 1280x720";
            mcs_local                   = "Lokaal";
            mcs_set_npapi               = "Als de plugin is geïnstalleerd, ga naar: \'chrome://flags/#enable-npapi\', enable NPAPI,";
            mcs_set_win32k              = "Bezoek:  \'chrome://flags/#enable-win32k-renderer-lockdown\', disabled win32k renderer lockdown";
            mcs_restart_browser         = "Start de browser opnieuw op";
            mcs_download_location       = "Download locatie";
            mcs_Networking_mode         = "Netwerk modus";
            mcs_wifi_intelligent_configuration = "Wi-fi verbinding";
            mcs_ethernet_configuration  = "Ethernet verbinding";
            mcs_wifi_connect            = "Verbinding mislukt";
            mcs_hard_disk               = "Harde schijf";
            mcs_wifi_is_connection      = "Verbinden...";
            mcs_wifi_intelligent_configuration_setup_ailure = "Wi-fi configuratie mislukt";
            mcs_box_list                = "Lijst";
            mcs_repair_disk_prompt      = "Herstelschijf kan data verliezen, doorgaan?";
            mcs_format_disk_prompt      = "Formatteren zal data verwijderen, doorgaan?";
            mcs_scheduled_alerting      = "Alarm schema";
            mcs_scheduled_alerting_one  = "Schema 1";
            mcs_scheduled_alerting_two  = "Schema 2";
            mcs_scheduled_alerting_three = "Schema 3";
            mcs_scheduled_alerting_four = "Schema 4";
            mcs_wifi_config_cancle      = "Wi-fi configuratie gestopt";
            mcs_wifi_config_prepare     = "Voor de toewijzing van";
            mcs_wifi_config_first       = "De apparaten, mobiele telefoons en routers dienen in het bereik van 1m te zijn";
            mcs_wifi_config_second      = "Sluit bij het instellen van de Wi-Fi de netwerkkabel niet aan";
            mcs_wifi_config_third       = "Houd de reset knop 2 seconden in, en laat deze dan los";
            mcs_wifi_config_success     = "Configuratie geslaagd";
            mcs_wifi_config_failure     = "Configuratie mislukt";
            mcs_failure_prompt          = "Probeer opnieuw, of ga terug om na te gaan of het juiste Wi-Fi wachtwoord is ingevuld";
            mcs_display_password        = "Wachtwoord tonen";
            mcs_action_smart_config_wifi = "Configuratie Wizard";
            mcs_wifi_invalid            = "Maak eerst verbinding met uw mobiele telefoon via Wi-Fi";
            mcs_phone_not_connect_wifi  = "Wi-Fi netwerk is niet verbonden";
            mcs_prompt_check_connection = "Uw camera is niet online, zijn de kabels goed aangesloten?  ";
            mcs_wifi_cfg_ready          = "Klaar";
            mcs_reset_complete          = "Reset is klaar";
            mcs_how_to_restore_factory_settings = "Hoe zet ik mijn apparaat terug naar de fabrieksinstellingen? Gebruik de RESET naald, en druk minimaal 10 seconden op de RESET knop (onderkant van de camera)";
            mcs_forgetpass_action_wizard = "Alsjeblieft, lang op basis van apparatuur - opnieuw gat na 10 seconden laat je stem horen, zal de apparatuur \"de fabrieksinstellingen.\"";
            mcs_prompt_check_device_connection = "Uw camera is niet online, zijn de kabels goed aangesloten?";
            mcs_prompt_select_device_connection = "Uw apparatuur niet online, kies de wijze van netwerken";
            mcs_input_wifi_name         = "Voer Wi-Fi naam in";
            mcs_action_previous         = "Vorige";
            mcs_io_alert_range_hint     = "IO alarm tijd dient minder dan 60 seconden te zijn";
            mcs_io_alert_time           = "IO alarm tijd(en)";
            mcs_smart                   = "Slim";
            mcs_plan                    = "Plan";
            mcs_mute                    = "demp";
            mcs_wind_speed              = "Wind snelheid";
            mcs_one                     = "Een versnelling";
            mcs_two                     = "Twee versnellingen";
            mcs_three                   = "Drie versnellingen";
            mcs_purify_mode             = "Zuivere mode";
            mcs_video_list              = "Video lijst";
            mcs_wifi_cfg_restore_factory_settings = "Houd uw mobiele telefoon in de buurt van het apparaat. Zodra de Wi-Fi is geconfigureerd, druk dan 2 seconden op de RESET knop en laat deze dan los. Het apparaat zet zich nu terug naar de fabrieksinstellingen en start zichzelf opnieuw op.";
            mcs_mask_settings           = "Mask instellingen";
            mcs_notification_settings   = "Melding instellingen";
            mcs_alarm_settings          = "Alarm instellingen";
            mcs_motion_detection        = "Bewegingsdetectie";
            mcs_io_alarm                = "I/O Alarm";
            mcs_connect_status          = "Verbindingsstatus";
            mcs_motion_notification     = "Beweging en melding";
            mcs_device_connected        = "Apparaat is verbonden";
            mcs_start_spray             = "Start spraying";
            mcs_available_network       = "Netwerk niet beschikbaar, controleer het netwerk";
            mcs_select_wifi_wizard      = "Selecteer eerst het juiste Wi-Fi netwerk";
            mcs_input_wifi_password     = "Geef Wi-Fi wachtwoord op";
            mcs_device_admin_password   = "Apparaat admin wachtwoord";
            mcs_device_guest_password   = "Apparaat gast wachtwoord";
            mcs_user_admin_password     = "Gebruiker admin wachtwoord";
            mcs_user_guest_password     = "Gebruiker gast wachtwoord";
            mcs_save_network_set        = "Sla netwerk en wachtwoord op";
            mcs_nickname_not_set        = "Camera naam is niet ingevoerd";
            mcs_current_wifi            = "Huidige Wi-Fi";
            mcs_current_password_strength = "Huidige wachtwoord sterkte";
            mcs_new_password_strength   = "Nieuwe wachtwoord sterkte";
            mcs_needs_to_open_the_DHCP  = "Uw router moet de DHCP funtie open (automatisch IP adres ophalen). Indien dit mislukt, neem dan contact op met de beheerder";
            mcs_picture                 = "Beeld";
            mcs_quality                 = "Kwaliteit";
            mcs_size                    = "Formaat";
            mcs_guest_login             = "Gast log-in";
            mcs_audio_and_video         = "Audio / Video";
            mcs_volume                  = "Volume";
            mcs_smooth                  = "Soepel";
            mcs_clear                   = "Helder";
            mcs_handsfree               = "Handsfree";
            mcs_headphone               = "Headset";
            mcs_my                      = "Account";
            mcs_customer_service        = "Klantenservice";
            mcs_firefox_flash_uninstall = "Uw flash plug-in is niet beschikbaar. Voor de oplossing wijzen wij u graag door naar:https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "Plug-ins";
            mcs_plug_load               = "Laad plug-ins";
            mcs_plug_load_refuse        = "Laad geen plug-ins";
            mcs_plug_load_auto          = "Automatisch";
            mcs_option                  = "Opties";
            mcs_option_ok               = "Bepalen";
            mcs_voice_call_fails        = "Spraak oproep mislukt, check het netwerk";
            mcs_umounted_prompt         = "Om los te koppelen";
            mcs_mounted_prompt          = "Om te bevestigen";
            mcs_format_prompt           = "Om te formatteren";
            mcs_repair_prompt           = "Om te repareren";
            mcs_signup_prompt           = "Nieuw hier?";
            mcs_wifi_connect_sucess_prompt = "Opmerking: Wi-Fi functioneert. U kunt nu het netwerk loskoppelen";
            mcs_manual_input_prompt     = "Handmatig het apparaat ID invoeren";
            mcs_qrscan_prompt           = "U heeft de applicatie nog geen verbinding met uw camera toegestaan. U kunt de applicatie met naam Vimtag in uw telefoon vinden bij \'instellingen\', \'privacy\', \'camera instellingen\'";
            mcs_select_network_style    = "Selecteer netwerk verbinding mode";
            mcs_push                    = "Aankondiging";
            mcs_connect_power_prompt    = "Opmerking: Apparaat is niet online, controleer de voeding";
            mcs_fail_microphone         = "Kan geen verbinding maken met de microfoon";
            mcs_microphone_prompt       = "You are not to allow this application to access your microphone, in the \'set\' iPhone - the \'privacy\' - \'microphone\' feature, find the name of \'Vimtag\' applicati";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "HD";
            mcs_standard_clear          = "Standaard";
            mcs_fluent_clear            = "Vloeiend";
            mcs_deleting                = "Verwijderen....";
            mcs_event                   = "Gebeurtenis";
            mcs_one_hour                = "1 uur";
            mcs_half_hour               = "30 minuten";
            mcs_five_min                = "5 minuten";
            mcs_category                = "Categorie";
            mcs_time_length             = "Duur";
            mcs_new                     = "Nieuw";
            mcs_week_setting_prompt     = "Week instelling mag niet leeg zijn";
            mcs_time_setting_prompt     = "Tijdsinstelling mag niet leeg zijn";
            mcs_today                   = "Vandaag";
            mcs_wifi_password           = "Wi-Fi wachtwoord";
            mcs_register_prompt         = "Registreer uw account eerst";
            mcs_click_login             = "Klik hier om in te loggen";
            mcs_not_login_prompt        = "U bent niet ingelogd, klik hier om in te loggen";
            mcs_product_presentation    = "Home";
            mcs_help_feedback           = "FAQ";
            mcs_help_information        = "FAQ";
            mcs_feedback                = "Feedback";
            mcs_feedback_des            = "Dankzij het gebruik van onze app, welkom stelt ons voor uw waardevolle opmerkingen";
            mcs_feedback_praise         = "Lof";
            mcs_feedback_title_prompt   = "Feedback - Titel";
            mcs_feedback_title          = "Voer de titel (18 woorden)";
            mcs_feedback_type_prompt    = "Aard van het probleem";
            mcs_feedback_please_select  = "Alsjeblieft, de keuze van soorten";
            mcs_feedback_select_option1 = "De interface";
            mcs_feedback_select_option2 = "De camera \'s";
            mcs_feedback_select_option9 = "Andere problemen";
            mcs_feedback_dec_prompt     = "Een gedetailleerde beschrijving";
            mcs_feedback_dec            = "Voer uw opmerkingen";
            mcs_feedback_upload_photo   = "Upload de foto \'s";
            mcs_preview_pic             = "De preview";
            mcs_Album                   = "Kies uit Album";
            mcs_Photograph              = "foto";
            mcs_camera_unavailable      = "Niet beschikbaar bij uw camera";
            mcs_feedback_submit         = "Indiening van";
            mcs_feedback_title_alert    = "De titel is niet in overeenstemming met de regels";
            mcs_feedback_type_alert     = "Het kiezen van de juiste aard";
            mcs_feedback_dec_alert      = "Voer uw opmerkingen";
            mcs_feedback_submit_success = "Bij de succesvolle";
            mcs_feedback_submit_fail    = "Falen";
            mcs_connect_wifi_prompt     = "Verbind met Wi-fi";
            mcs_cloud                   = "Cloud";
            mcs_demo                    = "Demo";
            mcs_shortest                = "Kortste";
            mcs_no_history              = "Geen historie";
            mcs_download_pc_client      = "Download de PC software";
            mcs_accounts_bind_email_exist = "Het account is gekoppeld met uw email.";
            mcs_accounts_bind_email_busy = "Uw email is gekoppeld met het account";
            mcs_systemupdatetip_noversionnodetail = "Nieuwe software upgrade versie, zonder detail omschrijving";
            mcs_systemupdatetip_nodetail = "geen detail omschrijving";
            mcs_systemupdatetip_updatefrom = "Uw huidige versie";
            mcs_systemupdatetip_updateto = "kan geupgrade worden naar";
            mcs_systemupdatetip_sureforupdate = "Wilt u daadwerkelijk upgraden?";
            mcs_systemupdatetip_updatecontent = "upgrade details";
            mcs_operate_prompt          = "Werk a.u.b. Volgens het diagram";
            mcs_operation_prompt        = "Operation prompt";
            mcs_qrcode_prompt_content   = "Gebruik de camera om de smartphone QR code te scannen";
            mcs_qrcode_camera_distance  = "Hou de camera ongeveer 12 tot 14 cm van de QR code voor het scannen van uw Wi-Fi signaal.";
            mcs_planvideo_datewizard    = "Stel een datum in";
            mcs_planvideo_timewizard    = "Stel een tijd in";
            mcs_planvideo_wizard        = "Stel een tijd en datum in";
            mcs_email_unbind            = "Email account niet gekoppeld";
            mcs_email_unmatch           = "Email mismatch";
            mcs_email_inactive          = "Email niet geactiveerd";
            mcs_email_binded            = "Email account gekoppeld";
            mcs_user_binded_bymail      = "De gebruiker is gekoppeld";
            mcs_bind_email_fail         = "Email koppeling mislukt";
            mcs_diagnosis               = "Diagnose";
            mcs_delay                   = "Vertraging";
            mcs_packet_loss_rate        = "Packet loss rate";
            mcs_timezone_IDL            = "Tijdszone";
            mcs_timezone_China          = "China";
            mcs_timezone_Midway         = "Midway Islands";
            mcs_timezone_Niue           = "Island of Niue";
            mcs_timezone_Samoa          = "American Samoa";
            mcs_timezone_Aleutian       = "Aleutian Islands";
            mcs_timezone_Hawaii         = "Hawaiian Islands";
            mcs_timezone_Alaska         = "Alaska";
            mcs_timezone_PSTUSCanada    = "PST(US&Canada)";
            mcs_timezone_Arizona        = "Arizona";
            mcs_timezone_MSTUSCanada    = "Mountain Standard Time(US&Canada)";
            mcs_timezone_CSTUSCanada    = "Central Standard Time(US&Canada)";
            mcs_timezone_ESTUSCanada    = "Eastern Standard Time(US&Canada)";
            mcs_timezone_ASTCanada      = "AST(Canada)";
            mcs_timezone_Newfoundland   = "Newfoundland";
            mcs_timezone_Brasilia       = "Brasilia";
            mcs_timezone_BuenosAires    = "Buenos Aires";
            mcs_timezone_Santiago       = "Santiago";
            mcs_timezone_Noronha        = "Noronha";
            mcs_timezone_SouthGeorgia   = "South Georgia";
            mcs_timezone_Azores         = "Azores";
            mcs_timezone_CapeVerde      = "Cape Verde";
            mcs_timezone_London         = "London";
            mcs_timezone_Lisbon         = "Lisabon";
            mcs_timezone_Dublin         = "Dublin";
            mcs_timezone_Berlin         = "Berlijn";
            mcs_timezone_Amsterdam      = "Amsterdam";
            mcs_timezone_Brussels       = "Brussel";
            mcs_timezone_Budapest       = "Budapest";
            mcs_timezone_Madrid         = "Madrid";
            mcs_timezone_Paris          = "Paris";
            mcs_timezone_Rome           = "Rome";
            mcs_timezone_Sarajevo       = "Sarajevo";
            mcs_timezone_Cairo          = "Cairo";
            mcs_timezone_Amman          = "Amman";
            mcs_timezone_Beirut         = "Beirut";
            mcs_timezone_Istanbul       = "Istanbul";
            mcs_timezone_Jerusalem      = "Jeruzalem";
            mcs_timezone_Athens         = "Athens";
            mcs_timezone_Baghdad        = "Baghdad";
            mcs_timezone_Riyadh         = "Riyadh";
            mcs_timezone_Qatar          = "Qatar";
            mcs_timezone_Moscow         = "Moscow";
            mcs_timezone_Tehran         = "Tehran";
            mcs_timezone_Baku           = "Baku";
            mcs_timezone_Dubai          = "Dubai";
            mcs_timezone_Tbilisi        = "Tbilisi";
            mcs_timezone_Kabul          = "Kabul";
            mcs_timezone_Karachi        = "Karachi";
            mcs_timezone_Yekaterinburg  = "Yekaterinburg";
            mcs_timezone_Maldives       = "Maldives";
            mcs_timezone_Calcutta       = "Calcutta";
            mcs_timezone_Colombo        = "Colombo";
            mcs_timezone_Katmandu       = "Katmandu";
            mcs_timezone_Almaty         = "Almaty";
            mcs_timezone_Dhaka          = "Dhaka";
            mcs_timezone_Omsk           = "Omsk";
            mcs_timezone_Thimbu         = "Thimbu";
            mcs_timezone_Rangoon        = "Rangoon";
            mcs_timezone_Bangkok        = "Bangkok";
            mcs_timezone_Jakarta        = "Jakarta";
            mcs_timezone_Vientiane      = "Vientiane";
            mcs_timezone_Harbin         = "Harbin";
            mcs_timezone_Shanghai       = "Shanghai";
            mcs_timezone_Hongkong       = "Hong Kong";
            mcs_timezone_Singapore      = "Singapore";
            mcs_timezone_Taipei         = "Taipei";
            mcs_timezone_Ulaanbaatar    = "Ulaanbaatar";
            mcs_timezone_Perth          = "Perth";
            mcs_timezone_Seoul          = "Seoul";
            mcs_timezone_Tokyo          = "Tokyo";
            mcs_timezone_Darwin         = "Darwin";
            mcs_timezone_Magadan        = "Magadan";
            mcs_timezone_Vladivostok    = "Vladivostok";
            mcs_timezone_Guam           = "Guam";
            mcs_timezone_Sydney         = "Sydney";
            mcs_timezone_Canberra       = "Canberra";
            mcs_timezone_Melbourne      = "Melbourne";
            mcs_timezone_Queensland     = "Queensland";
            mcs_timezone_LordHowe       = "Lord Howe";
            mcs_timezone_Guadalcanal    = "Guadalcanal";
            mcs_timezone_Fiji           = "Fiji";
            mcs_timezone_Auckland       = "Auckland";
            mcs_timezone_Apia           = "Apia";
            mcs_timezone_Fakaofo        = "Fakaofo";
            mcs_timezone_Tongatapu      = "Tongatapu";
            mcs_timezone_Kiritimati     = "Kiritimati";
            mcs_connect_timeout         = "Verbinding onderbroken";
            mcs_share                   = "Delen";
            mcs_share_prompt_start      = "U kunt inloggen";
            mcs_share_prompt_end        = "download de video vanuit een internet browser of smartphone binnen hetzelfde netwerk";
            mcs_share_note              = "Wacht a.u.b. tot het downloaden afgerond is.";
            mcs_video_size              = "Formaat";
            mcs_video_duration          = "Duur";
            mcs_my_folder               = "Mijn map";
            mcs_account_no_contain      = "Het account bevat geen";
            mcs_edit                    = "Aanpassen";
            mcs_video_number            = "Video lijst";
            mcs_no_local_video          = "Geen opname";
            mcs_empty_folder            = "Map is leeg";
            mcs_no_history_record       = "U heeft geen opnames";
            mcs_no_local_record         = "Uw lokale opslag is leeg";
            mcs_empty_cloud_list_first  = "Uw cloud opname lijst is leeg";
            mcs_empty_cloud_list_second = "Klik op de linker bovenhoek van de";
            mcs_empty_cloud_list_third  = "voeg camera toe!";
            mcs_empty_local_list_first  = "Uw cloud opname lijst is leeg";
            mcs_empty_local_list_second = "probeer";
            mcs_empty_local_list_third  = "Veeg het scherm naar onderen";
            mcs_empty_local_list_forth  = "ververs";
            mcs_empty_local_list_fifth  = "（Zoek camera\'s binnen de LAN）（Zoek camera\'s binnen de LAN）（Zoek camera\'s binnen de LAN）";
            mcs_record_prompt           = "U kunt de opname zien in  \"My->My Folder\"";
            mcs_record_download_prompt  = "U kunt het record te bekijken in \"Mijn map \"";
            mcs_register_buton_start    = "Geen account?";
            mcs_register_buton_end      = "Klik om aan te melden";
            mcs_product                 = "Product";
            mcs_user_or_password_invalid = "Ongeldige gebruikersnaam of wachtwoord";
            mcs_share_video_prompt      = "U gebruikt een niet actief Wi-fi netwerk. Schakel a.u.b. het Wi-fi netwerk in om te delen";
            mcs_download_video_prompt   = "U gebruikt een niet actief Wi-fi netwerk, het downloaden kan extra kosten meebrengen. Doorgaan?";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "Normaal";
            mcs_common_problem          = "Bekend probleem";
            msc_enter_comment           = "Geef uw commentaar in";
            msc_description             = "omschrijving";
            mcs_parameter               = "parameter";
            mcs_help_and_feedback       = "Hulp en feedback";
            mcs_personal_center         = "Personal center";
            mcs_version                 = "versie";
            mcs_language                = "taal";
            mcs_new_user                = "Ik ben een nieuwe gebruiker";
            mcs_have_account            = "Bestaand account";
            mcs_try_it                  = "Uitproberen";
            mcs_sign_up_now             = "Aanmelden";
            mcs_input_confirm_password  = "Bevestig wachtwoord";
            mcs_warranty_registration   = "garantie registratie";
            mcs_get_more_cameras        = "meer camera\'s";
            mcs_user_inactive           = "Gebruiker niet actief";
            mcs_format_options          = "Formaat";
            mcs_slide_screen            = "Schuif het scherm om de video hoek aan te passen";
            mcs_zoom_in_screen          = "Bekijk meer informatie volgens om te vergroten";
            mcs_pause                   = "Pauze";
            mcs_source                  = "Bron";
            mcs_magnetic                = "magnetisch";
            mcs_sos                     = "Sos";
            mcs_input_download_path     = "Download pad";
            mcs_download_path_name_error = "Download de bestandsnaam pad kan alleen letters (a-z, A-Z) of numerieke (0-9)";
            mcs_active                  = "Actief";
            mcs_out                     = "Uit";
            mcs_quiet                   = "Rustig";
            mcs_scenes                  = "scene";
            mcs_accessory               = "medeplichtig";
            mcs_quiet_mode              = "Stille modus";
            mcs_active_mode             = "Active Mode";
            mcs_out_mode                = "out Mode";
            mcs_add_accessory           = "Voeg Accessory";
            mcs_accessory_type          = "Type accessoire";
            mcs_add_successfully        = "Voeg succesvol";
            mcs_set_scene               = "Uw accessoires zijn nog niet op het toneel, klik dan";
            mcs_to_set                  = "instellen";
            mcs_add_accessory_button    = "Druk op de knop totdat het rode lampje gaat weer uit naar de add voltooien";
            mcs_auto_monday             = "maandag";
            mcs_auto_tuesday            = "dinsdag";
            mcs_auto_wednesday          = "woensdag";
            mcs_auto_thursday           = "donderdag";
            mcs_auto_friday             = "vrijdag";
            mcs_auto_saturday           = "zaterdag";
            mcs_auto_sunday             = "zondag";
            mcs_search                  = "Zoeken";
            mcs_format_input            = "formatteren van de harde schijf";
            mcs_get_accessory_failed    = "krijgen accessoire is mislukt";
            mcs_get_scene_failed        = "krijgen scene is mislukt";
            mcs_search_failed           = "zoekopdracht is mislukt";
            mcs_add_failed              = "toe te voegen is mislukt";
            mcs_ethernet_connect        = "Ethernet";
            mcs_action_click_retry      = "Klik op Opnieuw";
            mcs_wifi_config_failure_detail = "Of u kunt proberen";
            mcs_qrcode_connect          = "QR code verbinding";
            mcs_close_sound_prompt      = "Open Sound helpt Wi-Fi-verbinding, houd de telefoon in de buurt van de luidspreker van de camera microfoon";
            mcs_qrcode_prompt_title     = "Gelieve operaties getoond in FIG";
            mcs_qrcode_prompt_detail    = "Gelieve richt de cameralens op de QR-code precies en houden de afstand zijn 30 cm.";
            mcs_select_wifi_prompt      = "Geen Ethernet-kabel nodig";
            mcs_select_ethernet_prompt  = "Ethernet-kabel nodig voor de installatie alleen";
            mcs_enter_config_mode_prompt = "Controleer Wifi indicator is drie rode drie groene flits afwisselend. Als dat zo is, klikt u op de knop Volgende. Zo niet, dan drukt u op de RESET-knop op de camera. Controleer dan de Wi-Fi-aanduiding weer";
            mcs_no_enter_config_mode    = "Niet in de configuratie mode";
            mcs_record_time             = "Record keer";
            mcs_stop_search             = "stop zoeken";
            mcs_smart_wifi_setup        = "Smart Wifi Setup";
            mcs_ethernet_setup          = "Ethernet-instelling";
            mcs_wifi_config_restore_start = "1) Zorg ervoor dat het apparaat is ingeschakeld";
            mcs_wifi_config_restore_end = "2) Druk op de reset-gat voor een seconde, zal het apparaat te herstellen en opnieuw opstarten na 60 seconden, dan zal de configuratie automatisch in te voeren";
            mcs_Sense_schedule          = "scenarioplanning";
            load_succeed                = "Loading succes";
            load_fail                   = "mislukt om te laden";
            refresh_succeed             = "Vernieuwen succes";
            refresh_fail                = "Vernieuwen is mislukt";
            mcs_ensure_dev_power        = "1) Zorg ervoor dat het apparaat is ingeschakeld";
            all_refresh_complete        = "Alle gegevens worden vernieuwd";
            mcs_synchronize             = "gelijktijdig";
            mcs_synchronize_detail      = "Profielen van de volgende apparatuur en instellingen inconsistent , moeten worden gesynchroniseerd werken nadat";
            mcs_Sense_Schedule_Set      = "Scenarioplanning set";
            mcs_Sence_Schedule_detail   = "Als u de automatische scène -modus in te schakelen , zal het systeem automatisch overschakelen op basis van scenarioplanning scenario\'s op verschillende tijdstippen";
            mcs_Scene_set               = "profielen";
            mcs_Scene_set_detail        = "Als u een profiel in te schakelen , het profiel volgens de instellingen die in de volgende pagina\'s";
            mcs_send_message            = "Stuur een bericht";
            mcs_start_recording         = "opname starten";
            mcs_start_capture           = "start capture";
            mcs_turn_on_video           = "Om de continue opname modus te verlaten , opent u de video";
            mcs_search_press_button     = "Druk op de back-knop 1 seconde na de release, de indicator knippert langzaam";
            mcs_add_fail1               = "Vanwege de korte toevoeging in apparatuur is geannuleerd, klik nogmaals naar de toevoeging van";
            mcs_add_fail2               = "Apparatuur nog niet nogmaals proberen te zoeken nog, alsjeblieft";
            mcs_recording_duration      = "Opnameduur ( in seconden )";
            mcs_settings_unsaved        = "Uw instellingen zijn niet opgeslagen";
            mcs_want_save               = "Zal het op te slaan ?";
            mcs_camera                  = "videocamera";
            mcs_router                  = "router";
            mcs_start_up                = "begin";
            mcs_cancle_add              = "Equipment is geannuleerd vanwege de korte druk op Toevoegen";
            mcs_visit_photo_fail        = "De toegang tot de foto \'s niet";
            mcs_camera_cell             = "De camera \'s";
            mcs_myphoto                 = "Mijn foto \'s";
            mcs_select_photo            = "De keuze van het album";
            mcs_app_new_version         = "De nieuwe versie";
            mcs_update_new_version      = "Onmiddellijk";
            mcs_app_new_version_prompt  = "App heeft een nieuwe versie, selecteert u Upgrade Downloaden Update Now";
            download_failed             = "Download mislukt";
            mcs_connect_server_prompt   = "WiFi is aangesloten, is het verbonden met de server";
            mcs_local_search            = "Local Search";
            mcs_choose_device_type      = "De keuze van het type apparatuur";
            mcs_wifi_state              = "Opmerking: de WIFI werkt, je kunt nu gebroken kabel (open netwerk kan optreden na de apparatuur niet online, alsjeblieft wacht 20 automatisch aan de lijn)";
            mcs_sweep                   = "Scannen";
            mcs_wifi_config_tip         = "Een router er WiFi,om te voorkomen dat de bedrading.";
            mcs_ethernet_config_tip     = "Niet gemakkelijk om de kabel.";
            mcs_ethernet_connect_step_one = "De eerste stap om ervoor te zorgen dat de lijn die de energievoorziening: 1. 2";
            mcs_ethernet_connect_step_two = "De tweede stap 4: verbonden via een netwerk van haven - en camera \'s netwerk van haven.";
            mcs_sweep_qrcode_tip        = "De camera \'s op de mobiele telefoon van twee codes scannen, ongeveer 30 cm afstand te houden";
            mcs_sound_config_tip        = "Het geluid helpt de wi - fi.(kan er ook voor kiezen de gesloten)";
            mcs_sosalt                  = "%@ : Emergency alarmknop(%@)";
            mcs_dooralt                 = "%@ : magnetische Alert(%@)";
            mcs_wifi_config_restore     = "Alsjeblieft, een seconde na de reset - knop los, \"apparatuur in de wifi - configuratie\".";
            mcs_voice_remind_heard      = "Zijn stem horen";
            mcs_netWork_prompt          = "networking Tips";
            mcs_con_netWork             = "Network momenteel in gebruik voor de dataverbinding, kan het een veel verkeer consumeren, als de netwerkinterface in te stellen om te springen";
            mcs_no_netWork              = "Momenteel is er geen netwerkverbinding, of de sprong naar het opzetten van de interface-netwerkinstellingen";
            mcs_exception_des           = "Uw app laatste uitzondering exit, of om een foutenrapport te sturen naar de server";
            mcs_exception_prompt        = "Tip abnormale";
            mcs_erro_diagnosis          = "Problemen oplossen";
            mcs_erro_log_des            = "App recente verslag error log, selecteert u de knop in te dienen om een error log te uploaden, dank u voor uw medewerking!";
            mcs_is_submitting           = "worden ingediend";
            mcs_firmware_version        = "firmware Version";
            mcs_device_assembly         = "1.Power line  2.power-poort  3.Ethernet port  4.kabel  5.adapter";
            mcs_forgetpass_action_wizard_old = "Druk op de reset-knop een seconde, zal het apparaat de fabrieksinstellingen en 60 seconden na de herstart te herstellen, de admin wachtwoord herstel";
            mcs_device_assembly_mipc    = "1.Power line  2.power-poort  3.Ethernet port  4.kabel";
            mcs_device_connect_power_prompt = "Het apparaat is niet online, alsjeblieft, zoals aangegeven in figuur om je apparatuur toegang tot energievoorziening, zien de lampjes rood licht apparatuur vaak, de start af.";
            mcs_lights_sound            = "Is dat licht";
            mcs_connect_power           = "In verband met de energievoorziening";
            mcs_search_magnetic         = "Zoals getoond, de gecombineerde magnetische deur en druk op de knop aan de zijkant gedurende 1 seconden na de release, de indicator knippert langzaam";
            mcs_add_magnetic            = "Na het openen van de deur sensor te fuseren , zie de indicator flitser uit voltooiing van de toevoeging";
            mcs_already_downloaded      = "Gedownload van";
            mcs_my_order                = "Mijn orders";
            mcs_auto_mode               = "automatische modus";
            mcs_new_small               = "VGA";
            mcs_new_half                = "QVGA";
            mcs_new_normal              = "Normaal";
            mcs_new_hd                  = "HD 720P";
            mcs_scene_now               = "De huidige situatie";
            mcs_please_install_wechat   = "Alsjeblieft, de installatie van WeChat";
            mcs_wechat_not_support      = "WeChat update WeChat versie niet steunen.";
            mcs_motion_alert            = "Bewegingsdetectie alarm";
            mcs_io_alert                = "I/O alarm";
            mcs_valid_user_name         = "De eerste stap in een geldige gebruikersnaam:";
            mcs_binding_mailbox         = "De tweede stap: voer de brievenbus gebonden ";
            mcs_send_mailbox_succuess_prev = "We zijn naar je de biografie van de brievenbus gebonden ";
            mcs_send_mailbox_succuess_next = " Stuurde een e - mail wachtwoord, uw aandacht vestigen op de post ontvangen.";
            mcs_all_image               = "Alle foto \'s.";
            mcs_unavailable_image       = "Foto \'s beschikbaar is, te kiezen";
            mcs_set_nickname            = "instellen bijnaam";
            mcs_search_timeout          = "Tijd om te zoeken , klikt u Opnieuw zoeken";
            mcs_screen_size             = "scherm Instellingen";
            mcs_screen_reset            = "Succes. Herstart om te activeren";
            mcs_wifi_network_prompt     = "Controleer de camera \'s van de 5 GHz - band met WiFi is wi - fi, laat de camera\' s in verband met de 2,4 GHz";
            mcs_fault_diagnosis         = "De diagnose";
            mcs_sever_diagnosis         = "Misschien omdat de server fouten, die niet normaal.";
            mcs_select_problem          = "Kies een probleem";
            mcs_connot_lonin            = "Niet op";
            mcs_connot_play             = "Niet spelen.p";
            mcs_add_problems            = "Een extra probleem";
            mcs_encounterer_problems    = "Gelieve de problemen";
            mcs_diagnostic_network      = "start van diagnose";
            mcs_network_diagnostic_prompt = "In het netwerk van de diagnose kan ons helpen je problemen op te lossen, de diagnose van tijd is over een paar minuten";
            mcs_network_diagnostic      = "Problemen oplossen";
            mcs_connecting_server       = "In verband met de server.";
            mcs_diagnostic_process_prompt = "Diagnostisch proces kan enkele minuten duren, tijdens de diagnostiek geen andere handelingen uit, maar je kunt altijd stoppen met de diagnostische";
            mcs_diagnostic_results      = "De diagnose van de resultaten";
            mcs_diagnostic_results_received = "De diagnose is voltooid, hebben de diagnostische resultaten ontvangen";
            mcs_diagnostic_results_prompt = "Hartelijk dank voor uw deelname aan deze diagnose, zal diagnostische resultaten ons helpen om uw probleem op te lossen zo snel mogelijk";
            mcs_results_no_abnormality  = "De diagnostische resultaten geen abnormale";
            mcs_no_abnormality_prompt   = "De diagnose geen afwijkingen gevonden. U kunt de diepte van de diagnose te kiezen, start de log collectie mogelijkheden zullen ons helpen om het probleem dat u ondervindt beter op te lossen";
            mcs_continue_diagnosis      = "diepte Diagnose";
            mcs_diagnosis_connot_sent   = "De diagnose kan verzenden";
            mcs_email_sends             = "Stuur een e - mail";
            mcs_email_sends_prompt      = "Stuur diagnostische resultaten naar ons per e-mail, het zal ons helpen om uw probleem op te lossen zo snel mogelijk";
            mcs_diagnosis_send          = "Stuur";
            mcs_diagnosis_email         = "E-mail";
            mcs_send_successful         = "verzonden";
            mcs_diagnosis_type_select_prompt = "selecteert u de aard van de diagnose";
            mcs_stop_diagnosis          = "Stop Diagnose";
            mcs_detail_diagnosis_prompt = "Diagnose gaan, kunt u het apparaat draaien pagina";
            mcs_detail_diagnosis_stop_prompt = "Diepte diagnose aan de gang is, kunt u altijd afbreken";
            mcs_exit_detail_diagnosis   = "Diepte diagnose bezig is, of om te stoppen?";
            mcs_network_connection_unavailable = "Netwerkverbinding is niet beschikbaar";
            mcs_Failed_connect_Internet = "Kan geen verbinding maken met het internet";
            mcs_connect_internet_note   = "Als u nodig hebt om verbinding met het internet, let dan op het volgende:";
            mcs_connect_internet_detail_first = "Controleer de draadloze LAN-instellingen van uw telefoon, om te zien of is er toegang tot een draadloos LAN-signaal";
            mcs_connect_internet_detail_second = "Controleer of uw telefoon toegang heeft tot een mobiel netwerk, en de telefoon is niet uitgeschakeld";
            mcs_connect_wifi_note       = "Als u toegang tot het draadloze LAN:";
            mcs_connect_wifi_detail     = "Controleer of uw draadloze LAN-hotspot-verbinding toegang tot het internet heeft, of als de hotspot kan het apparaat toegang tot het netwerk";
            mcs_device_or_phone_time_zone_not_equals_please_select = "Device huidige tijdzone en de tijdzone van de mobiele telefoon is niet, selecteert u de juiste tijdzone";
            mcs_phone_timezone          = "Telefoon tijdzone";
            mcs_timezone_change         = "Wijzigen van de tijdzone";
            mcs_mail_send               = "bericht verzonden";
            mcs_yes_verif               = "het";
            mcs_no_verif                = "geen";
            mcs_camera_found_new_version_y_n_upgrade = "We vonden een nieuwe versie van de camera, of de upgrade?";
            mcs_auto_adapt_split_screen = "geen";
            mcs_four_split_screen       = "Vier punten.";
            mcs_nine_split_screen       = "9 punten.";
            mcs_twelve_split_screen     = "Twaalf minuten.";
            mcs_not_connection_server   = "Kan geen verbinding met de server";
            mcs_more_options            = "Meer";
            mcs_bind_email_prompt       = "Om de veiligheid account, binden uw mailbox";
            mcs_login_now               = "inloggen nu";
            mcs_device_connect_power    = "1.Power line      2.power-poort";
            mcs_device_connect_ethernet = "1. De netto - export  2.De kabel";
            mcs_device_connect_ethernet_prompt = "Aan de ene kant van de kabel toegang tot het netwerk van haven - en aan de andere kant de toegang tot zijn netwerk van haven router zien, licht groen licht knipperen, kabel verbinding voltooid.";
            mcs_pwd_format              = "Wachtwoord: lengte van 8 tot 16 in de vorm van een tussen de tekens, de letters en cijfers, de speciale symbool bestaat uit ten minste drie soorten";
            mcs_client_new              = "De cliënt";
            mcs_user_guide              = "De handleiding";
            mcs_ebitcam_download_describe = "Ebitcam is een wolk op diensten van software, de software en de wolken van het gebruik van camera \'s, laat de gebruiker de video\' s van informatie, we bieden je een duidelijke, goede kijk ervaring, intelligente controle houden je op de liefde van je familie, vindt de gebruiker te downloaden.";
            mcs_mipc_download_describe  = "Mipc is een wolk op diensten van software, de software en de wolken van het gebruik van camera \'s, laat de gebruiker de video\' s van informatie, we bieden je een duidelijke, goede kijk ervaring, intelligente controle houden je op de liefde van je familie, vindt de gebruiker te downloaden.";
            mcs_guide_download          = "Downloaden.";
            mcs_password_admin          = "Password management.";
            mcs_already_read            = "Ik heb eens gelezen en";
            mcs_privacy_policy          = "Privacy beleid";
            mcs_not_agree_privacy_policy = "Heb je nog niet eens de privacy beleid";
            mcs_reload                  = "Opnieuw laden";
            mcs_start_download          = "Onmiddellijk te downloaden";
            mcs_video_play_fail         = "De video niet spelen";
            mcs_download_app_tips       = "Je kunt ook proberen gebruik te maken van client - pc -";
            mcs_memo                    = "Memo";
            mcs_fencer                  = "Fencer";
            mcs_focus                   = "Focus";
            mcs_mini                    = "Mini";
            mcs_shield                  = "Shield";
            mcs_snowman                 = "Snowman";
            mcs_device_type             = "Soort apparatuur";
            mcs_connect_device_wifi     = "De camera \'s geen steun voor de 5 GHz - band -";
            mcs_send_diagnosis_results  = "De diagnose van de resultaten van een...";
            mcs_local_file              = "De lokale bestanden";
            mcs_local_device            = "De lokale hulpmiddelen";
            mcs_export_sd_data          = "Gegevens afkomstig van de SD - kaart";
            mcs_shaking                 = "Z \'n hoofd machine";
            mcs_outdoor                 = "In de machine";
            mcs_card                    = "De kaarten";
            mcs_wifi_connection         = "Wifi verbinding";
            mcs_home_mode               = "mode huis";
            mcs_away_home_mode          = "AWAY Mode";
            mcs_auto_switch_mode        = "automatisch schakelen";
            mcs_select_scene_mode       = "Kies een profiel";
            mcs_7x24_hours_prompt       = "Open 7x24 (h) Opnemen";
            mcs_all_day_recording       = "dag video";
            mcs_home_mode_prompt        = "mode huis:Sluit alle alarmapparaten";
            mcs_away_home_mode_prompt   = "AWAY Mode:Alle apparaten geopend alarm";
            mcs_at_home                 = "thuis";
            mcs_away_home               = "uit";
            mcs_set_timezone_prompt_start = "Uw tijdzone is";
            mcs_set_timezone_prompt_end = "Schakel de tijd en datum in de tijdzone-instelling";
            mcs_set_wifi_remind_head    = "De volgende problemen kan leiden tot de camera \'s niet aanbevolen om te voorkomen dat de netwerken.";
            mcs_set_wifi_remind_1       = "Controleer of ze blijven net open wi - fi, dit is niet de normale netwerken kan leiden tot de camera \'s.Je kan een tijdelijke sluiting van de anti - rub - netwerk, de camera \'s weer router na de succesvolle netwerken kan worden";
            mcs_set_wifi_remind_2       = "Als je thuis is dubbele router, controleer de camera van de 5 GHz - band met WiFi is WiFi, laat de camera \'s in verband met de 2,4 GHz -";
            mcs_set_wifi_remind_3       = "De camera \'s op het niveau van de onderneming niet voor de WPA/WPA2 WiFi, kies een andere wi - fi";
            mcs_set_wifi_remind_4       = "Als je huis is het overbruggen van de wi - fi, omdat de brug reden kan leiden tot uw netwerk zeer onstabiel, voorstellen in verband met de niet - het overbruggen van de wi - fi";
            mcs_set_wifi_remind_5       = "Wat voor camera \'s voor wi - fi";
            mcs_record_save_to_my_file  = "Video opgeslagen in mijn bestanden";
            mcs_view_now                = "Bekijk nu";
            mcs_search_sos_strat        = "Zoals getoond, de onderste knop drukt";
            mcs_search_sos_end          = "Een seconde, wordt de indicator apparaat knipperen";
            mcs_search_magnetic_start   = "Zoals getoond, de gecombineerde magnetische deur, druk op de knop aan de zijkant";
            mcs_search_magnetic_end     = "Een seconde, wordt de indicator apparaat knipperen";
            mcs_adding                  = "Het toevoegen";
            mcs_record_empty_set_sd     = "Plaats een SD-kaart kan video geschiedenis op te slaan";
            mcs_video_play_offline      = "Het apparaat is offline";
            mcs_video_play_network_fail = "Netwerkverbinding mislukt, probeer het later opnieuw";
            mcs_alert_notify_guide1     = "[Origineel] bewegingsdetectie operatie om te migreren naar [bijlage], [door] het profiel instellingen";
            mcs_alert_notify_guide2     = "Werking is als volgt:";
            mcs_alert_notify_guide3     = "Selecteer [scene], moet u blijken bewapenen mode, moet je thuis ontwapenen modus te openen;";
            mcs_alert_notify_guide4     = "Válassza a [Eszközök] - [Tartozékok lista] - [Motion Detection] módot kiderült riasztó, videó, fotó, IO riasztási funkció, ébresztés kikapcsolásához otthon mód, videó és egyéb funkciók....";
            mcs_plan_protect_guide1     = "[Origineel] plannen bewapenen werking gemigreerd naar de [scenario]";
            mcs_plan_protect_guide2     = "Selecteer het [scenario], geopend profielen automatische omschakeling;";
            mcs_plan_protect_guide3     = "kiezen";
            mcs_plan_protect_guide4     = ", De behoefte aan ingeschakelde periode (bijvoorbeeld: Dinsdag, 7: 00-18: 00) in te stellen uit, na het OK om op te slaan en terug te keren naar het tabblad Instellingen;";
            mcs_plan_record_guide       = "Selecteer [Opnemen], blijken modus opname functie.";
            mcs_plan_record_guide1      = "[Plan opname in] plannen bewapenen werking gemigreerd naar de [Opnemen]";
            mcs_plan_record_guide2      = ", De noodzaak voor het opnemen van tijd (bijvoorbeeld: di 7: 00-18: 00) in te stellen uit, na het OK om op te slaan en terug te keren naar het tabblad Instellingen;";
            mcs_forgetpass_action_prompt = "Drukt u op het apparaat Reset Reset hole 10 seconden na de release, infrarood verlichting en apparatuur om de fabrieksinstellingen te herstellen";
            mcs_cloud_box               = "Cloud Box";
        }/* nl */
        else if(lang == "tr")
        {
            mcs_name                    = "Isim";
            CFBundleDisplayName         = "MIPC";
            mcs_nick                    = "Isim";
            mcs_old_nick                = "Takma isim";
            mcs_linked                  = "Bağlantılı";
            mcs_sign_in                 = "Oturum açın";
            mcs_back                    = "Geri";
            mcs_will_back               = "Geri dönecek";
            mcs_add                     = "Ekle";
            mcs_add_device              = "Cihaz ekle.";
            mcs_device_existed          = "Cihaz zaten var";
            mcs_cancel                  = "Iptal et";
            mcs_exit                    = "Çıkış";
            mcs_remember_password       = "Şifreyi hatırla";
            mcs_password_remembered     = "şifre hatırladı";
            mcs_sign_ining              = "Oturum açın ...";
            mcs_cloud_server            = "Bulut sunucusu";
            mcs_input_device_id         = "Giriş cihazı kimliği";
            mcs_input_username          = "Kullanıcı adını gir";
            mcs_input_email_addr        = "E-posta adresini gir";
            mcs_email_address           = "E-posta adresi";
            mcs_email                   = "E-posta";
            mcs_binding                 = "Bağlama";
            mcs_binding_email           = "E-posta bağla";
            mcs_binding_send_prompt     = "Doğrulama mesajı gönderildi, lütfen mümkün olan en kısa sürede kimlik doğrulayın";
            mcs_binding_email_prompt    = "Parolanızı unutursanız E-posta adresinizle sıfırlayabilirsiniz";
            mcs_input_password          = "Şifrenizi girin";
            mcs_access_server_failed    = "Sunucuya erişim başarısız oldu.";
            mcs_device_offline          = "Cihaz çevrimdışı";
            mcs_invalid_password        = "Geçersiz şifre";
            mcs_invalid_dev             = "Geçersiz cihaz";
            mcs_login_faided            = "Giriş başarısız oldu";
            mcs_invalid_qrcode          = "Geçersiz QR kodu";
            mcs_please_input_username   = "Lütfen kullanıcı adı giriniz";
            mcs_please_input_password   = "Lütfen şifreyi giriniz";
            mcs_qrcode_scan_hint        = "QR kodunu tarayın";
            mcs_device_list_empty       = "Cihaz listesi boş";
            mcs_record_list_is_empty    = "Kayıt listesi boş";
            mcs_password_expired        = "Parola süresi doldu";
            mcs_set_video_size          = "Çözünürlük";
            mcs_hd_1280x720             = "HD [1280x720]";
            mcs_auto                    = "Otomatik";
            mcs_normal_640x360          = "Normal[640x360]";
            mcs_half_320x180            = "Yarım[320x180]";
            mcs_small_160x90            = "Küçük [160x90]";
            mcs_play                    = "Canlı";
            mcs_settings                = "Ayarlar";
            mcs_messages                = "Kayıtlar";
            mcs_alarm                   = "Alârm";
            mcs_delete                  = "Sil";
            mcs_delete_camera           = "Cihazı sil";
            mcs_apply                   = "Uygulamak";
            mcs_speed                   = "Hız";
            mcs_others                  = "Diğerleri";
            mcs_audio                   = "Ses";
            mcs_speaker                 = "Hopârlör";
            mcs_mic                     = "Mikrofon";
            mcs_power_frequency         = "Güç frekansı";
            mcs_online_upgrade          = "çevrimiçi yükseltme";
            mcs_restore_the_factory_settings = "Fabrika ayarlarına geri yükle";
            mcs_restore                 = "Restore";
            mcs_restore_camera          = "Aygıtı yeniden başlat";
            mcs_start_upgrade           = "Yükseltmeye başlat";
            mcs_system                  = "Sistem";
            mcs_system_settings         = "Sistem ayarları";
            mcs_online                  = "Çevrimiçi";
            mcs_offline                 = "çevrimdışı";
            mcs_query                   = "Sorgu";
            mcs_begin_time              = "Başlama zamanı";
            mcs_end_time                = "Bitiş zamanı";
            mcs_mode                    = "Mod";
            mcs_opened                  = "Açıldı";
            mcs_high                    = "Yüksek";
            mcs_middle                  = "Orta";
            mcs_low                     = "Düşük";
            mcs_io_alert_input          = "I / O giriş";
            mcs_io_alert_output         = "I / O çıkışı";
            mcs_normally_open           = "Normalde açık";
            mcs_normally_close          = "Normalde kapalı";
            mcs_motion_detection_sensitivity = "Hareket algılama hassasiyeti";
            mcs_daytime                 = "Gün";
            mcs_night                   = "Gece";
            mcs_sdcord                  = "SD kartı";
            mcs_storage_device          = "Depolama aygıtı";
            mcs_set_mask                = "Maske ayarla";
            mcs_status                  = "Durum";
            mcs_capacity                = "Kapasite";
            mcs_usage                   = "Kullanım";
            mcs_format                  = "Biçimlendir";
            mcs_repair                  = "Düzelt";
            mcs_formating               = "Biçimlendiriliyor";
            mcs_repairing               = "Onarım";
            mcs_mounted                 = "Yüklendi";
            mcs_unmounted               = "Yüklenmiş değil";
            mcs_mount                   = "Yükle";
            mcs_unmount                 = "Yüklemeyi kaldır";
            mcs_ethernet                = "Ethernet";
            mcs_wifi                    = "Wi-fi";
            mcs_enabled                 = "Etkin";
            mcs_mac_address             = " MAC adresi";
            mcs_network_status          = "Ağ durumu";
            mcs_wifi_mode               = "Wifi modu";
            mcs_client                  = "Alıcı";
            mcs_ap                      = "AP";
            mcs_start_address           = "Başlangıç adresi";
            mcs_end_address             = "Bitiş adresi";
            mcs_gateway                 = "Ağ geçidi";
            mcs_select_network          = "ağı seçin";
            mcs_dhcp_ip                 = "IP: DHCP Kullan";
            mcs_dhcp_dns                = "DNS: DHCP Kullan";
            mcs_ip_address              = "IP adresi";
            mcs_network_mask            = "Ağ maskesi";
            mcs_input_secondary_dns     = "Ikincil DNS girişi";
            mcs_secondary_dns           = "Ikincil DNS";
            mcs_input_dns               = "Giriş DNS";
            mcs_input_alternate_dns     = "Alternatif DNS girişi";
            mcs_input_ip                = "Giriş IP";
            mcs_input_gateway           = "Giriş geçidi";
            mcs_input_network_mask      = "Giriş ağ maskesi";
            mcs_wifi_list               = "wifi listesi";
            mcs_display_date            = "Tarih göster";
            mcs_date_format             = "Tarih biçimi";
            mcs_display_time            = "Saati göster";
            mcs_time_format             = "Saat biçimi";
            mcs_24_hour                 = "24-saat";
            mcs_12_hour                 = "12 saat";
            mcs_display_weeks           = "Gösteri günü";
            mcs_date_time               = "Gün / Zaman";
            mcs_set_time                = "Saati ayarla";
            mcs_set_week                = "Haftayı ayarla";
            mcs_stream                  = "Canlı izle";
            mcs_encode                  = "Kodlama";
            mcs_resolution              = "Kodlama";
            mcs_frame_fate              = "Kare hızı (FPS)";
            mcs_maximum_bitrate         = "Maksimum bit hızı";
            mcs_minimum_bitrate         = "Minimum bit hızı";
            mcs_i_frame_interval        = "I-Frame aralığı";
            mcs_video                   = "vidyo";
            mcs_sampling_rate           = "Örnekleme hızı (kHz)";
            mcs_nickname                = "Takma adı";
            mcs_old_password            = "Eski şifre";
            mcs_confirm_password        = "Parolayı onayla";
            mcs_modify_password         = "Parolayı Değiştir";
            mcs_password                = "Şifre";
            mcs_admin_password          = "Yönetici şifresi";
            mcs_guest_password          = "Misafir şifresi";
            mcs_product_info            = "Ürün Bilgisi";
            mcs_software_version        = "Yazılımın sürümü";
            mcs_device_id               = "Cihaz kimliği";
            mcs_operation               = "Operasyon";
            mcs_record                  = "Kayıt";
            mcs_record_2                = "Oynatma";
            mcs_upgrade_now             = "Şimdi güncelle";
            mcs_upgrading               = "Güncelleme";
            mcs_already_latest_version  = "Güncelleme yok";
            mcs_sensitivty              = "Duyarlılık";
            mcs_user_defined            = "Kullanıcı tanımlı";
            mcs_time                    = "Zaman";
            mcs_date                    = "Gün";
            mcs_finish                  = "Bitti";
            mcs_delete_fail             = "Silinemedi";
            mcs_motion                  = "Hareket";
            mcs_start                   = "Başlatmak";
            mcs_talk                    = "Konuş";
            mcs_password_input_inconsistent = "Şifre girişi tutarsız";
            mcs_input_6_to_20_litters   = "6-20 harf (a-z, A-Z) ve sayılar (0-9) giriniz";
            mcs_user_letter_range_hint  = "Kullanıcı adı 6-32 harf (a-z, A-Z) veya rakamlar (0-9) olup bir harfle başlamalıdır";
            mcs_password_range_hint     = "Şifre 6-32 karakter - harf / sayıdan oluşmalıdır";
            mcs_begin_with_the_letters  = "Harflerle başlayın";
            mcs_sign_up                 = "Kaydol";
            mcs_sign_up_failed          = "Kayıt başarısız oldu";
            mcs_successful_sign_up      = "Kaydolma başarısız oldu";
            mcs_are_you_sure_delete     = "Silme işlemini onayla?";
            mcs_failed_to_set_the       = "Ayarlama başarısız oldu";
            mcs_set_successfully        = "Başarıyla ayarlandı";
            mcs_downloading             = "İndiriliyor";
            mcs_wrote                   = "Yazdı";
            mcs_visit_again_later       = "Lütfen tekrar deneyin";
            mcs_restart_failed          = "Yeniden başlatılamadı";
            mcs_upgrade_failed          = "Güncelleme başarısız oldu";
            mcs_connnected              = "Bağlı";
            mcs_connnected_to           = "Bağlı olunan";
            mcs_not_select              = "Seçili değil";
            mcs_message_list            = "Mesaj listesi";
            mcs_saved_password          = "Kayıtlı şifre";
            mcs_alert                   = "Uyarı";
            mcs_no_record               = "Kayıt yok";
            mcs_new_about               = "Yeni:hakkında";
            mcs_device                  = "Cihaz";
            mcs_config                  = "Yapılandırma";
            mcs_change_password_failed  = "Şifre değiştirme başarısız oldu";
            mcs_do_you_want_restart     = "Yeniden başlatmak istiyor musun?";
            mcs_do_you_want_restore     = "Geri almayı onaylıyor musunuz?";
            mcs_do_you_want_upgrade     = "Yükseltmek ister misiniz?";
            mcs_load_end                = "Videoların Sonu";
            mcs_loading                 = "Yükleniyor ...";
            mcs_down_refresh            = "Yenilemek için çekin";
            mcs_release_refresh         = "Tazelemek için bırak";
            mcs_refreshing              = "Yenileniyor";
            mcs_release_then_loading_data_hint = "Yüklemek için bırakın";
            mcs_pull_refresh_hint       = "Yenilemek için çekin";
            mcs_restarting              = "Yeniden Başlanıyor";
            mcs_upgraded_time           = "Yükseltilmiş zaman";
            mcs_done                    = "Bitti";
            mcs_playback                = "Oynatma";
            mcs_i_o_alarm               = "I/O alârm";
            mcs_alarm_action            = "Hareket algılama";
            mcs_alarm_sources           = "Alarm kaynakları";
            mcs_io_output               = "I/O çıktı";
            mcs_snapshots               = "Enstantane fotoğraf";
            mcs_snapshot                = "Enstantane fotoğraf";
            mcs_snapshot_interval       = "Anlık görüntü aralığı(s)";
            mcs_pre_record_length       = "Ön kayıt uzunluğu";
            mcs_nick_range_hint         = "Kamera adı 20 karakterden daha az içermelidir";
            mcs_save                    = "Kayıt";
            mcs_close                   = "Kapat";
            mcs_snapshoting             = "Anlık görüntü çekmek";
            mcs_snapshot_failed         = "Anlık görüntü başarısız";
            mcs_record_failed           = "Kayıt başarısız";
            mcs_saved_successfully      = "Başarıyla kaydedildi";
            mcs_save_failed             = "Kaydedildi başarısız oldu";
            mcs_restart_to_take_effect  = "Değişikliklerin etkinleşmesi için yeniden başlatın";
            mcs_please_allow_access_album = "Lütfen Vimtag\'ın fotoğraf albümünüze erişmesine izin verin";
            mcs_please_allow            = "Lütfen izin verin";
            mcs_access_album            = "Fotoğraf albümüne erişmek için";
            mcs_ios_privacy_setting_for_photo_prompt = "iPhone \" Ayarlar-> Gizlilik-> Fotoğraflar \"da uygulamayı bulabilir\"";
            mcs_execute_change          = "\" Değişiklik";
            mcs_access_camera           = "Kameranıza erişmek için";
            mcs_please_allow_access_camera = "Lütfen MIPC\'nin kameranıza erişmesine izin verin.";
            mcs_ios_privacy_setting_for_camera_prompt = "iPhone \" Ayarlar-> Gizlilik-> Kamera \" daki ayarları değiştirebilir, uygulamayı bulabilir\"";
            mcs_busy_when_write         = "Meşgul yazma";
            mcs_unknown_error           = "Bilinmeyen hata";
            mcs_i_know                  = "Biliyorum";
            mcs_segment                 = "Parça";
            mcs_please_relogin          = "Lütfen tekrar oturum açın";
            mcs_change_password_succeed = "Parola başarıyla değiştirildi";
            mcs_upgrade_to_ver          = "Yeni sürüme güncelleme";
            mcs_restore_failed          = "Geri yüklenemedi";
            mcs_please_restart          = "Lütfen yeniden başlat";
            mcs_keep_network_settings   = "Ağ ayarlarını ve şifreyi kaydet";
            mcs_not_connected           = "Bağlı değil";
            mcs_sdcard_not_ready        = "SD kartı hazır değil";
            mcs_device_not_exist        = "Cihaz mevcut değil";
            mcs_disable                 = "Devre dışı bırakılmış";
            mcs_to_determine_the        = "Onaylıyor musunuz?";
            mcs_alert_on                = "Alarmı aç";
            mcs_alert_off               = "Alarmı kapat";
            mcs_alert_onoff             = "Uyarı açma / kapama";
            mcs_monday                  = "Pazartesi";
            mcs_tuesday                 = "Salı";
            mcs_wednesday               = "Çarşamba";
            mcs_thursday                = "Perşembe";
            mcs_friday                  = "Cuma";
            mcs_saturday                = "Cumartesi";
            mcs_sunday                  = "Pazar";
            mcs_mon                     = "Pzt";
            mcs_tue                     = "Salı";
            mcs_wed                     = "Çrş";
            mcs_thu                     = "Per";
            mcs_fri                     = "Cum";
            mcs_sat                     = "Altı";
            mcs_sun                     = "Paz";
            mcs_scheduled_recording     = "Kaydı planla";
            mcs_schedule                = "Takvim";
            mcs_scheduled_recording_status = "Zamanlanmış kayıt durumu:";
            mcs_folding                 = "Katlanma";
            mcs_unfolding               = "Çözülüyor";
            mcs_end_time_should_lt_begin = "Bitiş saati başlangıç zamanından büyük olmalıdır";
            mcs_recording               = "Kayıt";
            mcs_prerecord_interval_range_hint = "Ön kayıt aralığı 6 saniyeden az olmalıdır";
            mcs_snapshot_interval_range_hint = "Anlık görüntü aralığı 0 veya 60\'dan büyük olmalıdır.";
            mcs_not_ready               = "Hazır değil";
            mcs_availablesize           = "Kullanılabilir kapasite";
            mcs_reboot                  = "Yeniden başlat";
            mcs_alerter                 = "Uyarı";
            mcs_pir                     = "PIR";
            mcs_isp                     = "ISP";
            mcs_encoder                 = "Enkoder";
            mcs_ok                      = "Tamam";
            mcs_fault                   = "Hata";
            mcs_sensor_status           = "Sensör durumu";
            mcs_about                   = "Hakkında";
            mcs_reset_now               = "Simdi yeniden başlat";
            mcs_reset_later             = "Daha sonra tekrar başlat";
            mcs_prompt                  = "Hatırlatma";
            mcs_select                  = "Seç";
            mcs_available_netword       = "Ağ kullanılamıyor,Yapılandırmak mı?";
            mcs_request_send            = "Istek gönderiliyor...";
            mcs_blank_device_id         = "Cihaz kimliği boş olamaz";
            mcs_blank_username          = "Kullanıcı adı boş olamaz";
            mcs_blank_password          = "Şifre boş olamaz";
            mcs_exist_user              = "Kullanıcı zaten var";
            mcs_invalid_user            = "Kullanıcı adı geçersiz";
            mcs_invalid_email_addr      = "Geçersiz e-posta adresi";
            mcs_system_err              = "Sistem hatası";
            mcs_exceed_device           = "Cihaza çok fazla kişi bağlandı";
            mcs_continue                = "Devam et";
            mcs_prompt_exit             = "Çıkmak ister misin";
            mcs_device_list             = "Cihaz listesi";
            mcs_no_sdcard               = "SD kartı yok";
            mcs_no_hard_disk            = "Sabit Disk Yok";
            mcs_show_more               = "Daha...";
            mcs_shotsnop_exists         = "Fotoğraf zaten mevcut";
            mcs_input_nick              = "Giriş cihazı adı";
            mcs_nick_not_empty          = "Cihaz adı boş olamaz";
            mcs_input_new_pass          = "Yeni şifre gir";
            mcs_input_new_pass_again    = "Tekrar yeni şifre gir";
            mcs_new_password            = "Yeni şifre";
            mcs_modify_network_prompt   = "Ağ değişiklikler ağ hatası neden olabilir, yine de devam edilsin mi?";
            mcs_wifi_disable_prompt     = "Wi-Fi\'yi Devre Dışı Bırak, Devam Et mi?";
            mcs_eth_disable_prompt      = "Ethernet\'i devre dışı bırak, Devam et?";
            mcs_ip                      = "IP";
            mcs_auto_obtain             = "DHCP yi kullan";
            mcs_manually_set            = "Statik kullan";
            mcs_dns                     = "DNS";
            mcs_dns_prim                = "Birincil DNS";
            mcs_client_mode             = "Müşteri";
            mcs_adhoc_mode              = "Adhoc";
            mcs_connect_fail            = "Bağlantı başarısız oldu";
            mcs_dhcp_server             = "DHCP sunucu";
            mcs_display_text            = "Metin göster";
            mcs_repair_prompt_detail    = "Onarım bazı veri kaybına neden olabilir Devam edilsin mi?";
            mcs_format_prompt_detail    = "Biçimlendirme, SD karttaki tüm verileri silecektir,Devam etmek ister misin?";
            mcs_mount_prompt            = "SD kartı takın, devam et?";
            mcs_umount_prompt           = "SD Kartı takılı değilken fotoğraf veya görüntü kaydı yapılamıyor. Devam edilsin mi?";
            mcs_sdcard_reset            = "Başarıyla tamamlandı. Etkinleştirilmesi için cihazı tekrar başlaması gerekiyor, devam edilsin mi?";
            mcs_sdcard_repairing        = "Tamir ediliyor,yeniden başlatmayı bekliyor";
            mcs_sdcard_formating        = "Biçimlendirilmiş olma,yeniden başlatmayı bekliyor";
            mcs_sdcard_umount           = "Unmounted";
            mcs_valid                   = "Geçerli";
            mcs_io                      = "I/O alarm";
            mcs_input                   = "Giriş";
            mcs_outinput                = "Çıktı";
            mcs_prompt_alert_on         = "Uyarılar açık, devam edilsin mi?";
            mcs_auto_sync_date_time     = "Otomatik senkronizasyon";
            mcs_alarm_record            = "Alarm kaydı";
            mcs_username                = "Kullanıcı adı";
            mcs_re_enter_the_password   = "Şifreyi tekrar gir";
            mcs_remember_me             = "Oturumda kalın";
            mcs_home                    = "Anasayfa";
            mcs_install_the_plug        = "Eklentiyi kur";
            mcs_install_the_video_plug  = "Video eklentisini kur";
            mcs_install_now             = "Şimdi kur";
            mcs_temporarily_installed_use_ordinary_video = "Hayır, daha sonra yükle";
            mcs_brightness              = "Parlaklık";
            mcs_contrast                = "Kontrast Oranı";
            mcs_color_saturation        = "Doygunluk";
            mcs_sharpness               = "Keskinlik";
            mcs_duration                = "Süre";
            mcs_index                   = "Dizin";
            mcs_remark                  = "Açıklama";
            mcs_media_stream            = "Medya";
            mcs_server                  = "Sunucu";
            mcs_media_transfer          = "Ortamı aktarma";
            mcs_osd                     = "OSD";
            mcs_manufacturer            = "Üretici";
            mcs_model                   = "Model";
            mcs_plugin_version          = "Eklenti Sürümü";
            mcs_network_interface       = "Ağ arabirimi";
            mcs_transfer_protocol       = "Aktarım protokolü";
            mcs_year                    = "Yıl";
            mcs_month                   = "Ay";
            mcs_day                     = "Gün";
            mcs_hour                    = "Saat";
            mcs_minute                  = "Dakika";
            mcs_second                  = "Ikinci";
            mcs_millisec                = "Millisec";
            mcs_ntp                     = "Zaman sunucusu";
            mcs_upload_upgrade          = "Yükseltme yükle";
            mcs_stop                    = "Dur";
            mcs_info_rewind             = "Geri sar";
            mcs_fast_forward            = "Hızlı ileri Sar";
            mcs_previous_frame          = "Önceki çerçeve";
            mcs_next_frame              = "Sonraki çerçeve";
            mcs_record_audio            = "Ses kaydet";
            mcs_week                    = "Hafta";
            mcs_all                     = "Hepsini seç";
            mcs_id                      = "ID";
            mcs_select_all              = "Tümünü seç";
            mcs_call                    = "Çağrı";
            mcs_activation              = "Aktivasyon kodu";
            mcs_caption                 = "Dosya yükleme";
            mcs_alarm_device            = "Hareket hassasiyeti";
            mcs_not_installed           = "Yüklenmedi";
            mcs_join_us_now             = "Şimdi bize katılın";
            mcs_reconnect_please_wait   = "Yeniden bağlanıyor,lütfen bekle";
            mcs_erasing                 = "Silme";
            mcs_writing                 = "Yazı yazıyor";
            mcs_dhcp                    = "DHCP";
            mcs_new_version             = "Yeni sürüme sahipsiniz";
            mcs_equipment_flip          = "Çevir";
            mcs_device_status           = "Cihaz durumu";
            mcs_audio_setting           = "Ses ayarları";
            mcs_nick_modify             = "Kamera adını değiştir";
            mcs_ready                   = "Hazır";
            mcs_full                    = "Tam";
            mcs_connecting              = "Bağlanılıyor";
            mcs_message_buffering       = "Mesajlar arabelleğe alınıyor";
            mcs_upgrade_finish          = "Güncelleme bitti";
            mcs_image                   = "Resim";
            mcs_bar                     = "Kayıt";
            mcs_init                    = "Başlatan";
            mcs_confirm_new_password    = "Yeni şifreyi onayla";
            mcs_continue_switch_wireless_network = "Ağ değiştirmek bağlantı kopmasına neden olabilir. Devam edilsin mi?";
            mcs_restore_factory_settings_prompt = "Cihaz geri yüklemeden sonra yeniden başlayacak. Fabrika ayarlarına dönülsün mü?";
            mcs_username_does_not_exis  = "Kullanıcı adı mevcut değil";
            mcs_username_already_exists = "Kullanıcı adı zaten var";
            mcs_successful_whether_login = "Başarıyla kaydolun. Şimdi giriş yap?";
            mcs_username_demand         = "6-20 harf veya sayı. Harfle başlat";
            mcs_the_password_is_empty   = "Parola boş";
            mcs_password_demand         = "6-20 harf veya sayı. Harfle başlat";
            mcs_password_empty          = "Parolayı tekrar yazın";
            mcs_two_password_input_inconsistent = "Parolalar eşleşmiyor";
            mcs_the_user_name_is_empty  = "Kullanıcı adı boş";
            mcs_upgrade_to_the_latest_version = "En son sürüme geç";
            mcs_subnet_mask_wrong_format = "Ağ maskesinin biçimi geçersiz";
            mcs_upgrade_successful_restart_to_take_effect = "Başarıyla yükseltin, cihazı yeniden başlatın";
            mcs_need_to_restart_the_camera_to_take_effect = "Etkinleştirmek için cihazı yeniden başlatmanız gerekir";
            mcs_not_allowed_close_two_network_cards = "Ethernet ve Wifi aynı anda devre dışı bırakılamaz";
            mcs_modified_successfully   = "Başarıyla değiştirildi";
            mcs_connection_successfully = "Bağlı";
            mcs_connection_is_interrupted = "Bağlantı kesildi";
            mcs_devices_in_the_account_overrun = "Hesaptaki aygıtlar izin verilenin üzerinde";
            mcs_format_error            = "Biçim hatası";
            mcs_change                  = "Değiştir";
            mcs_refresh                 = "Yenile";
            mcs_connect                 = "Bağlan";
            mcs_upgrade                 = "Yükseltme";
            mcs_activate                = "Etkinleştir";
            mcs_filter                  = "Filtre";
            mcs_reset                   = "Sıfırlama";
            mcs_prompt_alert_off        = "Uyarılar kapalı. Devam edilsin mi?";
            mcs_invalid_server          = "Geçersiz zaman sunucusu";
            mcs_upgrade_prompt          = "Cihaz yazılımı yükseltilecek, devam edilsin mi?";
            mcs_restart_prompt          = "Aygıtı yeniden başlat, devam et?";
            mcs_repeat                  = "Tekrar et";
            mcs_scheduled_one           = "Çizelge 1";
            mcs_scheduled_two           = "Çizelge 2";
            mcs_scheduled_three         = "Çizelge 3";
            mcs_scheduled_four          = "Çizelge 4";
            mcs_more                    = "Daha fazla";
            mcs_leave                   = "Daha yüklemek için serbest bırakın";
            mcs_qrcode_scan             = "QR Kodu Taraması";
            mcs_inserted                = "Takıldı";
            mcs_removed                 = "Kaldırıldı";
            mcs_upgrade_init            = "Yükseltmeyi başlat";
            mcs_upgrade_download        = "İndirme ve yükseltme";
            mcs_check                   = "Kontrol et";
            mcs_audio_encoder_config    = "Ses codec";
            mcs_video_codec             = "Video codec";
            mcs_download                = "İndir";
            mcs_client_download         = "Client download";
            mcs_for_more_clarity_smooth_video_experience = "Daha net ve yumuşak video deneyimine erişin";
            mcs_network                 = "Ağ";
            mcs_mobile_client_download  = "Mobil istemci indir`";
            mcs_readonly                = "Salt okunur";
            mcs_please_exit_and_relogin = "Lütfen oturumu açıp kapatın";
            mcs_add_device_failed       = "Cihaz eklenemedi";
            mcs_set_password            = "Şifre değiştir";
            mcs_7x24_hours              = "24/7";
            mcs_mtalt                   = "%@: Hareket uyarısı";
            mcs_ioalt                   = "%@ : I/O alarm";
            mcs_time_zone               = "Saat dilimi";
            mcs_select_time             = "Zaman seç";
            mcs_now                     = "Şimdi";
            mcs_mipc_have_alert_notification = "MIPC uyarı bildirimi";
            mcs_notification_center     = "Bildirim Merkezi";
            mcs_sound                   = "Ses";
            mcs_vibration               = "Titreşim";
            mcs_clear_cache             = "Önbellek Sil";
            mcs_clear_cache_hint        = "Önbelleği silmek istediğinizden emin misiniz? ";
            mcs_successfully_cleared_cache = "Önbellek başarıyla temizlendi";
            mcs_app_except_exit_hint    = "Üzgünüz, uygulama bir istisna ile karşılaştı ve çığlık atacak.";
            mcs_rate_us                 = "Bize Oranı söyle";
            mcs_password_too_simple_hint = "Parola çok basit, güvenliği artırmak için değiştirin.";
            mcs_check_for_new_version   = "Yeni sürümü kontrol et";
            mcs_contact_us              = "Bize ulaşın";
            mcs_buffer_time             = "Önyükleme zamanı";
            mcs_default                 = "Varsayılan";
            mcs_alarmed_devices         = "Alarmlı cihazlar";
            mcs_aec                     = "Eko iptali";
            mcs_permission_denied       = "Yetki yok";
            mcs_full_screen             = "Tam ekran";
            mcs_forgot_your_password    = "Parolamı unuttum";
            mcs_your_email              = "E-postanız";
            mcs_sign_up_confirmation    = "E-posta adresinizi doğrulamak için bir onay e-postası gönderiliyor. Hesabınızı etkinleştirmek için bağlantıyı tıklayın.";
            mcs_recovery_prompt         = "Aşağıya e-posta adresinizi (kullanıcı adı) girin, size şifrenizi nasıl sıfırlayacağınıza ilişkin talimatların bulunduğu bir e-posta göndereceğiz.";
            mcs_password_reset_confirmation = "Şifreyi sıfırlamak için gönderilen e-posta adresine gönderilen e-postadaki talimatları uygulayın";
            mcs_recovery_fail_no_mail   = "Şifre kurtarma başarısız, bu hesapla bağlantılı bir e-posta yok";
            mcs_recovery_fail_invalid_link = "Şifre kurtarma başarısız, lütfen kurtarma e-postasındaki talimatları uygulayın";
            mcs_recovery_ok_login       = "Şifre kurtarma başarılı, oturum açabilirsiniz";
            mcs_active_ok_login         = "Hesap etkinleştirme başarılı, şimdi oturum açın";
            mcs_active_fail_invalid_link = "Hesap etkinleştirmesi başarısız, tekrar deneyin.";
            mcs_login_fail_inactive     = "Etkin olmayan hesap. Yeni hesabı etkinleştirmek için lütfen etkin e-posta adresinize gelen talimatlarını uygulayın.";
            mcs_sign_up_again           = "Tekrar kaydol";
            mcs_press_start_talk        = "Konuşmak için basın";
            mcs_release_stop_talk       = "Durdurmak için bırakın";
            mcs_delete_device           = "Silmek";
            mcs_success_removed_equipment = "Cihazı başarıyla sil";
            mcs_remove_equipment_failure = "Cihazı kaldırma başarısız";
            mcs_device_busy             = "Cihaz şimdi meşgul";
            mcs_keep_testing            = "Test etmeye devam et";
            mcs_notify_tone             = "Bildirim zil sesi";
            mcs_float_video             = "Kayan videoyu etkinleştir";
            mcs_float_position          = "Hareketli video konumu";
            mcs_video_resolution        = "Video çözünürlüğü";
            mcs_float_resolution        = "Askıda video çözünürlüğü";
            mcs_top_left                = "Sol üst köşe";
            mcs_top_right               = "Sağ üst köşe";
            mcs_bottom_left             = "Sol alt köşe";
            mcs_bottom_right            = "Sağ alt köşede";
            mcs_action_next             = "Sonraki";
            mcs_action_cancel           = "Iptal etmek";
            mcs_action_retry            = "Yeniden dene";
            mcs_action_add              = "Eklemek";
            mcs_is_add                  = "Eklensin mi?";
            mcs_action_apply            = "Uygulamak";
            mcs_action_config           = "Yapılandırma";
            mcs_action_skip             = "Atla";
            mcs_action_ok               = "Tamam";
            mcs_action_add_device       = "Cihaz ekle";
            mcs_action_modify_password  = "şifreyi değiştir";
            mcs_action_config_wifi      = "Wi-Fi\'yi yapılandır";
            mcs_state_connect_device    = "Bağlama aygıtı";
            mcs_state_connect_device_fail = "Aygıtı bağlama hatası";
            mcs_state_wait_device_online = "Cihazın çevrimiçi olması için bekleniyor";
            mcs_state_device_online     = "Çevrimiçi";
            mcs_state_success           = "Başarılı";
            mcs_fail                    = "Başarısız oldu";
            mcs_delete_success          = "Başarıyla silindi";
            mcs_state_add_device_success = "Aygıt başarıyla eklendi";
            mcs_state_add_device_fail   = "Cihaz eklenemedi";
            mcs_state_modify_pass_success = "Parolayı başarıyla değiştir";
            mcs_state_modify_pass_fail  = "Parola değiştirme başarısız";
            mcs_state_config_wifi_success = "Wifi\'yi başarıyla ayarla";
            mcs_state_config_wifi_fail  = "Bağlantı başarısız";
            mcs_state_connecting_to     = "Bağlanıyor";
            mcs_network_connect_type    = "Cihazınız çevrimdışı, cihazınızın açık olduğundan emin olun, ardından ağ bağlantısı türünü seçin";
            mcs_prompt_modify_passwd    = "Güvenlik için cihazın varsayılan şifresini değiştirin. Yeni şifre altı karakterden az olmamalıdır..";
            mcs_prompt_config_wifi      = "Cihazınız hala Wi-Fi’a bağlı değil, lütfen Wi-Fi’ınızı yapılandırın.";
            mcs_step1_check_connect     = "Adım 1: Kamerayı modeminize kabloyla bağlayın";
            mcs_first_step_ethernet_connect = "Adım 2: Kameranızı bağladığınız modemin kameraya erişmeye çalıştığınız cihaza da bağlı olduğundan emin olun";
            mcs_step2_check_connect     = "2. Adım 2: Kamerayı açın";
            mcs_second_step_ethernet_connect = "1. Adım: Cihazınızı açın";
            mcs_hint_check_network      = "Not: başlatma işlemi yaklaşık 50 saniye alır LED başlatıldıktan sonra her 3 saniyede 3 kez yeşil renkte yanıp söner, bu da kameranızın açıldığını gösterir.Sihirbaz bundan sonra otomatik olarak bir sonraki adıma geçecektir.";
            mcs_the_end                 = "Son.";
            mcs_hint_password_expired   = "Parola süresi doldu, cihazı yeniden ekleyin";
            mcs_hint_remove_ethernet    = "Not: Wi-Fi düzgün çalışıyor, kabloyu şimdi çıkarabilirsiniz";
            mcs_gateway_format_incorrect = "Ağ geçidi adresi biçimi doğru değil";
            mcs_dns_format_incorrect    = "DNS adresi biçimi doğru değil";
            mcs_subnet_mask_format_incorrect = "Alt ağ maskesi adresi biçimi doğru değil";
            mcs_ip_format_incorrect     = "Adres biçimi yanlış";
            mcs_login_sucess            = "Başarıyla giriş yap";
            mcs_donot_remind            = "Bana bir daha hatırlatma";
            mcs_clear_cache_signout_hint = "Önbelleği temizledikten sonra tekrar oturum açmalısınız. Devam edilsin mi";
            mcs_devlist_adddev_hint     = "Aygıt eklemek için burayı tıklayın";
            mcs_devlist_menu_hint       = "Çözünürlüğü ayarlamak için burayı tıklayın";
            mcs_update_failed           = "Yeni sürüme geçiş yapılamadı";
            mcs_new_small_160x90        = "160x90";
            mcs_new_half_320x180        = "320x180";
            mcs_new_normal_640x360      = "640x360";
            mcs_new_hd_1280x720         = "1280x720";
            mcs_local                   = "Yerel";
            mcs_set_npapi               = "Eklenti kurulduysa, lütfen bunu ziyaret edin, \'chrome://flags/#enable-npapi\', enable NPAPI";
            mcs_set_win32k              = "Visit \'chrome://flags/#enable-win32k-renderer-lockdown\', disabled win32k renderer lockdown,";
            mcs_restart_browser         = "Tarayıcıyı yeniden başlat";
            mcs_download_location       = "İndirme konumu";
            mcs_Networking_mode         = "Ağ modu";
            mcs_wifi_intelligent_configuration = "Wifi bağlantı";
            mcs_ethernet_configuration  = "Ethernet bağlantısı";
            mcs_wifi_connect            = "Bağ";
            mcs_hard_disk               = "Hard disk";
            mcs_wifi_is_connection      = "Bağlanıyor, lütfen bekleyin";
            mcs_wifi_intelligent_configuration_setup_ailure = "Kablosuz yapılandırması başarısız oldu";
            mcs_box_list                = "Kutunun Listesi";
            mcs_repair_disk_prompt      = "Onarım diski bazı verileri kaybedebilir, devam edilsin mi?";
            mcs_format_disk_prompt      = "Biçimlendirmek diskteki tüm verileri silecek, devam edilsin mi?";
            mcs_scheduled_alerting      = "Zamanlama Uyarısı";
            mcs_scheduled_alerting_one  = "Çizelge 1";
            mcs_scheduled_alerting_two  = "Çizelge 2";
            mcs_scheduled_alerting_three = "Çizelge 3";
            mcs_scheduled_alerting_four = "Çizelge 4";
            mcs_wifi_config_cancle      = "Kablosuz yapılandırması iptal edildi";
            mcs_wifi_config_prepare     = "Yapılandırma Önkoşulları";
            mcs_wifi_config_first       = "Cihazınız ve telefonunuz modeminize 1 m yakınlıkta.";
            mcs_wifi_config_second      = "Wi-Fi\'yi yapılandırırken, cihaza ağ kablosu takılamaz";
            mcs_wifi_config_third       = "Pimi kullanarak RESET deliğine bir saniye boyunca poke edin ve ardından bırakın.";
            mcs_wifi_config_success     = "Yapılandırma başarılı";
            mcs_wifi_config_failure     = "Yapılandırma başarısız oldu";
            mcs_failure_prompt          = "Lütfen tekrar deneyin veya Wi-Fi şifresinin doğru bir şekilde girilip girilmediğini kontrol edin ";
            mcs_display_password        = "Parolayı göster";
            mcs_action_smart_config_wifi = "yapılandırma kılavuzu";
            mcs_wifi_invalid            = "Önce cep telefonunuzla Wi-Fi\'ye bağlanın ";
            mcs_phone_not_connect_wifi  = "Kablosuz ağ bağlı değil";
            mcs_prompt_check_connection = "Fotoğraf makineniz çevrimiçi değil, lütfen fotoğraf makinesinin fiziksel bağlantısını kontrol edin";
            mcs_wifi_cfg_ready          = "Hazır";
            mcs_reset_complete          = "Sıfırlandı tamamlandı";
            mcs_how_to_restore_factory_settings = "Fabrika ayarlarını geri yüklemek için: makinenin altındaki RESET deliğine 10 saniye basılı tutun ";
            mcs_forgetpass_action_wizard = "Lütfen RESET tuşunu bırakıldıktan 10 saniye sonra tekrar basın, cihazın fabrika ayarlarına dönesi için sesli komutları duyacaksınız. Yaklaşık 20 saniye bekleyin; kurtarma şifresi ‘admin’dir";
            mcs_prompt_check_device_connection = "Cihazınız çevrimdışıydı, lütfen cihazınızın fiziksel bağlantısını kontrol edin";
            mcs_prompt_select_device_connection = "Cihazınız çevrimiçi değil, lütfen İnternet bağlantısını kontrol edin";
            mcs_input_wifi_name         = "Lütfen Wifi adını girin";
            mcs_action_previous         = "Önceki";
            mcs_io_alert_range_hint     = "IO uyarı süresi 60 saniyeden az olmalıdır";
            mcs_io_alert_time           = "IO uyarı süresi (ları)";
            mcs_smart                   = "Akıllı";
            mcs_plan                    = "Plan";
            mcs_mute                    = "sessiz";
            mcs_wind_speed              = "Rüzgar hızı";
            mcs_one                     = "Birinci vites";
            mcs_two                     = "İkinci vites";
            mcs_three                   = "Üçüncü vites";
            mcs_purify_mode             = "Arındırma modu";
            mcs_video_list              = "Video listesi";
            mcs_wifi_cfg_restore_factory_settings = "Telefonunuzu cihazınıza yakın tutun; eğer Wi-Fi’ınız ayarlıysa, Reset tuşuna 1 sn boyunca basıp bırakın, cihaz otomatik olarak fabrika ayarlarına dönüp baştan başlayacaktır.";
            mcs_mask_settings           = "Maske Ayarı";
            mcs_notification_settings   = "Bildirim ayarları";
            mcs_alarm_settings          = "Alarm ayarı";
            mcs_motion_detection        = "Hareket algılama";
            mcs_io_alarm                = "I/O Alarm";
            mcs_connect_status          = "Bağlantı durumu";
            mcs_motion_notification     = "Hareket ve Bildirim";
            mcs_device_connected        = "Cihaz bağlı";
            mcs_start_spray             = "Püskürtmeye başla";
            mcs_available_network       = "Ağ kullanılamıyor, şebekeyi kontrol et";
            mcs_select_wifi_wizard      = "Lütfen önce Wifi ağını seçin";
            mcs_input_wifi_password     = "Wifi şifresi gireni";
            mcs_device_admin_password   = "Cihaz Yönetici Şifresi";
            mcs_device_guest_password   = "Cihazın Ziyaretçi Şifresi";
            mcs_user_admin_password     = "Hesap Yönetici Parolası";
            mcs_user_guest_password     = "Misafir hesap Şifresi";
            mcs_save_network_set        = "Ağ ayarlarını ve şifreyi kaydet";
            mcs_nickname_not_set        = "Kamera takma adı ayarlanmadı";
            mcs_current_wifi            = "Mevcut Wi-Fi";
            mcs_current_password_strength = "Geçerli şifre gücü";
            mcs_new_password_strength   = "Yeni şifre gücü";
            mcs_needs_to_open_the_DHCP  = "Yönelticinin DHCP (otomatik olarak IP\'yi al) işlevini açması gerekir, eğer girişim başarısız olursa, lütfen yöneticiyle iletişime geçin.";
            mcs_picture                 = "Resim";
            mcs_quality                 = "Kalite";
            mcs_size                    = "Boyut";
            mcs_guest_login             = "Misafir girişi";
            mcs_audio_and_video         = "Ses/Video";
            mcs_volume                  = "Hacim";
            mcs_smooth                  = "Pürüzsüz";
            mcs_clear                   = "Açık";
            mcs_handsfree               = "Eller serbest";
            mcs_headphone               = "Kulaklık";
            mcs_my                      = "Hesap";
            mcs_customer_service        = "Müşteri servisi";
            mcs_firefox_flash_uninstall = "Flash eklentisi mevcut değil, çözümü için bkz. https://support.mozilla.org/en-US/products/firefox/fix-problems/videos-sound-pictures-and-animations-dont-work";
            mcs_plug                    = "Eklentiler";
            mcs_plug_load               = "Yükleme Eklentileri";
            mcs_plug_load_refuse        = "Eklentileri yüklemeyin";
            mcs_plug_load_auto          = "Otomatik";
            mcs_option                  = "Seçenekler";
            mcs_option_ok               = "Onaylamak";
            mcs_voice_call_fails        = "Sesli arama başarısız oldu, lütfen şebekeyi kontrol edin";
            mcs_umounted_prompt         = "Kaldırın mı?";
            mcs_mounted_prompt          = "Yükle mi?";
            mcs_format_prompt           = "Whether to format?";
            mcs_repair_prompt           = "Onarmak ya da değil mi?";
            mcs_signup_prompt           = "Yeni mi?";
            mcs_wifi_connect_sucess_prompt = "Not: Wi-Fi iyi çalışıyor, şimdi ağ bağlantısını kesebilirsiniz ";
            mcs_manual_input_prompt     = "Cihaz kimliğini manuel olarak girin";
            mcs_qrscan_prompt           = "Bu uygulamanın kameranıza erişmesine izin vermediniz. \'Vimtag\' uygulamasını iPhone\'un \'ayarında\' - \'gizlilik\' - \'kamera\' rotasında bulabilirsiniz";
            mcs_select_network_style    = "Ağ bağlantı yöntemini seçin";
            mcs_push                    = "Duyuru";
            mcs_connect_power_prompt    = "Not: cihaz çevrimiçi değil, lütfen elektrik bağlantısının yapılmış olduğundan emin olun";
            mcs_fail_microphone         = "Mikrofona erişilemiyor";
            mcs_microphone_prompt       = "Bu uygulamanın mikrofonunuza erişmesine izin vermediniz. IPhone\'un \'gizlilik\' - \'mikrofon\' rotasına gidebilir, \'Vimtag\' uygulamasını bulabilir ve izin verebilirsiniz.";
            mcs_super_clear             = "1080P";
            mcs_high_clear              = "HD";
            mcs_standard_clear          = "Standart";
            mcs_fluent_clear            = "Pürüzsüz";
            mcs_deleting                = "Siliniyor olma";
            mcs_event                   = "Etkinlik";
            mcs_one_hour                = "1 saat";
            mcs_half_hour               = "30 dakika";
            mcs_five_min                = "5 dakika";
            mcs_category                = "Kategori";
            mcs_time_length             = "Süre";
            mcs_new                     = "Yeni";
            mcs_week_setting_prompt     = "Hafta ayarları boş olamaz";
            mcs_time_setting_prompt     = "Zaman ayarları boş olamaz";
            mcs_today                   = "Bugün";
            mcs_wifi_password           = "Wifi şifresi";
            mcs_register_prompt         = "Lütfen önce hesabınızı kaydettirin";
            mcs_click_login             = "Giriş yapmak için tıklayınız";
            mcs_not_login_prompt        = "Giriş yapmadınız.Lütfen giriş yapmak için buraya tıklayın!";
            mcs_product_presentation    = "Anasayfa";
            mcs_help_feedback           = "FAQ";
            mcs_help_information        = "FAQ";
            mcs_feedback                = "Geri bildirim";
            mcs_feedback_des            = "Uygulamamızı kullandığınız için teşekkürler, lütfen değerli görüşlerinizi bize bildirin";
            mcs_feedback_praise         = "Övgü";
            mcs_feedback_title_prompt   = "Geri bildirim başlığı";
            mcs_feedback_title          = "Lütfen başlığı girin (18 kelime veya daha az)";
            mcs_feedback_type_prompt    = "Sorun türleri";
            mcs_feedback_please_select  = "Lütfen türü seçin";
            mcs_feedback_select_option1 = "Arayüz problemi";
            mcs_feedback_select_option2 = "Kamera sorunu";
            mcs_feedback_select_option9 = "Diğer problemler";
            mcs_feedback_dec_prompt     = "Spesifik açıklama";
            mcs_feedback_dec            = "Lütfen yorumlarınızı girin";
            mcs_feedback_upload_photo   = "Fotoğrafları yükle";
            mcs_preview_pic             = "önizleme";
            mcs_Album                   = "Albüm arasından seçim yapın";
            mcs_Photograph              = "Fotoğraf";
            mcs_camera_unavailable      = "Fotoğraf makineniz kullanılamıyor";
            mcs_feedback_submit         = "Gönder";
            mcs_feedback_title_alert    = "Başlık kurallara uymuyor";
            mcs_feedback_type_alert     = "Lütfen doğru türü seçin";
            mcs_feedback_dec_alert      = "Lütfen yorumlarınızı girin";
            mcs_feedback_submit_success = "Başarıyla gönderin";
            mcs_feedback_submit_fail    = "Gönderme başarısız oldu";
            mcs_connect_wifi_prompt     = "Wifi\'yi bağla";
            mcs_cloud                   = "Bulut";
            mcs_demo                    = "Demo";
            mcs_shortest                = "En kısa";
            mcs_no_history              = "Geçmişi yok";
            mcs_download_pc_client      = "PC uygulamasını indirmek için tıklayınız";
            mcs_accounts_bind_email_exist = "Hesap posta kutusuna bağlandı";
            mcs_accounts_bind_email_busy = "Posta kutusu belirli bir hesaba bağlı";
            mcs_systemupdatetip_noversionnodetail = "Yeni sürüm yükseltme için kullanılabilir, ancak ayrıntı yoktur.";
            mcs_systemupdatetip_nodetail = "Detaylı bir açıklama yok";
            mcs_systemupdatetip_updatefrom = "Geçerli sürüm";
            mcs_systemupdatetip_updateto = "Güncelleştirebilir";
            mcs_systemupdatetip_sureforupdate = "Bu yükseltmeyi yapmak istediğinizden emin misiniz??";
            mcs_systemupdatetip_updatecontent = "Yükseltmenin ayrıntıları";
            mcs_operate_prompt          = "Lütfen diyagrama göre işlem yapın";
            mcs_operation_prompt        = "Çalıştırma istemi";
            mcs_qrcode_prompt_content   = "Cep telefonunuzdaki barkodu taramak için cihaz kamerasını kullanın.";
            mcs_qrcode_camera_distance  = "QR koduyla kamera arasındaki mesafe 12-14cm olmalıdır.";
            mcs_planvideo_datewizard    = "Lütfen tarihi ayarla";
            mcs_planvideo_timewizard    = "Lütfen saati ayarlayın.";
            mcs_planvideo_wizard        = "Lütfen tarih ve saati ayarlayın.";
            mcs_email_unbind            = "Hesap posta kutusuna bağlı değildi.";
            mcs_email_unmatch           = "Hesap posta kutusuna bağlı değildi.";
            mcs_email_inactive          = "E-posta etkinleştirilmedi.";
            mcs_email_binded            = "E-posta bağlıydı";
            mcs_user_binded_bymail      = "Kullanıcı bağlıydı";
            mcs_bind_email_fail         = "Posta kutusu bağlama başarısız oldu";
            mcs_diagnosis               = "Teşhis";
            mcs_delay                   = "Gecikme";
            mcs_packet_loss_rate        = "Packet Loss Rate";
            mcs_timezone_IDL            = "Uluslararası Tarih Hattı";
            mcs_timezone_China          = "Çin";
            mcs_timezone_Midway         = "Midway Adaları";
            mcs_timezone_Niue           = "Niue Adası";
            mcs_timezone_Samoa          = "Amerikan Samoası";
            mcs_timezone_Aleutian       = "Aleutian Adaları";
            mcs_timezone_Hawaii         = "Hawai Adaları";
            mcs_timezone_Alaska         = "Alaska";
            mcs_timezone_PSTUSCanada    = "PST(US&Canada)";
            mcs_timezone_Arizona        = "Arizona";
            mcs_timezone_MSTUSCanada    = "Mountain Standard Time(US&Canada)";
            mcs_timezone_CSTUSCanada    = "Central Standard Time(US&Canada)";
            mcs_timezone_ESTUSCanada    = "Eastern Standard Time(US&Canada)";
            mcs_timezone_ASTCanada      = "AST(Canada)";
            mcs_timezone_Newfoundland   = "Newfoundland";
            mcs_timezone_Brasilia       = "Brasilia";
            mcs_timezone_BuenosAires    = "Buenos Aires";
            mcs_timezone_Santiago       = "Santiago";
            mcs_timezone_Noronha        = "Noronha";
            mcs_timezone_SouthGeorgia   = "South Georgia";
            mcs_timezone_Azores         = "Azores";
            mcs_timezone_CapeVerde      = "Cape Verde";
            mcs_timezone_London         = "London";
            mcs_timezone_Lisbon         = "Lisbon";
            mcs_timezone_Dublin         = "Dublin";
            mcs_timezone_Berlin         = "Berlin";
            mcs_timezone_Amsterdam      = "Amsterdam";
            mcs_timezone_Brussels       = "Brussels";
            mcs_timezone_Budapest       = "Budapest";
            mcs_timezone_Madrid         = "Madrid";
            mcs_timezone_Paris          = "Paris";
            mcs_timezone_Rome           = "Rome";
            mcs_timezone_Sarajevo       = "Sarajevo";
            mcs_timezone_Cairo          = "Cairo";
            mcs_timezone_Amman          = "Amman";
            mcs_timezone_Beirut         = "Beirut";
            mcs_timezone_Istanbul       = "Istanbul";
            mcs_timezone_Jerusalem      = "Jerusalem";
            mcs_timezone_Athens         = "Athens";
            mcs_timezone_Baghdad        = "Baghdad";
            mcs_timezone_Riyadh         = "Riyadh";
            mcs_timezone_Qatar          = "Qatar";
            mcs_timezone_Moscow         = "Moscow";
            mcs_timezone_Tehran         = "Tehran";
            mcs_timezone_Baku           = "Baku";
            mcs_timezone_Dubai          = "Dubai";
            mcs_timezone_Tbilisi        = "Tbilisi";
            mcs_timezone_Kabul          = "Kabul";
            mcs_timezone_Karachi        = "Karachi";
            mcs_timezone_Yekaterinburg  = "Yekaterinburg";
            mcs_timezone_Maldives       = "Maldives";
            mcs_timezone_Calcutta       = "Calcutta";
            mcs_timezone_Colombo        = "Colombo";
            mcs_timezone_Katmandu       = "Katmandu";
            mcs_timezone_Almaty         = "Almaty";
            mcs_timezone_Dhaka          = "Dhaka";
            mcs_timezone_Omsk           = "Omsk";
            mcs_timezone_Thimbu         = "Thimbu";
            mcs_timezone_Rangoon        = "Rangoon";
            mcs_timezone_Bangkok        = "Bangkok";
            mcs_timezone_Jakarta        = "Jakarta";
            mcs_timezone_Vientiane      = "Vientiane";
            mcs_timezone_Harbin         = "Harbin";
            mcs_timezone_Shanghai       = "Shanghai";
            mcs_timezone_Hongkong       = "Hong Kong";
            mcs_timezone_Singapore      = "Singapur";
            mcs_timezone_Taipei         = "Taipei";
            mcs_timezone_Ulaanbaatar    = "Ulaanbaatar";
            mcs_timezone_Perth          = "Perth";
            mcs_timezone_Seoul          = "Seoul";
            mcs_timezone_Tokyo          = "Tokyo";
            mcs_timezone_Darwin         = "Darwin";
            mcs_timezone_Magadan        = "Magadan";
            mcs_timezone_Vladivostok    = "Vladivostok";
            mcs_timezone_Guam           = "Guam";
            mcs_timezone_Sydney         = "Sydney";
            mcs_timezone_Canberra       = "Canberra";
            mcs_timezone_Melbourne      = "Melbourne";
            mcs_timezone_Queensland     = "Queensland";
            mcs_timezone_LordHowe       = "Lord Howe";
            mcs_timezone_Guadalcanal    = "Guadalcanal";
            mcs_timezone_Fiji           = "Fiji";
            mcs_timezone_Auckland       = "Auckland";
            mcs_timezone_Apia           = "Apia";
            mcs_timezone_Fakaofo        = "Fakaofo";
            mcs_timezone_Tongatapu      = "Tongatapu";
            mcs_timezone_Kiritimati     = "Kiritimati";
            mcs_connect_timeout         = "Bağlantı zaman aşımı";
            mcs_share                   = "Paylaş";
            mcs_share_prompt_start      = "Erişebilirsiniz";
            mcs_share_prompt_end        = "Aynı ağdaki pc veya android telefon tarayıcı ile videoyu indirmek için";
            mcs_share_note              = "Lütfen indirme sayfasından ayrılmayın";
            mcs_video_size              = "Boyut";
            mcs_video_duration          = "Süre";
            mcs_my_folder               = "Klasörüm";
            mcs_account_no_contain      = "Hesapta aşağıdakileri içermiyor";
            mcs_edit                    = "Düzenle";
            mcs_video_number            = "Video";
            mcs_no_local_video          = "Kayıt yok";
            mcs_empty_folder            = "Klasör boş";
            mcs_no_history_record       = "Kayıt yok";
            mcs_no_local_record         = "Yerel kaydınız boş";
            mcs_empty_cloud_list_first  = "Kamera listeniz boş";
            mcs_empty_cloud_list_second = "Sol üst köşeyi tıklayın";
            mcs_empty_cloud_list_third  = "Bir cihaz eklemek için";
            mcs_empty_local_list_first  = "Yerel listeniz boş";
            mcs_empty_local_list_second = "Dene";
            mcs_empty_local_list_third  = "Ekranı aşağı doğru çekin";
            mcs_empty_local_list_forth  = "Yenile";
            mcs_empty_local_list_fifth  = "LAN içindeki aygıtları ara";
            mcs_record_prompt           = "Kayıt \" Hesap-> Klasörüm \" de görebilir";
            mcs_record_download_prompt  = "Dosyayı \" Klasörüm \"\'de izleyebilir";
            mcs_register_buton_start    = "Hesap yok mu?";
            mcs_register_buton_end      = "Kaydolmak için dokunun";
            mcs_product                 = "Ürün";
            mcs_user_or_password_invalid = "Geçersiz kullanıcı adı veya şifre";
            mcs_share_video_prompt      = "Kablosuz olmayan ağ kullanıyorsunuz, lütfen tekrar paylaşmak için lütfen kablosuz ağa geçin.";
            mcs_download_video_prompt   = "WiFi olmayan ağ kullanıyorsunuz, indirme işlemi veri kullanma ücreti doğurabilir, devam edilsin mi?";
            mcs_hd_720P                 = "720P";
            mcs_hd_960P                 = "960P";
            mcs_hd_1080P                = "1080P";
            mcs_normal                  = "Normal";
            mcs_common_problem          = "Sık karşılaşılan sorun";
            msc_enter_comment           = "Yorumlarınızı girin";
            msc_description             = "Açıklama";
            mcs_parameter               = "Parametre";
            mcs_help_and_feedback       = "Yardım ve geribildirim";
            mcs_personal_center         = "Kişisel Merkez";
            mcs_version                 = "Sürüm";
            mcs_language                = "Dil";
            mcs_new_user                = " Ben yeni bir kullanıcıyım";
            mcs_have_account            = "Hesabım var";
            mcs_try_it                  = "Deneyin";
            mcs_sign_up_now             = "Kaydol";
            mcs_input_confirm_password  = "Şifreyi Onayla";
            mcs_warranty_registration   = "Garanti kaydı";
            mcs_get_more_cameras        = "Daha fazla kamera alın";
            mcs_user_inactive           = "Kullanıcı aktif değil";
            mcs_format_options          = "Biçimlendir";
            mcs_slide_screen            = "Video açısını ayarlamak için ekranı kaydırın";
            mcs_zoom_in_screen          = "Daha fazla bilgi görmek için yakınlaştırın.";
            mcs_pause                   = "Duraklat";
            mcs_source                  = "Kaynak";
            mcs_magnetic                = "Kapı sensörü";
            mcs_sos                     = "SOS";
            mcs_input_download_path     = "İndirme yolu";
            mcs_download_path_name_error = "İndirilen yol adı yalnızca harfler (a-z, A-Z) veya sayısal (0-9)";
            mcs_active                  = "Aktif";
            mcs_out                     = "Dışarı";
            mcs_quiet                   = "Sessiz";
            mcs_scenes                  = "Sahneler";
            mcs_accessory               = "Aksesuar";
            mcs_quiet_mode              = "Sessiz mod";
            mcs_active_mode             = "Aktif mod";
            mcs_out_mode                = "Çıkış modu";
            mcs_add_accessory           = "Aksesuar Ekle";
            mcs_accessory_type          = "Aksesuar Türü";
            mcs_add_successfully        = "Başarıyla Eklendi";
            mcs_set_scene               = "Aksesuarınız henüz sahneyi oluşturmadı, lütfen tıklayın.";
            mcs_to_set                  = "Kurmak";
            mcs_add_accessory_button    = "Kırmızı ışık yanıp söndüğünü gördüğünüzde, tamamlamak için düğmesine basın";
            mcs_auto_monday             = "Pazartesi";
            mcs_auto_tuesday            = "Salı";
            mcs_auto_wednesday          = "Çarşamba";
            mcs_auto_thursday           = "Perşembe";
            mcs_auto_friday             = "Cuma";
            mcs_auto_saturday           = "Cumartesi";
            mcs_auto_sunday             = "Pazar";
            mcs_search                  = "Arama";
            mcs_format_input            = "Sabit sürücüyü biçimlendirme";
            mcs_get_accessory_failed    = "Aksesuar alımı başarısız";
            mcs_get_scene_failed        = "ahne alma başarısız";
            mcs_search_failed           = "Arama başarısız";
            mcs_add_failed              = "Eklenemedi";
            mcs_ethernet_connect        = "Ethernet";
            mcs_action_click_retry      = "Tekrar denemek için tıklayın";
            mcs_wifi_config_failure_detail = "Veya deneyebilirsin";
            mcs_qrcode_connect          = "QR kodu bağlantısı";
            mcs_close_sound_prompt      = "Ses, WiFi bağlantısı için yararlıdır. Telefonunuzun ses seviyesini artırın ve telefonun hoparlörünü kameranın mikrofonuna yakın tutun.";
            mcs_qrcode_prompt_title     = "Lütfen Şekil l\'de gösterildiği gibi çalışın.";
            mcs_qrcode_prompt_detail    = "QR kodunu telefon ekranınıza kameranın önüne yaklaşık 10 ila 12 inç koyun. ";
            mcs_select_wifi_prompt      = "Kablosuz bağlantı";
            mcs_select_ethernet_prompt  = "Sadece ethernet kablosuyla bağlanabilirler";
            mcs_enter_config_mode_prompt = "Kırmızı yanıp sönüp ç kez yanıp sönüp yeşil renkte yanıp sönüp bitmediğini görmek için Kablosuz Ağ Durum Işığını kontrol edin. Evet ise, kurulum işlemine devam etmek için \'İleri\' düğmesine basın. Değilse, kameranın altındaki \'Sıfırlama\' düğmesine basın. Daha sonra Kablosuz Ağ Durum Işığını tekrar kontrol edin.";
            mcs_no_enter_config_mode    = "Yapılandırma modunda değil";
            mcs_record_time             = "Kayıt süresi";
            mcs_stop_search             = "Aramayı durdur";
            mcs_smart_wifi_setup        = "Akıllı kablosuz kurulum";
            mcs_ethernet_setup          = "Ethernet kablosu kurulumu";
            mcs_wifi_config_restore_start = "Cihazınızın açık olduğundan emin olun";
            mcs_wifi_config_restore_end = "Sıfırlama deliğini bir saniyeliğine aramak için pimi kullanın, cihaz 60 saniye sonra geri yüklenir ve tekrar başlar, ardından yapılandırma moduna otomatik olarak girer.";
            mcs_Sense_schedule          = "Sense Schedule";
            load_succeed                = "Başarıyla yükle";
            load_fail                   = "Yükleme başarısız";
            refresh_succeed             = "Başarıyla yenile";
            refresh_fail                = "Yenilendi başarısız oldu";
            mcs_ensure_dev_power        = "1)Cihazınızın açık olduğundan emin olun";
            all_refresh_complete        = "Tüm veriler yenilenir";
            mcs_synchronize             = "Senkronize et";
            mcs_synchronize_detail      = "Aşağıdaki cihazlar senaryo modu ve ayarları ile uyumlu değil. Çalışması için senkronize edilmesi gerekir.";
            mcs_Sense_Schedule_Set      = "Sahne takvim ayarı";
            mcs_Sence_Schedule_detail   = "Otomatik senaryo modunu etkinleştirirseniz, sistem sahneyi senaryoya göre farklı koşullar altında otomatik olarak değiştirecektir";
            mcs_Scene_set               = "Sahne ayarları";
            mcs_Scene_set_detail        = "Senaryo modunu etkinleştirirseniz, cihaz bir sonraki sayfada senaryo modu bağlamında görünecektir";
            mcs_send_message            = "Mesaj gönder";
            mcs_start_recording         = "Kayda başla";
            mcs_start_capture           = "Yakala başlayın.";
            mcs_turn_on_video           = "Ayrılma modunda kayıt işlemine devam etmek için lütfen kayıt işlevini açın.";
            mcs_search_press_button     = "Yavaş yavaş, serbest bırakıldıktan sonra 1 saniye göstergesi yanıp söner geri düğmesine basın";
            mcs_add_fail1               = "Cihaz ekleme işlemi iptal edildi, lütfen tekrar eklemek için lütfen tıklayın.";
            mcs_add_fail2               = "Cihaz ekleme işlemi iptal edildi, lütfen tekrar eklemek için lütfen tıklayın.";
            mcs_recording_duration      = "Kayıt süresi";
            mcs_settings_unsaved        = "Ayarınız kaydedilmedi";
            mcs_want_save               = "Kaydetmek istiyor musun";
            mcs_camera                  = "Kamera";
            mcs_router                  = "Yönlendirici";
            mcs_start_up                = "Başlamak";
            mcs_cancle_add              = "Kısa basış nedeniyle cihaz ekleme işlemi iptal edildi.";
            mcs_visit_photo_fail        = "Albüm ziyaret edilemedi";
            mcs_camera_cell             = "Kamera";
            mcs_myphoto                 = "Benim fotoğrafım";
            mcs_select_photo            = "Albümü seçin";
            mcs_app_new_version         = "Yeni sürüm";
            mcs_update_new_version      = "Şimdi Yükselt";
            mcs_app_new_version_prompt  = "Uygulamanın yeni bir sürümü var, şimdi seçin ve güncelleyin.";
            download_failed             = "İndirilemedi.";
            mcs_connect_server_prompt   = "WiFi bağlı, sunucuya bağlanma";
            mcs_local_search            = "Yerel arama";
            mcs_choose_device_type      = "Aygıt türünü seçin.";
            mcs_wifi_state              = "Not: WIFI normal çalışıyor; şimdi ağ kablosunu çıkarabilirsiniz (Kabloyu çektiğinizde cihaz çevrimdışı görünebilir, lütfen 20 saniye bekleyin ve otomatik olarak çevrimiçi olur)";
            mcs_sweep                   = "Süpür";
            mcs_wifi_config_tip         = "Yönlendiriciler ve WIFI vardır, kablolama sorununu önleyebilirsiniz.";
            mcs_ethernet_config_tip     = "Ağ kablosunu takmak için yönlendirici yok.";
            mcs_ethernet_connect_step_one = "İlk adım: güç hattının 1 güç kaynağı soketi ile bağlantılı olduğundan emin olmak için 2 ";
            mcs_ethernet_connect_step_two = "İkinci adım: ağ kablosu 4 kullanarak yönlendiriciyi fotoğraf makinesine bağlayın";
            mcs_sweep_qrcode_tip        = "Fotoğraf makinesini QR kodunu taramak için telefon ekranına yöneltmek için yaklaşık 12 inçlik bir mesafeyi koruyun.";
            mcs_sound_config_tip        = "Wi-Fi bağlantısına yardımcı olması için sesi açın. (Ayrıca kapatmayı seçebilir)";
            mcs_sosalt                  = "%@ : SOS alert(%@)";
            mcs_dooralt                 = "%@ : Door sensor alert(%@)";
            mcs_wifi_config_restore     = "W i-FI reset düğmesine 1 saniye sonra kalkışı basın ses ipucu lütfen dinleyin \"WiFi yapılandırma moduna cihazı. \"";
            mcs_voice_remind_heard      = "Sesli komut istemini zaten duydum";
            mcs_netWork_prompt          = "Şebeke istemleri";
            mcs_con_netWork             = "Mobil veri şimdi ağ bağlantısı için kullanılır, çok fazla veri trafiği tüketebilir, ağ seçim arayüzüne geçmek ister misiniz?";
            mcs_no_netWork              = "Şu anda ağ bağlantısı yok, ağ ayarları arayüzüne atla mı?";
            mcs_exception_des           = "Son bir kez uygulamanız olağandışı şekilde çıktı, sunucuya bir hata raporu göndermek istiyor musunuz?";
            mcs_exception_prompt        = "Anormal istem";
            mcs_erro_diagnosis          = "Hata teşhisi";
            mcs_erro_log_des            = "Uygulama yakın bir zamanda bir hata günlüğünü kaydedin, hata günlüğünü yüklemek için gönderme seçeneğini seçin, işbirliğiniz için teşekkür ederiz!";
            mcs_is_submitting           = "Gönderiliyor";
            mcs_firmware_version        = "Bellenim sürümü";
            mcs_device_assembly         = "1.Güç adaptörü 2.Güç yuvası 3.Ethernet yuvası 4.Ethernet 5.Connector ";
            mcs_forgetpass_action_wizard_old = "Bir saniye süreyle RESET deliğine basın ve ardından bırakın, cihaz fabrika ayarlarına geri dönecek ve 60 saniye sonra otomatik olarak yeniden başlayacaktır. İlk şifre admin\'tir.";
            mcs_device_assembly_mipc    = "1.Güç adaptörü 2.Güç yuvası 3.Ethernet yuvası 4.Ethernet";
            mcs_device_connect_power_prompt = "Cihaz çevrimiçi değil, lütfen cihazınızı açın. Kırmızı ışığın yanıyorsa, cihaz başlatılmış demektir.";
            mcs_lights_sound            = "Işıklar yanıyor.";
            mcs_connect_power           = "Bağlantı gücü";
            mcs_search_magnetic         = "Gösterildiği gibi, kombine manyetik kapı ve yavaş yavaş gösterge yanıp söner, yayımlanmasından sonra 1 saniye süreyle yan düğmesine basın";
            mcs_add_magnetic            = "Open the door sensor and close it.The device can be added when the light flashes quickly";
            mcs_already_downloaded      = "İndirildi";
            mcs_my_order                = "Benim siparişim";
            mcs_auto_mode               = "Otomatik mod";
            mcs_new_small               = "Küçük";
            mcs_new_half                = "Yarım";
            mcs_new_normal              = "Normal";
            mcs_new_hd                  = "HD";
            mcs_scene_now               = "Şu anki sahne";
            mcs_please_install_wechat   = "Lütfen wechat\'ı yükle";
            mcs_wechat_not_support      = "Wechat sürümü desteklenmiyor, lütfen güncelleyin.";
            mcs_motion_alert            = "Hareket uyarısı";
            mcs_io_alert                = "I/O alarm";
            mcs_valid_user_name         = "1. Adım: Geçerli kullanıcı kimliğini girin";
            mcs_binding_mailbox         = "2. Adım: E-postanızı bağlama için giriniz";
            mcs_send_mailbox_succuess_prev = "Zaten bağlı bir e-posta adresine bir e-posta gönderdik";
            mcs_send_mailbox_succuess_next = "Parolayı almak için gönderilen e-posta, lütfen kontrol et.";
            mcs_all_image               = "Tüm resim";
            mcs_unavailable_image       = "Resim mevcut değil. Lütfen tekrar seçin.";
            mcs_set_nickname            = "Takma adı ayarla";
            mcs_search_timeout          = "Arama zaman aşımı, lütfen tekrar aramak için tıklayın.";
            mcs_screen_size             = "Ekran ayarları";
            mcs_screen_reset            = "Ayarlama başarılı. Etkinleştirmek için yeniden başlatın.";
            mcs_wifi_network_prompt     = "Yönlendiricinin 5GHz bant yönlendiricisi olup olmadığını kontrol edin, fotoğraf makinesi 2,4 GHz bant yönlendiricisine bağlanmalıdır.";
            mcs_fault_diagnosis         = "ağ Tanılama";
            mcs_sever_diagnosis         = "Normal olarak kullanılamadı. Sunucu hatasından kaynaklanıyor olabilir.";
            mcs_select_problem          = "Lütfen bir soru seçin";
            mcs_connot_lonin            = "Oturum açılamıyor.";
            mcs_connot_play             = "Oynayamaz";
            mcs_add_problems            = "Ek sorunlar";
            mcs_encounterer_problems    = "Lütfen sorununuzu açıklayın";
            mcs_diagnostic_network      = "Teşhise başla";
            mcs_network_diagnostic_prompt = "Arıza teşhisini giriniz, sorunlarınızı daha iyi çözmemize yardımcı olabilir. Tanı için birkaç dakika sürebilir.";
            mcs_network_diagnostic      = "Arıza teşhisi";
            mcs_connecting_server       = "Sunucuya baglanıyor";
            mcs_diagnostic_process_prompt = "Teşhis işlemi birkaç dakika alabilir. Tanı sırasında herhangi bir işlem yapmayın, ancak istediğiniz zaman durdurabilirsiniz.";
            mcs_diagnostic_results      = "Teşhis sonuçları";
            mcs_diagnostic_results_received = "Tanı tamamlandı ve sonuçlar alındı.";
            mcs_diagnostic_results_prompt = "Bu teşhise katıldığınız için teşekkür ederiz. Sonuçlar, sorununuzu en kısa zamanda çözmemize yardımcı olacaktır";
            mcs_results_no_abnormality  = "Sonuçta gösterildiği gibi yanlış bir şey yoktur.";
            mcs_no_abnormality_prompt   = "Bu tanıda herhangi bir anormallik saptanmadı. Gelişmiş tanıyı seçebilir, günlük toplama işlevini başlatabilir, sorunlarınızı daha iyi çözmemize yardımcı olur.";
            mcs_continue_diagnosis      = "Ileri tanı";
            mcs_diagnosis_connot_sent   = "Teşhis sonuçları gönderilemez.";
            mcs_email_sends             = "E-posta gönderildi.";
            mcs_email_sends_prompt      = "Tanı sonuçlarını e-posta ile göndermeniz, sorununuzu en kısa zamanda çözmemize yardımcı olacaktır.";
            mcs_diagnosis_send          = "Gönderildi";
            mcs_diagnosis_email         = "E-posta";
            mcs_send_successful         = "Başarıyla gönderildi";
            mcs_diagnosis_type_select_prompt = "Lütfen teşhis türünü seçin";
            mcs_stop_diagnosis          = "Tanı durdurmak";
            mcs_detail_diagnosis_prompt = "Gelişmiş tanı, \"Cihazlar \" sayfasından kapatabilirsiniz.";
            mcs_detail_diagnosis_stop_prompt = "Gelişmiş teşhis devam ediyor ve istediğiniz zaman iptal edebilirsiniz.";
            mcs_exit_detail_diagnosis   = "Gelişmiş teşhis devam ediyor, durdurmak istiyor musunuz?";
            mcs_network_connection_unavailable = "Ağ ulaşılamaz.";
            mcs_Failed_connect_Internet = "İnternet\'e bağlanılamadı.";
            mcs_connect_internet_note   = "İnternet\'e bağlanmanız gerekiyorsa, lütfen aşağıdakiler gibi not edin:";
            mcs_connect_internet_detail_first = "Telefonunuzdaki kablosuz ayarları kontrol ederek mevcut kablosuz ağın olduğunu öğrenin.";
            mcs_connect_internet_detail_second = "Telefonunuzun mobil şebekeye bağlı olup olmadığını kontrol edin ve telefonunuzun iyi çalıştığından emin olun.";
            mcs_connect_wifi_note       = "Kablosuz LAN\'a erişiminiz varsa, o zaman:";
            mcs_connect_wifi_detail     = "Lütfen, kablosuz erişim noktanızın İnternet\'e bağlı olup olmadığını veya erişim noktasının aygıtınızın yerel ağa erişmesine izin verip girmediğini kontrol edin.";
            mcs_device_or_phone_time_zone_not_equals_please_select = "Cihazın geçerli saat dilimi telefonun saat dilimine uymuyor. Lütfen doğru bir saat dilimi seçin.";
            mcs_phone_timezone          = "Telefon saat dilimi.";
            mcs_timezone_change         = "Saat Dilimini Değiştir";
            mcs_mail_send               = "E-posta gönderildi";
            mcs_yes_verif               = "Evet";
            mcs_no_verif                = "Yok hayır";
            mcs_camera_found_new_version_y_n_upgrade = "Kamera ürün yazılımının yeni bir sürümünü bulmuştu. Gidip güncellemek ister misiniz?";
            mcs_auto_adapt_split_screen = "Kendini uyarlama.";
            mcs_four_split_screen       = "Dört bölmeli ekran";
            mcs_nine_split_screen       = "Dokuz bölmeli ekran.";
            mcs_twelve_split_screen     = "On iki bölünmüş ekran.";
            mcs_not_connection_server   = "Sunucuya bağlanılamıyor.";
            mcs_more_options            = "Daha";
            mcs_bind_email_prompt       = "Hesap güvenliği için lütfen posta kutunuzu bağlayın.";
            mcs_login_now               = "Şimdi giriş yap.";
            mcs_device_connect_power    = "1.Güç adaptörü 2.Güç yuvası";
            mcs_device_connect_ethernet = "1.Ağ bağlantı noktası 2. Kablo";
            mcs_device_connect_ethernet_prompt = "Ağ kablosunun bir ucunu ağa, diğer ucunu yönlendiriciye bağlayın. Işık yeşil renkte yanıp söndüğünü gördüğünüzde kablo bağlantısı tamamlandı.";
            mcs_pwd_format              = "Şifre formatı: 8 ila 16 karakter, en az üç tür \'sayı, harf ve özel semboller\' içerir.";
            mcs_client_new              = "Müşteri";
            mcs_user_guide              = "Kullanım kılavuzu";
            mcs_ebitcam_download_describe = "EBITCAM, bulut ip kamera ile kullanıcıların canlı videoyu her zaman ve her yerde görüntülemesine olanak tanıyan bir bulut izleme hizmeti uygulamasıdır. Net ve pürüzsüz görüntüleme deneyimi sunuyoruz. Akıllı kontrol, güvenlik ve sevgi arzusunu tatmin edecek. Tereddüt etmeyin ve indirin!";
            mcs_mipc_download_describe  = "MIPC, bulut ip kamera ile kullanıcıların canlı videoyu her zaman ve her yerde görüntülemesine olanak tanıyan bir bulut izleme hizmeti uygulamasıdır. Net ve pürüzsüz görüntüleme deneyimi sunuyoruz. Akıllı kontrol, güvenlik ve sevgi arzusunu tatmin edecek. Tereddüt etmeyin ve indirin!";
            mcs_guide_download          = "Manuel indir";
            mcs_password_admin          = "Şifre yönetimi";
            mcs_already_read            = "Okudum ve kabul ettim.";
            mcs_privacy_policy          = "Gizlilik Politikası.";
            mcs_not_agree_privacy_policy = "Gizlilik politikasını kabul etmediniz.";
            mcs_reload                  = "Yeniden yükle.";
            mcs_start_download          = "İndirmeye Başla";
            mcs_video_play_fail         = "Video oynatma başarısız";
            mcs_download_app_tips       = "Ayrıca PC istemci kullanarak deneyebilirsiniz";
            mcs_memo                    = "bellek";
            mcs_fencer                  = "kılıç ustası";
            mcs_focus                   = "odak";
            mcs_mini                    = "mini";
            mcs_shield                  = "küçük Kalkan";
            mcs_snowman                 = "kardan adam";
            mcs_device_type             = "cihaz Türü";
            mcs_connect_device_wifi     = "Kamera WiFi 5GHz bant desteklemiyor";
            mcs_send_diagnosis_results  = "Tanı gönderiliyor ...";
            mcs_local_file              = "yerel Dosya";
            mcs_local_device            = "yerel Cihaz";
            mcs_export_sd_data          = "İhracat SD kart verileri";
            mcs_shaking                 = "Baş Serisi Hareketli";
            mcs_outdoor                 = "Açık Box Kamera";
            mcs_card                    = "Kart makine serisi";
            mcs_wifi_connection         = "WiFi bağlantı";
            mcs_home_mode               = "Ev modu";
            mcs_away_home_mode          = "UZAK Modu";
            mcs_auto_switch_mode        = "otomatik olarak geçiş";
            mcs_select_scene_mode       = "Bir profil seçiniz";
            mcs_7x24_hours_prompt       = "Açık 7x24 (h) Kayıt";
            mcs_all_day_recording       = "gün Video";
            mcs_home_mode_prompt        = "Ev modu: Kapat Tüm ekipman alarmları";
            mcs_away_home_mode_prompt   = "Modunda Çıkışı: tüm ekipman alarmları çevirin";
            mcs_at_home                 = "evde";
            mcs_away_home               = "dışarı";
            mcs_set_timezone_prompt_start = "Sizin saat dilimidir";
            mcs_set_timezone_prompt_end = "Set Lütfen \"Tarih / Saat \" anahtarlama bölgesi";
            mcs_set_wifi_remind_head    = "Aşağıdaki sorunlar kamerayı internete neden olabilir, bunu önlemek için tavsiye edilir başarısız";
            mcs_set_wifi_remind_1       = "Eğer açık WIFI yer ovmak ağını kontrol kamera neden olabilir, bu ayar normal ağ olamaz. Geçici anti-ovmak ağını kapatabilirsiniz, ardından kamera başarılı ağ yönlendirici ayarları restore edilebilir";
            mcs_set_wifi_remind_2       = "Evinizde bir çift bant yönlendirici, kamera WIFI 5GHz bandına bağlı olup olmadığını WIFI kontrolü ise, WIFI 2.4GHz bandı kameranın bağlı bildirin lütfen";
            mcs_set_wifi_remind_3       = "Kamera WPA / WPA2 kurumsal sınıf WIFI desteklemiyor, başka WIFI seçiniz";
            mcs_set_wifi_remind_4       = "Ev WIFI köprülü ise, köprünün çünkü ağ, çok kararsız olmayan köprü WIFI bağlantısı tavsiye edilir olduğunu neden olabilir";
            mcs_set_wifi_remind_5       = "Kamera WIFI için gereksinimler nelerdir";
            mcs_record_save_to_my_file  = "Video benim dosyalara kaydedilir";
            mcs_view_now                = "Şimdi görüntüle";
            mcs_search_sos_strat        = "Gösterildiği gibi, alt düğmeye basma";
            mcs_search_sos_end          = "Bir saniye, cihaz göstergesi yanıp söner";
            mcs_search_magnetic_start   = "Gösterildiği gibi, kombine manyetik kapı, yan düğmesine basın";
            mcs_search_magnetic_end     = "Bir saniye, cihaz göstergesi yanıp söner";
            mcs_adding                  = "ekleme";
            mcs_record_empty_set_sd     = "Video geçmişini saklamak bir SD kart takın";
            mcs_video_play_offline      = "Cihaz çevrimdışı";
            mcs_video_play_network_fail = "Ağ bağlantısı başarısız, daha sonra tekrar deneyin";
            mcs_alert_notify_guide1     = "[Orijinal] hareket algılama işlemi [tarafından], [Ek] profili ayarlarını geçirmek için";
            mcs_alert_notify_guide2     = "Aşağıdaki gibi operasyon:";
            mcs_alert_notify_guide3     = "[sahne], sen, ev silahsızlandırılması modunda açmak gerekir kurma modunu söndürmeye gerekir;";
            mcs_alert_notify_guide4     = "[Aksesuarlar] - [Aksesuarlar listesi] - [Hareket Algılama] modu ev modu, video kayıt ve diğer fonksiyonları Alarmı kapatmak, alarm, video, fotoğraf, IO alarm fonksiyonu dışında açık.";
            mcs_plan_protect_guide1     = "[Orijinal] planı kurma işlemi [senaryo] göç";
            mcs_plan_protect_guide2     = "Açık profiller, otomatik geçiş [senaryo] seçiniz;";
            mcs_plan_protect_guide3     = "seçmek";
            mcs_plan_protect_guide4     = ", Silahlanma dönemi için ihtiyacı (örneğin: Salı, 7: 00-18: 00) modunu yola; Tamam sonra kaydetmek ve AYARLAR sekmesine dönün;";
            mcs_plan_record_guide       = "[Kayıt] \'yu modu kayıt fonksiyonu açın.";
            mcs_plan_record_guide1      = "[Kaydı planla] planı kurma işlemi [Kayıt] göç";
            mcs_plan_record_guide2      = ", Süreyi kaydetmek için ihtiyaç (örn: Sal 7: 00-18: 00) modunu yola; Tamam sonra kaydetmek ve AYARLAR sekmesine dönün;";
            mcs_forgetpass_action_prompt = "Cihaz 10 saniye yayımlanmasından sonra Reset deliği Reset tuşuna Lütfen, kızılötesi ışık ve fabrika ayarlarını geri yüklemek için donatım";
            mcs_cloud_box               = "bulut Kutusu";
        }/* tr */
    }/* mcs_init_langs */

    /* ----------------mining.lang.strings.end-------do-not-change-this-line------------------- */

    //invariant parameter
    g_client_min_w = 800;
    g_client_min_all_w = 800 + 100;
    g_client_min_h = 450;
    g_client_min_all_h = 450 + 115;
    g_client_division_w = 800 + 420;
    g_client_division_h=450 + 115;
    g_panel_box_w=180;
    g_panel_box_max_w=190;
    g_menu_box_h=35;
    g_control_box_h=52;
    g_status_bar_h=15;

    //variable parameter
    g_cntr_content_w=0;
    g_cntr_content_h=0;
    g_panel_box_all_w=0;
    g_panel_box_offset=3;
    g_panel_box_inner_h=0;
    g_panel_box_h=0;
    g_panel_box_all_h=0;

    g_device_list_inner_h=0;
    g_main_window_w=0;
    g_main_window_h=0;

    //mark
    g_now_lang="ch";//Indicates that the current language
    g_old_browser_version=0;//Indicates whether the old version of the browser IE7-IE8
    g_browser_IE6_version=0;//Is IE6
    g_browser_IE7_version=0;//Is IE7
    g_browser_IE67_version=0;//Is IE6 or IE7
    g_input_read_only="disabled";
    g_login_waiting_flag=0;
    g_is_auto_login=mlocal_storage.get("auto_login")?1:0;//auto login
    g_register_waiting_flag=1;
    g_view_split_count=1;
    g_playback_split_count=1;
    g_view_pages=1;
    g_playback_pages=1;
    g_now_view_page=1;
    g_now_playback_page=1;
    g_slider_start=0;
    g_slider_end=0;
    g_slider_data=0;
    g_now_page="home";//Now page(Home、Playback、Information)
    g_device_list_switch="open";//Device list show switch
    g_ptz_control_switch="open";//Home page control show switch
    g_select_inner_window="none";
    g_select_inner_ipc="";
    g_select_device_ipc = "";//current select device ipc's sn
    g_login_status="";//Keeping the login is ipc or user
    g_plug_is_missing=0;
    g_is_playing=0;//Home page is playing now
    g_is_play_back=0;//Playback page is playing
    g_is_play_back_download=0;//Playback page is downloading
    g_m_speaker_is_mute=1;
    g_network_environ="";//Representation within the network access or access to external networks directly connected to the difference between the non-directly connected
    g_device_list_obj={};                             //Store all node data (including MS parent); as a query using specific equipment content
    g_device_list_link=createLinkList();              //All nodes store the displayed list; as generating equipment list with a
    g_notif_info={};                                  //Storage modify infos
    g_view_link=createLinkList();
    g_playback_link=createLinkList();
    g_return_play_video_page = "";    //0 means that returns from the history of the video player interface, 1 represents a return from the setting interface, two interface devices which returns from the history list screen, 3 represents the return from BOX device list screen, 4 represents the return from history BOX device list interface, and 5 from the BOX equipment list history player Back, 6 settings page represents the return from BOX
    g_distance_to_edge = 12;  //The distance between the edge
    g_devices_list_box_width = 314; //The width of the device list box
    g_player_width = 640; //The width of the video player
    g_player_height = 360; //Height of the video player
    g_player_width_nine_hundred = 900;
    g_nine_hundred_side = 0;
    g_body_width = 900;
    g_is_in_play_page = 0;
    g_is_in_playback_page = 0;
    g_play_flash_video= 0;
    g_is_plug_load = 0; //Load the plug
    g_is_plug_load_refuse = 0; //Refuse to load the plug
    g_is_plug_load_auto = 0;   //Load the plug auto
    g_inland_server_ip_ok = 0; //Analyzing the signaling server IP address is a home address
    g_is_in_box_ipc = 0; //Represents not from the device list screen, click BOX, to enter in the IPC BOX
    g_select_incise_time = "30min";  //He expressed selectively cutting the size of the period in BOX, 1h 1h according to an each cut, 30min expressed in accordance with each piece of data 30minute cut, 5min represent each piece of data in accordance with 5 minutes cutting
    g_select_box_ipc = ""; //select the box ipc ID of now
    g_is_video = 1;
    g_is_snapshot = 0;
    g_is_all=0;
    //function
    g_view_page_redraw=null;
    g_split_update=null;
    g_video_sources_slider_callback=null;
    g_playback_slider_callback=null;
    g_service_options="";//Indicates that the server is IIS (server) or ipc or box (device)
    g_enter_history=null;
    g_enter_set=null;
    g_vimtag_filter=null;
    g_vimtag_calendar_choice=null;
    //new add var at 2016/05/07
    g_video_edit_click =false;
    g_vimtag_box_video_counts =0;
    g_vimtag_ipc_video_counts =0;
    g_dev_refresh_is_click = false;
    //system function
    g_system_prompt_box=null;
    g_system_wait_div=null;
    g_system_stop_wait=null;
    g_is_support_1080p=0;

    //style function
    g_standard_input_box_onfocus=null;
    g_standard_input_box_onblur=null;

    //temp mark
    g_video_stream_uri="";//Video playback path
    g_audio_output_uri="";
    g_server_device=window.location.host;
    g_hostname = "";
    g_web_client_v="v1.2.3.1405291418";
    //oem客户
    g_domain_oems_ebit = 0;
    g_domain_oems_vimtag = 0;
    g_domain_oems_luxcamapp = 0;
    g_domain_oems_mommycam = 0;
    g_domain_oems_prolabcloud = 0;
    g_domain_oems_serenelifehome =0;
    g_domain_oems_testmipcm =0;
    g_domain_oems_mipcm =0;
    g_domain_oems_avue =0;

    var g_domain_oems = new Array("www.luxcamapp.eu","luxcamapp.eu",
                                  "www.mommycam.us","mommycam.us",
                                  "www.ebit.com","ebit.com",
                                  "www.vimtag.com","vimtag.com",
                                  "www.prolabcloud.com","prolabcloud.com",
                                  "cloud.serenelifehome.com","serenelifehome.com",
                                  "www.avuecam.com","avuecam.com",
                                  "test.mipcm.com",
                                  "v2.mipcm.com",
                                  "test.vimtag.com",
                                  "v3.vimtag.com",
                                  "v4.vimtag.com",
                                  "www.mipcm.com","mipcm.com");
    var oems = {
                "luxcamapp.eu":{
                    img:"/oem/luxcam/imgs/",
                    css:"/oem/luxcam/css/data.css",
                    download:[
                        {content:"Android Client", file:"app/luxsecurity_luxcam.apk" },
                        {content:"IOS Client", url:"https://itunes.apple.com/app/id695492422", win:1 }
                    ],
                    flag_enable_curise:true,
                    flag_enable_motion_mask:true
                },

                 "hentek.cc":{
                    img:"/oem/hentek/imgs/",
                    download:[
                        {content:"Android客户端", file:"app/hentek_hentekipcam.apk" },
                        {content:"IOS客户端", url:"https://itunes.apple.com/app/id855719231", win:1 },
                        {content:"客户端使用手册", file:"oem/hentek/doc/client.manual.zh.cn.zip"},
                        {content:"IPC1使用手册", file:"oem/hentek/doc/ipc1.manual.zh.cn.zip"}
                    ]
                },

                "mipcm.com":{
                    img:"/oem/mipc/imgs/",
                    download:[
                        {content:"Download Client", url:"http://www.mipcm.com/download/", win:1 },
                        {content:"Client Manual", file:"doc/client.manual.en.zip"},
                        {content:"IPC1 Manual", file:"doc/ipc1.manual.en.zip"},
                        {content:"IPC2 Manual", file:"doc/ipc2.manual.en.zip"}
                    ],
                    download_zh:[
                        {content:"下载客户端", url:"http://www.mipcm.com/download/", win:1 },
                        {content:"客户端使用手册", file:"doc/client.manual.zh.cn.zip"},
                        {content:"IPC1使用手册", file:"doc/ipc1.manual.zh.cn.zip"},
                        {content:"IPC2使用手册", file:"doc/ipc2.manual.zh.cn.zip"}
                    ]
                },
                "fujikamcloud.us":{
                    img:"/oem/mipc/imgs/",
                    download:[
                        {content:"Android Client", file:"app/mipca.apk" },
                        {content:"IOS Client", url:"https://itunes.apple.com/app/id550958838", win:1 },
                        {content:"Client Manual", file:"doc/client.manual.en.zip"},
                        {content:"IPC1 Manual", file:"doc/ipc1.manual.en.zip"},
                        {content:"IPC2 Manual", file:"doc/ipc2.manual.en.zip"}
                    ],
                    download_zh:[
                        {content:"Android客户端", file:"app/mipca.apk" },
                        {content:"IOS客户端", url:"https://itunes.apple.com/app/id550958838", win:1 },
                        {content:"客户端使用手册", file:"doc/client.manual.zh.cn.zip"},
                        {content:"IPC1使用手册", file:"doc/ipc1.manual.zh.cn.zip"},
                        {content:"IPC2使用手册", file:"doc/ipc2.manual.zh.cn.zip"}
                    ]
                },
                "fujikamcloud.com":{
                    img:"/oem/mipc/imgs/",
                    download:[
                        {content:"Android Client", file:"app/mipca.apk" },
                        {content:"IOS Client", url:"https://itunes.apple.com/app/id550958838", win:1 },
                        {content:"Client Manual", file:"doc/client.manual.en.zip"},
                        {content:"IPC1 Manual", file:"doc/ipc1.manual.en.zip"},
                        {content:"IPC2 Manual", file:"doc/ipc2.manual.en.zip"}
                    ],
                    download_zh:[
                        {content:"Android客户端", file:"app/mipca.apk" },
                        {content:"IOS客户端", url:"https://itunes.apple.com/app/id550958838", win:1 },
                        {content:"客户端使用手册", file:"doc/client.manual.zh.cn.zip"},
                        {content:"IPC1使用手册", file:"doc/ipc1.manual.zh.cn.zip"},
                        {content:"IPC2使用手册", file:"doc/ipc2.manual.zh.cn.zip"}
                    ]
                },

                "gtscn.cn":{
                    img:"/oem/gsdcn/imgs/",
                    download:[
                        {content:"Android Client", file:"app/mipca.apk" },
                        {content:"IOS Client", url:"https://itunes.apple.com/app/id550958838", win:1 },
                        {content:"Client Manual", file:"doc/client.manual.en.zip"},
                        {content:"IPC1 Manual", file:"doc/ipc1.manual.en.zip"},
                        {content:"IPC2 Manual", file:"doc/ipc2.manual.en.zip"}
                    ],
                    download_zh:[
                        {content:"Android客户端", file:"app/mipca.apk" },
                        {content:"IOS客户端", url:"https://itunes.apple.com/app/id550958838", win:1 },
                        {content:"客户端使用手册", file:"doc/client.manual.zh.cn.zip"},
                        {content:"IPC1使用手册", file:"doc/ipc1.manual.zh.cn.zip"},
                        {content:"IPC2使用手册", file:"doc/ipc2.manual.zh.cn.zip"}
                    ]
                },

                "mymobivue.com":{
                    img:"/oem/astak/imgs/",
                    download:[
                        {content:"Android Client", file:"app/teamresearch_astak.apk" },
                        {content:"IOS Client", url:"https://itunes.apple.com/app/id858972566", win:1 },
                        {content:"Client Manual", file:"doc/client.manual.en.zip"},
                        {content:"IPC1 Manual", file:"doc/ipc1.manual.en.zip"},
                        {content:"IPC2 Manual", file:"doc/ipc2.manual.en.zip"}
                    ],
                    download_zh:[
                        {content:"Android客户端", file:"app/teamresearch_astak.apk" },
                        {content:"IOS客户端", url:"https://itunes.apple.com/app/id858972566", win:1 },
                        {content:"客户端使用手册", file:"doc/client.manual.zh.cn.zip"},
                        {content:"IPC1使用手册", file:"doc/ipc1.manual.zh.cn.zip"},
                        {content:"IPC2使用手册", file:"doc/ipc2.manual.zh.cn.zip"}
                    ],
                    flag_enable_email:true
                },

                "axiton360.com":{
                    img:"/oem/axiton/imgs/",
                    download:[
                        {content:"Android Client", file:"app/axiton_axiton.apk" },
                        {content:"IOS Client", url:"https://itunes.apple.com/app/id846346002", win:1 },
                        {content:"Client Manual", file:"doc/client.manual.en.zip"},
                        {content:"IPC1 Manual", file:"doc/ipc1.manual.en.zip"},
                        {content:"IPC2 Manual", file:"doc/ipc2.manual.en.zip"}
                    ],
                    download_zh:[
                        {content:"Android客户端", file:"app/axiton_axiton.apk" },
                        {content:"IOS客户端", url:"https://itunes.apple.com/app/id846346002", win:1 },
                        {content:"客户端使用手册", file:"doc/client.manual.zh.cn.zip"},
                        {content:"IPC1使用手册", file:"doc/ipc1.manual.zh.cn.zip"},
                        {content:"IPC2使用手册", file:"doc/ipc2.manual.zh.cn.zip"}
                    ]
                },

                "wanliyan.com":{
                    img:"/oem/wanliyan/imgs/",
                    download:[
                        {content:"Android Client", file:"app/dongsys_wanliyan.apk" },
                        {content:"IOS Client", url:"https://itunes.apple.com/app/id854417504", win:1 },
                        {content:"Client Manual", file:"doc/client.manual.en.zip"},
                        {content:"IPC1 Manual", file:"doc/ipc1.manual.en.zip"},
                        {content:"IPC2 Manual", file:"doc/ipc2.manual.en.zip"}
                    ],
                    download_zh:[
                        {content:"Android客户端", file:"app/dongsys_wanliyan.apk" },
                        {content:"IOS客户端", url:"https://itunes.apple.com/app/id854417504", win:1 },
                        {content:"客户端使用手册", file:"doc/client.manual.zh.cn.zip"},
                        {content:"IPC1使用手册", file:"doc/ipc1.manual.zh.cn.zip"},
                        {content:"IPC2使用手册", file:"doc/ipc2.manual.zh.cn.zip"}
                    ]
                },

                "joinlink.org":{
                    img:"/oem/icare/imgs/",
                    download:[
                        {content:"Android Client", file:"app/ruiyun_icare.apk" },
                        {content:"IOS Client", url:"https://itunes.apple.com/app/id858285719", win:1 }
                    ],
                    download_zh:[
                        {content:"Android客户端", file:"app/ruiyun_icare.apk" },
                        {content:"IOS客户端", url:"https://itunes.apple.com/app/id858285719", win:1 }
                    ]
                },

                "avuecam.com":{
                    img:"/oem/avuecam/imgs/",
                    download:[
                        {content:"AVP561B Manual", file:"oem/avuecam/doc/AVP561B_MANUAL.pdf"},
                        {content:"Android App Manual", file:"oem/avuecam/doc/AV561B_ANDROID_APP_USERS_MANUAL.pdf"},
                        {content:"IOS App Manual", file:"oem/avuecam/doc/AV561B_IOS_APP_USERS_MANUAL.pdf"}
                    ],
                    flag_enable_email:true
                },

                "tpcc2014.com":{
                    img:"/oem/tungpo_tpcc/imgs/"
                },

                "chcvip.cn":{
                    img:"/oem/ruifeng_chcv/imgs/",
                    download:[
                        {content:"客户端使用手册", file:"oem/ruifeng_chcv/doc/client.manual.zh.cn.rar"},
                        {content:"IPC1使用手册 ", file:"oem/ruifeng_chcv/doc/ipc1.manual.zh.cn.rar"},
                        {content:"IPC2使用手册 ", file:"oem/ruifeng_chcv/doc/ipc2.manual.zh.cn.rar"}
                    ]
                },

                "jiayang.com":{
                    img:"/oem/jiayang_shixuntianxia/imgs/"
                },

                "onevo.cn":{
                    img:"/oem/ovorange_weishi/imgs/"
                },

                "eyedot.net":{
                    img:"/oem/keeper_eyedot/imgs/"
                },
                "sztkaj.com":{
                    img:"/oem/sztekai_tekaianju/imgs/"
                },
                "devele.com":{
                    img:"/oem/devele_ipc/imgs/"
                },
                "itelland.com":{
                    img:"/oem/itelland_itelcamera/imgs/"
                },
                "macway.com":{
                    img:"/oem/macway_smartcam/imgs/"
                },
                "goolsee.com":{
                    img:"/oem/goolsee_goolsee/imgs/"
                },
                "cloudring.com":{
                    img:"/oem/cloudring/imgs/"
                },

                "mommycam.us":{
                    img:"/oem/mommycam/imgs/"
                },

                "myannke.com":{
                    img:"/oem/anni_annke/imgs/",
                    download:[
                        {content:"WEB Client Manual", file:"oem/anni_annke/doc/WEB_Client_Manual.zip"},
                        {content:"Android App Manual", file:"oem/anni_annke/doc/Android_App_Manual.zip"},
                        {content:"IOS App Manual", file:"oem/anni_annke/doc/iOS_App_Manual.zip"}
                    ]
                },

                "anylook.net":{
                    img:"/oem/yescctv_anylook/imgs/"
                },

                "ebit.com":{
                    img:"/oem/ebit/imgs/",
                    css:"../v2n/oem/ebit/css/web_v3.css"
                },

                "vimtag.com":{
                    img:"oem/vimtag_v2n/imgs/",
                    css:"oem/vimtag_v2n/css/vimtag.css"
                },

                "smartcamhd.com":{
                    img:"/oem/macway_smartcam/imgs/"
                },

                "konka.com":{
                    img:"/oem/konka/imgs/"
                },

                "nmspay.cn":{
                    img:"/oem/sanlianhe_nms/imgs/"
                },

                "prolabcloud.com":{
                    img:"/oem/prolab_cloud/imgs/"
                },

                "jointem.com":{
                    img:"/oem/jointem/imgs/"
                },

                "serenelifehome.com":{
                    img:"/oem/serenelifehome/imgs/"
                },

                "testvimtag.com":{
                	  img:"oem/testvimtag/imgs/",
                    css:"oem/testvimtag/css/vimtag.css"
                },

                "testmipcm.com":{
                    img:"/oem/testmipcm/imgs/",
                    download:[
                        {content:"Download Client", url:"http://test.mipcm.com/download/", win:1 },
                        {content:"Client Manual", file:"doc/client.manual.en.zip"},
                        {content:"IPC1 Manual", file:"doc/ipc1.manual.en.zip"},
                        {content:"IPC2 Manual", file:"doc/ipc2.manual.en.zip"}
                    ],
                    download_zh:[
                        {content:"下载客户端", url:"http://test.mipcm.com/download/", win:1 },
                        {content:"客户端使用手册", file:"doc/client.manual.zh.cn.zip"},
                        {content:"IPC1使用手册", file:"doc/ipc1.manual.zh.cn.zip"},
                        {content:"IPC2使用手册", file:"doc/ipc2.manual.zh.cn.zip"}
                    ]
                },
                
                "itacamapp.com":{
                    img:"/oem/itacam/imgs/"
                },
                
                "hootoo.com":
                {
                	  img:"/oem/hootoo/imgs/"
                }
    }
    g_domain = {
               "www.luxcamapp.eu":oems["luxcamapp.eu"],
               "luxcamapp.eu":oems["luxcamapp.eu"],
               "www.tpcc2014.com":oems["tpcc2014.com"],
               "tpcc2014.com":oems["tpcc2014.com"],
               "www.chcvip.cn":oems["chcvip.cn"],
               "chcvip.cn":oems["chcvip.cn"],
               "www.jiayang.com":oems["jiayang.com"],
               "jiayang.com":oems["jiayang.com"],
               "v.onevo.cn":oems["onevo.cn"],
               "onevo.cn":oems["onevo.cn"],
               "www.eyedot.net":oems["eyedot.net"],
               "eyedot.net":oems["eyedot.net"],
               "www.anylook.net":oems["anylook.net"],
               "anylook.net":oems["anylook.net"],
               "www.sztkaj.com":oems["sztkaj.com"],
               "sztkaj.com":oems["sztkaj.com"],
               "www.devele.com":oems["devele.com"],
               "devele.com":oems["devele.com"],
               "www.itelland.com":oems["itelland.com"],
               "itelland.com":oems["itelland.com"],
               "www.macway.com":oems["macway.com"],
               "macway.com":oems["macway.com"],
               "www.goolsee.com":oems["goolsee.com"],
               "goolsee.com":oems["goolsee.com"],
               "www.myannke.com":oems["myannke.com"],
               "myannke.com":oems["myannke.com"],
               "www.mommycam.us":oems["mommycam.us"],
               "mommycam.us":oems["mommycam.us"],
               "www.cloudring.com":oems["cloudring.com"],
               "cloudring.com":oems["cloudring.com"],
               "www.fujikamcloud.us":oems["fujikamcloud.us"],
               "fujikamcloud.us":oems["fujikamcloud.us"],
               "www.fujikamcloud.com":oems["fujikamcloud.com"],
               "fujikamcloud.com":oems["fujikamcloud.com"],
               "www.hentek.cc":oems["hentek.cc"],
               "hentek.cc":oems["hentek.cc"],
               "www.mipcm.com":oems["mipcm.com"],
               "mipcm.com":oems["mipcm.com"],
               "www.avuecam.com":oems["avuecam.com"],
               "avuecam.com":oems["avuecam.com"],
               "kh.gtscn.cn":oems["gtscn.cn"],
               "gtscn.cn":oems["gtscn.cn"],
               "www.mymobivue.com":oems["mymobivue.com"],
               "mymobivue.com":oems["mymobivue.com"],
               "www.axiton360.com":oems["axiton360.com"],
               "axiton360.com":oems["axiton360.com"],
               "1999.wanliyan.com":oems["wanliyan.com"],
               "wanliyan.com":oems["wanliyan.com"],
               "www.joinlink.org":oems["joinlink.org"],
               "joinlink.org":oems["joinlink.org"],
               "www.ebit.com":oems["ebit.com"],
               "ebit.com":oems["ebit.com"],
               "www.vimtag.com":oems["vimtag.com"],
               "vimtag.com":oems["vimtag.com"],

               "1clic.smartcamhd.com":oems["smartcamhd.com"],
               "smartcamhd.com":oems["smartcamhd.com"],
               "ipcam.konka.com":oems["konka.com"],
               "konka.com":oems["konka.com"],
               "www.nmspay.cn":oems["nmspay.cn"],
               "nmspay.cn":oems["nmspay.cn"],
               "www.prolabcloud.com":oems["prolabcloud.com"],
               "prolabcloud.com":oems["prolabcloud.com"],
               "zygj.jointem.com":oems["jointem.com"],
               "jointem.com":oems["jointem.com"],
               "cloud.serenelifehome.com":oems["serenelifehome.com"],
               "serenelifehome.com":oems["serenelifehome.com"],
               "test.vimtag.com":oems["testvimtag.com"],
               "test.mipcm.com":oems["testmipcm.com"],
               "v2.mipcm.com":oems["mipcm.com"],
               "v3.vimtag.com":oems["testvimtag.com"],
               "v4.vimtag.com":oems["vimtag.com"],
               "www.itacamapp.com":oems["itacamapp.com"],
               "itacamapp.com":oems["itacamapp.com"],
               "ehawk.hootoo.com":oems["hootoo.com"],
               "hootoo.com":oems["hootoo.com"]
    };//Store all user's domain and path information
    //Get language
    (function(){
       var nav_lang;
       //Get local storage start
       var lang_choice =mlocal_storage.get("language_choice_info");
       if(lang_choice)
       {
          switch(lang_choice)
          {
            case "en":
              {
                 mcs_init_langs("en");
                 g_now_lang = "en";
                 break;
              }
            case "zh":
              {
                 mcs_init_langs("zh");
                 g_now_lang = "zh";
                 break;
              }
           case "tw":
             {
                mcs_init_langs("tw");
                g_now_lang = "tw";
                break;
             }
           case "ja":
             {
                mcs_init_langs("ja");
                g_now_lang = "ja";
                break;
             }
           case "ko":
             {
                mcs_init_langs("ko");
                g_now_lang = "ko";
                break;
             }
           case "de":
             {
                mcs_init_langs("de");
                g_now_lang = "de";
                break;
             }
           case "fr":
             {
                mcs_init_langs("fr");
                g_now_lang = "fr";
               break;
             }
           case "es":
             {
               mcs_init_langs("es");
               g_now_lang = "es";
               break;
             }
           case "pt":
             {
                mcs_init_langs("pt");
                g_now_lang = "pt";
               break;
             }
           case "it":
             {
                mcs_init_langs("it");
                g_now_lang = "it";
               break
             }
           case "ar":
             {
                mcs_init_langs("ar");
                g_now_lang = "ar";
               break
             }
           case "ru":
             {
                mcs_init_langs("ru");
                g_now_lang = "ru";
                break
             }
           default:
             {
                mcs_init_langs("en");
                g_now_lang = "en";
                jQuery.datepicker.setDefaults(jQuery.datepicker.regional['zh-CN']);
             }
          }
       }else{
       	 //Reacquisition from the browser
       	 nav_lang = navigator.language || navigator.browserLanguage || navigator.userLanguage || navigator.systemLanguage || "",
         nav_lang=nav_lang.toLowerCase();
       	 if(nav_lang){
           if(nav_lang== "ja")
             {
                mcs_init_langs("ja");
                g_now_lang = "ja";
             }
           else if(nav_lang== "ko")
             {
                mcs_init_langs("ko");
                g_now_lang = "ko";
             }
           else if(nav_lang.indexOf("de")>= 0)
             {
                mcs_init_langs("de");
                g_now_lang = "de";
             }
           else if(nav_lang.indexOf("en")>= 0)
             {
                 mcs_init_langs("en");
                 g_now_lang = "en";
             }
           else if(nav_lang== "zh")
             {
                 mcs_init_langs("zh");
                 g_now_lang = "zh";
             }
           else if(nav_lang== "zh-cn")
             {
                 mcs_init_langs("zh");
                 g_now_lang = "zh";
             }
           else if(nav_lang== "tw")
             {
                mcs_init_langs("tw");
                g_now_lang = "tw";
             }
           else if(nav_lang== "zh-tw")
             {
                mcs_init_langs("tw");
                g_now_lang = "tw";
             }
           else if(nav_lang.indexOf("fr")>= 0)
             {
                mcs_init_langs("fr");
                g_now_lang = "fr";
             }
           else if(nav_lang== "es")
             {
               mcs_init_langs("es");
               g_now_lang = "es";
             }
           else if (nav_lang.indexOf("pt")>= 0)
             {
                mcs_init_langs("pt");
                g_now_lang = "pt";
             }
           else if(nav_lang== "it")
             {
                mcs_init_langs("it");
                g_now_lang = "it";
             }
           else if(nav_lang== "ar")
             {
                mcs_init_langs("ar");
                g_now_lang = "ar";
             }
           else if(nav_lang== "ru")
             {
                mcs_init_langs("ru");
                g_now_lang = "ru";
             }
           else
             {
                mcs_init_langs("en");
                g_now_lang = "en";
             }
         }else{//Really get less than the default is English
             mcs_init_langs("en");
             g_now_lang = "en";
         }
       }
    })();

    var log_comparison_table = {
        config:           mcs_config,
        video:            mcs_video,
        audio:            mcs_audio_setting,
        network:          mcs_network,
        osd:              mcs_osd,
        CcmSetUser:       mcs_modify_password,
        isp:              mcs_isp,
        mic:              mcs_mic,
        speaker:          mcs_speaker,
        nick:             mcs_nick_modify,
        snapshot:         mcs_snapshot,
        alert:            mcs_alarm,
        segment:          "",
        sdcard:           mcs_sdcord,
        storage_device:   mcs_storage_device,
        insert:           mcs_ready,
        remove:           mcs_removed,
        full:             mcs_fault,
        failure:          mcs_fault,
        reboot:           mcs_reboot,
        upgrade:          mcs_upgrade,
        finish:           mcs_upgrade_finish,
        fail:             mcs_fail,
        device:           mcs_device_status,
        online:           mcs_online,
        offline:          mcs_offline,
        "":               "",
        io_alert:         mcs_i_o_alarm,
        motion:           mcs_motion,
        mount:            mcs_mount,
        umount:           mcs_unmount,
        io:               "IO",
        pir:              mcs_pir,
        motion_alert:     mcs_motion,
        talk:             mcs_talk,
        record:           mcs_record,
        play:             mcs_play,
        start:            mcs_start,
        stop:             mcs_start,
        info:             mcs_messages,
        alerter:          mcs_alerter,
        encoder:          mcs_encoder,
        free:             mcs_finish,
        init:             mcs_init,
        download:         mcs_upgrade_download,
        apply:            mcs_apply,
        erase:            mcs_erasing,
        write:            mcs_writing
    };

    window.version_Category = {
         Basic_version:           "1",
         Snapshot_version:        "2",
         Info_version:            "3",
         Version_recording:       "4",
         Schedule_recording:      "5",
         guest_version:           "6",
         wifi_guide_version:      "7",
         curise_motion_version:   "8",
         box_add_version:         "9"
    };

    Date.prototype.format = function(format)
    {
        var o = {
            "M+" : this.getMonth()+1, //month
            "d+" : this.getDate(),    //day
            "h+" : this.getHours(),   //hour
            "m+" : this.getMinutes(), //minute
            "s+" : this.getSeconds(), //second
            "q+" : Math.floor((this.getMonth()+3)/3),  //quarter
            "S" : this.getMilliseconds() //millisecond
        }
        if(/(y+)/.test(format)) format=format.replace(RegExp.$1,
                (this.getFullYear()+"").substr(4 - RegExp.$1.length));
        for(var k in o)if(new RegExp("("+ k +")").test(format))
            format = format.replace(RegExp.$1,
                    RegExp.$1.length==1 ? o[k] :
                    ("00"+ o[k]).substr((""+ o[k]).length));
        return format;
    }
    //Prompt box function
    function msg_tips(options) 
    {
        var defaults = {
            timeout: 3000,
            //
            msg: "消息提示框",
            //
            speed: 300,
            //
            type: "success"//1、success 2、error 3、warning
        };
        var bid = parseInt(Math.random() * 100000);
        jQuery("#tip_div").html('<div id="tip_container' + bid + '" class="container tip_container"><div id="tip' + bid + '" class="mtip"><i class="micon"></i><span id="tsc' + bid + '"></span><i id="mclose' + bid + '" class="mclose"></i></div></div>');
        var $this = jQuery(this);
        var $tip_container = jQuery("#tip_container" + bid)
        var $tip = jQuery("#tip" + bid);
        var $tipSpan = jQuery("#tsc" + bid);
        var $colse = jQuery("#mclose" + bid);
        //
        clearTimeout(window.timer);
        
        $tip.attr("class", options.type).addClass("mtip");
        $tipSpan.html(options.msg);
        $tip_container.slideDown(300);
        //
        window.timer = setTimeout(function() {
            $tip_container.slideUp(300);
        }, options.timeout);
        //
        $tip_container.live("mouseover", function() {
            clearTimeout(window.timer);
        });
        //
        $tip_container.live("mouseout", function() {
            window.timer = setTimeout(function() {
                $tip_container.slideUp(300);
            }, options.timeout);
        });
        //
        $colse.live("click", function() {
            $tip_container.slideUp(300);
        });
    }
	  
	  function getLeft(e)
    {
        var offset = e.offsetLeft;
        if(e.offsetParent != null) offset += getLeft(e.offsetParent);
        return offset;
    }

    var log_dev, log_status, log_span, l_log_list = createLinkList(), log_flag;
    // add log
    function log(info, level)
    {
        var status_content = mx("#status_content");
        if(null == log_dev)
        {
            //if(0 <= (location.search || location.hash || "").indexOf("debug=1"))
            if(status_content)
            {
                log_dev = dom_create_child(status_content, "div");
                log_status = dom_create_child(log_dev, "div", "log_status");
                log_span = dom_create_child(log_dev, "div");

                log_dev.style.cssText = "color:#c92641;font-weight:bold";
                log_span.style.cssText = "padding-left:10px";
            }
        }
        if(info)
        {
            if(mx("#status_bar"))
            {
                log_flag = jQuery("#status_bar").queue("log_list").length == 0 ? 1 : 0;
                jQuery("#status_bar").queue("log_list", function(next){
                    jQuery(this).animate({height:0, marginTop:"8"}, {duration:500, queue:false, complete:function(){
                        next();
                    }})
                })
                .queue("log_list", function(next){
                    status_content.style.cssText =
                        "background-image:-moz-linear-gradient(center top , #141819 0px, #37383A 100%);"
                        +"background:-webkit-gradient(linear, 0 0, 0 bottom, from(#141819), to(#37383A));"
                        +"background:-o-linear-gradient(top, #141819, #37383A);"
                        +"filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#141819', endColorstr='#37383A');*background:url(about:blank);";
                        log_span.innerHTML = info;
                        next();
                })
                .queue("log_list", function(next){
                    jQuery(this).animate({height:g_status_bar_h, marginTop:"0"}, {duration:500, queue:false, complete:function(){
                        next();
                    }});
                })
                .delay(4500, "log_list")
                .queue("log_list", function(next){
                    jQuery(this).animate({height:0, marginTop:"8"}, {duration:500, queue:false, complete:function(){
                        if(jQuery("#status_bar").queue("log_list").length == 0)
                        {
                            jQuery("#status_bar").queue("log_list", function(next){
                                status_content.style.cssText = "";
                                log_span.innerHTML = "";
                                jQuery(this).animate({height:g_status_bar_h, marginTop:"0"}, {duration:500, queue:false, complete:function(){
                                    next();
                                }});
                            });
                        }
                        next();
                    }});
                });
                 if(log_flag) jQuery("#status_bar").dequeue("log_list");
            }

            var date  = new Date().format("yyyy-MM-dd hh:mm:ss");
            //If the log number is equal to 10, then remove the first
            if(l_log_list.length == 10)
            {
                l_log_list.del(l_log_list.get_first().data);
            }
            l_log_list.add({date:date, info:info});
        }
        else
        {
            return l_log_list;
        }
        return 0;
    }

    window.get_version_Category=function(){
        var dev = mcloud_agent.devs.get(g_select_device_ipc);
        if(dev && dev.img_ver){
          if(dev.img_ver >= "v2.5.1.1505211702")
            return version_Category.box_add_version;
          if(dev.img_ver >= "v1.6.2.1501281808")
            return version_Category.curise_motion_version;
          if(dev.img_ver >= "14.01.23.12.30")
            return version_Category.wifi_guide_version;
          if(dev.img_ver >= "13.09.14.12.30")
            return version_Category.guest_version;
          if(dev.img_ver >= "13.05.20.17.57")
            return version_Category.Schedule_recording;
          if(dev.img_ver >= "13.05.09.17.57")
            return version_Category.Version_recording;
          if(dev.img_ver > "13.04.01.01.35")
            return version_Category.Info_version;
          if(dev.img_ver <= "13.04.01.01.35" && dev.bimg_ver > "13.01.01.01.35")
            return version_Category.Snapshot_version;
          return version_Category.Basic_version;
        }
    };

    window.determine_the_version = function(obj){
    	if(obj.type=="Positive")
        {
           if(get_version_Category()>=obj.version)
           {
               return true;
           }else
           {
              return false;
           }
        }
        else if(obj.type=="Anti")
        {
           if(get_version_Category()<=obj.version)
           {
              return true;
           }else
           {
              return false;
           }
        }
        else
        {
            if(get_version_Category()==obj.version)
            {
                return true;
            }else
            {
               return false;
            }
        }
    };

    function sub_img_build(left ,top, width, height, src, p_width, p_height)
    {
        return {src:src, left:left, top:top, width:width, height:height, p_width:p_width, p_height:p_height};
    }

    var urlparms =(function(){
    	   var args=new Object();
         var query=location.search.substring(1);//Get the query string
         var pairs=query.split("&");//Disconnect the comma
         for(var i=0;i<pairs.length;i++)
         {
           var pos=pairs[i].indexOf('=');//Find name=value
           if(pos==-1)   continue;//If you do not find just skip
           var argname=pairs[i].substring(0,pos);//extract name
           var value=pairs[i].substring(pos+1);//extract value
           args[argname]=unescape(value);//Save as property
         }
         return args;
    })();

    g_hostname=(urlparms&&urlparms.m!=null)?urlparms.m:window.location.hostname;

    var client_name;//liu 20130930
    var Istest=(urlparms&&urlparms.t!=null)?urlparms.t:null;
    if(Istest && g_domain[g_hostname])
    {
             client_name=g_domain[g_hostname].img;
             create_css("../css/slider.css");
             create_css("../css/jquery.mCustomScrollbar.css");
             create_css("../css/date-timepicker.css");
             create_css("../css/jquery.ibutton.css");
             create_css("../css/jquery.tzSelect.css");
             create_css("../css/web.css");
            // create_css("../oem/luxcam/css/data.css");
    }
    else if(g_domain[g_hostname])
    {
             client_name=g_domain[g_hostname].img;
             create_css(g_domain[g_hostname].css);
    }
    else
    {
             /*create_css("../css/mipc.min.css?20130909110617");*/
             client_name="/imgs/";
    }
    function create_css(cssName){ //liu
         if(document.createStyleSheet){//IE
             document.createStyleSheet(cssName,1);
         }
         else{//FF
             var my_link = document.createElement("link");
             my_link.setAttribute("type","text/css");
             my_link.setAttribute("rel","stylesheet");
             my_link.setAttribute("href",cssName);
             document.getElementsByTagName("head")[0].appendChild(my_link);
         }
    }
    //IE8 and IE7 do not support arrays indexOf method for performing the following procedures when
    if (!Array.prototype.indexOf)
    {
         Array.prototype.indexOf = function(g_hostname)
         {
             var len = this.length >>> 0;
             var from = Number(arguments[1]) || 0;
             from = (from < 0)? Math.ceil(from) : Math.floor(from);
             if (from < 0)
             from += len;
             for (; from < len; from++)
             {
               if (from in this && this[from] === g_hostname)
               return from;
             }
             return -1;
         };
    }
    //Get the array if there is the domain name, and the corresponding value is set to 1
    if(g_domain_oems.indexOf(g_hostname)>=0)
    {
    	  switch(g_hostname)
    	  {
    	  	 case "vimtag.com":
    	  	 case "v3.vimtag.com":
    	  	 case "test.vimtag.com":
           case "v4.vimtag.com":
    	  	 case "www.vimtag.com":
    	  	 {
    	  	 	  g_domain_oems_vimtag = 1;
    	  	 	  break;
    	  	 }
    	  	 case "luxcamapp.eu":
    	  	 case "www.luxcamapp.eu":
    	  	 {
    	  	 	  g_domain_oems_luxcamapp = 1;
    	  	 	  break;
    	  	 }
    	  	 case "ebit.com":
    	  	 case "www.ebit.com":
    	  	 {
    	  	 	  g_domain_oems_ebit = 1;
    	  	 	  break;
    	  	 }
    	  	 case "mommycam.us":
    	  	 case "www.mommycam.us":
    	  	 {
    	  	 	  g_domain_oems_mommycam = 1;
    	  	 	  break;
    	  	 }
    	  	 case "prolabcloud.com":
    	  	 case "www.prolabcloud.com":
    	  	 {
    	  	 	  g_domain_oems_prolabcloud = 1;
    	  	 	  break;
    	  	 }
    	  	 case "serenelifehome.com":
    	  	 case "cloud.serenelifehome.com":
    	  	 {
    	  	 	  g_domain_oems_serenelifehome = 1;
    	  	 	  break;
    	  	 }
    	  	 case "mipcm.com":
    	  	 case "v1.mipcm.com":
    	  	 case "v2.mipcm.com":
    	  	 case "test.mipcm.com":
    	  	 case "www.mipcm.com":
    	  	 {
    	  	 		g_domain_oems_mipcm = 1;
    	  	 		break;
    	  	 }
    	  	 case "avuecam.com":
    	  	 case "www.avuecam.com":
    	  	 {
    	  	 	  g_domain_oems_avue =1;
    	  	 	  break;
    	  	 }
    	  	 default:
    	  	 {
    	  	 	  log("there have no this domain!");
    	  	 }
    	  }
    }

    if (!Array.prototype.indexOf)
    {
         Array.prototype.indexOf = function(g_server_ip)
         {
             var len = this.length >>> 0;
             var from = Number(arguments[1]) || 0;
             from = (from < 0)? Math.ceil(from) : Math.floor(from);
             if (from < 0)
             from += len;
             for (; from < len; from++)
             {
               if (from in this && this[from] === g_server_ip)
               return from;
             }
             return -1;
         };
    }
    var g_server_ip = g_server_device.substring(0,g_server_device.lastIndexOf(":"));
    var g_inland_server_ip = new Array("218.14.146.199","61.147.109.92","222.186.3.5");

    if(g_inland_server_ip.indexOf(g_server_ip)>= 0)
    {
    	  g_inland_server_ip_ok = 1;
    }
       
    mipc_img_src_date=client_name+"mipc_img.png";
    var mipc_img_src = mipc_img_src_date,
        sub_img_logo0           = sub_img_build(    0,185,   75,   75,  mipc_img_src, 744, 335),
        sub_img_logo1           = sub_img_build(    0,260,   75,   75,  mipc_img_src, 744, 335),
        sub_img_signin_name     = sub_img_build(  351,205,   33,   29,  mipc_img_src, 744, 335),
        sub_img_signin_psw      = sub_img_build(  384,205,   33,   29,  mipc_img_src, 744, 335),
        sub_img_signin          = sub_img_build(  417,205,   33,   29,  mipc_img_src, 744, 335),
        sub_img_column          = sub_img_build(   75,300,    1,   27,  mipc_img_src, 744, 335),
        sub_img_view_logo       = sub_img_build(   75,205,  236,   34,  mipc_img_src, 744, 335),
        sub_img_view_bg0        = sub_img_build(  360,124,   25,   22,  mipc_img_src, 744, 335),
        sub_img_view_bg1        = sub_img_build(  385,124,   25,   22,  mipc_img_src, 744, 335),
        sub_img_view_bg2        = sub_img_build(  410,124,   25,   10,  mipc_img_src, 744, 335),
        sub_img_view_bg3        = sub_img_build(  410,134,   25,   12,  mipc_img_src, 744, 335),
        sub_img_view_bg4        = sub_img_build(  435,124,   25,   10,  mipc_img_src, 744, 335),
        sub_img_view_bg5        = sub_img_build(  435,134,   25,   12,  mipc_img_src, 744, 335),
        sub_img_device_switch   = sub_img_build(  402,185,   20,   20,  mipc_img_src, 744, 335),
        sub_img_ptz_switch      = sub_img_build(  422,185,   20,   20,  mipc_img_src, 744, 335),
        sub_img_device_edit     = sub_img_build(  360,185,   14,   14,  mipc_img_src, 744, 335),
        sub_img_device_search   = sub_img_build(  374,185,   14,   14,  mipc_img_src, 744, 335),
        sub_img_device_add      = sub_img_build(  388,185,   14,   14,  mipc_img_src, 744, 335),
        sub_img_PTZ0            = sub_img_build(    0,  0,  124,  124,  mipc_img_src, 744, 335),
        sub_img_PTZ1            = sub_img_build(  124,  0,  124,  124,  mipc_img_src, 744, 335),
        sub_img_PTZ2            = sub_img_build(  248,  0,  124,  124,  mipc_img_src, 744, 335),
        sub_img_PTZ3            = sub_img_build(  372,  0,  124,  124,  mipc_img_src, 744, 335),
        sub_img_PTZ4            = sub_img_build(  496,  0,  124,  124,  mipc_img_src, 744, 335),
        sub_img_PTZ5            = sub_img_build(  620,  0,  124,  124,  mipc_img_src, 744, 335),
        sub_img_play0           = sub_img_build(    0,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_play1           = sub_img_build(    0,154,   30,   30,  mipc_img_src, 744, 335),
        sub_img_stop0           = sub_img_build(   30,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_stop1           = sub_img_build(   30,154,   30,   30,  mipc_img_src, 744, 335),
        sub_img_recording0      = sub_img_build(   60,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_recording1      = sub_img_build(   60,154,   30,   30,  mipc_img_src, 744, 335),
        sub_img_on_recording0   = sub_img_build(  300,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_on_recording1   = sub_img_build(  300,154,   30,   30,  mipc_img_src, 744, 335),
        sub_img_snapshot0       = sub_img_build(   90,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_snapshot1       = sub_img_build(   90,154,   30,   30,  mipc_img_src, 744, 335),
        sub_img_snapshot2       = sub_img_build(  548,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_call0           = sub_img_build(  120,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_call1           = sub_img_build(  120,154,   30,   30,  mipc_img_src, 744, 335),
        sub_img_call2           = sub_img_build(  330,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_rewind0         = sub_img_build(  150,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_rewind1         = sub_img_build(  150,154,   30,   30,  mipc_img_src, 744, 335),
        sub_img_previous0       = sub_img_build(  180,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_previous1       = sub_img_build(  180,154,   30,   30,  mipc_img_src, 744, 335),
        sub_img_pause0          = sub_img_build(  210,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_pause1          = sub_img_build(  210,154,   30,   30,  mipc_img_src, 744, 335),
        sub_img_next0           = sub_img_build(  240,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_next1           = sub_img_build(  240,154,   30,   30,  mipc_img_src, 744, 335),
        sub_img_forward0        = sub_img_build(  270,124,   30,   30,  mipc_img_src, 744, 335),
        sub_img_forward1        = sub_img_build(  270,154,   30,   30,  mipc_img_src, 744, 335),
        sub_img_status0         = sub_img_build(  161,184,    8,    8,  mipc_img_src, 744, 335),
        sub_img_status1         = sub_img_build(  169,184,    8,    8,  mipc_img_src, 744, 335),
        sub_img_status2         = sub_img_build(  177,184,    8,    8,  mipc_img_src, 744, 335),
        sub_img_page_state0     = sub_img_build(  152,185,    9,    9,  mipc_img_src, 744, 335),
        sub_img_page_state1     = sub_img_build(  152,195,    9,    9,  mipc_img_src, 744, 335),
        sub_img_delete          = sub_img_build(  213,185,   14,   14,  mipc_img_src, 744, 335),
        sub_img_close0          = sub_img_build(  390,146,   30,   30,  mipc_img_src, 744, 335),
        sub_img_close1          = sub_img_build(  360,146,   30,   30,  mipc_img_src, 744, 335),
        sub_img_profile_token0  = sub_img_build(  185,185,   14,   14,  mipc_img_src, 744, 335),
        sub_img_profile_token1  = sub_img_build(  199,185,   14,   14,  mipc_img_src, 744, 335),
        sub_img_arrow           = sub_img_build(  161,196,    8,    8,  mipc_img_src, 744, 335),
        sub_img_sound_close     = sub_img_build(  328,264,   30,   30,  mipc_img_src, 744, 335),
        sub_img_sound_close_over= sub_img_build(  356,264,   30,   30,  mipc_img_src, 744, 335),
        sub_img_sound_open      = sub_img_build(  385,264,   30,   30,  mipc_img_src, 744, 335),
        sub_img_sound_open_over = sub_img_build(  415,264,   30,   30,  mipc_img_src, 744, 335),
        sub_img_mobile0         = sub_img_build(  460,124,   20,   24,  mipc_img_src, 744, 335),
        sub_img_mobile1         = sub_img_build(  480,124,   20,   24,  mipc_img_src, 744, 335),
        sub_img_android         = sub_img_build(  500,124,   24,   24,  mipc_img_src, 744, 335),
        sub_img_ios             = sub_img_build(  524,124,   24,   24,  mipc_img_src, 744, 335);
        sub_img_broadcast1      = sub_img_build(    0,338,  125,  125,  mipc_img_src, 744, 475);
        sub_img_broadcast2      = sub_img_build(  125,338,  125,  125,  mipc_img_src, 744, 475);
        sub_img_renovate        = sub_img_build(  250,338,  120,  120,  mipc_img_src, 744, 475);

    function background_img_set(parent, sub_img)
    {
        parent.style.background = "url(" + sub_img.src + ") no-repeat -" + sub_img.left + "px -" + sub_img.top + "px";
        parent.style.width = sub_img.width + "px";
        parent.style.height = sub_img.height + "px";
    }

    function background_img_change_pos(parent, sub_img)
    {
        parent.style.backgroundPosition = "-" + sub_img.left + "px -" + sub_img.top + "px";
    }

    window.dom_create_child=function(child_parent, child_type, child_id, child_class, insert_mode){
    		var child = document.createElement(child_type);
        if(child_id){child[s_setAttribute]("id", child_id);}
        if(child_class){
        	child[s_setAttribute]("className", child_class); //for IE
        	child[s_setAttribute]("class", child_class);
        }
        if(child_parent)
        {
            if(insert_mode) child_parent[insert_mode.type](child, insert_mode.node?insert_mode.node:null);
            else child_parent.appendChild(child);
        }
        return child;
    };

    function trigger_click(el)
    {
        if(el.click) el.click();
        else
        {
            try{
                var evt = document.createEvent('Event');
                evt.initEvent('click',true,true);
                el.dispatchEvent(evt);
            }catch(e){system_pop_confirm_box({alert:true, str:e})};
        }
    }

    function img_fade_effect(parent_dom, ori_src, target_src)
    {
        var j_parent_dom;

        parent_dom.innerHTML =
            "<a class='thumb' href='javascript:void(0)'>"
            +   "<span><div></div>"
            +"</a>";
        j_parent_dom = jQuery(parent_dom);
        background_img_set(j_parent_dom.find("div")[0], ori_src);

        j_parent_dom.hover(function() {
            background_img_set(jQuery(this).find("a.thumb")[0], target_src);
            jQuery(this).find("span").stop().fadeTo('normal', 0 , function() {
                jQuery(this).hide()
            });
        } , function() {
            jQuery(this).find("span").stop().fadeTo('normal', 1).show();
        });
    }

    function class_system_signal_trans()
    {
        var l_me = this,
            l_signal_trans_count = 0,
            l_dom_signal_trans = mx("#system_signal_trans");
        l_me.create = function()
        {
            var menu_signal_dom = mx("#main_menu_center") ? mx("#main_menu_center") : mx("#login_menu_center");

            if(!l_dom_signal_trans && menu_signal_dom)
            {
                l_dom_signal_trans = dom_create_child(menu_signal_dom, "div", "system_signal_trans");
                l_dom_signal_trans[s_innerHTML] = "<img src='"+client_name+"loading.gif' style='float:right'></img>";

                l_dom_signal_trans[s_style].paddingTop = 5 + "px";
            }
            ++ l_signal_trans_count;
        }
        l_me.destroy = function()
        {
            -- l_signal_trans_count;
            setTimeout(function() {
                if(l_signal_trans_count == 0 && l_dom_signal_trans)
                {
                    jQuery(l_dom_signal_trans).fadeOut(200);
                    l_dom_signal_trans[s_innerHTML] = null;
                    if(l_dom_signal_trans.parentNode)l_dom_signal_trans.parentNode.removeChild(l_dom_signal_trans);
                    l_dom_signal_trans = null;
                }
            }, 300);
        }
    }
    window.system_signal_trans=new class_system_signal_trans();

    function system_pop_confirm_box(obj){
        var pop_confirm_box = mx("#system_pop_confirm_box"),
            pop_confirm_content, pop_confirm_div,
            l_client_w, l_client_h,
            button_left = obj.button_left || mcs_ok, button_right = obj.button_right || mcs_cancel;

        if(!pop_confirm_box){
            l_client_h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
            l_client_w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
            if(l_client_h < g_client_division_h){
                l_client_h = g_client_division_h;
            }
            if(l_client_w < g_client_division_w){
                l_client_w = g_client_division_w;
            }
            document.documentElement.onkeydown = function(e) {var evt = e || window.event; if(evt.keyCode != 116) return false;};
            pop_confirm_box = document.createElement("div");
            pop_confirm_box[s_setAttribute]("id", "system_pop_confirm_box");
            g_page.parentNode.insertBefore(pop_confirm_box, g_page);

            pop_confirm_content = dom_create_child(pop_confirm_box, "div", "system_pop_confirm_cotent");
            pop_confirm_div = dom_create_child(pop_confirm_box, "div", "system_pop_confirm_div");

            pop_confirm_div[s_style][s_cssText] = "position:absolute;width:" + l_client_w + "px;height:" + l_client_h + "px;background-color:#fff;opacity:0.1;"
                + "filter:alpha(opacity=10);z-index:100";
            if(g_domain_oems_vimtag){
            	  pop_confirm_content[s_style][s_cssText] = "position:fixed;top:" + ((l_client_h - 168) / 3) + "px;left:" + ((l_client_w - 286) / 2) + "px;z-index:101;"
                + "background-color:#ffffff;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:10px;width:400px;height:230px;";
            }else{
		            pop_confirm_content[s_style][s_cssText] = "position:fixed;top:" + ((l_client_h - 168) / 3) + "px;left:" + ((l_client_w - 286) / 2) + "px;z-index:101;"
		                + " background:url("+mipc_img_src_date+") no-repeat scroll -458px -167px transparent;width:286px;height:168px;"
		                + "-webkit-box-shadow:0 2px 30px #050505; -moz-box-shadow:0 2px 30px #050505; box-shadow:0 2px 30px #050505;";
            }

            if(obj.alert){
            	  if(g_domain_oems_vimtag){
            	  	  pop_confirm_content[s_innerHTML] =
		                     "<div style='padding-left:15px;padding-top:20px;font-size:16px;color:#333333;'>" + obj.str + "</div>"
		                    +"<div style='position:absolute;bottom:15px'>"
		                    +   "<button class='vimtag_standard_buttons_green' style='margin-left:150px'>" + button_left + "</button>"
		                    +"</div>";

		                mx(".vimtag_standard_buttons_green", pop_confirm_content)[0].onclick = function() {
		                    var pop_confirm_box = mx("#system_pop_confirm_box"),
		                        pop_confirm_content = mx("#system_pop_confirm_content"),
		                        pop_confirm_div = mx("#system_pop_confirm_div");

		                    document.documentElement.onkeydown = null;
		                    mx(".vimtag_standard_buttons_green", pop_confirm_content)[0].onclick = null;

		                    pop_confirm_box[s_innerHTML] = "";
		                    pop_confirm_box.parentNode[s_removeChild](pop_confirm_box);
		                    pop_confirm_box = null;

		                    obj.callback_func(obj.param);
		                };
            	  }else{
		                pop_confirm_content[s_innerHTML] =
		                     "<div style='padding-left:15px;padding-top:20px;font-weight:900;font-size:16px;color:#EEE'>" + obj.str + "</div>"
		                    +"<div style='position:absolute;bottom:15px'>"
		                    +   "<button class='standard_buttons_green' style='margin-left:100px'>" + button_left + "</button>"
		                    +"</div>";

		                mx(".standard_buttons_green", pop_confirm_content)[0].onclick = function() {
		                    var pop_confirm_box = mx("#system_pop_confirm_box"),
		                        pop_confirm_content = mx("#system_pop_confirm_content"),
		                        pop_confirm_div = mx("#system_pop_confirm_div");

		                    document.documentElement.onkeydown = null;
		                    mx(".standard_buttons_green", pop_confirm_content)[0].onclick = null;

		                    pop_confirm_box[s_innerHTML] = "";
		                    pop_confirm_box.parentNode[s_removeChild](pop_confirm_box);
		                    pop_confirm_box = null;

		                     obj.callback_func(obj.param);
		                };
                }
            }else{
            	  if(g_domain_oems_vimtag){
            	  	  pop_confirm_content[s_innerHTML] =
		                     "<div style='padding-left:15px;padding-top:20px;font-size:16px;color:#333333;'>" + obj.str + "</div>"
		                    +"<div style='position:absolute;bottom:15px'>"
		                    +   "<button class='vimtag_standard_buttons_green' style='margin-left:80px'>" + button_left + "</button>"
		                    +   "<button class='vimtag_standard_buttons_red' style='margin-left:40px'>" + button_right + "</button>"
		                    +"</div>";

		                mx(".vimtag_standard_buttons_green", pop_confirm_content)[0].onclick = function(){
		                    var pop_confirm_box = mx("#system_pop_confirm_box"),
		                        pop_confirm_content = mx("#system_pop_confirm_content"),
		                        pop_confirm_div = mx("#system_pop_confirm_div");

		                    document.documentElement.onkeydown = null;
		                    mx(".vimtag_standard_buttons_green", pop_confirm_content)[0].onclick = null;
		                    mx(".vimtag_standard_buttons_red", pop_confirm_content)[0].onclick = null;

		                    pop_confirm_box[s_innerHTML] = "";
		                    pop_confirm_box.parentNode[s_removeChild](pop_confirm_box);
		                    pop_confirm_box = null;

		                    obj.callback_func(obj.param);
		                };
		                mx(".vimtag_standard_buttons_red", pop_confirm_content)[0].onclick = function(){
		                    var pop_confirm_box = mx("#system_pop_confirm_box"),
		                        pop_confirm_content = mx("#system_pop_confirm_content"),
		                        pop_confirm_div = mx("#system_pop_confirm_div");

		                    document.documentElement.onkeydown = null;
		                    mx(".vimtag_standard_buttons_green", pop_confirm_content)[0].onclick = null;
		                    mx(".vimtag_standard_buttons_red", pop_confirm_content)[0].onclick = null;

		                    pop_confirm_box[s_innerHTML] = "";
		                    pop_confirm_box.parentNode[s_removeChild](pop_confirm_box);
		                    pop_confirm_box = null;
		                };
            	  }else{
		                pop_confirm_content[s_innerHTML] =
		                     "<div style='padding-left:15px;padding-top:20px;font-weight:900;font-size:16px;color:#EEE'>" + obj.str + "</div>"
		                    +"<div style='position:absolute;bottom:15px'>"
		                    +   "<button class='standard_buttons_green' style='margin-left:25px'>" + button_left + "</button>"
		                    +   "<button class='standard_buttons_red' style='margin-left:45px'>" + button_right + "</button>"
		                    +"</div>";

		                mx(".standard_buttons_green", pop_confirm_content)[0].onclick = function(){
		                    var pop_confirm_box = mx("#system_pop_confirm_box"),
		                        pop_confirm_content = mx("#system_pop_confirm_content"),
		                        pop_confirm_div = mx("#system_pop_confirm_div");

		                    document.documentElement.onkeydown = null;
		                    mx(".standard_buttons_green", pop_confirm_content)[0].onclick = null;
		                    mx(".standard_buttons_red", pop_confirm_content)[0].onclick = null;

		                    pop_confirm_box[s_innerHTML] = "";
		                    pop_confirm_box.parentNode[s_removeChild](pop_confirm_box);
		                    pop_confirm_box = null;

		                    obj.callback_func(obj.param);
		                };
		                mx(".standard_buttons_red", pop_confirm_content)[0].onclick = function(){
		                    var pop_confirm_box = mx("#system_pop_confirm_box"),
		                        pop_confirm_content = mx("#system_pop_confirm_content"),
		                        pop_confirm_div = mx("#system_pop_confirm_div");

		                    document.documentElement.onkeydown = null;
		                    mx(".standard_buttons_green", pop_confirm_content)[0].onclick = null;
		                    mx(".standard_buttons_red", pop_confirm_content)[0].onclick = null;

		                    pop_confirm_box[s_innerHTML] = "";
		                    pop_confirm_box.parentNode[s_removeChild](pop_confirm_box);
		                    pop_confirm_box = null;
		                };
                }
            }
        }
    }

    function system_tooltip(obj)       //parent, offset_w, offset_h, type, position, disappear_way, str
    {
        var origin_left = 0, origin_top = 0, p = obj.parent,
            tooltip_div_dom,
            tooltip_content_dom,
            tooltip_arrow_dom,
            j_tooltip_content_dom,
            j_tooltip_arrow_dom;

        tooltip_div_dom = dom_create_child(g_page, "div", "system_tooltip");
        tooltip_content_dom = dom_create_child(tooltip_div_dom, "div", "system_tooltip_content");
        tooltip_arrow_dom = dom_create_child(tooltip_div_dom, "span", "system_tooltip_arrow");
        j_tooltip_div_dom = jQuery(tooltip_div_dom);
        j_tooltip_content_dom = jQuery(tooltip_content_dom);
        j_tooltip_arrow_dom = jQuery(tooltip_arrow_dom);

        tooltip_div_dom.style.width = (obj.str.length > 10 ? 10 : obj.str.length) * 25 + "px";

        function destroy_system_tooltip()
        {
            if(!tooltip_div_dom)return;
            tooltip_div_dom[s_innerHTML] = "";
            tooltip_div_dom.parentNode[s_removeChild](tooltip_div_dom);
            tooltip_div_dom = null;
            return 0;
        }

        if(obj.parent)
        {
            while(p !== null)
            {
                origin_left += p.offsetLeft;
                origin_top += p.offsetTop;
                p = p.offsetParent;
            }
        }

        if(obj.color == "red")
        {
            j_tooltip_content_dom.addClass("system_red_content");
            tooltip_content_dom[s_innerHTML] = obj.str;
            if(obj.position && obj.position == "right")
            {
                tooltip_div_dom.style.top = origin_top + "px";
                tooltip_div_dom.style.left = (origin_left + obj.parent.offsetWidth) + "px";
                tooltip_arrow_dom.style.left = "0px";
                tooltip_arrow_dom.style.top = (tooltip_content_dom.offsetHeight - tooltip_arrow_dom.offsetHeight) / 2 + "px";
                tooltip_content_dom.style.left = tooltip_arrow_dom.offsetWidth + "px";
                j_tooltip_content_dom.addClass("system_red_content_left");
                j_tooltip_arrow_dom.addClass("system_red_arrow_left");
            }
            else if(obj.position == "left")
            {
                tooltip_div_dom.style.top = origin_top + "px";
                tooltip_div_dom.style.left = (origin_left - tooltip_div_dom.offsetWidth) + "px";
                tooltip_arrow_dom.style.right = "0px";
                tooltip_arrow_dom.style.top = (tooltip_content_dom.offsetHeight - tooltip_arrow_dom.offsetHeight) / 2 + "px";
                tooltip_content_dom.style.right = tooltip_arrow_dom.offsetWidth + "px";
                j_tooltip_content_dom.addClass("system_red_content_right");
                j_tooltip_arrow_dom.addClass("system_red_arrow_right");
            }
        }
        else if(obj.color == "green")
        {
            j_tooltip_content_dom.addClass("system_green_content");
            tooltip_content_dom[s_innerHTML] = obj.str;
            if(obj.position == "right")
            {
                tooltip_div_dom.style.top = origin_top + "px";
                tooltip_div_dom.style.left = (origin_left + obj.parent.offsetWidth) + "px";
                tooltip_arrow_dom.style.left = "0px";
                tooltip_arrow_dom.style.top = (tooltip_content_dom.offsetHeight - tooltip_arrow_dom.offsetHeight) / 2 + "px";
                tooltip_content_dom.style.left = tooltip_arrow_dom.offsetWidth + "px";
                j_tooltip_content_dom.addClass("system_green_content_left");
                j_tooltip_arrow_dom.addClass("system_green_arrow_left");
            }
            else if(obj.position == "left")
            {
                tooltip_div_dom.style.top = origin_top + "px";
                tooltip_div_dom.style.left = (origin_left - tooltip_div_dom.offsetWidth) + "px";
                tooltip_arrow_dom.style.right = "0px";
                tooltip_arrow_dom.style.top = (tooltip_content_dom.offsetHeight - tooltip_arrow_dom.offsetHeight) / 2 + "px";
                tooltip_content_dom.style.right = tooltip_arrow_dom.offsetWidth + "px";
                j_tooltip_content_dom.addClass("system_green_content_right");
                j_tooltip_arrow_dom.addClass("system_green_arrow_right");
            }
        }
        else if(obj.color == "white")
        {
            j_tooltip_content_dom.addClass("system_white_content");
            tooltip_content_dom[s_innerHTML] = obj.str;
            if(obj.position && obj.position == "right")
            {
                tooltip_div_dom.style.top = origin_top + "px";
                tooltip_div_dom.style.left = (origin_left + obj.parent.offsetWidth) + "px";
                tooltip_arrow_dom.style.left = "0px";
                tooltip_arrow_dom.style.top = (tooltip_content_dom.offsetHeight - tooltip_arrow_dom.offsetHeight) / 2 + "px";
                tooltip_content_dom.style.left = tooltip_arrow_dom.offsetWidth + "px";
                j_tooltip_content_dom.addClass("system_white_content_left");
                j_tooltip_arrow_dom.addClass("system_white_arrow_left");
            }
        }
        else if(obj.color == "gray")
        {
            j_tooltip_content_dom.addClass("system_gray_content");
            tooltip_content_dom[s_innerHTML] = obj.str;
            if(obj.position == "right")
            {
                tooltip_div_dom.style.top = origin_top + "px";
                tooltip_div_dom.style.left = (origin_left + (obj.parent?obj.parent.offsetWidth:0)) + "px";
                tooltip_arrow_dom.style.left = "0px";
                tooltip_arrow_dom.style.top = (tooltip_content_dom.offsetHeight - tooltip_arrow_dom.offsetHeight) / 2 + "px";
                tooltip_content_dom.style.left = tooltip_arrow_dom.offsetWidth + "px";
                j_tooltip_content_dom.addClass("system_gray_content_left");
                j_tooltip_arrow_dom.addClass("system_gray_arrow_left");
            }
            else if(obj.position == "left")
            {
                tooltip_div_dom.style.top = origin_top + "px";
                tooltip_div_dom.style.left = (origin_left - tooltip_div_dom.offsetWidth) + "px";
                tooltip_arrow_dom.style.right = "0px";
                tooltip_arrow_dom.style.top = (tooltip_content_dom.offsetHeight - tooltip_arrow_dom.offsetHeight) / 2 + "px";
                tooltip_content_dom.style.right = tooltip_arrow_dom.offsetWidth + "px";
                j_tooltip_content_dom.addClass("system_gray_content_right");
                j_tooltip_arrow_dom.addClass("system_gray_arrow_right");
            }
        }
        else if(obj.color == "black")
        {
            j_tooltip_content_dom.addClass("system_black_content");
            tooltip_content_dom[s_innerHTML] = obj.str;
            if(obj.position && obj.position == "right")
            {
                tooltip_div_dom.style.top = origin_top + "px";
                tooltip_div_dom.style.left = (origin_left + obj.parent.offsetWidth) + "px";
                tooltip_arrow_dom.style.left = "0px";
                tooltip_arrow_dom.style.top = (tooltip_content_dom.offsetHeight - tooltip_arrow_dom.offsetHeight) / 2 + "px";
                tooltip_content_dom.style.left = tooltip_arrow_dom.offsetWidth + "px";
                j_tooltip_content_dom.addClass("system_black_content_left");
                j_tooltip_arrow_dom.addClass("system_black_arrow_left");
            }
        }
        j_tooltip_div_dom.hide();
        j_tooltip_div_dom.fadeIn(500, function() {
            g_j_page.one("mousedown", function(e) {
                if(tooltip_div_dom)
                {
                    j_tooltip_div_dom.fadeOut(300, function() {
                        destroy_system_tooltip();
                    });
                }
            });
            g_j_page.one("keydown", function(e) {
                if(tooltip_div_dom)
                {
                    j_tooltip_div_dom.fadeOut(300, function() {
                        destroy_system_tooltip();
                    });
                }
            });
        });
    }
    
    function sdc_decode(pcomp,record_num)
    {
        var l_data=[],l_data_index=0,
        l_pcomp=mcodec.b64_2_binary(pcomp),
        l_sdc_len=l_pcomp.length,
        l_record_num=record_num,
        l_base,l_base_len,l_pcomp_index=0;
        if (sdc_base_decode())return ;
        for(l_pcomp_index=l_base_len; l_pcomp_index<l_sdc_len;){
            if (sdc_group_decode()) break;
        }
        return array_to_string();
        function sdc_base_decode()  /*decode the base area data*/
        {
            var bytes,value;
            var pbase=l_pcomp[0];
            if(l_sdc_len < 1){
                return 1;
            }
            bytes = pbase & 0xf;
            l_base_len = bytes + 1;
            l_base = pbase >> 4;
            if(bytes>0){
                if((bytes*8+4)>32){
                    l_base=big_number_operation(l_base,bytes,0);		
                }else{
                    for(i=1;i<l_base_len;i++){		                        	
                        l_base |= ((l_pcomp[i]) << ((i-1) * 8 + 4));
                    }
                }
            }
            l_data[0]=l_base;
            return 0;
        }
        function sdc_group_decode()   /*decode the group area data*/
        {
            var pdelta,is_compress,plen,i,pdata,value,plen_bytes;
            if(l_sdc_len < 1){
                return 1;
            }
            is_compress=(l_pcomp[l_pcomp_index]>=128); /*judge the group's first number is 1 or 0;*/		                		                
            for(i=0; i<4; i++)    /*get the item_num*/
            {
            	 if(i == 0){
            	 	  plen = l_pcomp[l_pcomp_index] & 0x7f;
            	 }else{
            	 	  plen =(plen << 8) | (l_pcomp[l_pcomp_index + i]);
            	 }		                	 
            }
            l_pcomp_index = l_pcomp_index +4;
            if(plen > l_record_num){
                return 1;
            }
            if(is_compress){ 
            	 var compress_data_delta = "";
            	 compress_data_delta = l_pcomp[l_pcomp_index]>> 4;
            	 var delta_num = l_pcomp[l_pcomp_index] & 0xf;
            	 var max_count = delta_num*8 +4;
               if(max_count>32){
                  var pdelta_array=big_number_operation(pdelta,delta_num,1);
               }else{
                  for (i = 0; i < delta_num; i++){
                      compress_data_delta |= ((l_pcomp[l_pcomp_index + 1 + i]) << (i * 8 + 4));
                  }
               }
            	 for(i=0;i<plen;i++){
              	 l_data_index ++;
                 if(l_data_index >= l_record_num) return 1;
              	 l_data[l_data_index]=(typeof(l_data[l_data_index -1])=="number" && !pdelta_array)?
              	   (l_data[l_data_index-1]+compress_data_delta):(big_number_add(l_data[l_data_index-1],pdelta_array?pdelta_array:compress_data_delta));
               }
               l_pcomp_index = l_pcomp_index + 1 +delta_num;
            }
            if(!is_compress && (plen != 0)){
                for(i=0;i<plen;i++){
                	  pdelta=l_pcomp[l_pcomp_index]>> 4;
                    var delta_num = l_pcomp[l_pcomp_index] & 0xf;

                    var max_count = delta_num*8 +4;
                    if(max_count>32){
                        var pdelta_array=big_number_operation(pdelta,delta_num,0);
                    }else{
                        for (var j = 0; j < delta_num; j++){
                            pdelta |= ((l_pcomp[l_pcomp_index + 1 + j]) << (j * 8 + 4));
                        }
                    }
                    l_data_index++;
                    if(l_data_index>=l_record_num) return 1;
                    l_data[l_data_index-1];
                    l_data[l_data_index]=(typeof(l_data[l_data_index-1])=="number" && !pdelta_array)?
                        (l_data[l_data_index-1]+pdelta):(big_number_add(l_data[l_data_index-1],pdelta_array?pdelta_array:pdelta));
                    l_pcomp_index = l_pcomp_index + 1 + delta_num;
                    pdelta = "";
                    pdelta_array = "";
                }
            }
            return 0;
        }
        function array_to_string()
        {
            for(var i=0;i<l_data.length;i++){
                if(l_data[i] instanceof Array){
                    l_data[i]="0x"+(l_data[i][0].toString(16))+(int_to_string_4(l_data[i][1]))+(int_to_string_4(l_data[i][2]))+(int_to_string_4(l_data[i][3]));
                }
            }  
            return l_data;
        }
        function int_to_string_4(data_int)
        {
            var ret_data=data_int.toString(16);
            return ret_data=(ret_data.length==4)?ret_data:(ret_data.length==3)?("0"+ret_data):(ret_data.length==2)?("00"+ret_data):("000"+ret_data);
        }
        function trans_to_4(data_int)
        {
        	 var return_data;
        	 return return_data=(data_int.length==4)?data_int:(data_int.length==3)?("0"+data_int):(data_int.length==2)?("00"+data_int):("000"+data_int);
        }
        function big_number_add(num_a,num_b)
        {
            var num=[],sum;
            num_a=to_big_number(num_a);
            num_b=to_big_number(num_b);
            var num_add=[],carry_num=0;
            for(var j=3;j>-1;j--){
              var c="0x"+num_a[j].toString(16);
              var d="0x"+num_b[j].toString(16);
              num_add[j]=(parseInt(c)+parseInt(d)+(carry_num?1:0)).toString(16);
              carry_num = ("0x"+num_add[j])&0x10000;
              if(carry_num) num_add[j]=(("0x"+num_add[j])&0xffff).toString(16);
            }
            sum=("0x"+num_add[0]+(trans_to_4(num_add[1]))+(trans_to_4(num_add[2]))+(trans_to_4(num_add[3])));
            for(var i=3;i>-1;i--){
                if(sum){
                    num[i]=parseInt(sum.substring((((sum.length-4)>0)?(sum.length-4):0),sum.length),16);
                    sum=sum.substring(0,(((sum.length-4)>0)?(sum.length-4):0));
                }
                else num[i]=0;
            }
//            if((num[0]==num[1]==num[2]==0)&&(num[3]<=3)){
//              return num[3];
//            }else{
            	return num;
//            }
        }
        function to_big_number(num)
        {
            var ret=[];
            if(typeof(num)=="number"){
                var tem_num=num.toString(2);
                if(tem_num.length<16){
                    return ret=[0,0,0,num];
                }else if(tem_num.length<32){
                    return ret=[0,0,num>>16,num&0xffff];
                }
            }
            else return num;
        }
        function big_number_operation(pdelta,delta_num,ptype)
        {
            var type_num=ptype?5:1;
            var tdelta=[0,0,0,pdelta];
            for (i = 0; i < delta_num; i++){
                var tcomp=l_pcomp[l_pcomp_index+type_num+i];
                var move_num=(i*8+4)+8;
                if(move_num<16){
                    tdelta[3] |= (tcomp << (move_num-8));
                }else if(move_num>16&&move_num<32){
                    if(move_num<24){
                        var digit=16-(32-move_num);
                        var tcomp_2=tcomp.toString(2);
                        tcomp_2=tcomp_2.substring(tcomp_2.length-digit,tcomp_2.length);
                        for(var j=0;j<32-move_num;j++){
                            tcomp_2+="0";
                        }
                        tdelta[3] |=parseInt(tcomp_2,2);
                        tdelta[2]|=tcomp>>(32-move_num-8);
                    }else{
                        tdelta[2] |= (tcomp << (move_num-16-8));
                    }
                }else if (move_num>32&&move_num<48){
                    if(move_num<40){
                        var digit=16-(48-move_num);
                        var tcomp_2=tcomp.toString(2);
                        tcomp_2=tcomp_2.substring(tcomp_2.length-digit,tcomp_2.length);
                        for(var j=0;j<48-move_num;j++){
                            tcomp_2+="0";
                        }
                        tdelta[2] |=parseInt(tcomp_2,2);
                        tdelta[1]|=tcomp>>(48-move_num-8);
                    }else{
                        tdelta[1] |= (tcomp << (move_num-32-8));
                    }
                }else if(move_num>48&&move_num<72){
                    if(move_num<56){
                        var digit=16-(64-move_num);
                        if(tcomp)
                        var tcomp_2=tcomp.toString(2);
                        tcomp_2=tcomp_2.substring(tcomp_2.length-digit,tcomp_2.length);
                        for(var j=0;j<64-move_num;j++){
                            tcomp_2+="0";
                        }
                        tdelta[1] |=parseInt(tcomp_2,2);
                        tdelta[0]|=tcomp>>(64-move_num-8);
                    }else{
                        tdelta[0] |= (tcomp << (move_num-48-8));
                    }
                }
            }
            return tdelta;
        }
    }
		function formatSeconds(value)
		{
    		var theTime = parseInt(value);
    		var theTime1 = 0;
    		if(theTime > 60){
    			theTime1 = parseInt(theTime/60);
    			theTime = parseInt(theTime%60);
    		}
    		theTime = theTime>9?theTime:"0"+theTime;
    		theTime1 = theTime1>9?theTime1:"0"+theTime1;
    		var result = ":" + theTime;            		
    		result = theTime1 +result;

    		return result;
    }	
//		function cutVideo(obj)
//		{
//				var l_local_segs= [],
//            l_segs = [],
//            local_segs_index = 0,
//            cut_video_data = [],
//            cut_video_data_index = 0,
//            cut_imgs_data = [],
//            cut_imgs_data_index = 0,
//            local_cut_video_data_index = 0,
//            local_cut_video_data = [],
//            local_video_time_duration = [],
//            local_video_time_duration_index = 0,
//            mark_video_segment_start_time=0,
//            video_clip_start_time=0,
//            mark_alarm=0,
//            cid,sid,stm,etm,f;
//            var select_incise_time;
//        
//        cid=sdc_decode(obj.msg.segs_sdc.cid,obj.msg.segs_sdc.record_num);
//        sid=sdc_decode(obj.msg.segs_sdc.sid,obj.msg.segs_sdc.record_num);
//        stm=sdc_decode(obj.msg.segs_sdc.stm,obj.msg.segs_sdc.record_num);
//        etm=sdc_decode(obj.msg.segs_sdc.etm,obj.msg.segs_sdc.record_num);
//        f=sdc_decode(obj.msg.segs_sdc.f,obj.msg.segs_sdc.record_num);
//        if(g_select_incise_time == "5min"){           
//            select_incise_time = 5*60*1000;
//        }else if(g_select_incise_time == "1h"){
//            select_incise_time = 60*60*1000;
//        }else{
//            select_incise_time = 30*60*1000;
//        }
//        if(!cid || !sid || !stm || !etm || !f){
//        	return;
//        }else{
//          for(var i=0;i<(cid?cid.length:0);i++){
//          	 var flag=parseInt(f[i],16);
//             l_segs[i]={cid:cid[i],sid:sid[i],stm:stm[i],etm:etm[i],f:flag};
//          }
//        }
//        draw_data_rect({base_start_time:obj.base_start_time, dev_sn:obj.dev_sn});
//            
//				function draw_data_rect(obj)
//				{
//						for(var i=0;i<l_segs.length;i++){
//        	  	  var video_segment_start_time = parseInt((l_segs[i].stm),16);
//        	  	  var video_segment_end_time = parseInt((l_segs[i].etm),16);
//        	  	 
//        	  	  if(video_segment_start_time < obj.base_start_time) continue;
//        	  	  l_local_segs[local_segs_index]=
//                {
//                   pos_start:video_segment_start_time,
//                   pos_end:video_segment_end_time,
//                   token:obj.dev_sn+"_"+l_segs[i].cid+"_"+l_segs[i].sid,
//                   pic_token:obj.dev_sn+"_p3_"+l_segs[i].cid+"_"+l_segs[i].sid,
//                   f:l_segs[i].f
//                };
//                local_segs_index++;		        	  	 		        	  	 
//        	  }
//        	  for(var j=0;j<=(local_segs_index-1);j++){
//        	  		if(mark_video_segment_start_time == 0){
//              	 	 mark_video_segment_start_time = l_local_segs[0].pos_start,
//              	 	 video_clip_start_time = l_local_segs[0].pos_end
//            	  }
//            	  /*To get the picture*/
//            	  if(l_local_segs[j].f){
//            	  	 cut_imgs_data[cut_imgs_data_index]=
//            	  	 {
//            	  	   pos_start:l_local_segs[j].pos_start,
//            	  	   pos_end:l_local_segs[j].pos_end,
//            	  	   token:l_local_segs[j].token,
//            	  	   pic_token:l_local_segs[j].pic_token,
//            	  	   f:l_local_segs[j].f  
//            	  	 }
//            	  	 cut_imgs_data_index++;
//            	  }
//            	  
//            	  if(l_local_segs[j].f&&(l_local_segs[j].pos_start==l_local_segs[j].pos_end)){
//            	     continue; 
//            	  }else {
//            	  	 if(j==local_segs_index-1){
//            	  	 	   if(j!=0){
//	            	  	 	    if((l_local_segs[j].pos_start - video_clip_start_time <= 16*1000)&&(l_local_segs[j].pos_end - mark_video_segment_start_time < select_incise_time))
//			            	      {
//				            	 	     cut_video_data[cut_video_data_index]=
//				            	 	     {
//				            	 	   		  pos_start:l_local_segs[j].pos_start,
//				            	 	   		  pos_end:l_local_segs[j].pos_end,
//				            	 	   		  token:l_local_segs[j].token,
//				            	 	   		  pic_token:l_local_segs[j].pic_token,
//				            	 	   		  f:l_local_segs[j].f
//				            	 	     }
//				            	 	     if(l_local_segs[j].f) mark_alarm = 1;
//				            	 	     cut_video_data_index++;
//			            	      }
//			            	   } 
//			            	   cut_video_data[cut_video_data_index]=
//		            	 	   {
//		            	 	   		pos_start:l_local_segs[j].pos_start,
//		            	 	   		pos_end:l_local_segs[j].pos_end,
//		            	 	   		token:l_local_segs[j].token,
//		            	 	   		pic_token:l_local_segs[j].pic_token,
//		            	 	   		f:l_local_segs[j].f
//		            	 	   }
//		            	 	   if(l_local_segs[j].f) mark_alarm = 1;
//		            	  	 local_cut_video_data[local_cut_video_data_index]=
//		            	  	 {
//		            	  	 	  cut_video_data:cut_video_data,
//		            	  	 	  mark_alarm:mark_alarm              	  	 	  
//		            	  	 }
//		            	  	 cut_video_data=[];
//		            	  	 cut_video_data_index = 0;
//		            	  	 mark_alarm=0;
//		            	  	 local_cut_video_data_index++;
//		            	 }else {
//            	  	     if((l_local_segs[j+1].pos_start - video_clip_start_time <= 16*1000)&&(l_local_segs[j+1].pos_end - mark_video_segment_start_time < select_incise_time)){
//            	  	        cut_video_data[cut_video_data_index]=
//				                  {
//				                     pos_start:l_local_segs[j].pos_start,
//				            	       pos_end:l_local_segs[j].pos_end,
//				            	       token:l_local_segs[j].token,
//				            	       pic_token:l_local_segs[j].pic_token,
//				            	       f:l_local_segs[j].f
//				                  }
//				                  if(l_local_segs[j].f) mark_alarm=1;
//				                  video_clip_start_time=l_local_segs[j+1].pos_end; 
//				                  cut_video_data_index++;
//            	  	     }else{
//            	  	        cut_video_data[cut_video_data_index]=
//				                  {
//				                     pos_start:l_local_segs[j].pos_start,
//				            	       pos_end:l_local_segs[j].pos_end,
//				            	       token:l_local_segs[j].token,
//				            	       pic_token:l_local_segs[j].pic_token,
//				            	       f:l_local_segs[j].f
//				                  }
//				            	 	  if(l_local_segs[j].f) mark_alarm=1; 
//				                  local_cut_video_data[local_cut_video_data_index]=
//				                  {
//				                     cut_video_data:cut_video_data,
//				                     mark_alarm:mark_alarm               	  	 	  
//				                  }
//				                  cut_video_data=[];
//				                  cut_video_data_index = 0;
//				                  mark_alarm=0;
//				                  local_cut_video_data_index++;
//				                  mark_video_segment_start_time = l_local_segs[j+1].pos_start;	
//				                  video_clip_start_time = l_local_segs[j+1].pos_end; 
//            	  	     }
//            	  	 }
//            	  }
//        	  }
//        	  if(cut_video_data.length)
//        	  {
//        	  	  local_cut_video_data[local_cut_video_data_index]=
//        	  	  {
//        	  	 	   cut_video_data:cut_video_data,
//        	  	 	   mark_alarm:mark_alarm
//        	  	  }
//        	  	  cut_video_data=[];
//        	  	  cut_video_data_index = 0;
//        	  	  mark_alarm=0;
//        	  }
//        	  for(var m=0;m<local_cut_video_data.length;m++)
//        	  {
//        	  	  var len = local_cut_video_data[m].cut_video_data.length;
//        	  	  var video_time_duration_start = parseInt(local_cut_video_data[m].cut_video_data[0].pos_start);
//        	  	  var video_time_duration_end = parseInt(local_cut_video_data[m].cut_video_data[len-1].pos_end);
//        	  	  var video_time_duration = (video_time_duration_end - video_time_duration_start)/1000;
//        	  	  var video_time_start = new Date(local_cut_video_data[m].cut_video_data[0].pos_start).format("hh:mm:ss");
//        	  	  var video_time_end = new Date(local_cut_video_data[m].cut_video_data[len-1].pos_end).format("hh:mm:ss");
//        	  	  local_video_time_duration[local_video_time_duration_index]=
//        	  	  {
//        	  	 	   time_duration:formatSeconds(video_time_duration),
//        	  	 	   time_start:video_time_start,
//        	  	 	   time_end:video_time_end
//        	  	  };
//        	  	  local_video_time_duration_index++;		        	  	
//        	  }
//				}
//				var cutVideoData = {local_cut_video_data:local_cut_video_data,local_video_time_duration:local_video_time_duration,cut_imgs_data:cut_imgs_data}; 
//				return cutVideoData;
//		}
		function cutVideo(obj)
		{
			        var l_local_segs= [],
            l_segs = [],
            local_segs_index = 0,
            cid,sid,stm,etm,f;
        
        cid=sdc_decode(obj.msg.segs_sdc.cid,obj.msg.segs_sdc.record_num);
        sid=sdc_decode(obj.msg.segs_sdc.sid,obj.msg.segs_sdc.record_num);
        stm=sdc_decode(obj.msg.segs_sdc.stm,obj.msg.segs_sdc.record_num);
        etm=sdc_decode(obj.msg.segs_sdc.etm,obj.msg.segs_sdc.record_num);
        f=sdc_decode(obj.msg.segs_sdc.f,obj.msg.segs_sdc.record_num);
        if(!cid || !sid || !stm || !etm || !f){
        	return;
        }else{
          for(var i=0;i<(cid?cid.length:0);i++){
                 var flag=parseInt(f[i],16);
             l_segs[i]={cid:cid[i],sid:sid[i],stm:stm[i],etm:etm[i],f:f[i]};
          }
        }
        for(var i=0;i<l_segs.length;i++){
        	var video_segment_start_time = parseInt((l_segs[i].stm),16);
        	var video_segment_end_time = parseInt((l_segs[i].etm),16);
        	  	 
        	if(video_segment_start_time < obj.base_start_time) continue;
        	l_local_segs[local_segs_index]=
          {
            pos_start:video_segment_start_time,
            pos_end:video_segment_end_time,
            token:obj.dev_sn+"_"+l_segs[i].cid+"_"+l_segs[i].sid,
            pic_token:obj.dev_sn+"_p3_"+l_segs[i].cid+"_"+l_segs[i].sid,
            f:l_segs[i].f
          };
          local_segs_index++;		        	  	 		        	  	 
        }
        return l_local_segs;
    }
    /*To get the video*/        
		function draw_data_rect(obj)
		{
			  var cut_video_data = [],
            cut_video_data_index = 0,
            local_cut_video_data_index = 0,
            local_cut_video_data = [],
            local_video_time_duration = [],
            local_video_time_duration_index = 0,
            mark_video_segment_start_time=0,
            video_clip_start_time=0,
            mark_alarm="",
            select_incise_time;
        if(g_select_incise_time == "5min"){           
            select_incise_time = 5*60*1000;
        }else if(g_select_incise_time == "1h"){
            select_incise_time = 60*60*1000;
        }else{
            select_incise_time = 30*60*1000;
        }
        var l_local_segs = obj.videosegs, local_segs_index=obj.videosegs.length;
        for(var j=0;j<=(local_segs_index-1);j++){
        	  if(mark_video_segment_start_time == 0){
              	mark_video_segment_start_time = l_local_segs[0].pos_start,
              	video_clip_start_time = l_local_segs[0].pos_end
            }
  
            if(l_local_segs[j].f&&(l_local_segs[j].pos_start==l_local_segs[j].pos_end)){
            	  continue; 
            }else {
            	  /*mark_ico mean the source of alarm, mark_ico[0] mean alarm, mark_ico[1] mean snapshot*/
            	  function mark_alarm_info(a){
            	      var mark_ico=[0,0];
            	      if((l_local_segs[a].f==1)||(l_local_segs[a].f==3)){
				            	mark_ico[0] = 1;
				            }else if (l_local_segs[a].f==2){ 
				            	mark_ico[1] = 2;
				            }
				            return mark_ico;
            	  }
            	  if(j==local_segs_index-1){
            	  	 	if(j!=0){
	            	  	 	  if((l_local_segs[j].pos_start - video_clip_start_time <= 16*1000)&&(l_local_segs[j].pos_end - mark_video_segment_start_time < select_incise_time))
			            	    {
				            	 	    cut_video_data[cut_video_data_index]=
				            	 	    {
				            	 	   		 pos_start:l_local_segs[j].pos_start,
				            	 	   		 pos_end:l_local_segs[j].pos_end,
				            	 	   		 token:l_local_segs[j].token,
				            	 	   		 pic_token:l_local_segs[j].pic_token,
				            	 	   		 f:l_local_segs[j].f
				            	 	    }
				            	 	    if(l_local_segs[j].f) mark_alarm = mark_alarm_info(j);
				            	 	    cut_video_data_index++;
			            	    }
			            	} 
			            	cut_video_data[cut_video_data_index]=
		            	 	{
		            	 	   	pos_start:l_local_segs[j].pos_start,
		            	 	   	pos_end:l_local_segs[j].pos_end,
		            	 	   	token:l_local_segs[j].token,
		            	 	   	pic_token:l_local_segs[j].pic_token,
		            	 	   	f:l_local_segs[j].f
		            	 	}
		            	 	if(l_local_segs[j].f) mark_alarm = mark_alarm_info(j);
		            	  local_cut_video_data[local_cut_video_data_index]=
		            	  {
		            	  	 	cut_video_data:cut_video_data,
		            	  	 	mark_alarm:mark_alarm              	  	 	  
		            	  }
		            	  cut_video_data=[];
		            	  cut_video_data_index = 0;
		            	  mark_alarm="";
		            	  local_cut_video_data_index++;
		            }else {
            	  	  if((l_local_segs[j+1].pos_start - video_clip_start_time <= 16*1000)&&(l_local_segs[j+1].pos_end - mark_video_segment_start_time < select_incise_time)){
            	  	      cut_video_data[cut_video_data_index]=
				                {
				                   pos_start:l_local_segs[j].pos_start,
				            	     pos_end:l_local_segs[j].pos_end,
				            	     token:l_local_segs[j].token,
				            	     pic_token:l_local_segs[j].pic_token,
				            	     f:l_local_segs[j].f
				                }
				                if(l_local_segs[j].f) mark_alarm = mark_alarm_info(j);
				                video_clip_start_time=l_local_segs[j+1].pos_end; 
				                cut_video_data_index++;
            	  	  }else{
            	  	      cut_video_data[cut_video_data_index]=
				                {
				                   pos_start:l_local_segs[j].pos_start,
				            	     pos_end:l_local_segs[j].pos_end,
				            	     token:l_local_segs[j].token,
				            	     pic_token:l_local_segs[j].pic_token,
				            	     f:l_local_segs[j].f
				                }
				            	 	if(l_local_segs[j].f) mark_alarm = mark_alarm_info(j);
				                local_cut_video_data[local_cut_video_data_index]=
				                {
				                   cut_video_data:cut_video_data,
				                   mark_alarm:mark_alarm               	  	 	  
				                }
				                cut_video_data=[];
				                cut_video_data_index = 0;
				                mark_alarm="";
				                local_cut_video_data_index++;
				                mark_video_segment_start_time = l_local_segs[j+1].pos_start;	
				                video_clip_start_time = l_local_segs[j+1].pos_end; 
            	  	  }
            	  }
            }
        }
        if(cut_video_data.length)
        {
        	  local_cut_video_data[local_cut_video_data_index]=
        	  {
        	  	 	cut_video_data:cut_video_data,
        	  	 	mark_alarm:mark_alarm
        	  }
        	  cut_video_data=[];
        	  cut_video_data_index = 0;
        	  mark_alarm="";
        }
        for(var m=0;m<local_cut_video_data.length;m++)
        {
        	  var len = local_cut_video_data[m].cut_video_data.length;
        	  var video_time_duration_start = parseInt(local_cut_video_data[m].cut_video_data[0].pos_start);
        	  var video_time_duration_end = parseInt(local_cut_video_data[m].cut_video_data[len-1].pos_end);
        	  var video_time_duration = (video_time_duration_end - video_time_duration_start)/1000;
        	  var video_time_start = new Date(local_cut_video_data[m].cut_video_data[0].pos_start).format("hh:mm:ss");
        	  var video_time_end = new Date(local_cut_video_data[m].cut_video_data[len-1].pos_end).format("hh:mm:ss");
        	  local_video_time_duration[local_video_time_duration_index]=
        	  {
        	  	 	time_duration:formatSeconds(video_time_duration),
        	  	 	time_start:video_time_start,
        	  	 	time_end:video_time_end
        	  };
        	  local_video_time_duration_index++;		        	  	
        }
        if(obj.type=="alarm"){
            var len=local_cut_video_data.length,
                alarm_video_data=[],
                alarm_video_duration=[],
                alarm_video_data_index=0;
            for(var i=0;i<len;i++){
              if(local_cut_video_data[i].mark_alarm){
                if(local_cut_video_data[i].mark_alarm[0]){
                  alarm_video_data[alarm_video_data_index]=local_cut_video_data[i];
                  alarm_video_duration[alarm_video_data_index]=local_video_time_duration[i];
                  alarm_video_data_index++;
                }
              }  
            }
            var cutVideoData = {local_cut_video_data:alarm_video_data,local_video_time_duration:alarm_video_duration}; 
				    return cutVideoData;
				}else if(obj.type=="snapshot"){
					  var len0=local_cut_video_data.length,
					      snapshot_video_data=[],
					      snapshot_video_duration=[],
					      snapshot_video_data_index=0;
					  for(var k=0;k<len0;k++){
					    if(local_cut_video_data[k].mark_alarm){
					      if(local_cut_video_data[k].mark_alarm[1]){
					        snapshot_video_data[snapshot_video_data_index]=local_cut_video_data[k];
					        snapshot_video_duration[snapshot_video_data_index]=local_video_time_duration[k];
					        snapshot_video_data_index++;
					      }
					    }
					  }
					  var cutVideoData = {local_cut_video_data:snapshot_video_data,local_video_time_duration:snapshot_video_duration}; 
				    return cutVideoData;
        }else {
        	  var cutVideoData = {local_cut_video_data:local_cut_video_data,local_video_time_duration:local_video_time_duration}; 
				    return cutVideoData;
        }
		}
		/*To get the snapshot picture*/
		function get_snapshot_pic(obj){
			  var cut_imgs_data = [],
            cut_imgs_data_index = 0,
            cut_alarm_imgs_data = [],
            cut_alarm_imgs_data_index =0,
            cut_snapshot_imgs_data = [],
            cut_snapshot_imgs_data_index =0,
		        l_local_segs = obj.videosegs, 
		        local_segs_index=obj.videosegs.length;
        for(var j=0;j<=(local_segs_index-1);j++){
            if(l_local_segs[j].f){
            	  cut_imgs_data[cut_imgs_data_index]=
            	  {
            	  	  pos_start:l_local_segs[j].pos_start,
            	  	  pos_end:l_local_segs[j].pos_end,
            	  	  token:l_local_segs[j].token,
            	  	  pic_token:l_local_segs[j].pic_token,
            	  	  f:l_local_segs[j].f  
            	  }
            	  cut_imgs_data_index++;
            }
            if((l_local_segs[j].f==1)||(l_local_segs[j].f==3)){
                cut_alarm_imgs_data[cut_alarm_imgs_data_index]=
                {
                	  pos_start:l_local_segs[j].pos_start,
            	  	  pos_end:l_local_segs[j].pos_end,
            	  	  token:l_local_segs[j].token,
            	  	  pic_token:l_local_segs[j].pic_token,
            	  	  f:l_local_segs[j].f
                }
                cut_alarm_imgs_data_index++;
            }
            if(l_local_segs[j].f==2){
                cut_snapshot_imgs_data[cut_snapshot_imgs_data_index]=
                {
                	  pos_start:l_local_segs[j].pos_start,
            	  	  pos_end:l_local_segs[j].pos_end,
            	  	  token:l_local_segs[j].token,
            	  	  pic_token:l_local_segs[j].pic_token,
            	  	  f:l_local_segs[j].f
                }
                cut_snapshot_imgs_data_index++;
            }
        }
        var imgs_data = {imgs_data:cut_imgs_data,alarm_imgs_data:cut_alarm_imgs_data,snapshot_imgs_data:cut_snapshot_imgs_data};
        return imgs_data;
		}
		function get_video_snapshot(obj)
		{
				var cut_video_data = [],
            cut_video_data_index = 0,
            local_cut_video_data_index = 0,
            local_cut_video_data = [],
            local_video_time_duration = [],
            local_video_time_duration_index = 0,
            mark_video_segment_start_time=0,
            mark_alarm="",
            l_local_segs = obj.videosegs, 
		        local_segs_index=obj.videosegs.length;

            var select_incise_time;
            if(g_select_incise_time == "5min"){           
              select_incise_time = 5*60*1000;
            }else if(g_select_incise_time == "1h"){
              select_incise_time = 60*60*1000;
            }else{
              select_incise_time = 30*60*1000;
            }
        	  for(var j=0;j<=(local_segs_index-1);j++){
        	  	  /*mark_ico mean the source of alarm, mark_ico[0] mean alarm, mark_ico[1] mean snapshot*/
            	  function mark_alarm_info(a){
            	      var mark_ico=[0,0];
            	      if((l_local_segs[a].f==1)||(l_local_segs[a].f==3)){
				            	mark_ico[0] = 1;
				            }else if (l_local_segs[a].f==2){ 
				            	mark_ico[1] = 2;
				            }
				            return mark_ico;
            	  }
            	  function mark_cut_video(b){
            	      var mark_video_ico=[0,0];
            	      if((cut_video_data[b].f==1)||(cut_video_data[b].f==3)){
            	        mark_video_ico[0]=1;
            	      }else if(cut_video_data[b].f==2){
            	        mark_video_ico[1]=2;
            	      }
            	      return mark_video_ico;
            	  }
        	  		if(mark_video_segment_start_time == 0){
              	 	 mark_video_segment_start_time = l_local_segs[0].pos_start
            	  }
            	  /*To get the picture*/
            	  if(l_local_segs[j].f && (l_local_segs[j].pos_start == l_local_segs[j].pos_end)){
            	  	 if(cut_video_data.length){
            	  	 	  local_cut_video_data[local_cut_video_data_index]=
            	  	 	  {
	            	  	 	   cut_video_data:cut_video_data,
	            	  	 	   mark_alarm:mark_alarm               	  	 	  
	            	  	  }
	            	  	  cut_video_data=[];
	            	  	  cut_video_data_index = 0;
	            	  	  mark_alarm = "";
            	  	    local_cut_video_data_index++;
            	  	 }
            	  	 cut_video_data[cut_video_data_index]=
            	  	 {
            	  	 		pos_start:l_local_segs[j].pos_start,
            	  	 		pos_end:l_local_segs[j].pos_end,
            	  	 		token:l_local_segs[j].token,
            	  	 		pic_token:l_local_segs[j].pic_token,
            	  	 		f:l_local_segs[j].f
            	  	 }
            	  	 if(l_local_segs[j].f) mark_alarm = mark_alarm_info(j);
            	  	 local_cut_video_data[local_cut_video_data_index]=
            	  	 {
            	  	 	  cut_video_data:cut_video_data,
            	  	 	  mark_alarm:mark_alarm               	  	 	  
            	  	 }
            	  	 cut_video_data=[];
            	  	 cut_video_data_index = 0;
            	  	 mark_alarm="";
            	  	 local_cut_video_data_index++;
            	  	 if(j!= local_segs_index-1) mark_video_segment_start_time = l_local_segs[j+1].pos_start;
            	  }else {
            	  	 if(j == local_segs_index-1){
            	  	 	   if(j!=0){
	            	  	 	    if((l_local_segs[j].pos_start - l_local_segs[j-1].pos_end <= 16*1000) && (l_local_segs[j].pos_end - mark_video_segment_start_time < select_incise_time))
			            	      {
				            	 	     cut_video_data[cut_video_data_index]=
				            	 	     {
				            	 	   		  pos_start:l_local_segs[j].pos_start,
				            	 	   		  pos_end:l_local_segs[j].pos_end,
				            	 	   		  token:l_local_segs[j].token,
				            	 	   		  pic_token:l_local_segs[j].pic_token,
				            	 	   		  f:l_local_segs[j].f
				            	 	     }
				            	 	     if(l_local_segs[j].f) mark_alarm = mark_alarm_info(j);
				            	 	     cut_video_data_index++;
			            	      }
			            	   } 
			            	   cut_video_data[cut_video_data_index]=
		            	 	   {
		            	 	   		pos_start:l_local_segs[j].pos_start,
		            	 	   		pos_end:l_local_segs[j].pos_end,
		            	 	   		token:l_local_segs[j].token,
		            	 	   		pic_token:l_local_segs[j].pic_token,
		            	 	   		f:l_local_segs[j].f
		            	 	   }
		            	 	   if(l_local_segs[j].f) mark_alarm = mark_alarm_info(j);
		            	 	   
		            	  	 local_cut_video_data[local_cut_video_data_index]=
		            	  	 {
		            	  	 	  cut_video_data:cut_video_data,
		            	  	 	  mark_alarm:mark_alarm              	  	 	  
		            	  	 }
		            	  	 mark_alarm="";
		            	  	 local_cut_video_data_index++;
		            	  	 for(var n=0,length=cut_video_data.length;n< length;n++){
				            	   if(cut_video_data[n].f){
				            	  	 var img_data=[], img_data_index=0;
				            	  	 img_data[img_data_index] = 
				            	  	 {
				            	  	   pos_start:cut_video_data[n].pos_start,
				            	 	   	 pos_end:cut_video_data[n].pos_end,
				            	 	   	 token:cut_video_data[n].token,
				            	 	   	 pic_token:cut_video_data[n].pic_token,
				            	 	   	 f:cut_video_data[n].f
				            	  	 } 
				            	  	 if(cut_video_data[n].f) mark_alarm = mark_cut_video(n);
				            	  	 local_cut_video_data[local_cut_video_data_index]=
				            	  	 {
				            	  	 	 cut_video_data:img_data,
				            	  	 	 mark_alarm:mark_alarm              	  	 	  
				            	  	 }
				            	  	 mark_alarm="";
				            	  	 local_cut_video_data_index++; 
				            	   }
				            	 }
				            	 cut_video_data=[];
		            	  	 cut_video_data_index = 0;
            	  	 }else{ 
			        	  	   if((l_local_segs[j+1].pos_start - l_local_segs[j].pos_end <= 16*1000) && (l_local_segs[j+1].pos_end - mark_video_segment_start_time < select_incise_time))
			            	   {
				            	 	   cut_video_data[cut_video_data_index]=
				            	 	   {
				            	 	   		pos_start:l_local_segs[j].pos_start,
				            	 	   		pos_end:l_local_segs[j].pos_end,
				            	 	   		token:l_local_segs[j].token,
				            	 	   		pic_token:l_local_segs[j].pic_token,
				            	 	   		f:l_local_segs[j].f
				            	 	   }
				            	 	   if(l_local_segs[j].f) mark_alarm = mark_alarm_info(j);
				            	 	   cut_video_data_index++;
			            	   }else{
				            	  	 cut_video_data[cut_video_data_index]=
				            	 	   {
				            	 	   		pos_start:l_local_segs[j].pos_start,
				            	 	   		pos_end:l_local_segs[j].pos_end,
				            	 	   		token:l_local_segs[j].token,
				            	 	   		pic_token:l_local_segs[j].pic_token,
				            	 	   		f:l_local_segs[j].f
				            	 	   }
				            	 	   if(l_local_segs[j].f) mark_alarm = mark_alarm_info(j);
				            	  	 local_cut_video_data[local_cut_video_data_index]=
				            	  	 {
				            	  	 	  cut_video_data:cut_video_data,
				            	  	 	  mark_alarm:mark_alarm               	  	 	  
				            	  	 }
				            	  	 mark_alarm="";
				            	  	 local_cut_video_data_index++;
				            	  	 for(var n=0,length=cut_video_data.length;n< length;n++){
				            	  	    if(cut_video_data[n].f){
				            	  	    	var img_data=[], img_data_index=0;
				            	  	      img_data[img_data_index] = 
				            	  	      {
				            	  	      	pos_start:cut_video_data[n].pos_start,
				            	 	   		    pos_end:cut_video_data[n].pos_end,
				            	 	   		    token:cut_video_data[n].token,
				            	 	   		    pic_token:cut_video_data[n].pic_token,
				            	 	   		    f:cut_video_data[n].f
				            	  	      } 
				            	  	      if(cut_video_data[n].f) mark_alarm = mark_cut_video(n);
				            	  	      local_cut_video_data[local_cut_video_data_index]=
				            	  	      {
				            	  	 	      cut_video_data:img_data,
				            	  	 	      mark_alarm:mark_alarm              	  	 	  
				            	  	      }
				            	  	      mark_alarm="";
				            	  	      local_cut_video_data_index++; 
				            	  	    }
				            	  	 }
				            	  	 cut_video_data=[];
				            	  	 cut_video_data_index = 0;
				            	  	 mark_video_segment_start_time = l_local_segs[j+1].pos_start;
			            	   }
	            	   } 
            	  }               	  
        	  }
        	  if(cut_video_data.length)
        	  {
        	  	  local_cut_video_data[local_cut_video_data_index]=
        	  	  {
        	  	 	   cut_video_data:cut_video_data,
        	  	 	   mark_alarm:mark_alarm
        	  	  }
        	  	  cut_video_data=[];
        	  	  cut_video_data_index = 0;
        	  	  mark_alarm="";
        	  }
        	  for(var m=0;m<local_cut_video_data.length;m++)
        	  {
        	  	  var len = local_cut_video_data[m].cut_video_data.length;
        	  	  var video_time_duration_start = parseInt(local_cut_video_data[m].cut_video_data[0].pos_start);
        	  	  var video_time_duration_end = parseInt(local_cut_video_data[m].cut_video_data[len-1].pos_end);
        	  	  var video_time_duration = (video_time_duration_end - video_time_duration_start)/1000;
        	  	  var video_time_start = new Date(local_cut_video_data[m].cut_video_data[0].pos_start).format("hh:mm:ss");
        	  	  var video_time_end = new Date(local_cut_video_data[m].cut_video_data[len-1].pos_end).format("hh:mm:ss");
        	  	  local_video_time_duration[local_video_time_duration_index]=
        	  	  {
        	  	 	   time_duration:formatSeconds(video_time_duration),
        	  	 	   time_start:video_time_start,
        	  	 	   time_end:video_time_end
        	  	  };
        	  	  local_video_time_duration_index++;		        	  	
        	  }
        	  if(obj.type=="alarm"){
              var len=local_cut_video_data.length,
                alarm_video_data=[],
                alarm_video_duration=[],
                alarm_video_data_index=0;
              for(var i=0;i<len;i++){
                if(local_cut_video_data[i].mark_alarm){
                  if(local_cut_video_data[i].mark_alarm[0]){
                    alarm_video_data[alarm_video_data_index]=local_cut_video_data[i];
                    alarm_video_duration[alarm_video_data_index]=local_video_time_duration[i];
                    alarm_video_data_index++;
                  }
                }  
              }
              var cutVideoData = {local_cut_video_data:alarm_video_data,local_video_time_duration:alarm_video_duration}; 
				      return cutVideoData;
				    }else if(obj.type=="snapshot"){
					    var len0=local_cut_video_data.length,
					      snapshot_video_data=[],
					      snapshot_video_duration=[],
					      snapshot_video_data_index=0;
					    for(var k=0;k<len0;k++){
					      if(local_cut_video_data[k].mark_alarm){
					        if(local_cut_video_data[k].mark_alarm[1]){
					          snapshot_video_data[snapshot_video_data_index]=local_cut_video_data[k];
					          snapshot_video_duration[snapshot_video_data_index]=local_video_time_duration[k];
					          snapshot_video_data_index++;
					        }
					      }
					    }
					    var cutVideoData = {local_cut_video_data:snapshot_video_data,local_video_time_duration:snapshot_video_duration}; 
				      return cutVideoData;
            }else {
        	    var cutVideoData = {local_cut_video_data:local_cut_video_data,local_video_time_duration:local_video_time_duration}; 
				      return cutVideoData;
            }
		}
    function createLinkList(obj)
    {
        var _this = {}, first = null, temp;
        _this.length = 0;

        _this.get_first = function() {return first;}
        _this.add = function(val, priority)
        {
            var flag = priority ? priority : 0;
            var node = priority_pos(flag), prev_temp;

            for(temp = first, prev_temp = null; temp; prev_temp = temp, temp = temp.next)
            {
                if(temp.data == val)
                {
                    if(temp.priority == flag) return 1;                       //already exists
                    else
                    {
                        if(node && node.data == temp.data)
                           node = node.pre;
                        _this.del(val);
                    }
                }
            }
            if(!node)
                first = {data:val, pre:null, next:first || null, priority:flag};
            else
            {
                if(node.next)
                    node.next = (node.next.pre = {data:val, pre:node, next:node.next, priority:flag});
                else
                    node.next = {data:val, pre:node, next:node.next, priority:flag};
            }
            ++_this.length;
            return 0;
        }
        _this.del = function(val)
        {
            if(first == null) return null;
            if(first.data == val)
            {
                temp = first;
                first = first.next;
                --_this.length;
                return temp;
            }
            else
            {
                var ptemp = temp = first;
                for( ; temp; ptemp = temp, temp = temp.next)
                {
                    if(temp.data == val)
                    {
                        if(temp.next)
                            temp.next.pre = ptemp;
                        ptemp.next = temp.next;
                        --_this.length;
                        return temp;
                    }
                }
            }
        }
        function priority_pos(priority)
        {
            var prev_temp = null;
            if(!first) return first;

            for(temp = first; temp; prev_temp = temp, temp = temp.next)
            {
                if(priority > temp.priority) return prev_temp;
            }
            return prev_temp;
        }
        _this.pos = function(val)
        {
            var i = 0;
            for(temp = first; temp; temp = temp.next, ++i)
            {
                if(temp.data == val || temp.data == val.toLowerCase() || temp.data == val.toUpperCase()){
                    return i;
                }
            }
            return null;
        }
        _this.empty = function()
        {
            first = null;
            _this.length = 0;
        }
        return _this;
    }
    window.createLinkList = createLinkList;

    function class_mining_software()
    {
        g_web = mx("#web");
        g_page = mx("#page");
        g_j_page = jQuery("#page");
        if(g_domain_oems_vimtag){
            var l_me = this,
                l_me_parent = g_page,
                l_client_w, l_client_h,
                
                l_dom_login_page_top = dom_create_child(l_me_parent, "div", "login_page_top"),
                l_dom_login_page = dom_create_child(l_me_parent, "div", "login_page"),
                l_login_page_obj;
                l_dom_main_page = dom_create_child(l_me_parent, "div", "main_page"),
                l_dom_tip_div = dom_create_child(g_web, "div", "tip_div");
                l_main_page_obj='';l_server_type='';l_server_sn='';
                l_dom_login_page_top.innerHTML = "<div id='home_slideDown1'></div><div id='top'></div>";
                main_top();
                mx("#home").onclick = function(){
                    mx("#web").style.display="none";
                    mx("#product_iframe").style.display="block";
                    jQuery("#product_iframe").css({"height":document.documentElement.clientHeight-3+"px"});
                }

        }else{
            var l_me = this,
                l_me_parent = g_page,
                l_client_w, l_client_h,
                l_dom_login_page = dom_create_child(l_me_parent, "div", "login_page"),
                l_login_page_obj,
                l_dom_main_page = dom_create_child(l_me_parent, "div", "main_page"),
                l_dom_tip_div = dom_create_child(g_web, "div", "tip_div");
                l_main_page_obj='';l_server_type='';l_server_sn='';
        }

        //----------------------ToolTip---------------------------------
        var TT = l_me.TT = new function(obj) {
            var l_me = this, handle, hide_timer,len0=0,compareLength=0,
                tooltip, tooltipInner,
                tooltip_ex, tooltipInner_ex;

            l_me.init = function(cbObj)
            {
                // Grab a reference to the slider handle
                var handle  = mx("#fd-slider-handle-" + cbObj.elem.id);

                // If something has gone wrong then bail out...
                if(!handle) { return; };

                // Create the tooltip if needs be...
                if(!mx('#tooltip'))
                {
                    var tt = dom_create_child(l_me_parent, "div", "tooltip");
                    var TTinner1 = dom_create_child(tt, "div", "tooltipInner1");
                    var TTinner2 = dom_create_child(TTinner1, "div", "tooltipInner2");

                    // Cache a reference to the tooltip and tooltip inner
                    tooltip      = tt;
                    tooltipInner = TTinner2;
                };
								fdSliderController.addEvent(handle, "mousemove", l_me.videoPlayback);
                fdSliderController.addEvent(handle, "focus", l_me.show);
                fdSliderController.addEvent(handle, "mouseover", l_me.show);
                fdSliderController.addEvent(handle, "blur",  l_me.hide);
                fdSliderController.addEvent(handle, "mouseout",  function(){
                    var elem = mx("#fd-slider-" + this.id.replace(/fd-slider-handle-|fd-slider-/, ""));
                    if(elem.className.search("focused") != -1) { return; };
                    hide_timer = setTimeout(l_me.hide, 500);
                });

                // Internet Explorer fills the input's value attribute _after_ the
                // onload event fires so we need to set a timeout of 200ms in order
                // to be able to read this "delayed" value and correctly reset
                // the toolTip position.
                tooltip.style.display = "block";
                tooltip.style.visibility = "hidden";
                /*@cc_on
                /*@if(@_win32)
                setTimeout(function() { l_me.update(cbObj); tooltip.style.display = "none"; tooltip.style.visibility = "hidden"; }, 800);
                @else @*/
                l_me.update(cbObj);
                tooltip.style.display = "none";
                tooltip.style.visibility = "hidden";
                /*@end
                  @*/

            };
            l_me.init_ex = function(cbObj)
            {
                var inner = mx(".fd-slider-inner", mx("#fd-slider-" + cbObj.elem.id))[0],
                    bar = mx(".fd-slider-bar", mx("#fd-slider-" + cbObj.elem.id))[0],
                    cover = mx(".fd-slider-cover", mx("#fd-slider-" + cbObj.elem.id))[0],
                    block = mx(".playback_slider_block", mx("#fd-slider-" + cbObj.elem.id))[0];

                // If something has gone wrong then bail out...
                if(!inner) { return; };

                // Create the tooltip if needs be...
                if(!mx('#tooltip_ex')) {
                    var tt = dom_create_child(l_me_parent, "div", "tooltip_ex");
                    var TTinner1 = dom_create_child(tt, "div", "tooltipInner1");
                    var TTinner2 = dom_create_child(TTinner1, "div", "tooltipInner2");

                    // Cache a reference to the tooltip and tooltip inner
                    tooltip_ex      = tt;
                    tooltipInner_ex = TTinner2;
                };

                fdSliderController.addEvent(inner, "mouseover", l_me.show_ex);
                fdSliderController.addEvent(inner, "mouseout",  function()  {hide_timer = setTimeout(l_me.hide_ex, 100);});

                // Internet Explorer fills the input's value attribute _after_ the
                // onload event fires so we need to set a timeout of 200ms in order
                // to be able to read this "delayed" value and correctly reset
                // the toolTip position.
                tooltip_ex.style.display = "block";
                tooltip_ex.style.visibility = "hidden";
                /*@cc_on
                /*@if(@_win32)
                setTimeout(function() { l_me.update(cbObj); tooltip.style.display = "none"; tooltip.style.visibility = "hidden"; }, 800);
                @else @*/
                tooltip_ex.style.display = "none";
                tooltip_ex.style.visibility = "hidden";
                /*@end
                  @*/
            };
            l_me.videoPlayback = function()
            {
            		if((len0-compareLength)<5)
            		{
            				compareLength = len0;
            				return;
            		}
            		else
            		{
            				compareLength = len0;
            				g_slider_data = 1;
                  }
            }
            // A function that positions the tooltip and updates it's value
            // This is also used as the callback function for the slider
            l_me.update = function(cbObj)
            {
                clearTimeout(hide_timer);

                var curleft = 0,
                    curtop  = 0,
                    obj     = mx("#fd-slider-handle-" + cbObj.elem.id),
                    osw     = obj?obj.offsetWidth:0;

                // Try catch for IE's benefit
                try {
                    while (obj.offsetParent) {
                        curleft += obj.offsetLeft;
                        curtop  += obj.offsetTop;
                        obj      = obj.offsetParent;
                    };
                } catch(err) { };

                tooltip.style.left = Math.round((curleft - ((tooltip.offsetWidth - osw) / 2))) + "px";
                tooltip.style.top = (curtop - 30)  + "px";

                while(tooltipInner.firstChild) { tooltipInner[s_removeChild](tooltipInner.firstChild); };
								
								if((g_domain_oems_vimtag || g_domain_oems_mipcm)&&g_is_play_back)
								{
									 var len = g_slider_end - g_slider_start;
									 len0 = cbObj.elem.value;
									 var len1 = parseInt((len*len0)/100) + g_slider_start;
									 var len2 = new Date(len1).format("mm:ss");
									 var txt = len2;
								}
								else
								{
                   var txt = cbObj.elem.tagName.toLowerCase() == "select" ? cbObj.elem.options[cbObj.elem.selectedIndex].text : cbObj.elem.value;
                }
                tooltipInner.appendChild(document.createTextNode(txt));
            };
            l_me.update_ex = function(cbObj)
            {
                clearTimeout(hide_timer);

                var curleft = cbObj.mou_x, curtop = 0,
                    obj     = mx(".fd-slider-handle", cbObj.elem)[0],
                    osw     = obj.offsetWidth,
                    inner   = mx(".fd-slider-inner", cbObj.elem)[0],
                    p       = mx(".fd-slider-bar", cbObj.elem)[0],
                    oswleft = 0;

                while (p.offsetParent) {
                    oswleft += p.offsetLeft;
                    curtop  += p.offsetTop;
                    p        = p.offsetParent;
                }

                tooltip_ex.style.left = Math.round((curleft - (tooltip_ex.offsetWidth / 2))) + "px";
                tooltip_ex.style.top = (curtop - 30)  + "px";

                while(tooltipInner_ex.firstChild) { tooltipInner_ex[s_removeChild](tooltipInner_ex.firstChild); };

                var index = Math.round((curleft - oswleft) * 1000 / inner.clientWidth);
                if(index < 0 || index > 999)
                {
                    tooltip_ex.style.display = "none";
                    tooltip_ex.style.visibility = "hidden";
                    return;
                }
                var txt = mx("#playback_slider").options[index].text;
                tooltipInner_ex.appendChild(document.createTextNode(txt));
            };
            l_me.show = function(e)
            {
                clearTimeout(hide_timer);
                e = e || window.event;
                if(e && e.type && (e.type != "focus" && e.type != "mouseover")) return;
                tooltip.style.display = "block";
                tooltip.style.visibility = "visible";
                l_me.update({"elem":mx("#" + this.id.replace(/fd-slider-handle-|fd-slider-/, ""))});
            };
            l_me.show_ex = function(e)
            {
                clearTimeout(hide_timer);
                e = e || window.event;
                if(e && e.type && (e.type != "focus" && e.type != "mouseover" && e.type != "mousemove")) return;
                tooltip_ex.style.display = "block";
                tooltip_ex.style.visibility = "visible";
                var mou_x = e.pageX || e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
                var mou_y = e.pageY || e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
                var bar = mx(".fd-slider-bar", mx("#fd-slider-playback_slider"))[0];
                var cover = mx(".fd-slider-cover", mx("#fd-slider-playback_slider"))[0];
                var block = mx(".playback_slider_block", mx("#fd-slider-playback_slider"))[0];
                l_me.update_ex({"elem":mx("#fd-slider-playback_slider"), mou_x:mou_x, mou_y:mou_y});
                if(!this.onmousemove)
                {
                    this.onmousemove = l_me.show_ex;
                    bar.onmousemove = l_me.show_ex;
                    cover.onmousemove = l_me.show_ex;
                    if(block)
                        block.onmousemove = l_me.show_ex;
                }
            };
            l_me.hide = function(e)
            {
                e = e || window.event;
                if(e && e.type && (e.type != "blur" && e.type != "mouseout")) return;
                tooltip.style.display = "none";
                tooltip.style.visibility = "hidden";
            };
            l_me.hide_ex = function(e)
            {
                e = e || window.event;
                if(e && e.type && (e.type != "blur" && e.type != "mouseout" && e.type != "mousemove")) return;
                tooltip_ex.style.display = "none";
                tooltip_ex.style.visibility = "hidden";
                var inner = mx(".fd-slider-inner", mx("#fd-slider-playback_slider"))[0];
                var bar = mx(".fd-slider-bar", mx("#fd-slider-playback_slider"))[0];
                var cover = mx(".fd-slider-cover", mx("#fd-slider-playback_slider"))[0];
                var block = mx(".playback_slider_block", mx("#fd-slider-playback_slider"))[0];
                inner.onmousemove = "";
                bar.onmousemove = "";
                cover.onmousemove = "";
                if(block)
                    block.onmousemove = "";
            };
        }
        //--------------------------------------------------------------

        function get_client_size()
        {
            var temp_w, temp_h, temp_p;
            l_client_h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
            l_client_w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
            if(l_client_w < g_client_min_all_w)
            {
                l_client_w = g_client_min_all_w;
            }
            if(l_client_h < g_client_min_all_h)
            {
                l_client_h = g_client_min_all_h;
            }
            if(l_client_w < g_client_division_w)
            {
                g_panel_box_all_w = Math.floor((l_client_w - g_client_min_w - 20) / 2);
                g_panel_box_offset = -(g_panel_box_max_w - g_panel_box_all_w);
            }
            else
            {
                g_panel_box_all_w = g_panel_box_max_w;
                g_panel_box_offset = 3;
            }
            temp_w = l_client_w - g_panel_box_all_w * 2 - 20;                                             //2 * 10 (left and right border);
            temp_h = l_client_h - g_menu_box_h - g_control_box_h - g_status_bar_h - 12;           //12(margin-top)
            temp_p = temp_w / temp_h;
            if(temp_p < 16/9)
            {
                temp_h = temp_w * 9 / 16;
            }
            else
            {
                temp_w = temp_h * 16 / 9;
            }
            g_main_window_w = Math.floor(temp_w);
            g_main_window_h = g_panel_box_h = Math.floor(temp_h);
            g_panel_box_all_h = g_main_window_h + 12;                                               //12(margin-top)
            g_device_list_inner_h = g_panel_box_inner_h = g_panel_box_h - 18;
            g_cntr_content_w = g_main_window_w + g_panel_box_all_w * 2 + 20;                    //2 * 10 (left and right border);
            g_cntr_content_h = g_panel_box_all_h + g_control_box_h + g_status_bar_h;
        }
        //Initialize some global functions
        function add_event()
        {
            if(null == g_system_prompt_box)
            {
                g_system_prompt_box = function(str, offsetX, offsetY) {
                    var prompt_div = mx("#system_prompt_div"),
                        div_left, div_top;

                    if(!prompt_div)
                    {
                        prompt_div = dom_create_child(g_page, "div", "system_prompt_div");
                        div_left = g_web.offsetWidth, div_top = g_web.offsetHeight;
                        if(offsetX)
                            div_left += offsetX;
                        if(offsetY)
                            div_top += offsetY;
                        prompt_div.style[s_cssText] = "position:absolute;left:" + (div_left / 2) + "px; top:" + (div_top / 2) + "px;font-size:18px;font-weight:900;color:#EEE;background:transparent";
                        prompt_div[s_innerHTML] = str + "!";
                        jQuery(prompt_div).hide().fadeIn(500).delay(1000).fadeOut(400, function(){
                            prompt_div[s_innerHTML] = "";
                            prompt_div.parentNode[s_removeChild](prompt_div);
                            prompt_div = null;
                        });
                    }
                };
            }
            if(null == g_system_wait_div)
            {
                g_system_wait_div = function(str) {
                    var wait_div = mx("#system_wait_div"),
                        wait_display_div;

                    if(!wait_div)
                    {
                        document.documentElement.onkeydown = function(e) {var evt = e || window.event; if(evt.keyCode != 116) return false;};
                        wait_div = document.createElement("div");
                        wait_div.setAttribute("id", "system_wait_div");
                        g_page.parentNode.insertBefore(wait_div, g_page);
                        wait_display_div = document.createElement("div")
                            wait_display_div.setAttribute("id", "system_wait_display_div");
                        g_page.parentNode.insertBefore(wait_display_div, wait_div);
                        wait_div[s_style][s_cssText] = "position:absolute;width:" + l_client_w + "px;height:" + l_client_h + "px;background-color:#fff;opacity:0.1;"
                            + "filter:alpha(opacity=10);z-index:100";
                        wait_display_div[s_style][s_cssText] = "position:absolute;top:" + (l_client_h / 3) + "px;left:" + (l_client_w / 2) + "px";
                        wait_display_div[s_innerHTML] =
                            "<div id='cl_wait_div' style='text-align:center'></div>"
                            +"<div id='cl_str_div' style='padding-left:10px;padding-top:10px;font-weight:900;font-size:18px;color:#EEE'>" + str + "</div>";

                        var cl = new CanvasLoader("cl_wait_div", {id: "canvasLoader", safeVML: true});
                        cl.setColor('#8bb238');
                        cl.setDiameter(36);
                        cl.setDensity(43);
                        cl.setRange(1.1);
                        cl.show();
                    }
                };
            }
            if(null == g_system_stop_wait)
            {
                g_system_stop_wait = function(str) {
                    var wait_div = mx("#system_wait_div"),
                        wait_display_div = mx("#system_wait_display_div");

                    document.documentElement.onkeydown = null;
                    if(wait_div)
                    {
                        wait_div[s_innerHTML] = "";
                        wait_div.parentNode[s_removeChild](wait_div);
                        wait_div = null;
                    }
                    if(wait_display_div)
                    {
                        wait_display_div[s_innerHTML] = "";
                        wait_display_div.parentNode[s_removeChild](wait_display_div);
                        wait_display_div = null;
                    }
                }
            }
        }
        function remove_event()
        {
            g_system_prompt_box = null;
            g_system_wait_div = null;
            g_system_stop_wait = null;
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        get_client_size();
                        g_web[s_style][s_height] = l_me_parent.style.height = l_dom_login_page.style.height = l_dom_main_page.style.height = l_client_h + "px";
                        if(g_domain_oems_vimtag){
                          g_web[s_style][s_width] = l_dom_login_page.style.width = l_dom_main_page.style.width = "100%";
                        }else {
                          g_web[s_style][s_width] = l_dom_login_page.style.width = l_dom_main_page.style.width = l_client_w + "px";	
                        } 
                        l_login_page_obj.ctrl(obj);
                        l_main_page_obj.ctrl(obj);
                        break;
                    }
                case "logout"://sign out
	                	{
	                	    g_is_auto_login = 0;
	                	    //Create a login screen
                        ms.ctrl({type:"create_login_interface", data:{type:obj.data.type,sn:obj.data.sn}});
                        //Destruction main_page
                        setTimeout(function(){
                            g_j_page.animate({marginLeft:"0"}, 600, function(){
                                l_main_page_obj.ctrl({type:"destroy"});
                            });
                        },300);
                        //Destruction mmq
                        mcloud_agent.dev_msg_listener_del(null,function(msg ,ref){});
	                	    break;
	                	}
                case "create_login_interface":
                    {
                        l_login_page_obj.ctrl({type:"create", data:obj.data});
                        break;
                    }
                case "destroy":
                    {
                        l_login_page_obj.ctrl(obj);
                        l_main_page_obj.ctrl(obj);
                        l_me_parent[s_removeChild](l_dom_login_page);
                        l_me_parent[s_removeChild](l_dom_main_page);
                        l_dom_login_page = null;
                        l_dom_main_page = null;
                        remove_event();
                        break;
                    }
                 case "register":
                    {
                       obj.type = "account_create";
                       obj.data.pass = mcloud_agent.pwd_encrypt(obj.data.password);
                       l_me.send_msg(obj);
                 	  }
                 default:
                    log("error:ctrl's obj.type is not exist in class_mining_software.");
            }
        }
        //Uniform function calls sdk
        l_me.send_msg=function(type,data,ref,callback)
        {   //Not mmq then create a progress bar rotation
        	if(type != "dev_msg_listener_add" && type != "dev_msg_listener_del")
        	    system_signal_trans.create();
            var on_ack=function(msg,ref)
            {
                 //Not mmq then delete the rotation progress bar
                 if( type != "dev_msg_listener_add" && type != "dev_msg_listener_del" )
        	          system_signal_trans.destroy();

        	     switch( msg.result )
        	     {
        	         case "mcs_connection_is_interrupted":
        	            system_pop_confirm_box({alert:true, str:mcs_connection_is_interrupted,callback_func:function(obj){window.location.reload(true);}});
                 	    return;
                 	 case "DeviceOffline":
                 	 case "InvalidAuth":
                 	    //l_device_list_box_obj.ctrl({type:"refresh"});
                 	    break;
                 	 case "permission.denied":
                 	    if( type != "sd_set" && g_now_page != "login_page" )
                 	        g_domain_oems_vimtag?msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000}):g_system_prompt_box(mcs_permission_denied);
                 	    break;
                 	 //case "accounts.user.offline":
                 	 //   g_system_prompt_box(mcs_device_offline);
                 	 //   break;
                 	 case "SdIsNotReady":
                 	    g_system_prompt_box(mcs_sdcard_not_ready);
                 	    break;
                 	 case "":
                 	    break;
        	     }

                 if(callback)
                 {
                     callback(msg,ref);
                 }
            }
            mcloud_agent[type](data,ref,on_ack);
        }
        function on_event(obj)
        {
            switch(obj.type)
            {
                case "destroy_login_interface":
                    {
                        l_login_page_obj.ctrl({type:"destroy"});
                        break;
                    }
                case "logined":
                case "ccm_get_devices_info":
                    {
                        l_main_page_obj.ctrl({type:"create", data:{type:l_server_type,sn:l_server_sn}});
                        break;
                    }
                case "ccm_get_sub_dvices":
                    {
                       break;
                    }
                case "destroy_main_interface":
                    {
                        l_main_page_obj.ctrl({type:"destroy"});
                        break;
                    }
                case "mmq_destroy":
                    {
                        break;
                    }
                case "main_page_create":
                    {
                        l_main_page_obj.ctrl({type:"create", data:{type:obj.data.type,sn:obj.data.sn}});
                        break;
                    }
                case "login_page_create":
                    {
                        l_login_page_obj.ctrl({type:"create", data:{type:obj.data.type,sn:obj.data.sn}});
                        break;
                    }
                case "Refresh_devs"://Device List Refresh
                    {
                       ms.send_msg("devs_refresh",{},null,refresh_devices_ack);
                       break;
                    }
                case "refresh_notif_latest":
                case "refresh_device_list":
                case "refresh_notif":
                case "update_imaging":
                case "refresh_alarm":
                    {
                        l_main_page_obj.ctrl(obj);
                        break;
                    }
                default:
                    log("error:on_event's obj.type is not exist in class_mining_software.");
            }
        }
        //Determine whether the IE browser
        var isIE = !!window.ActiveXObject;
        var isIE6 = isIE && !window.XMLHttpRequest;
        var isIE8 = isIE && !!document.documentMode;
        var isIE7 = isIE && !isIE6 && !isIE8;
        if(isIE6)
            g_browser_IE6_version = 1;
        if(isIE7)
            g_browser_IE7_version = 1;
        if(isIE6 || isIE7)
            g_browser_IE67_version = 1;
        if(isIE7 || isIE8 || isIE6)
            g_old_browser_version = 1;

        var userAgent = navigator.userAgent,
            is_ios45 = ((userAgent.match(/iPhone/i) || userAgent.match(/iPod/i) || userAgent.match(/iPad/i)))
                        && Boolean(userAgent.match(/OS [4-5]_\d[_\d]* like Mac OS X/i));
        if(is_ios45)
            g_input_read_only = "readonly";

        if( !g_old_browser_version && !(navigator.appName == "Microsoft Internet Explorer" && navigator.appVersion.match(/9./i)=="9.")){
            g_avc = new Avc();
            g_avc.configure(g_avc_conf);
        }
        add_event();
        get_client_size();
        l_me_parent[s_style][s_height] = l_client_h + "px";
        l_dom_login_page[s_style][s_cssText] = "width:" + l_client_w + "px;height:" + l_client_h + "px;";                
        if(g_domain_oems_vimtag){
        	g_web[s_style][s_cssText] = "width:100%;height:" + l_client_h + "px;";  
        	//If you modify main_page vimtag background color
          l_dom_main_page[s_style][s_cssText] = "width:" + l_client_w + "px;height:" + l_client_h + "px;background-color:#efeff4;"; 
        }else{
        	g_web[s_style][s_cssText] = "width:" + l_client_w + "px;height:" + l_client_h + "px;";
          l_dom_main_page[s_style][s_cssText] = "width:" + l_client_w + "px;height:" + l_client_h + "px;";
        }

        l_login_page_obj = new class_login_page({parent:l_dom_login_page, on_event:on_event});
        l_main_page_obj = new class_main_page({parent:l_dom_main_page, on_event:on_event});
        //Update device list
        function refresh_devices_ack(msg)
        {
            if(msg.result != "")return;
            var old_sn,device_change;
            //If there is no option to select the device or the device has already been deleted or has been selected device is offline then set the device has been selected
            if(g_select_device_ipc == "" || (null == mcloud_agent.devs.get(g_select_device_ipc))|| mcloud_agent.devs.get(g_select_device_ipc).stat != "Online"){
            	for(var length = mcloud_agent.devs.list.length,i=0;i< length;i++){
               	if(mcloud_agent.devs.list[i].stat == "Online"){
               		old_sn = g_select_device_ipc;
               		device_change = 1;
                  g_select_device_ipc = mcloud_agent.devs.list[i].sn;
                  break;
               	}
            	}
            }
            l_main_page_obj.ctrl({type:"refresh_device_list",data:{old_sn:old_sn,change:device_change}});
        }
        function ccm_get_device_ack(msg, ref)
        {
           if(msg.result != "")return;
           //Access server
           if(msg.type == "MS")
           {
                g_service_options = msg.type;
                g_network_environ = "public";
           }
           else if(msg.type == "IPC" || msg.type == "BOX")//Visit the IPC or box equipment
           {
                g_service_options = msg.type;
                g_network_environ = "private";
           }
           l_server_type = msg.type;
           l_server_sn   = msg.sn;
           l_login_page_obj.ctrl({type:"create", data:{type:l_server_type,sn:l_server_sn}});
        }
        //For judgment is directly connected (network) or a normal connection (Extranet)
        mcloud_agent.svr_dev_get(null,ccm_get_device_ack);
    }g_domain_oems_vimtag

    window.class_mining_software = class_mining_software;

    function class_login_page(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_menu_box, l_menu_box_obj,
            l_dom_login_box, l_login_box_obj,
            l_dom_top_box, l_top_box_obj,
            l_dom_register_page, l_register_page_obj;

        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        if(l_dom_menu_box)
                        {
                            l_dom_menu_box[s_style][s_width] = l_me_parent[s_offsetWidth] + "px";
                            l_menu_box_obj.ctrl(obj);
                        }
                        if(l_dom_login_box)
                        {
                            l_dom_login_box[s_style][s_width] = l_me_parent[s_offsetWidth] + "px";
                            l_dom_login_box[s_style][s_height] = (l_me_parent[s_offsetHeight] - g_menu_box_h) + "px";
                            if(!g_domain_oems_vimtag)  l_dom_register_page[s_style][s_right] = ((l_me_parent.offsetWidth - g_cntr_content_w) / 2 + 25) + "px";
                            l_login_box_obj.ctrl(obj);
                        }
                        break;
                    }
                case "create":
                    {
                    	  if(g_domain_oems_vimtag)
                    	  {
                    	  	  l_dom_login_box = dom_create_child(l_me_parent, "div", "login_box");
                    	  	  if(g_domain_oems_vimtag)
                            {
                               l_dom_login_box[s_style][s_cssText] = "width:" + l_me_parent[s_offsetWidth] + "px;height:" + l_me_parent[s_offsetHeight] + "px;";
                            }
                    	  	  l_login_box_obj = new class_login_box({parent:l_dom_login_box, type:obj.data.type, sn:obj.data.sn,on_event: on_event});
                    	  }
                    	  else
                    	  {
		                        l_dom_menu_box = dom_create_child(l_me_parent, "div", "menu_box");
		                        l_dom_login_box = dom_create_child(l_me_parent, "div", "login_box");
		                        l_dom_register_page = dom_create_child(l_me_parent, "div", "register_page");
		
		                        l_dom_menu_box[s_style][s_cssText] = "width:" + l_me_parent[s_offsetWidth] + "px;height:" + g_menu_box_h + "px;";
		                        l_dom_login_box[s_style][s_cssText] = "width:" + l_me_parent[s_offsetWidth] + "px;height:" + (l_me_parent[s_offsetHeight] - g_menu_box_h) + "px;";
		                        l_dom_register_page[s_style][s_right] = ((l_me_parent.offsetWidth - g_cntr_content_w) / 2 + 25) + "px";
		
		                        l_menu_box_obj = new class_menu_box({parent:l_dom_menu_box, type:obj.data.type, page:"login_page"});
		                        l_login_box_obj = new class_login_box({parent:l_dom_login_box, type:obj.data.type, sn:obj.data.sn,on_event: on_event});
		                        l_register_page_obj = new class_register_page({parent:l_dom_register_page,on_event: on_event});
                        }
                        break;
                    }
                case "destroy":
                    {
                        if(l_dom_menu_box && l_menu_box_obj)
                            l_menu_box_obj.ctrl(obj);
                        if(l_dom_login_box && l_login_box_obj )
                            l_login_box_obj.ctrl(obj);
                        l_dom_menu_box = null;
                        l_dom_login_box = null;
                        l_dom_register_page = null;
                        l_me_parent[s_innerHTML] = "";
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_login_page.");
            }
        }
        function on_event(obj)
        {
            switch(obj.type)
            {
                case "logined":
                   {
                      l_parent_callback(obj);
                      break;
                   }
                case "login":
                   {
                   	  l_login_box_obj.ctrl(obj);
                   	  break;
                   }
                default:
                    log("error:on_event's obj.type is not exist in class_login_page.");
            }
        }
    }

    function class_login_box(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_dom_signin_inner,
            l_dom_sign_in,
            l_parent_callback = obj.on_event,
            l_dom_username,
            l_dom_show_password,
            l_dom_net_setting,
            l_dom_password_eye,
            l_dom_sign_in_words,
            l_dom_show_password_again,
            l_dom_password_again,
            l_dom_register_username,
            l_dom_register_show_password_again,
            l_dom_register_password_again,
            l_dom_register_password,
            l_dom_register_account,
            l_dom_register_btn,
            l_dom_register_account_btn,
            l_dom_download_client_ico,
            l_dom_download_client_warn,
            l_dom_register_password_eye,
            l_dom_register_password_eye_again,
            l_dom_password, l_remember_data, l_remember_data_obj,l_dom_forget_pass,l_password_value,l_pwd_val;
        if(g_domain_oems_vimtag)
        {
            l_me_parent[s_innerHTML] = 
        	  "<div id='vimtag_signin_inner' style='padding-top:10%;'>"
        	  +   "<div id='signin_logo_vimtag' class='vimtag_logo'></div>"
        	  +   "<div id='sigin_in_username'>"
        	  +      "<div id='vimtag_login_user' class='vimtag_login_user_img' style='margin-left:10px;margin-top:12px;margin-right:10px;'></div>"
        	  +      "<input class='vimtag_standard_inputs_normal' id='signin_name' type='text' value='" + mcs_username + "' style='margin-top:2px;'>"
        	  +      "<div id='vimtag_login_input' class='vimtag_login_input' style='margin-bottom:16px;'></div>"
        	  +   "</div>"
        	  +   "<div id='register_username'>"
        	  +      "<div id='vimtag_login_user' class='vimtag_login_user_img' style='margin-left:10px;margin-top:12px;margin-right:10px;'></div>"
        	  +      "<input class='vimtag_standard_inputs_normal' id='register_signin_name' type='text' value='" + mcs_input_username + "' style='margin-top:2px;'>"
        	  +      "<div id='vimtag_login_input' class='vimtag_login_input' style='margin-bottom:16px;'></div>"
        	  +   "</div>"
        	  +   "<div id='sigin_in_password'>"
        	  +      "<div id='vimtag_password_img' class='vimtag_password_img' style='margin-left:10px;margin-top:12px;margin-right:10px;'></div>"
        	  +      "<input class='vimtag_standard_inputs_normal' id='signin_show_pw' type='text' value='" + mcs_password + "' style='margin-top:2px;width:220px;'>"
        	  +      "<input class='vimtag_standard_inputs_normal' id='signin_pw' type='password' style='display:none;width:220px;margin-top:2px;'>"
        	  +      "<div id='password_eye' class='password_eye_gray' style='float:left;margin-top:17.5px;'></div>"
        	  +      "<div class='vimtag_login_input' style='margin-bottom:16px;'></div>"
        	  +   "</div>"
        	  +   "<div id='register_account_pwd'>"
        	  +      "<div id='vimtag_password_img' class='vimtag_password_img' style='margin-left:10px;margin-top:12px;margin-right:10px;'></div>"
        	  +      "<input class='vimtag_standard_inputs_normal' id='register_signin_show_pw' type='text' value='" + mcs_input_password + "' style='margin-top:2px;width:220px;'>"
        	  +      "<input class='vimtag_standard_inputs_normal' id='register_signin_pw' type='password' style='display:none;width:220px;margin-top:2px;'>"
        	  +      "<div id='register_password_eye' class='password_eye_gray' style='float:left;margin-top:17.5px;'></div>"
        	  +      "<div class='vimtag_login_input' style='margin-bottom:16px;'></div>"
        	  +   "</div>"
        	  +   "<div id='register_account_pwd_again'>"
        	  +      "<div class='vimtag_password_img' style='margin-left:10px;margin-top:12px;margin-right:10px;position:absolute;'></div>"
        	  +      "<input class='vimtag_standard_inputs_normal' id='register_signin_show_pw_again' type='text' value='" + mcs_confirm_password + "' style='margin-top:2px;width:220px;margin-left:41px;'>"
        	  +      "<input class='vimtag_standard_inputs_normal' id='register_signin_pw_again' type='password' style='display:none;width:220px;margin-top:2px;margin-left:41px;'>"
        	  +      "<div id='register_password_eye_again' class='password_eye_gray' style='float:left;margin-top:17.5px;'></div>"
        	  +      "<div class='vimtag_login_input' style='margin-bottom:16px;'></div>"
        	  +   "</div>"
        	  +   "<button class='vimtag_btn' id='sign_in'>"+ mcs_sign_in +"</button>"
        	  +   "<button class='vimtag_btn' id='register_btn'>"+ mcs_sign_up +"</button>"
        	  +   "<div>"
        	  +   "<span id= 'register_account' style='color:#00a6ba;font-size:14px;cursor:pointer;float:left;'>" + mcs_sign_up + "</span>"
        	  +   "<span id= 'forget_pass' style='color:#00a6ba;font-size:14px;cursor:pointer;float:right;'>" + mcs_forgot_your_password + "?</span>"
        	  +   "<span id= 'sign_account' style='color:#00a6ba;font-size:14px;cursor:pointer;'>" + mcs_sign_in + "</span>"
        	  +   "</div>"
        	  +   "</div>"
        	  +"</div>";        	  
            l_me_parent[s_innerHTML]+="<div id='use_https' style='float:left;color:#000;line-height:35px;margin-left:20px;position:absolute;top:0;'>For additional security we recommend that you use <a target='_blank' href='https://"+g_hostname+"' style='color:#fff;'>https://"+g_hostname+"</a></div>";
            if(window.fujikam=="fujikam"||location.protocol=="https:"||g_now_lang!="en")
            {
              jQuery("#use_https").hide();
            }
            else
            {
              jQuery("#use_https").show();
            }
	        	l_dom_signin_inner = mx("#vimtag_signin_inner");
	          l_dom_username = mx("#signin_name");
	          l_dom_register_username = mx("#register_signin_name");
	          l_dom_show_password = mx("#signin_show_pw");
	          l_dom_password = mx("#signin_pw");
	          l_dom_register_show_password_again = mx("#register_signin_show_pw_again");
	          l_dom_register_password_again = mx("#register_signin_pw_again");
	          l_dom_register_show_password = mx("#register_signin_show_pw");
	          l_dom_register_password = mx("#register_signin_pw");
	          l_dom_register_account = mx("#register_account");
	          l_dom_sign_account = mx("#sign_account");
	          l_dom_register_btn = mx("#register_btn");
	          l_dom_sign_in = mx("#sign_in");
	          l_dom_password_eye = mx("#password_eye");
	          l_dom_register_password_eye = mx("#register_password_eye");
	          l_dom_register_password_eye_again = mx("#register_password_eye_again");
	          l_dom_forget_pass = mx("#forget_pass");
	
	          jQuery("#register_username").hide();
	          jQuery("#register_account_pwd").hide();
	          jQuery("#register_account_pwd_again").hide();
	          jQuery("#register_btn").hide();
	          jQuery("#sign_account").hide();
        }
        else
        {
            l_me_parent[s_innerHTML] =
            "<div id='signin_inner' style='padding-top:" + (l_me_parent.offsetHeight / 4) + "px'>"
            +   "<div id='signin_logo'></div>"
            +   "<div>"
            +       "<div id='signin_name_ico'></div>"
            +       "<input class='standard_inputs_normal' id='signin_name' type='text' value='" + mcs_username + "'>"
            +   "</div>"
            +   "<div>"
            +       "<div id='signin_password_ico'></div>"
            +       "<input class='standard_inputs_normal' id='signin_show_pw' type='text' value='" + mcs_password + "' style='width:136px'>"
            +       "<input class='standard_inputs_normal' id='signin_pw' type='password' style='display:none;width:136px;color:#404040'>"
            +       "<div id='sign_in'></div>"
            +   "</div>"
            +   "<div id='forget_pass' style='float:left;color:#999;font-size:12px'>"+ mcs_forgot_your_password +"</div>"
            +   "<div id='remember_div' style='float:right;'>"
            +       "<div>"                                                                                                             //div for IE6
            +           "<span style='color:#999;font-size:12px'>" + mcs_remember_me + "</span>"
            +           "<input id='remember_me' name='remember_me' type='checkbox'>"
            +       "</div>"
            +   "</div>"
            +   "<div id='download_client_div' style='float:right;width:210px;'>"
            +       "<div style='margin-top:35px;'>"
            +           "<span id='download_client_warn' style='color:#999;height:25px;font-size:12px;'>" + mcs_download_pc_client + "</span>"
            +           "<img id='download_client_ico' src='/imgs/download_client_ico.png' style='width:15px;height:15px;'</img>"
            +       "</div>"
            +   "</div>"
            +"</div>";

	          l_dom_signin_inner = mx("#signin_inner");
	          l_dom_username = mx("#signin_name");
	          l_dom_show_password = mx("#signin_show_pw");
	          l_dom_password = mx("#signin_pw");
	          l_dom_sign_in = mx("#sign_in");
	          l_dom_forget_pass = mx("#forget_pass");
	          l_dom_download_client_ico = mx("#download_client_ico");
	          l_dom_download_client_warn = mx("#download_client_warn");
	          background_img_set(mx("#signin_name_ico"), sub_img_signin_name);
	          background_img_set(mx("#signin_password_ico"), sub_img_signin_psw);
	          background_img_set(l_dom_sign_in, sub_img_signin);
	
	          if((g_hostname.indexOf("mipcm.com") < 0)||(window.fujikam == "fujikam"))
	          {
	        	   jQuery("#download_client_div").hide();
	          }
	          /*Display the forget pass when it's oem avuecam*/
	          if(!g_domain_oems_avue) jQuery("#forget_pass").hide();
        }
        //oem customers to modify the login background
        if(g_domain_oems_vimtag)
        {
	        	if(g_hostname == "test.vimtag.com"){
	        		  mx("#login_box").style.backgroundImage = "url(/oem/testvimtag/imgs/vimtag_bg.png)";
	        	}else {
	        		  mx("#login_box").style.backgroundColor = "#5AC2D0";
	              mx("#login_box").style.backgroundImage = "url(/oem/vimtag_v2n/imgs/vimtag_bg.png)";
	        	}
        }else if(g_domain_oems_mommycam){
        	 mx("#login_box").style.backgroundImage = "url(/oem/mommycam/imgs/mommycam_bg.png)";
        }else if(g_domain_oems_prolabcloud){
        	 mx("#login_box").style.backgroundImage = "url(/oem/prolab_cloud/imgs/prolabcloud_bg.png)";
        	 mx("#signin_name").style.border = "1px solid #024050";
        	 mx("#signin_show_pw").style.border = "1px solid #024050";
        	 mx("#signin_pw").style.border = "1px solid #024050";
        }else if(g_domain_oems_serenelifehome){
        	 mx("#login_box").style.background = "#FFFFFF";
        }else{
        	 mx("#login_box").style.backgroundColor = "#242829";
        	 mx("#login_box").style.backgroundImage = "url(/imgs/background_image.jpg)";
        }
        
        function add_event()
        {   //mipc middle logo
        	  if(!g_domain_oems_vimtag) img_fade_effect(mx("#signin_logo"), sub_img_logo0, sub_img_logo1);
            //Login key events
            l_dom_sign_in.onclick = function() { 
                if(mx("#system_tooltip"))
                {
                  mx("#system_tooltip")[s_innerHTML]="";
                }
                if(l_dom_password.value == "amdin")
                {
                	 l_dom_password.value = "admin";
                }
		        		username_value = l_dom_username.value.trim(),
		        		password_value = l_dom_password.value.trim();
		        		//storage the password use mmd5 format
		        		if(password_value=="......")
		        			 l_pwd_val = l_password_value;
		        		else
		        			 l_pwd_val = mmd5.hex(password_value);
		        			
		        		var username_arra = username_value.split("");
		        		var isDevicesID =  (username_arra.length && (username_arra[0] == '1') && (username_arra[1] == 'j' || username_arra[1] == 'J') && (username_arra[2] == 'f' || username_arra[2] == 'F') && (username_arra[3] == 'i' || username_arra[3] == 'I') && (username_arra[4] == 'e' || username_arra[4] == 'E'));

		       			if(!username_value || username_value == mcs_username){
		         			  g_domain_oems_vimtag?msg_tips({msg:mcs_the_user_name_is_empty, type:"error", timeout:3000}):system_tooltip({parent:username, color:"red", position:"right", disappear_way:"time", str:mcs_the_user_name_is_empty + "."});
		          		  return;
		        		}
		        		if(!password_value || password_value == mcs_password){
		                g_domain_oems_vimtag?msg_tips({msg:mcs_the_password_is_empty, type:"error", timeout:3000}):system_tooltip({parent:this, color:"red", position:"right", disappear_way:"time", str:mcs_the_password_is_empty + "."});
		                return;
		        		}
		        		/*if(isDevicesID&&g_domain_oems_vimtag){
                    msg_tips({msg:mcs_register_prompt, type:"error", timeout:3000});
		          		  return;
		        		}*/
		       			//Judgment is ipc login or user login
		       			if(g_domain_oems_avue){
		       			  var reg1=/^\d/, reg2=reg2=/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/;
		       			  if(reg1.exec(username_value)&&!reg2.exec(username_value)){
		       			    g_loagin_status="ipc";
		       			  }else {
		       			  	g_loagin_status="register_user";
		       			  }
		       			}else {
		       				var reg = /^\d/;
                  if(reg.exec(username_value))
                    g_login_status = "ipc";
                  else
                    g_login_status = "register_user";
		       			}

                if(!g_login_waiting_flag){
                    g_login_waiting_flag = 1;
                    ms.send_msg("sign_in",{srv:g_server_device,user:username_value, password:l_pwd_val},{user:username_value, password:password_value},login_ack);                                                            
                } 
                var l_hostname = {
                	 "mipcm.com":{url:"http://cpns.mipcm.com/",urls:"https://cpns.mipcm.com:9443/",appid:"www.mipcm.com"},
                	 "vimtag.com":{url:"http://cpns.vimtag.com/",urls:"https://cpns.vimtag.com:9446/",appid:"www.vimtag.com"}
                };
                var l_domain, l_src;
                l_domain = g_hostname;

                for(temp in l_hostname){
                	 if(temp==l_domain || l_domain.substring(l_domain.indexOf('.')+1,l_domain.length)==temp){
                	 		 var tp = l_hostname[temp];
                	 	   (window.location.protocol=="https:")?(l_src=tp.urls):(l_src=tp.url);
											
											 function cpns_get_ack(msg, ref){
                    	 		if(msg.result ==""&&msg.conf.item){
                    	 			setTimeout(function(){
                    	 				l_dom_net_setting=new net_setting_class({parent:this, on_event:function(obj){return on_event(obj);}});
                    	 				l_dom_net_setting.ctrl({type:"notice_board",url:msg.conf.item[0].url});	
                          	}, (Math.floor(Math.random()*61))*1000);                  	 			
                    	 		}
                    	 }
											 
                    	 ms.send_msg("cpns_get",{srv:l_src, start:0, counts:20, user:username_value,appid:tp.appid},null,cpns_get_ack);
                	 }
                }               
            };
            l_dom_username.onfocus = function(){
                if(this.value == mcs_username){
                    this.value = "";
                }
                this.style.color = "#404040";
                if(!g_domain_oems_vimtag) jQuery(this).addClass("standard_inputs_focus");
            };
            l_dom_username.onblur = function(){
            	  if(!g_domain_oems_vimtag) jQuery(this).removeClass("standard_inputs_focus");
                if(this.value == ""){
                    this.style.color = "#bdbdbd";
                    this.value = mcs_username;
                }else{
                    this.style.color = "#404040";
                }
            };
            l_dom_show_password.onfocus = function(){
                this.style.display = "none";
                mx("#signin_pw").style.display = "inline";
                mx("#signin_pw").focus();
            };
            l_dom_password.onfocus = function(){
            	  if(!g_domain_oems_vimtag) jQuery(this).addClass("standard_inputs_focus");
                this.select();
            };
            l_dom_password.onblur = function(){
            	  if(!g_domain_oems_vimtag) jQuery(this).removeClass("standard_inputs_focus");
                if(this.value == "")
                {
                    this.style.display = "none";
                    mx("#signin_show_pw").style.display = "inline";
                }
            };
            l_dom_username.onkeypress = function(e) {
                var evt = e || window.event;
                if((evt.which || evt.keyCode) == 13)
                {
                    mx("#signin_pw").focus();
                }
            };
            l_dom_password.onkeypress = function(e) {
                var evt = e || window.event;
                if((evt.which | evt.keyCode) == 13)
                {
                    jQuery("#sign_in").click();
                    evt.returnValue = false;
                }
            };
            if(g_domain_oems_mipcm||g_domain_oems_vimtag||g_domain_oems_avue)
            {
								l_dom_forget_pass.onclick = function(){
									  if(g_domain_oems_mipcm||g_domain_oems_avue){
										  var dom_forget_pass = 
										  "<div id='forget_pass_inner'>"
										  +       "<div style='margin-top:20%' id='input_account_page'>"
										  +         "<div style='margin-bottom:20px;'>"
		                  +           "<input class='standard_inputs_normal' id='binding_account_name' type='text' style='width:230px;float:none;' value='" + mcs_please_input_username + "'>"
		                  +           "<input class='standard_inputs_normal' id='binding_account' type='text' style='display:none;color:#404040;width:230px;float:none;'>"
		                  +         "</div>"
		                  +         "<div style='width:220px;margin:auto;'>"
		                  +           "<input id='binding_account_cancel_btn' type='button' class='standard_buttons_green' style='float:left;' value='"+ mcs_cancel +"'>"
		                  +           "<input id='binding_account_next_btn' type='button' class='standard_buttons_red' style='float:right;' value='"+(g_domain_oems_avue?mcs_ok:mcs_action_next)+"'>"
		                  +         "</div>"
										  +       "</div>"
		                  +       "<div style='margin-top:20%;display:none;color:#bbbbbb;font-size:14px;' id='input_email_page'>"
		                  +         "<div style='margin-bottom:10px;'>"
		                  +           "<input class='standard_inputs_normal' id='recovery_pass_email_addr' type='text' style='width:230px;float:none;' value='" + mcs_input_email_addr + "'>"
		                  +           "<input class='standard_inputs_normal' id='recovery_pass_email' type='text' style='display:none;color:#404040;width:230px;float:none;'>"
		                  +         "</div>"
		                  +         "<div id='email_warn' style='display:none;'>"
		                  +         "<span>"+ mcs_prompt +": </span><span id='binding_account_email'></span>"
		                  +         "</div>"
		                  +         "<div style='width:220px;margin:auto;margin-top:10px;'>"
		                  +           "<input class='standard_buttons_green' id='recovery_pass_ok_btn' type='button' style='float:left;' value='"+ mcs_ok +"'>"
		                  +           "<input class='standard_buttons_red' id='recovery_pass_cancel_btn' type='button' style='float:right;' value='"+mcs_cancel+"'>"                
		                  +         "</div>"
		                  +       "</div>"
		                  +       "<div style='margin-top:20%;display:none;color:#bbbbbb;font-size:14px;' id='forget_password_page'>"
		                  +         "<div style='margin-bottom:10px;margin-left:25px;margin-right:25px;' id='retrieve_password_warn'></div>"
		                  +         "<div style='width:100px;margin:auto;margin-top:20px;'>"
		                  +           "<input id='forget_password_close_btn' type='button' class='standard_buttons_green' value='"+ mcs_ok +"'>"
		                  +         "</div>"
		                  +       "</div>"
										  +"</div>";
									  }else if (g_domain_oems_vimtag){ 
									  	var dom_forget_pass = 
										  "<div id='forget_pass_inner' style='background-color:#ffffff;'>"
										  +       "<div style='margin-top:20%' id='input_account_page'>"
										  +         "<div style='margin-bottom:20px;'>"
		                  +           "<input class='standard_inputs_normal' id='binding_account_name' type='text' style='width:230px;float:none;' value='" + mcs_please_input_username + "'>"
		                  +           "<input class='standard_inputs_normal' id='binding_account' type='text' style='display:none;color:#404040;width:230px;float:none;'>"
		                  +         "</div>"
		                  +         "<div style='width:220px;margin:auto;'>"
		                  +           "<input id='binding_account_cancel_btn' type='button' class='vimtag_button_left' value='"+ mcs_cancel +"'>"
		                  +           "<input id='binding_account_next_btn' type='button' class='vimtag_button_right' value='"+mcs_action_next+"'>"
		                  +         "</div>"
										  +       "</div>"
		                  +       "<div style='margin-top:20%;display:none;color:#00a6ba;font-size:14px;' id='input_email_page'>"
		                  +         "<div style='margin-bottom:10px;'>"
		                  +           "<input class='standard_inputs_normal' id='recovery_pass_email_addr' type='text' style='width:230px;float:none;' value='" + mcs_input_email_addr + "'>"
		                  +           "<input class='standard_inputs_normal' id='recovery_pass_email' type='text' style='display:none;color:#404040;width:230px;float:none;'>"
		                  +         "</div>"
		                  +         "<div id='email_warn' style='display:none;'>"
		                  +         "<span>"+ mcs_prompt +": </span><span id='binding_account_email'></span>"
		                  +         "</div>"
		                  +         "<div style='width:220px;margin:auto;margin-top:10px;'>"
		                  +           "<input id='recovery_pass_ok_btn' type='button' class='vimtag_button_left' value='"+ mcs_ok +"'>"
		                  +           "<input id='recovery_pass_cancel_btn' type='button' class='vimtag_button_right' value='"+mcs_cancel+"'>"                
		                  +         "</div>"
		                  +       "</div>"
		                  +       "<div style='margin-top:20%;display:none;color:#00a6ba;font-size:14px;' id='forget_password_page'>"
		                  +         "<div style='margin-bottom:10px;margin-left:25px;margin-right:25px;' id='retrieve_password_warn'></div>"
		                  +         "<div style='width:100px;margin:auto;margin-top:20px;'>"
		                  +           "<input id='forget_password_close_btn' type='button' class='vimtag_button_left' value='"+ mcs_ok +"'>"
		                  +         "</div>"
		                  +       "</div>"
										  +"</div>";
									  }					
										jQuery("#login_box").append(dom_forget_pass);
										
										if(g_domain_oems_mipcm||g_domain_oems_avue) mx("#forget_pass_inner").style.backgroundImage = "url('/imgs/flax_lines.jpg')";
										var l_dom_forget_pass_inner = mx("#forget_pass_inner"),
										    l_dom_recovery_pass_email_addr = mx("#recovery_pass_email_addr"),
										    l_dom_recovery_pass_email = mx("#recovery_pass_email"),
										    l_dom_recovery_pass_cancel_btn = mx("#recovery_pass_cancel_btn"),
										    l_dom_recovery_pass_ok_btn = mx("#recovery_pass_ok_btn"),
										    l_dom_binding_account_name = mx("#binding_account_name"),
										    l_dom_binding_account = mx("#binding_account"),
										    l_dom_binding_account_cancel_btn = mx("#binding_account_cancel_btn"),
										    l_dom_binding_account_next_btn = mx("#binding_account_next_btn"),
										    l_dom_input_account_page = mx("#input_account_page"),
										    l_dom_input_email_page = mx("#input_email_page"),
										    l_dom_binding_account_email = mx("#binding_account_email"),
										    l_dom_email_warn = mx("#email_warn"),
										    l_dom_forget_password_close_btn = mx("#forget_password_close_btn");
										    
										var l_username_value = mx("#signin_name").value.trim();
										var l_hostname = {
		                	  "mipcm.com":{appid:"mipcm.com",name:"mipcm"},
		                	  "vimtag.com":{appid:"vimtag.com",name:"vimtag"},
		                	  "avuecam.com":{appid:"www.avuecam.com",name:"auvecam"}
				            };
				            for(temp in l_hostname){
				                if(temp==g_hostname || g_hostname.substring(g_hostname.indexOf('.')+1,g_hostname.length)==temp){	
				                	 var tp = l_hostname[temp];
			              	 	   var appid = tp.appid, name = tp.name;
			              	 	}
			              }	    
										if(l_username_value&&(l_username_value!=mcs_username)){
											  l_dom_binding_account_name.style.display = "none";
											  l_dom_binding_account.style.display = "inline";
											  l_dom_binding_account.value = l_username_value;											  
		        		    }
		        		    function binding_accounts_info_ack(msg,ref){
		        		        if(msg&&msg.conf.email!=""){
		        		        	if(msg.conf.active_email){
		        		        	  l_dom_email_warn.style.display = "block";
		        		            l_dom_binding_account_email.innerHTML = msg.conf.email;	
		        		          }else {
		        		          	msg_tips({msg:mcs_email_inactive,type:"error",timeout:3000});
		        		          }
		        		        }
		        		    }
										l_dom_binding_account_name.onfocus = function(){
										    this.style.display = "none";
										    l_dom_binding_account.style.display = "inline";
										    l_dom_binding_account.focus();
										};
										l_dom_binding_account.onfocus = function(){
											  this.select();
										};
										l_dom_binding_account.onblur = function(){
										    if(this.value == ""){
										        this.style.display = "none";
										        l_dom_binding_account_name.style.display = "inline";
										    }
										};
										l_dom_recovery_pass_email_addr.onfocus = function(){
		                		this.style.display = "none";
		                    l_dom_recovery_pass_email.style.display = "inline";
		                    l_dom_recovery_pass_email.focus();
		                };
		                l_dom_recovery_pass_email.onfocus = function(){
		                		this.select();
		                };
		                l_dom_recovery_pass_email.onblur = function(){
		                		if(this.value == ""){
		                        this.style.display = "none";
		                        l_dom_recovery_pass_email_addr.style.display = "inline";
		                    }
		                };
		                l_dom_binding_account_next_btn.onclick = function(){
		                	  if(g_domain_oems_avue){
		                	    ms.send_msg("recovery_binding_email",{email:l_dom_binding_account.value,user:l_dom_binding_account.value,lang:g_now_lang,appid:appid,name:name}, null, recovery_binding_email_ack);
		                	  }else{
		                	    ms.send_msg("binding_email_get",{user:l_dom_binding_account.value,appid:appid},{data:1},binding_accounts_info_ack);
		                      l_dom_input_account_page.style.display = "none";
		                      l_dom_input_email_page.style.display = "block";
		                    } 
		                };
		                l_dom_recovery_pass_ok_btn.onclick = function(){
		                		var reg;
		                		if(!l_dom_recovery_pass_email.value || l_dom_recovery_pass_email.value == mcs_input_email_addr){
		                				g_domain_oems_vimtag?msg_tips({msg:mcs_invalid_email_addr,type:"error",timeout:3000}):system_tooltip({parent:l_dom_recovery_pass_email, color:"red", position:"left", disappear_way:"time", str:mcs_invalid_email_addr + "."});
		                        return;
		                		}else{
		                				reg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/;
		                				if(!reg.exec(l_dom_recovery_pass_email.value)){
		                						g_domain_oems_vimtag?msg_tips({msg:mcs_invalid_email_addr,type:"error",timeout:3000}):system_tooltip({parent:l_dom_recovery_pass_email, color:"red", position:"left", disappear_way:"time", str:mcs_invalid_email_addr + "."});
		                        		return;
		                				}
		                		}									
				                ms.send_msg("recovery_binding_email",{email:l_dom_recovery_pass_email.value, user:l_dom_binding_account.value, lang:g_now_lang,appid:appid,name:name}, null, recovery_binding_email_ack);                		
		                };
		                l_dom_recovery_pass_cancel_btn.onclick = function(){
											  jQuery("#forget_pass_inner").remove();
		                };
		                l_dom_binding_account_cancel_btn.onclick = function(){
		                    jQuery("#forget_pass_inner").remove();
		                };
		                l_dom_forget_password_close_btn.onclick = function(){
		                    jQuery("#forget_pass_inner").remove();
		                };
								};
					  }
					  
            if(!g_domain_oems_vimtag)
            {
            	  l_dom_download_client_ico.onclick = function(){
                    window.open(window.location.protocol + "//www.mipcm.com/download/?hl=" + g_now_lang);
		            }
		            l_dom_download_client_warn.onclick = function(){
		                jQuery("#download_client_ico").click();
		            }
            }
            //When an event is vimtag
            if(g_domain_oems_vimtag)
            {
            	  l_dom_register_username.onfocus = function(){
                   if(this.value == mcs_input_username){
                       this.value = "";
                   }
                   this.style.color = "#404040";
                };
                l_dom_register_username.onblur = function(){
                   if(this.value == ""){
                       this.style.color = "#bdbdbd";
                       this.value = mcs_input_username;
                   }else{
                       this.style.color = "#404040";
                   }
                };
                l_dom_register_show_password_again.onfocus = function(){
                   this.style.display = "none";
                   mx("#register_signin_pw_again").style.display = "inline";
                   mx("#register_signin_pw_again").focus();
                };
                l_dom_register_show_password.onfocus = function(){
                   this.style.display = "none";
                   mx("#register_signin_pw").style.display = "inline";
                   mx("#register_signin_pw").focus();
                };
                l_dom_register_password_again.onfocus = function(){
                   this.select();
                };
                l_dom_register_password.onfocus = function(){
                   this.select();
                };
                l_dom_register_password_again.onblur = function(){
                   if(this.value == ""){
                      this.style.display = "none";
                      mx("#register_signin_show_pw_again").style.display = "inline";
                   }
                };
                l_dom_register_password.onblur = function(){
                   if(this.value == ""){
                      this.style.display = "none";
                      mx("#register_signin_show_pw").style.display = "inline";
                   }
                };
                l_dom_password_eye.onclick = function(){
                   if(l_dom_password_eye.className == "password_eye"){
                	     l_dom_password_eye.className = "password_eye_gray";
                	     mx("#signin_pw").type = "password";
                   }else{
                	     l_dom_password_eye.className = "password_eye";
                	     mx("#signin_pw").type = "text";
                   }
                };
                l_dom_register_password_eye.onclick = function(){
                   if(l_dom_register_password_eye.className == "password_eye"){
                	     l_dom_register_password_eye.className = "password_eye_gray";
                	     mx("#register_signin_pw").type = "password";
                   }else{
                	     l_dom_register_password_eye.className = "password_eye";
                	     mx("#register_signin_pw").type = "text";
                   }
                };
                l_dom_register_password_eye_again.onclick = function(){
                   if(l_dom_register_password_eye_again.className == "password_eye"){
                	     l_dom_register_password_eye_again.className = "password_eye_gray";
                	     mx("#register_signin_pw_again").type = "password";
                   }else{
                	     l_dom_register_password_eye_again.className = "password_eye";
                	     mx("#register_signin_pw_again").type = "text";
                   }
                };
                l_dom_register_account.onclick = function(){
            	     jQuery("#sigin_in_username").hide();
            	     jQuery("#sigin_in_password").hide();
            	     jQuery("#sign_in").hide();
            	     jQuery("#register_account").hide();
                   jQuery("#register_username").show();
                   jQuery("#register_account_pwd").show();
                   jQuery("#register_account_pwd_again").show();
                   jQuery("#register_btn").show();
                   jQuery("#sign_account").show();
                   if(g_domain_oems_vimtag) mx("#forget_pass").style.display="none";
                };
                l_dom_sign_account.onclick = function(){
                   jQuery("#sigin_in_username").show();
            	     jQuery("#sigin_in_password").show();
            	     jQuery("#sign_in").show();
            	     jQuery("#register_account").show();
                   jQuery("#register_username").hide();
                   jQuery("#register_account_pwd").hide();
                   jQuery("#register_account_pwd_again").hide();
                   jQuery("#register_btn").hide();
                   jQuery("#sign_account").hide();
                   if(g_domain_oems_vimtag) mx("#forget_pass").style.display="block";
                };
                l_dom_register_btn.onclick = function() {
                    var reg,
                    username_value = l_dom_register_username.value,
                    password_value = l_dom_register_password.value,
                    pw_confirm_value = l_dom_register_password_again.value;

                    if(!username_value || username_value == mcs_input_username){
                       msg_tips({msg:mcs_the_user_name_is_empty, type:"error", timeout:3000});
                       return;
                    }else{
                       reg = /^([a-zA-Z][a-zA-Z0-9]{5,19})$/;
                       if(!reg.exec(username_value)){
                          msg_tips({msg:mcs_username_demand, type:"warning", timeout:5000});
                          return;
                       }
                    }
                    if(!password_value || password_value == mcs_input_password){
                       msg_tips({msg:mcs_the_password_is_empty, type:"error", timeout:3000});
                       return;
                    }else{
                       reg = /^\S{6,20}$/;
                       if(!reg.exec(password_value)){
                          msg_tips({msg:mcs_password_demand, type:"warning", timeout:5000});
                          return;
                       }
                    }
                    if(!pw_confirm_value || pw_confirm_value == mcs_confirm_password){
                       msg_tips({msg:mcs_password_empty, type:"error", timeout:3000});
                       return;
                    }
                    if(pw_confirm_value != password_value){
                       msg_tips({msg:mcs_two_password_input_inconsistent, type:"error", timeout:3000});
                       return;
                    }
                    if(g_register_waiting_flag){
                       g_register_waiting_flag = 0;
                       ms.send_msg("sign_up",{srv:g_server_device, user:username_value, password:mmd5.hex(password_value)},null,function(msg,ref){
                          if(msg && msg.result==""){
                       	     jQuery("#register_page").toggle();
                             system_pop_confirm_box({str:mcs_successful_whether_login,
	                             callback_func:function(){
	                               l_parent_callback({type:"login",data:{user:username_value, password:password_value}});
	                             }
                             })                             
                          }else if(msg.result == "accounts.user.existed"){
                       	     msg_tips({msg:mcs_username_already_exists, type:"error", timeout:3000});
                          }else{
                       	     msg_tips({msg:"error:sign up return error in class_register_page.", type:"error", timeout:3000});
                          }
                          g_register_waiting_flag = 1;
                       });
                    }
                };
            }
        }
        function recovery_binding_email_ack(msg,ref){
        	        if(msg&&msg.result == ""){
        			  if(g_domain_oems_avue) mx("#input_account_page").style.display="none";
        	  	  mx("#input_email_page").style.display = "none";
        	  	  mx("#forget_password_page").style.display = "block";
        	  	  mx("#retrieve_password_warn").innerHTML = mcs_password_reset_confirmation;
        	  }else if(msg.result == "accounts.bind.email.exist"){
        	  		g_domain_oems_vimtag?msg_tips({msg:mcs_accounts_bind_email_exist,type:"error",timeout:3000}):system_tooltip({parent:mx("#binding_account"), color:"red", position:"right", disappear_way:"time", str:mcs_accounts_bind_email_exist});
                return;
        	  }else if(msg.result == "accounts.bind.email.busy"){
        	  	  g_domain_oems_vimtag?msg_tips({msg:mcs_accounts_bind_email_busy,type:"error",timeout:3000}):system_tooltip({parent:mx("#binding_account"), color:"red", position:"right", disappear_way:"time", str:mcs_accounts_bind_email_busy});
                return;
        	  }else if(msg.result == "accounts.recovery.email.unmatch"){
        	  	  g_domain_oems_vimtag?msg_tips({msg:mcs_email_unmatch,type:"error",timeout:3000}):system_tooltip({parent:mx("#binding_account"), color:"red", position:"right", disappear_way:"time", str:mcs_email_unmatch});
        	      return;
        	  }else if(msg.result == "accounts.recovery.email.unbind"){
        	  	  g_domain_oems_vimtag?msg_tips({msg:mcs_recovery_fail_no_mail,type:"error",timeout:3000}):system_tooltip({parent:mx("#binding_account"), color:"red", position:"right", disappear_way:"time", str:mcs_recovery_fail_no_mail});
        	      return;
        	  }else if(msg.result == "accounts.recovery.email.inactive"){
        	  	  g_domain_oems_vimtag?msg_tips({msg:mcs_login_fail_inactive,type:"error",timeout:3000}):system_tooltip({parent:mx("#binding_account"), color:"red", position:"right", disappear_way:"time", str:mcs_login_fail_inactive});
        	      return;
        	  }else{
        	  	  g_domain_oems_vimtag?msg_tips({msg:msg.result,type:"error",timeout:3000}):system_tooltip({parent:mx("#binding_account"), color:"red", position:"right", disappear_way:"time", str:msg.result});
        	      return;
        	  }
        }
        //Log Returns
        function login_ack(obj,ref)
        {   //There is a problem before returning, no result is a successful login
            if(obj.result == ""){
                if(g_login_status == "ipc" && (!g_domain_oems_vimtag)){
                    if(!l_dom_net_setting){
                       l_dom_net_setting=new net_setting_class({parent:mx("#login_page"), on_event:function(obj){return l_parent_callback(obj);}});
                    }
                    l_dom_net_setting.ctrl({type:"ipc_pass_set",data:{user:ref.user,pass:ref.password}});
                }else{
                    l_parent_callback({type:"logined"});                    
                }
                //If vimtag, remember the default password
                if(g_domain_oems_vimtag){
                   mlocal_storage.set("remember_msg_info",mcodec.obj_2_str({user:username_value,password:l_pwd_val}));
                	 mlocal_storage.set("auto_login","1");
                }else{
                   if(mx("remember_me")[0].checked)
		          		    mlocal_storage.set("remember_msg_info",mcodec.obj_2_str({user:username_value,password:l_pwd_val}));
		        		   else
		          		    mlocal_storage.set("remember_msg_info","");
		        	  }                            
            }else{
            	  g_login_waiting_flag = 0;
		            if(obj.result=="accounts.user.offline"){
		                g_domain_oems_vimtag?msg_tips({msg:mcs_offline, type:"warning", timeout:3000}):system_tooltip({parent:mx("#signin_name"), color:"red", position:"right", disappear_way:"time", str:mcs_offline});
		            }
		            else if(obj.result=="accounts.user.unknown"){
		                g_domain_oems_vimtag?msg_tips({msg:mcs_username_does_not_exis, type:"warning", timeout:3000}):system_tooltip({parent:mx("#sign_in"), color:"red", position:"right", disappear_way:"time", str:mcs_username_does_not_exis});
		            }
		            else if(obj.result=="accounts.pass.invalid"){
		                g_domain_oems_vimtag?msg_tips({msg:mcs_invalid_password, type:"warning", timeout:3000}):system_tooltip({parent:mx("#sign_in"), color:"red", position:"right", disappear_way:"time", str:mcs_invalid_password});
		            }
		            else if(obj.result=="accounts.user.inactive"){
		            	  /*The oem avuecam register email account need to active*/
		            	  g_domain_oems_vimtag?msg_tips({msg:mcs_email_inactive, type:"warning", timeout:3000}):system_tooltip({parent:mx("#sign_in"), color:"red", position:"right", disappear_way:"time", str:mcs_email_inactive});
		            }else{
		            	  g_domain_oems_vimtag?msg_tips({msg:"error:sign in return error in class_login_box.", type:"warning", timeout:3000}):log("error:sign in return error in class_login_box.");
		            }
            }
        }
        function remove_event()
        {
            l_dom_sign_in.onclick = "";
            l_dom_username.onfocus = "";
            l_dom_username.onblur = "";
            l_dom_username.onkeypress = "";
            l_dom_show_password.onfocus = "";
            l_dom_password.onfocus = "";
            l_dom_password.onblur = "";
            l_dom_password.onkeypress = "";
            l_dom_password.onkeypress = "";
            if(g_domain_oems_vimtag){
                 l_dom_register_username.onfocus = "";
               l_dom_register_username.onblur = "";
               l_dom_register_username.onkeypress = "";
               l_dom_register_show_password.onfocus = "";
               l_dom_register_show_password_again.onfocus = "";
               l_dom_register_password.onfocus = "";
               l_dom_register_password.onblur = "";
               l_dom_register_password_again.onfocus = "";
               l_dom_register_password_again.onblur = "";
            }
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_dom_signin_inner.style.paddingTop = l_me_parent.offsetHeight / 4 + "px";
                        break;
                    }
                case "destroy":
                    {
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                case "login":
                    {
                    	  l_dom_username.value = obj.data.user;
                    	  l_dom_password.value = obj.data.password;
                    	  l_dom_sign_in.click();
                    	  break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_login_box.");
            }
        }
        add_event();
        if(obj.type=="IPC" || obj.type=="BOX"){
            l_dom_username.disabled = true;
            l_dom_username.value = obj.sn;
            l_dom_username.style.color = "#555";
        }
        l_remember_data = mlocal_storage.get("remember_msg_info");
        l_remember_data_obj = l_remember_data?eval('('+l_remember_data+')'):null;
        if(l_remember_data_obj && l_remember_data_obj.user && l_remember_data_obj.password){
           l_dom_username.value = l_remember_data_obj.user;
           l_dom_password.value = "......";
           l_password_value = l_remember_data_obj.password;
           l_dom_show_password.style.display = "none";
           l_dom_password.style.display = "inline";
           l_dom_password.focus();
           jQuery("#remember_me").click();
           if(g_is_auto_login)
              l_dom_sign_in.click();
        }
        jQuery("#remember_div").jNice();
    }

    function class_register_page(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback=obj.on_event,
            l_dom_username, l_dom_show_password, l_dom_password,
            l_dom_show_pw_confirm,
            l_dom_pw_confirm,
            l_dom_register_button,
            l_domain_appid="",
            l_domain_name="";

        l_me_parent[s_innerHTML] =
            "<div id='register_page_inner'>"
            +   "<h2>" + mcs_join_us_now + ":</h2>"
            +   "<div class='placeholding_input'>"
            +       "<input class='standard_inputs_normal_ex pop_menu_first' id='register_name' type='text' value='" + mcs_username + "'>"
            +   "</div>"
            +   "<div class='placeholding_input'>"
            +       "<input class='standard_inputs_normal_ex pop_menu_mid' id='register_show_pw' type='text' value='" + mcs_password + "'>"
            +       "<input class='standard_inputs_normal_ex pop_menu_mid' id='register_pw' type='password' style='display:none;color:#404040'>"
            +   "</div>"
            +   "<div class='placeholding_input'>"
            +       "<input class='standard_inputs_normal_ex pop_menu_last' id='register_show_confirm' type='text' value='" + mcs_confirm_password+ "'>"
            +       "<input class='standard_inputs_normal_ex pop_menu_last' id='register_confirm' type='password' style='display:none;color:#404040'>"
            +   "</div>"
            +   "<button class='register_button'>" + mcs_sign_up + "</button>"
            +   "<span class='caret_arrow_up' style='position:absolute;top:-6px;left:100px;'></span>"
            +"</div>";

        l_dom_username = mx("#register_name");
        l_dom_show_password = mx("#register_show_pw");
        l_dom_password = mx("#register_pw");
        l_dom_show_pw_confirm = mx("#register_show_confirm");
        l_dom_pw_confirm = mx("#register_confirm");
        l_dom_register_button = mx(".register_button")[0];
        
        if(g_domain_oems_avue){
          var l_hostname = {
            "avuecam.com":{appid:"www.avuecam.com",name:"avuecam"}
          };
          for(temp in l_hostname){
            if(temp==g_hostname || g_hostname.substring(g_hostname.indexOf('.')+1,g_hostname.length)==temp){
              var tp = l_hostname[temp];
              l_domain_appid = tp.appid;
              l_domain_name  = tp.name;
            }
          }
        }
        function add_event()
        {   //Register button click event
            l_dom_register_button.onclick = function(){
                var reg=/^([a-zA-Z][a-zA-Z0-9]{5,19})$/,reg1=/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/,
                    username_value = l_dom_username.value,
                    password_value = l_dom_password.value,
                    pw_confirm_value = l_dom_pw_confirm.value;

                if(!username_value || username_value == mcs_username){
                    system_tooltip({parent:l_dom_username, color:"red", position:"left", disappear_way:"time", str:mcs_the_user_name_is_empty + "."});
                    return;
                }else{
                	  if(g_domain_oems_avue){
                	    if(!reg.exec(username_value)&&!reg1.exec(username_value)){
                	      system_tooltip({parent:l_dom_username, color:"red", position:"left", disappear_way:"time", str:mcs_username_demand + "."});
                	      return;
                	    } 
                	  }else{
                      if(!reg.exec(username_value)){
                        system_tooltip({parent:l_dom_username, color:"red", position:"left", disappear_way:"time", str:mcs_username_demand + "."});
                        return;
                      }	
                	  }
                }
                if(!password_value || password_value == mcs_password){
                    system_tooltip({parent:l_dom_show_password, color:"red", position:"left", disappear_way:"time", str:mcs_the_password_is_empty + "."});
                    return;
                }else{
                    var reg2 = /^\S{6,20}$/;
                    if(!reg2.exec(password_value)){
                        system_tooltip({parent:l_dom_password, color:"red", position:"left", disappear_way:"time", str:mcs_password_demand + "."});
                        return;
                    }
                }
                if(!pw_confirm_value || pw_confirm_value == mcs_confirm_password){
                    system_tooltip({parent:l_dom_show_pw_confirm, color:"red", position:"left", disappear_way:"time", str:mcs_password_empty + "."});
                    return;
                }
                if(pw_confirm_value != password_value){
                    system_tooltip({parent:l_dom_pw_confirm, color:"red", position:"left", disappear_way:"time", str:mcs_two_password_input_inconsistent + "."});
                    return;
                }
                if(g_register_waiting_flag){
                    g_register_waiting_flag = 0;
                    ms.send_msg("sign_up",{srv:g_server_device, user:username_value, password:mmd5.hex(password_value)},{lang:g_now_lang,appid:l_domain_appid,name:l_domain_name},function(msg,ref){
                       if(msg&&msg.result==""){
                       	 jQuery("#register_page").toggle();
                       	 if(g_domain_oems_avue&&reg1.exec(username_value)){
                       	 	 /*IF it's oem avuecam to register with email and warn to active the account*/
                       	   system_pop_confirm_box({str:mcs_sign_up_confirmation,
                             callback_func:function(){
                               l_parent_callback({type:"login",data:{user:username_value, password:password_value}});
                             }
                           })
                       	 }else{
                       	   system_pop_confirm_box({str:mcs_successful_whether_login,
                             callback_func:function(){
                               l_parent_callback({type:"login",data:{user:username_value, password:password_value}});
                             }
                           })	
                       	 }
                       }else if(msg.result == "accounts.user.existed"){
                       	 system_tooltip({parent:mx("#register_name"), color:"red", position:"left", disappear_way:"time", str:mcs_username_already_exists});
                       }else{
                       	 log("error:sign up return error in class_register_page.");
                       }
                       g_register_waiting_flag = 1;
                    });
                }
            };
            l_dom_username.onfocus = function(){
                this.style.color = "#404040";
                if(this.value == mcs_username){
                    this.value = "";
                }
                system_tooltip({parent:l_dom_username, color:"green", position:"left", disappear_way:"time", str:mcs_username_demand+ "."});
            };
            l_dom_username.onblur = function(){
                if(this.value == ""){
                    this.style.color = "#404040";
                    this.value = mcs_username;
                }else{
                    this.style.color = "#404040";
                }
            };
            l_dom_show_password.onfocus = function(){
                this.style.display = "none";
                l_dom_password.style.display = "inline";
                l_dom_password.focus();
            };
            l_dom_password.onfocus = function(){
                this.select();
                system_tooltip({parent:l_dom_password, color:"green", position:"left", disappear_way:"time", str:mcs_password_demand + "."});
            };
            l_dom_password.onblur = function(){
                if(this.value == ""){
                    this.style.display = "none";
                    l_dom_show_password.style.display = "inline";
                }
            };
            l_dom_show_pw_confirm.onfocus = function(){
                this.style.display = "none";
                l_dom_pw_confirm.style.display = "inline";
                l_dom_pw_confirm.focus();
            };
            l_dom_pw_confirm.onfocus = function(){
                this.select();
            };
            l_dom_pw_confirm.onblur = function(){
                if(this.value == ""){
                    this.style.display = "none";
                    l_dom_show_pw_confirm.style.display = "inline";
                }
            };
        }
        add_event();
    }

    function class_main_page(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_notif_count = 0,
            //dom
            l_dom_menu_box,
            l_dom_cntr_box,
            l_dom_top_box,
            // class obj
            l_menu_box_obj,
            l_cntr_box_obj,
            l_top_box_obj;

        //Create input box animation
        function add_standard_style(){
            if(null == g_standard_input_box_onfocus)
            {   //Being the focus of the event animation
                g_standard_input_box_onfocus = function(obj){
                    jQuery(obj).removeClass("standard_inputs");
                    jQuery(obj).addClass("standard_inputs_hover");
                };
            }
            if(null == g_standard_input_box_onblur)
            {   //Animation losing focus events
                g_standard_input_box_onblur = function(obj){
                    jQuery(obj).removeClass("standard_inputs_hover");
                    jQuery(obj).addClass("standard_inputs");
                };
            }
        }
        //Clear animation
        function remove_standard_style()
        {
            g_standard_input_box_onfocus = null;
            g_standard_input_box_onblur = null;
        }
        //Processing mmq return information
        function dev_msg_listener_mmq(msg,ref)
                {
                if(msg.result != "") return;
                var i,length =msg.items.length,old_count = l_notif_count,device_change = 0
                ,old_sn;
                for(i=0;i< length;i++){
                      //If the message does not exist owned equipment directly return
                      var device_list_obj = mcloud_agent.devs.get(msg.items[i].sn);
                if(!device_list_obj)return;
//                  if(msg.items && msg.items[i].msg_id)//To create red word
                    if(msg.items)//To create red word
                {
                   if((g_now_page != "alarm")||(g_select_device_ipc != msg.items[i].sn)){
                      if(device_list_obj.stat == "Online"){
                           l_me.ctrl({type:"refresh_notif_latest", data:{now_item:msg.items[i],sn:msg.items[i].msg_id}});
                      }
                   }
                }
                //Returns the device information
                if(msg.items[i].type == "device" && msg.items[i].code == "info")
                {
                    for(j=0;j<msg.items[i].p.length;j++)
                    {
                       if(msg.items[i].p[j].n == "status" &&  msg.items[i].p[j].v =="Online" )
                       {
                          device_list_obj.stat = "Online";
                          if(g_select_device_ipc == ""){
                            g_select_device_ipc = msg.items[i].sn;
                            device_change = 1;
                            old_sn = "";
                          }
                       }
                       else if(msg.items[i].p[j].n == "status" &&  msg.items[i].p[j].v =="Offline")
                       {
                          device_list_obj.stat = "Offline";
                          if(g_select_device_ipc == msg.items[i].sn){
                               for(var length1 = mcloud_agent.devs.list.length,n=0;n< length1;n++){
                                                            if(mcloud_agent.devs.list[n].stat == "Online"){
                                                                  old_sn = g_select_device_ipc;
                                                                g_select_device_ipc = mcloud_agent.devs.list[n].sn;
                                                                device_change = 1;
                                                                break;
                                                            }
                                                     }
                                                     if(n >= length1){
                                                          old_sn = g_select_device_ipc;
                                                        g_select_device_ipc = "";
                                                      device_change = 1;
                                                     }
                          }
                       }
                       else if(msg.items[i].p[j].n == "status" &&  msg.items[i].p[j].v =="InvalidAuth")
                       {
                          device_list_obj.stat = "InvalidAuth";
                          if(g_select_device_ipc == msg.items[i].sn){
                             for(var length2 = mcloud_agent.devs.list.length,n=0;n< length2;n++){
                                                        if(mcloud_agent.devs.list[n].stat == "Online"){
                                                        old_sn = g_select_device_ipc;
                                                        g_select_device_ipc = mcloud_agent.devs.list[n].sn;
                                                        device_change = 1;
                                                        break;
                                                        }
                                                 }
                                                 if(n >= length1){
                                                        old_sn = g_select_device_ipc;
                                                    g_select_device_ipc = "";
                                                    device_change = 1;
                                                 }
                          }
                       }
                       else if(msg.items[i].p[j].n == "nick")
                       {
                          device_list_obj.nick = msg.items[i].p[j].v ;
                       }
                       else if(msg.items[i].p[j].n == "firmware_version")
                       {
                          device_list_obj.img_ver=msg.items[i].p[j].v;
                       }
                       else if(msg.items[i].p[j].n == "s.wifs" && l_menu_box_obj)
                       {
                          // if(!g_domain_oems_vimtag) l_menu_box_obj.ctrl({type:"wifs_replace", data:msg.items[i].p});
                       }
                    }
                    if(l_cntr_box_obj)
                    {  //Refresh device list
                       if(!g_domain_oems_vimtag) l_cntr_box_obj.ctrl({type:"refresh_device_list",data:{change:device_change,old_sn:old_sn}});
                    }
                }
                else if(msg.items[i].type == "nick")//Returns the nickname information
                {
                    for(j=0;j<msg.items[i].p.length;j++)
                    {
                       if(msg.items[i].p[j].n == "nick" && msg.items[i].p[j].v.trim() != "")
                       {
                           device_list_obj.nick = msg.items[i].p[j].v ;
                           //Notification Device List change device nickname
                           l_cntr_box_obj.ctrl({type:"change_device_name",sn:msg.items[i].sn});
                           break;
                       }
                    }
                }
                else if(msg.items[i].msg_id!=0)
                {
                    if(determine_the_version({type:"Anti",version:version_Category.Snapshot_version}))
                    {
                       return;
                    }
                    /*if(msg.items[i].p)
                    {
                       for(j=0;j<msg.items[i].p.length;j++)
                       {
                           if(msg.items[i].p[j].n =="content")
                           {
                              var objs=eval("(" + msg.items[i].p[j].v + ")");
                              if(objs.Extension){
                                imagings={type:"update_imaging",brightness:"",contrast:"",colorsaturation:"", sharpness:""};
                                imagings.brightness      = objs.Extension.Imaging.Brightness;
                                imagings.contrast        = objs.Extension.Imaging.Contrast;
                                imagings.colorsaturation = objs.Extension.Imaging.ColorSaturation;
                                imagings.sharpness       = objs.Extension.Imaging.Sharpness;
                                l_cntr_box_obj.ctrl(imagings);
                              }
                              return;
                           }
                       }
                    }*/
                    var msgs=new Object();
                    msgs.items=msg.items[i];
                    msg.items[i].display = 0;
                                                //is not a good habit
                    l_notif_count = 0;
                    if(!g_notif_info["sn_" + msg.items[i].sn])
                    {
                        g_notif_info["sn_" + msg.items[i].sn] = createLinkList();
                    }
                    g_notif_info["sn_" + msg.items[i].sn].add(msgs);
                    if(msg.items[i].sn == g_select_device_ipc && g_now_page == "alarm")
                        l_cntr_box_obj.ctrl({type:"refresh_alarm", data:{item:msgs}});
                    else
                    {
                        if(old_count < 99 && !mx("#alarm_search_content_tb"+msg.items[i].msg_id))
                        {
                            for(var n in g_notif_info)
                            {
                                if(g_notif_info.hasOwnProperty(n))
                                {
                                    ++l_notif_count;
                                }
                            }
                        }
                        else
                            l_notif_count = old_count;
                    }
                }
                }
            }
            function scene_toogle()
            {
                var l_dom_nav_scene_img = mx("#nav_scene_img");
                if(!mx("#scene_box"))
                {
                    jQuery("#nav").after(
                        "<div id='scene_box' style='display:none;width:100%;background:#fff;color:#00a6ba;float:left;padding:10px 0;'>"
                            +"<div id='scene_main' style='width:70%;background:#fff;margin:0 auto;'>"
                                +"<div id='scene_auto' style='width:25%;background:url(../imgs/Automatic.png) no-repeat center;padding-top:92px;text-align:center;float:left;cursor:pointer;'><span style='display:inline-block;margin-top:18px;'>"+mcs_auto+"</span></div>"
                                +"<div id='scene_activity' class='active' style='width:25%;background:url(../imgs/Activity2.png) no-repeat center;padding-top:92px;text-align:center;float:left;cursor:pointer;'><span style='display:inline-block;margin-top:18px;'>"+mcs_active+"</span></div>"
                                +"<div id='scene_level' style='width:25%;background:url(../imgs/Leave.png) no-repeat center;padding-top:92px;text-align:center;float:left;cursor:pointer;'><span style='display:inline-block;margin-top:18px;'>"+mcs_out+"</span></div>"
                                +"<div id='scene_quiet' style='width:25%;background:url(../imgs/Quiet.png) no-repeat center;padding-top:92px;text-align:center;float:left;cursor:pointer;'><span style='display:inline-block;margin-top:18px;'>"+mcs_quiet+"</span></div>"
                            +"</div>"
                        +"</div>")
                }
                mx("#nav_scene").onclick = function()
                {
                    if(l_dom_nav_scene_img.getAttribute("src") == "imgs/scene_bottom.png")
                    {
                        l_dom_nav_scene_img.setAttribute("src","imgs/scene_top.png");
                        mx("#scene_box").style.display = "block";
                    }
                    else
                    {
                        l_dom_nav_scene_img.setAttribute("src","imgs/scene_bottom.png");
                        mx("#scene_box").style.display = "none";
                    }
                }
                var scene_list = jQuery("#scene_main div");
                for(var i = 0;i<scene_list.length;i++){
                    scene_list[i].onclick = function(){
                        if(!(jQuery(this).hasClass(".active"))){
                            if(jQuery(this).index() == 0){
                                jQuery(this).css("background","url(imgs/Automatic2.png) no-repeat center");
                                jQuery("#scene_activity").css("background","url(imgs/Activity.png) no-repeat center");
                                jQuery("#scene_level").css("background","url(imgs/Leave.png) no-repeat center");
                                jQuery("#scene_activity").css("background","url(imgs/Activity.png) no-repeat center");
                                jQuery("#scene_quiet").css("background","url(imgs/Quiet.png) no-repeat center");
                                jQuery("#auto_scene_box").siblings().hide();
                                jQuery("#auto_scene_box").show();
                            }else if(jQuery(this).index() == 1){
                                jQuery(this).css("background","url(imgs/Activity2.png) no-repeat center");
                                jQuery("#scene_auto").css("background","url(imgs/Automatic.png) no-repeat center");
                                jQuery("#scene_level").css("background","url(imgs/Leave.png) no-repeat center");
                                jQuery("#scene_quiet").css("background","url(imgs/Quiet.png) no-repeat center");
                                jQuery("#activity_scene_box").siblings().hide();
                                jQuery("#activity_scene_box").show();
                            }else if(jQuery(this).index() == 2){
                                jQuery(this).css("background","url(imgs/Leave2.png) no-repeat center");
                                jQuery("#scene_auto").css("background","url(imgs/Automatic.png) no-repeat center");
                                jQuery("#scene_activity").css("background","url(imgs/Activity.png) no-repeat center");
                                jQuery("#scene_quiet").css("background","url(imgs/Quiet.png) no-repeat center");
                                jQuery("#leave_scene_box").siblings().hide();
                                jQuery("#leave_scene_box").show();
                            }else{
                                jQuery(this).css("background","url(imgs/Quiet2.png) no-repeat center");
                                jQuery("#scene_auto").css("background","url(imgs/Automatic.png) no-repeat center");
                                jQuery("#scene_activity").css("background","url(imgs/Activity.png) no-repeat center");
                                jQuery("#scene_level").css("background","url(imgs/Leave.png) no-repeat center");
                                jQuery("#quiet_scene_box").siblings().hide();
                                jQuery("#quiet_scene_box").show();
                            }
                        }
                    }
                }
            }
            function on_event(obj)
        {
            switch(obj.type)
            {
                case "exchange_page"://Switching Interface: Home, playback
                case "change_select_device_style":
                case "profiles_play":
                case "select_net":
                case "select_device":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "Refresh_devs":
                    {
                       l_parent_callback(obj);
                       break;
                    }
                case "delete_notif_info":
                    {
                         l_menu_box_obj.ctrl({type:obj.type, data:{l_notif_count:--l_notif_count}});
                         break;
                    }
                case "get_profiles":
                    {
                         l_menu_box_obj.ctrl({type:"get_profiles",data:l_cntr_box_obj.ctrl(obj)});
                         break;
                    }
                case "refresh_menu":
                    {
                         l_menu_box_obj.ctrl(obj);
                         break;
                    }
                case "create":
                    {
                       l_cntr_box_obj.ctrl(obj);
                       break;
                    }
                case "create_setting_page":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "change_manager_content":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "create_messages_page":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "destroy_add_devices_box":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "destroy_play_page":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "destroy_history_play_page":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "destroy_setting_page":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "destroy_history_page":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "destroy_box_device_page":
                    {
                       l_cntr_box_obj.ctrl(obj);
                       break;  
                    }
                case "destroy_box_device_history_page":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "destroy_box_device_video_page":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "destroy_box_setting_page":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "select_video_base_select_date":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "return_devices_list_box":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "reload_box_video_list":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "get_image_list":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "get_alarm_video_list":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "get_all_video_list":
                    {
                         l_cntr_box_obj.ctrl(obj);
                         break;
                    }
                case "update":
                    {
                         l_me.ctrl(obj);
                         break;
                    }
                case "refresh_dev_list":
                    {
                        l_cntr_box_obj.ctrl(obj);
                        break;
                    }
                case "destroy_setting_page_offline":
                    {
                        l_cntr_box_obj.ctrl(obj);
                          break;
                    }
                default:
                    log("error:on_event's obj.type is not exist in class_main_page.");
            }
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                          if(g_domain_oems_vimtag)
                          {
                            var l_me_parent_offsetWidth = l_me_parent[s_offsetWidth]==0?document.documentElement.clientWidth :l_me_parent[s_offsetWidth];
                              if(l_me_parent_offsetWidth - 1280 >0)
                              {
                                 g_nine_hundred_side = (l_me_parent_offsetWidth - 900)/2;
                                 g_distance_to_edge = (l_me_parent_offsetWidth - 1256)/2;
                                 g_devices_list_box_width = 1256;
                                 g_player_width = 990;
                               g_player_height = 558;
                               g_body_width = l_me_parent_offsetWidth;
                              }
                              else if(l_me_parent_offsetWidth - 942 >0)
                              {
                                 g_nine_hundred_side = (l_me_parent_offsetWidth - 900)/2;
                                 g_distance_to_edge = (l_me_parent_offsetWidth - 942)/2;
                                 g_devices_list_box_width = 942;
                                 g_player_width = (l_me_parent_offsetWidth/1440)*990;
                               g_player_height = (l_me_parent_offsetWidth/1440)*558;
                               g_body_width = l_me_parent_offsetWidth;
                              }
                                else if(l_me_parent[s_offsetWidth] - 899 >0)
                                {
                                     g_nine_hundred_side = (l_me_parent_offsetWidth - 900)/2;                                
                                   g_distance_to_edge = (l_me_parent_offsetWidth - 628)/2;
                                   g_devices_list_box_width = 628;
                                   g_player_width = 640;
                                 g_player_height = 360;
                                 g_body_width = l_me_parent_offsetWidth; 
                              }
                              else
                              {
                                 g_distance_to_edge = 12;
                                 g_devices_list_box_width = 314;
                              }
                              
                              if(l_dom_top_box && l_top_box_obj)
                              {
                               l_dom_top_box.style.width = "100%";
                                 if(!g_domain_oems_vimtag){
                                  l_top_box_obj.ctrl(obj);
                               }
                              }
                              if(l_dom_menu_box && l_menu_box_obj)
                              {
                                 l_dom_menu_box[s_style][s_width] = "100%";
                                 l_menu_box_obj.ctrl(obj);
                              }
                              if(l_dom_cntr_box && l_cntr_box_obj)
                              {
                                 l_dom_cntr_box[s_style][s_width] = "100%";
                                 l_cntr_box_obj.ctrl(obj);
                              }
                          }
                          else
                          {
                                if(l_dom_menu_box && l_menu_box_obj)
                                {
                                    l_dom_menu_box[s_style][s_width] = l_me_parent[s_offsetWidth] + "px";
                                    l_menu_box_obj.ctrl(obj);
                                }
                                if(l_dom_cntr_box)
                                {
                                    l_dom_cntr_box[s_style][s_width] = l_me_parent[s_offsetWidth] + "px";
                                    l_dom_cntr_box[s_style][s_height] = (l_me_parent[s_offsetHeight] - g_menu_box_h) + "px";
                                    
                                    if(l_cntr_box_obj)
                                       l_cntr_box_obj.ctrl(obj);
                                }
                        }
                        break;
                    }
                case "create"://Create main_page
                    {
                      //Create mmq
                      if(g_domain_oems_vimtag){
                          g_j_page.animate({/*marginLeft:"-100%"*/}, 0, function(){
                            jQuery("#main_page").css({"padding-top":"89px"})
                            jQuery("#login_page").css({"position":"relative"});
                            var login_page_width = jQuery("#login_page").css("width");
                            jQuery("#login_page").animate({"left":"-"+login_page_width},400,
                                function(){
                                    jQuery("#menu_ul li").removeClass("end_li");
                                    jQuery("#exit_login").addClass("end_li");
                                    jQuery("#exit_login").show();
                                    jQuery("#person_center").show();
                                    document.getElementById("product_iframe").contentWindow.location.reload(true);

                                    jQuery(this).hide();
                                    jQuery("#buffer_page").show();
                                    jQuery("#main_page").show();
                                    jQuery("#box_title").html(
                                        "<div id='main_title_body'>"                                        
                                        +     "<div id='main_title_box_return' style='display:none;float: left;line-height: 36px;cursor:pointer;'><div id='main_title_box_return_img'></div>&nbsp;"+mcs_back+"</div>"
                                        +     "<div id='main_title_body_left'></div>"
                                        +     "<div id='main_title_body_right'>"
                                        +        "<div id='enter_setting' style='margin-top:10px;cursor: pointer;float:right;'><img src='images/pc/setting.png' style='float:left'>&nbsp;"+mcs_settings+"</div>"
                                        +        "<div id='set_btn_menu' style='line-height:36px;position:static;display:none;'>"         
                                        +           "<div id='video_edit' style='font-size:16px;color:#fff;float:right;cursor:pointer;'><img src='../imgs/edit.png' style='float:left;margin-top:7px;margin-right:2px'>"+mcs_edit+"</div>"
                                        +           "<div id='vimtag_filter' style='font-size:16px;color:#fff;float:right;cursor:pointer;'><img src='../imgs/filter.png' style='float:left;margin-top:8px;'>"+ mcs_filter +"</div>"
                                        +           "<div id='vimtag_calendar_choice' style='font-size:16px;color:#fff;float:right;margin-left:3px;cursor:pointer;'><img src='../imgs/calendar.png' style='float:left;margin-top:8px;'>"+ mcs_date +"</div>"
                                        +           "<input id='vimtag_calendar_input' type='text' style='display:none;'>"            
                                        +        "</div>"
                                        +     "</div>"
                                        +     "<div id='main_title_body_mid' style='display:none;'><div id='main_title_body_device'>"+mcs_device+"</div><div id='main_title_body_local'>"+mcs_local+"</div></div>"
                                        +   "</div>");
                                });
                                jQuery("#nav_right").css({"padding":"0"});
                                jQuery("#try").hide();
                                jQuery("#nav_scene").show();
                               // scene_toogle();
                                jQuery("#add_devices_menu").show();
                                mx("#refresh_dev_list_btn").style.display = "block";
                                jQuery("#ipc_list").hide();
                                jQuery("#play_page_return").show();
                            mcloud_agent.dev_msg_listener_add(null,dev_msg_listener_mmq);
                            setTimeout(function(){
                               ms.send_msg("devs_refresh",{},null,function(msg,ref){
                                           if(msg.result != ""){
                                               log("error:devs_refresh return error in class_main_page.");
                                               return;
                                           }
                                           jQuery("#buffer_page").hide();
                                           for(var length = mcloud_agent.devs.list.length,i=0;i< length;i++){
                                              if(mcloud_agent.devs.list[i].stat == "Online"){
                                                 g_select_device_ipc = mcloud_agent.devs.list[i].sn;
                                                 break;
                                              }
                                           }                           
                           
                                         if(g_domain_oems_vimtag)
                                         {
                                              //g_distance_to_edge =(l_me_parent[s_offsetWidth] - 1236)/2 + "px";
                                              if(l_me_parent[s_offsetWidth] - 1280 >0)
                                              {
                                                 g_distance_to_edge = (l_me_parent[s_offsetWidth] - 1256)/2;
                                                 g_devices_list_box_width = 1256;
                                                 g_player_width = 990;
                                                 g_player_height = 558;
                                                 g_body_width = l_me_parent[s_offsetWidth];
                                              }
                                              else if(l_me_parent[s_offsetWidth] - 942 >0)
                                              {
                                                 g_distance_to_edge = (l_me_parent[s_offsetWidth] - 942)/2;
                                                 g_devices_list_box_width = 942;
                                                 g_player_width = (l_me_parent[s_offsetWidth]/1440)*990;
                                                 g_player_height = (l_me_parent[s_offsetWidth]/1440)*558;
                                                 g_body_width = l_me_parent[s_offsetWidth];
                                              }
                                              else if(l_me_parent[s_offsetWidth] - 899 >0)
                                              {
                                                 g_nine_hundred_side = (l_me_parent[s_offsetWidth] - 900)/2;                                 
                                                 g_distance_to_edge = (l_me_parent[s_offsetWidth] - 628)/2;
                                                 g_devices_list_box_width = 628;
                                                 g_player_width = 640;
                                                 g_player_height = 360;
                                                 g_body_width = l_me_parent[s_offsetWidth]; 
                                              }
                                              else
                                              {
                                                 g_distance_to_edge = 12;
                                                 g_devices_list_box_width = 314;
                                              }
                
                                              l_dom_top_box = dom_create_child(l_me_parent, "div", "top_box");
                                              l_dom_menu_box = dom_create_child(l_me_parent, "div", "vimtag_menu_box");
                                              l_dom_cntr_box = dom_create_child(l_me_parent, "div", "vimtag_cntr_box");
                
                                              l_dom_top_box[s_style][s_cssText] = "width:100%;height:76px;position:fixed;z-index:13;";                                            
                                              l_dom_menu_box[s_style][s_cssText] = "width:100%;height:44px;position:fixed;margin-top:0px;z-index:12;";
                                              l_dom_cntr_box[s_style][s_cssText] = "width:100%;margin-top:0px;z-index:10;position:absolute;";                           
                                              l_top_box_obj = new class_top_box({parent:l_dom_top_box, on_event:on_event});
                                              l_menu_box_obj = new class_vimtag_menu_box({parent:l_dom_menu_box, on_event:on_event});
                                              l_cntr_box_obj = new class_vimtag_cntr_box({parent:l_dom_cntr_box, on_event:on_event});
                                           }
                                               
                               });
                            },500);
                          });
                        }
                        else
                        {
                                          mcloud_agent.dev_msg_listener_add(null,dev_msg_listener_mmq);
                                            setTimeout(function(){
                                //Get Device List
                                ms.send_msg("devs_refresh",{},null,function(msg,ref){
                                   if(msg.result != ""){
                                       log("error:devs_refresh return error in class_main_page.");
                                       return;
                                   }
                                   for(var length = mcloud_agent.devs.list.length,i=0;i< length;i++){
                                      if(mcloud_agent.devs.list[i].stat == "Online"){
                                         g_select_device_ipc = mcloud_agent.devs.list[i].sn;
                                         break;
                                       }
                                   }                           
                                   if(g_domain_oems_vimtag)
                                   {
                                      if(l_me_parent[s_offsetWidth] - 1280 >0)
                                      {
                                         g_distance_to_edge = (l_me_parent[s_offsetWidth] - 1256)/2;
                                         g_devices_list_box_width = 1256;
                                         g_player_width = 990;
                                         g_player_height = 558;
                                         g_body_width = l_me_parent[s_offsetWidth];
                                      }
                                      else if(l_me_parent[s_offsetWidth] - 942 >0)
                                      {
                                         g_distance_to_edge = (l_me_parent[s_offsetWidth] - 942)/2;
                                         g_devices_list_box_width = 942;
                                         g_player_width = (l_me_parent[s_offsetWidth]/1440)*990;
                                         g_player_height = (l_me_parent[s_offsetWidth]/1440)*558;
                                         g_body_width = l_me_parent[s_offsetWidth];
                                      }
                                      else if(l_me_parent[s_offsetWidth] - 899 >0)
                                            {
                                                 g_nine_hundred_side = (l_me_parent[s_offsetWidth] - 900)/2;                                 
                                               g_distance_to_edge = (l_me_parent[s_offsetWidth] - 628)/2;
                                               g_devices_list_box_width = 628;
                                               g_player_width = 640;
                                             g_player_height = 360;
                                             g_body_width = l_me_parent[s_offsetWidth]; 
                                          }
                                      else
                                      {
                                         g_distance_to_edge = 12;
                                         g_devices_list_box_width = 314;
                                      }
        
                                      l_dom_top_box = dom_create_child(l_me_parent, "div", "top_box");
                                      l_dom_menu_box = dom_create_child(l_me_parent, "div", "vimtag_menu_box");
                                      l_dom_cntr_box = dom_create_child(l_me_parent, "div", "vimtag_cntr_box");
        
//                                    l_dom_top_box[s_style][s_cssText] = "width:" + l_me_parent[s_offsetWidth] + "px;height:76px;position:fixed;z-index:13;";
//                                    l_dom_menu_box[s_style][s_cssText] = "width:" + l_me_parent[s_offsetWidth] + "px;height:44px;position:fixed;margin-top:76px;z-index:12;";
//                                    l_dom_cntr_box[s_style][s_cssText] = "width:" + l_me_parent[s_offsetWidth] + "px;margin-top:120px;z-index:10;position:absolute;";
                                      l_dom_top_box[s_style][s_cssText] = "width:100%;height:76px;position:fixed;z-index:13;";
                                      l_dom_menu_box[s_style][s_cssText] = "width:100%;height:44px;position:fixed;margin-top:76px;z-index:12;";
                                      l_dom_cntr_box[s_style][s_cssText] = "width:100%;margin-top:120px;z-index:10;position:absolute;";
        
                                      l_top_box_obj = new class_top_box({parent:l_dom_top_box, on_event:on_event});
                                      l_menu_box_obj = new class_vimtag_menu_box({parent:l_dom_menu_box, on_event:on_event});
                                      l_cntr_box_obj = new class_vimtag_cntr_box({parent:l_dom_cntr_box, on_event:on_event});
                                   }
                                   else
                                   {
                                      l_dom_menu_box = dom_create_child(l_me_parent, "div", "menu_box");
                                      l_dom_cntr_box = dom_create_child(l_me_parent, "div", "cntr_box");
        
                                      l_dom_menu_box[s_style][s_cssText] = "width:" + l_me_parent[s_offsetWidth] + "px;height:" + g_menu_box_h + "px";
                                      l_dom_cntr_box[s_style][s_cssText] = "width:" + l_me_parent[s_offsetWidth] + "px;height:" + (l_me_parent[s_offsetHeight] - g_menu_box_h) + "px";
                                      add_standard_style();
        
                                      l_menu_box_obj = new class_menu_box({parent:l_dom_menu_box, page:"cntr_page",type:obj.data.type, sn:obj.data.sn, on_event:on_event});
                                      l_cntr_box_obj = new class_cntr_box({parent:l_dom_cntr_box, on_event:on_event});
                                   }
                                      //Remove the login screen
                                      setTimeout(function(){
                                        g_j_page.animate({marginLeft:"-100%"}, 600, function(){
                                            l_parent_callback({type:"destroy_login_interface"});
                                        });
//                                        var sign_buffer_box_width = jQuery("#sign_buffer_box").css("width");
//                                        jQuery("#sign_buffer_box").animate({"left":"-"+sign_buffer_box_width},600,function(){jQuery(this).hide()});
                                      }, 300);
                                      setTimeout(function(){
                                            if(mcloud_agent.devs.list.length == 0 && (!g_domain_oems_vimtag))
                                            {
                                             var  Tips_p,Tips_box_dom,class_Tips_obj;
                                             Tips_p = dom_create_child(l_me_parent, "div", "Tips_p");
                                             Tips_box_dom = dom_create_child(l_me_parent, "div", "Tips_box");
                                           Tips_p[s_style][s_cssText] = "width:" + l_me_parent[s_offsetWidth] + "px;height:" + l_me_parent[s_offsetHeight] + "px;left: 0px; top: 0px; z-index: 90; background-color: rgb(0, 0, 0); opacity: 0.55; position: absolute; ";
                                           Tips_box_dom[s_style][s_cssText] = "width:"+ l_me_parent[s_offsetWidth]+"px; left: 0px; top: 0px; z-index: 95; background-color: rgb(0, 0, 0); position: absolute";
                                           class_Tips_obj = new class_Tips_box({parent:Tips_box_dom, on_event:on_event});
                                           Tips_p.onclick=function(obj)
                                           {
                                             jQuery(Tips_p).hide();
                                             jQuery(Tips_box_dom).hide();
                                           }
                                        }
                                    },600);
                                });
                            },500);
                        }
                        break;
                    }
                case "refresh_notif_latest":
                case "refresh_alarm":
                case "refresh_device_list":
                case "update_imaging":
                    {
                       if(l_cntr_box_obj)
                       {
                          l_cntr_box_obj.ctrl(obj);
                       }
                       break;
                    }
                case "refresh_notif":
                    {
                        if(l_menu_box_obj)
                        {
                          l_menu_box_obj.ctrl(obj);
                        }
                        break;
                    }
                case "destroy":
                    {
                          if(!g_domain_oems_vimtag)
                        {
                                if(l_dom_menu_box)
                                    l_menu_box_obj.ctrl(obj);
                                if(l_dom_cntr_box)
                                    l_cntr_box_obj.ctrl(obj);
                        }
                        remove_standard_style();
                        l_dom_menu_box = null;
                        l_dom_cntr_box = null;
                        l_me_parent[s_innerHTML] = "";

                        //all mark reset
                        g_old_browser_version = 0;
                        g_login_waiting_flag = 0;
                        g_register_waiting_flag = 1;
                        g_view_split_count = 1;
                        g_playback_split_count = 1;
                        g_view_pages = 1;
                        g_playback_pages = 1;
                        g_now_view_page = 1;
                        g_now_playback_page = 1;
                        g_now_page = "home";
                        g_device_list_switch = "open";
                        g_ptz_control_switch = "open";
                        g_select_inner_window = "none";
                        g_select_inner_ipc = "";
                        g_select_device_ipc = "";
                        g_login_status = "";
                        g_network_environ = "";
                        g_device_list_obj = {};
                        g_device_list_link = createLinkList();
                        g_view_link = createLinkList();
                        g_playback_link = createLinkList();
                        g_is_playing = 0;
                        g_is_play_back = 0;
                        break;
                    }
            }
        }
        
    }
    function class_top_box(obj) {
        var l_dom_top_box = mx("#top_box"),
            l_me = this;

        l_dom_top_box.style.backgroundColor = "#ffffff";
        l_dom_top_box[s_innerHTML] =
          "<div>"
          +       "<div class='vimtag_logo_in' id='vimtag_logo_in' style='position:absolute;margin-top:11.5px;margin-left:"+g_distance_to_edge+"px;'></div>"
          +       "<div id='vimtag_set' style='position:absolute;right:0px;margin-top:45.5px;margin-right:"+g_distance_to_edge+"px;'>"
          +         "<a class='download_help'>" + mcs_download + "</a>"
          +         "<a class='download_help'>" + mcs_help_feedback + "</a>"
          +       "</div>"
          +"</div>";
                
        jQuery("#vimtag_set").hide();
        l_me.ctrl = function(obj){
          switch(obj.type){
            case "update":{
              mx("#vimtag_logo_in").style.marginLeft = g_distance_to_edge+ "px";
              mx("#vimtag_set").style.marginRight = g_distance_to_edge+ "px";
              break;
            }
          }
        }
    }
    /*The warn page of the history video list page is empty*/
    function noHistoryVideoData(obj)
    {
    	 switch (obj.type) {
    	 	case "ipcHistoryList":
    	 	  {
    	 	  	  /*Hide the buffer page*/
    	 	  		jQuery("#buffer_page").hide();
	    	 		  jQuery("#ipc_history_list").append(
			    	  "<div class='historyListEmptyPage'>"
			    	  +  "<img class='historyListEmpty'>"
			    	  +  "<div>"+mcs_no_history+"</div>"
			    	  +"</div>");
	    	 	    break;
    	    }
    	 	case "boxHistoryList":
    	 	  {
    	 	  	  jQuery("#buffer_page").hide();
    	 	  	  jQuery("#box_video_list").append(
			    	  "<div class='historyListEmptyPage'>"
			    	  +  "<img class='historyListEmpty'>"
			    	  +  "<div>"+mcs_no_history+"</div>"
			    	  +"</div>");
	    	 	    break;
    	 	  }
    	 	case "mipcHistoryList":
    	 		{
    	 			  jQuery("#box_dev_history_cont").append(
			    	  "<div class='historyEmptyPage'>"
			    	  +  "<img class='historyEmptyPic'>"
			    	  +  "<div>"+mcs_no_history+"</div>"
			    	  +"</div>");
	    	 	    break;
    	 		}
    	 	default:
    	 		return;
    	 }
    }
    function class_vimtag_menu_box(obj) {
        var l_me_parent = obj.parent,
            l_me = this,
            l_parent_callback = obj.on_event,
            l_filter_condite_box,
            l_dom_add_devices_menu,
            l_dom_vimtag_menu_box = mx("#vimtag_menu_box"),
            l_dom_return_devices_list,
            l_dom_return_devices_list_from_play,
            l_dom_play_page_return,
            l_dom_enter_messages,
            l_dom_enter_setting,
            l_dom_menu_box_sidebar,
            l_dom_modify_account_admin_pwd,
            l_dom_modify_account_guset_pwd,
            l_dom_quit_account,
            l_dom_about_web_version,
            l_dom_set_menu_img,
            l_dom_modify_admin_pwd,
            l_dom_admin_show_pw,
            l_dom_admin_pw,
            l_dom_admin_show_pw1,
            l_dom_admin_pw1,
            l_dom_admin_show_pw2,
            l_dom_admin_pw2,
            l_dom_admin_pw_btn,
            l_dom_guest_show_pw,
            l_dom_guest_pw,
            l_dom_guest_show_pw1,
            l_dom_guest_pw1,
            l_dom_guest_show_pw2,
            l_dom_guest_pw2,
            l_dom_guest_pw_btn,
            l_dom_vimtag_load_plugs,
            l_dom_set_btn_menu,
            l_dom_vimtag_calendar_choice_img,
            l_dom_vimtag_calendar_input;

        l_dom_vimtag_menu_box[s_innerHTML] =
            "<div>"
            +     "<div id='add_devices_menu' class='add_devices_menu' style='cursor:pointer;position:absolute;margin-top:14px;left:"+g_distance_to_edge+"px;'></div>"
            +     "<div id='return_devices_list' style='font-size:16px;color:#ffffff;line-height:44px;position:absolute;left:"+g_distance_to_edge+"px;cursor:pointer;'><span>"+ mcs_back +"</span></div>"
            +     "<div id='play_page_menu' style='line-height:44px;position:absolute;left:"+g_distance_to_edge+"px;'>"
            +        "<div id='play_page_return' style='font-size:16px;color:#ffffff;float:left;margin-right:24px;cursor:pointer;'>"+ mcs_back +"</div>"
            +        "<div id='history_return' style='font-size:16px;color:#ffffff;float:left;margin-right:24px;cursor:pointer;'>"+ mcs_back +"</div>"
            +     "</div>"
            +     "<div id='set_btn_menu' style='line-height:44px;position:absolute;right:"+g_distance_to_edge+"px;'>"
            +        "<div id='enter_setting' style='font-size:16px;color:#ffffff;float:right;cursor:pointer;'>"+ mcs_settings +"</div>"

            +        "<div id='enter_setting_img' class='device_set_img' style='float:right;margin-top:13px;margin-right:3px;cursor:pointer;'></div>"
            +        "<div id='setting_messages_gap' style='width:1px;height:18px;background-color:#ffffff;float:right;margin-right:24px;margin-top:13px;'></div>"
            +        "<div id='enter_messages' style='font-size:16px;color:#ffffff;float:right;margin-right:24px;cursor:pointer;'>"+ mcs_messages +"</div>" 
            +        "<div id='enter_messages_img' class='history_img' style='float:right;margin-top:13px;margin-right:3px;cursor:pointer;'></div>"
            +        "<div id='vimtag_filter' style='font-size:16px;color:#ffffff;float:right;cursor:pointer;'>"+ mcs_filter +"</div>" 
            +        "<div id='vimtag_filter_img' class='vimtag_filter_img' style='float:right;margin-top:12px;margin-right:3px;cursor:pointer;'></div>"
            +        "<div id='vimtag_filter_calendar_gap' style='width:1px;height:18px;background-color:#ffffff;float:right;margin-right:24px;margin-left:24px;margin-top:13px;'></div>"
            +        "<div id='vimtag_calendar_choice' style='font-size:16px;color:#ffffff;float:right;margin-left:3px;cursor:pointer;'>"+ mcs_date +"</div>" 
            +        "<input id='vimtag_calendar_input' type='text'>"            
            +     "</div>"
            +     "<div id='set_menu_img' class='vimtag_set_menu' style='position:absolute;margin-top:13px;right:"+g_distance_to_edge+"px;cursor:pointer;'></div>"
            +     "<div id='device_list_character' style='text-align:center;font-size:16px;color:#ffffff;line-height:44px;'><span>"+ mcs_device_list +"</span><img id='device_refresh_list_ico' src='./oem/vimtag_v2n/imgs/refresh.png' style='cursor:pointer;margin-top:10px;position: absolute;'></div>"
            +     "<div id='setting_wizard_character'style='text-align:center;font-size:16px;color:#ffffff;line-height:44px;'><span>"+ mcs_action_smart_config_wifi +"</span></div>"
            +     "<div id='menu_box_sidebar' style='margin-right:"+g_distance_to_edge+"px;'>"
            +        "<div id='user_password_img' class='vimtag_user_password_img' style='margin-left:10px;margin-top:8px;margin-right:10px;margin-bottom:8px;'>"
            +           "<div id='modify_account_admin_pwd' style='font-size:14px;color:#000000;margin-left:25px;cursor:pointer;'>"+mcs_user_admin_password+"</div>"
            +        "</div>"
            +        "<div style='height:1px;background-color:#cccccc;margin:auto;'></div>"
            +        "<div id='guest_password_img' class='vimtag_guest_password_img' style='margin-left:10px;margin-top:8px;margin-right:10px;margin-bottom:8px;'>"
            +           "<div id='modify_account_guset_pwd' style='font-size:14px;color:#000000;margin-left:25px;cursor:pointer;'>"+mcs_user_guest_password+"</div>"
            +        "</div>"
            +        "<div style='height:1px;background-color:#cccccc;margin:auto;'></div>"
            +        "<div id='vimtag_load_plugs' style='line-height:37px;text-align:center;font-size:14px;color:#000000;cursor:pointer;'>"+ mcs_option +"</div>"
            +        "<div style='height:1px;background-color:#cccccc;margin:auto;'></div>"
            +        "<div id='quit_account' style='line-height:37px;text-align:center;font-size:14px;color:#000000;cursor:pointer;'>"+ mcs_exit +"</div>"
            +        "<div style='height:1px;background-color:#cccccc;margin:auto;'></div>"
            +        "<div id='about_web_version' style='line-height:37px;text-align:center;font-size:14px;color:#000000;cursor:pointer;'>"+ mcs_about +"</div>"
            +     "</div>"
            +     "<div id='modify_admin_pwd' style='margin-right:"+g_distance_to_edge+"px;'>"
            +        "<div>"
            +           "<input class='vimtag_inputs_normal' id='admin_show_pw' type='text' value='" + mcs_old_password + "' style='margin-top:2px;'>"
        	  +           "<input class='vimtag_inputs_normal' id='admin_pw' type='password' style='display:none;margin-top:2px;'>"
        	  +        "</div>"
        	  +        "<div style='width:200px;height:1px;background-color:#cccccc;margin:auto;'></div>"
        	  +        "<div>"
        	  +          "<input class='vimtag_inputs_normal' id='admin_show_pw1' type='text' value='" + mcs_new_password + "' style='margin-top:2px;'>"
        	  +          "<input class='vimtag_inputs_normal' id='admin_pw1' type='password' style='display:none;margin-top:2px;'>"
        	  +        "</div>"
        	  +        "<div style='width:200px;height:1px;background-color:#cccccc;margin:auto;'></div>"
        	  +        "<div>"
        	  +           "<input class='vimtag_inputs_normal' id='admin_show_pw2' type='text' value='" + mcs_confirm_password + "' style='margin-top:2px;'>"
        	  +           "<input class='vimtag_inputs_normal' id='admin_pw2' type='password' style='display:none;margin-top:2px;'>"
        	  +        "</div>"
        	  +        "<div style='width:200px;height:1px;background-color:#cccccc;margin:auto;'></div>"
        	  +        "<div id='admin_pw_btn' style='font-size:16px;color:#000000;line-height:37px;text-align:center;cursor:pointer;'>"+ mcs_apply +"</div>"
            +     "</div>"
            +     "<div id='modify_guest_pwd' style='margin-right:"+g_distance_to_edge+"px;'>"
            +        "<div>"
            +           "<input class='vimtag_inputs_normal' id='guest_show_pw' type='text' value='" + mcs_admin_password + "' style='margin-top:2px;'>"
        	  +           "<input class='vimtag_inputs_normal' id='guest_pw' type='password' style='display:none;margin-top:2px;'>"
        	  +        "</div>"
        	  +        "<div style='width:200px;height:1px;background-color:#cccccc;margin:auto;'></div>"
        	  +        "<div>"
        	  +          "<input class='vimtag_inputs_normal' id='guest_show_pw1' type='text' value='" + mcs_guest_password + "' style='margin-top:2px;'>"
        	  +          "<input class='vimtag_inputs_normal' id='guest_pw1' type='password' style='display:none;margin-top:2px;'>"
        	  +        "</div>"
        	  +        "<div style='width:200px;height:1px;background-color:#cccccc;margin:auto;'></div>"
        	  +        "<div>"
        	  +           "<input class='vimtag_inputs_normal' id='guest_show_pw2' type='text' value='" + mcs_confirm_password + "' style='margin-top:2px;'>"
        	  +           "<input class='vimtag_inputs_normal' id='guest_pw2' type='password' style='display:none;margin-top:2px;'>"
        	  +        "</div>"
        	  +        "<div style='width:200px;height:1px;background-color:#cccccc;margin:auto;'></div>"
        	  +        "<div id='guest_pw_btn' style='font-size:16px;color:#000000;line-height:37px;text-align:center;'>"+ mcs_apply +"</div>"
            +     "</div>"
            +"</div>";

            l_dom_add_devices_menu = mx("#add_devices_menu");
            l_dom_return_devices_list = mx("#return_devices_list");
            l_dom_return_devices_list_from_play = mx("#return_devices_list_from_play");
            l_dom_enter_setting = mx("#enter_setting");
            l_dom_enter_setting_img = mx("#enter_setting_img");
            l_dom_enter_setting = mx("#enter_setting");
            l_dom_enter_messages_img = mx("#enter_messages_img");
            l_dom_enter_messages = mx("#enter_messages");
            l_dom_play_page_return = mx("#play_page_return");
            l_dom_history_return = mx("#history_return");
            l_dom_menu_box_sidebar = mx("#menu_box_sidebar");
            l_dom_modify_account_admin_pwd = mx("#modify_account_admin_pwd");
            l_dom_modify_account_guset_pwd = mx("#modify_account_guset_pwd");
            l_dom_quit_account = mx("#quit_account");
            l_dom_about_web_version = mx("#about_web_version");
            l_dom_set_menu_img = mx("#set_menu_img");
            l_dom_modify_admin_pwd = mx("#modify_admin_pwd");
            l_dom_admin_show_pw = mx("#admin_show_pw");
            l_dom_admin_pw = mx("#admin_pw");
            l_dom_admin_show_pw1 = mx("#admin_show_pw1");
            l_dom_admin_pw1 = mx("#admin_pw1");
            l_dom_admin_show_pw2 = mx("#admin_show_pw2");
            l_dom_admin_pw2 = mx("#admin_pw2");
            l_dom_admin_pw_btn = mx("#admin_pw_btn");
            l_dom_guest_show_pw = mx("#guest_show_pw");
            l_dom_guest_pw = mx("#guest_pw");
            l_dom_guest_show_pw1 = mx("#guest_show_pw1");
            l_dom_guest_pw1 = mx("#guest_pw1");
            l_dom_guest_show_pw2 = mx("#guest_show_pw2");
            l_dom_guest_pw2 = mx("#guest_pw2");
            l_dom_guest_pw_btn = mx("#guest_pw_btn");
            l_dom_set_btn_menu = mx("#set_btn_menu");
            l_dom_vimtag_load_plugs = mx("#vimtag_load_plugs");
            l_dom_vimtag_calendar_choice_img = mx("#vimtag_calendar_choice_img");
            l_dom_vimtag_calendar_choice = mx("#vimtag_calendar_choice");
            l_dom_vimtag_calendar_input = mx("#vimtag_calendar_input");
            l_dom_vimtag_filter = mx("#vimtag_filter");
            l_dom_vimtag_filter_img = mx("#vimtag_filter_img");
            l_dom_device_refresh_list_ico = mx("#device_refresh_list_ico");

            jQuery("#return_devices_list").hide();
            jQuery("#setting_wizard_character").hide();
            jQuery("#play_page_menu").hide();
            jQuery("#menu_box_sidebar").hide();
            jQuery("#modify_admin_pwd").hide();
            jQuery("#modify_guest_pwd").hide();
            jQuery("#set_btn_menu").hide();
            jQuery("#vimtag_calendar_input").hide(); //hide the calendar input
            jQuery("#vimtag_calendar_choice").hide();
            jQuery("#vimtag_filter_calendar_gap").hide();
            jQuery("#vimtag_filter").hide();
            jQuery("#vimtag_filter_img").hide();
                 
		        function user_passwd_set_ack(msg,ref)
		        {
		            if(!msg.result)
		            {
		               system_pop_confirm_box({alert:true, str:mcs_modified_successfully,
		                 callback_func:function(obj){
		                    if(!ref.is_guest)
		                      jQuery("#modify_admin_pwd").hide();
		               }});
		            }
		            else if(msg.result == "accounts.pass.invalid")
		            {
		               if(ref.is_guest)
		               {
		               	   msg_tips({msg:mcs_invalid_password + ".", type:"error", timeout:3000});
		               }else
		               {
		               	   msg_tips({msg:mcs_invalid_password + ".", type:"error", timeout:3000});
		               }
		            }
		        }
            
            l_dom_vimtag_filter.onclick = function(){
               l_dom_vimtag_filter_img.click();
            };
            l_dom_device_refresh_list_ico.onclick = function(){
               ms.send_msg("devs_refresh",{},null,refresh_devices_ack);
            }
            mx("#refresh_dev_list_btn").onclick = function(){
                g_dev_refresh_is_click =true;
               ms.send_msg("devs_refresh",{},null,refresh_devices_ack);
            }
            function refresh_devices_ack(msg)
            {
               if(msg.result != "")return;
               var old_sn,device_change;
               //If there is no option to select the device or the device has already been deleted or has been selected device is offline then set the device has been selected
               if(g_select_device_ipc == "" || (null == mcloud_agent.devs.get(g_select_device_ipc))|| mcloud_agent.devs.get(g_select_device_ipc).stat != "Online"){
	                for(var length = mcloud_agent.devs.list.length,i=0;i< length;i++){
	                    if(mcloud_agent.devs.list[i].stat == "Online"){
	                        old_sn = g_select_device_ipc;
	                        device_change = 1;
	                     g_select_device_ipc = mcloud_agent.devs.list[i].sn;
	                     break;
	                    }
	                }
               }
               l_parent_callback({type:"refresh_dev_list"});
            }
            l_dom_vimtag_filter_img.onclick = function(){
            	 if(jQuery("#box_device_video_list").is(":hidden")){
            	 	 jQuery("#box_device_video_list").show();
            	 }else{ 
            	         if(!mx("#box_device_video_list")) jQuery("#vimtag_device_list_box").prepend("<div id='box_device_video_list'></div>");
	               l_filter_condite_box = dom_create_child(mx("#box_device_video_list"), "div", "filter_condite_box");
	               mx("#filter_condite_box")[s_innerHTML] = 
	               "<div id='filter_box_border'>"
	               +  "<div id='format_options' style='margin-bottom:10px; margin-left:20px;line-height:26px;'>"
	               +    "<div class='filter_condite_character'>" + mcs_format_options + "</div>"
	               +    "<input id='record_button' type='button' value="+ mcs_record +" class='filter_condite_choice_border'>"
	               +    "<input id='snapshot_button' type='button' value='"+ mcs_snapshot +"' class='filter_condite_choice_border'>"
	               +    "<input id='format_options_all' type='button' value='"+ mcs_all +"' class='filter_condite_choice_border'>"
	               +  "</div>"
	               +  "<div id='category_options' style='margin-bottom:10px; margin-left:20px;line-height:26px;'>"
	               +    "<div class='filter_condite_character'>" + mcs_source + "&nbsp:&nbsp</div>"
	               +    "<input id='event_button' type='button' value="+ mcs_motion_detection +" class='filter_condite_choice_border'>"
	               +    "<input id='event_button_io' type='button' value="+ mcs_io +" class='filter_condite_choice_border' style='display:none;'>"
	               +    "<input id='event_button_magnetic' type='button' value="+ mcs_magnetic +" class='filter_condite_choice_border' style='display:none;'>"
	               +    "<input id='event_button_sos' type='button' value="+ mcs_sos +" class='filter_condite_choice_border' style='display:none;'>"
	               +    "<input id='event_button_snapshot' type='button' value="+ mcs_snapshot +" class='filter_condite_choice_border'>"
	               +    "<input id='everything_button' type='button' value='"+ mcs_all +"' class='filter_condite_choice_border'>"
	               +  "</div>"
	               +  "<div id='time_length' style='margin-left:20px;line-height:26px;'>"
	               +    "<div class='filter_condite_character'>" + mcs_time_length + "</div>"
	               +    "<input id='onehour_button' type='button' value='"+mcs_one_hour+"' class='filter_condite_choice_border'>"
	               +    "<input id='halfhour_button' type='button' value='"+mcs_half_hour+"' class='filter_condite_choice_border'>"
	               +    "<input id='fiveminute_button' type='button' value='"+mcs_five_min+"' class='filter_condite_choice_border'>"    
	               +  "</div>"
	               +"</div>";
	               
	               var l_dom_event_button          = mx("#event_button"),
	                   l_dom_everything_button     = mx("#everything_button"),
	                   l_dom_onehour_button        = mx("#onehour_button"),
	                   l_dom_halfhour_button       = mx("#halfhour_button"),
	                   l_dom_fiveminute_button     = mx("#fiveminute_button"),
	                   l_dom_record_button         = mx("#record_button"),
	                   l_dom_snapshot_button       = mx("#snapshot_button"),
	                   l_dom_format_options_all    = mx("#format_options_all"),
	                   l_dom_event_button_io       = mx("#event_button_io"),
	                   l_dom_event_button_magnetic = mx("#event_button_magnetic"),
	                   l_dom_event_button_sos      = mx("#event_button_sos"),
	                   l_dom_event_button_snapshot = mx("#event_button_snapshot");
                   g_video_edit_click=false;
	               mx("#filter_condite_box").style.width = g_devices_list_box_width + "px";
	               mx("#record_button").style.backgroundColor = "#00a6ba";
	               mx("#everything_button").style.backgroundColor = "#00a6ba";
	               if(g_select_incise_time=="1h"){
	                 mx("#onehour_button").style.backgroundColor = "#00a6ba";
	               }else if (g_select_incise_time=="30min"){ 
	               	 mx("#halfhour_button").style.backgroundColor = "#00a6ba";
	               }else if (g_select_incise_time=="5min"){ 
	               	 mx("#fiveminute_button").style.backgroundColor = "#00a6ba";
	               }
	               jQuery("#format_options .filter_condite_choice_border").click(
	                 function(){
	                   jQuery(this).css({"background-color":"#00a6ba"});
	                   jQuery("#format_options .filter_condite_choice_border").not(this).css({"background-color":"#efeff4"});
	               });
	               jQuery("#category_options .filter_condite_choice_border").click(
	                 function(){
	                   jQuery(this).css({"background-color":"#00a6ba"});
	                   jQuery("#category_options .filter_condite_choice_border").not(this).css({"background-color":"#efeff4"});
	               });
	               jQuery("#time_length .filter_condite_choice_border").click(
	                 function(){
	                   jQuery(this).css({"background-color":"#00a6ba"});
	                   jQuery("#time_length .filter_condite_choice_border").not(this).css({"background-color":"#efeff4"});
	               });
	               l_dom_event_button.onclick = function(){
	               	  if(g_is_video){
	                    l_parent_callback({type:"get_alarm_video_list",data:"alarm"});
	                  }else if(g_is_snapshot) {
	                    l_parent_callback({type:"get_image_list",data:1});	
	                  }else if(g_is_all){
	                    l_parent_callback({type:"get_video_img",data:"alarm"});
	                  }
	               };
	               l_dom_event_button_snapshot.onclick = function(){
	                  if(g_is_video){
	                    l_parent_callback({type:"get_alarm_video_list",data:"snapshot"});
	                  }else if(g_is_snapshot) {
	                    l_parent_callback({type:"get_image_list",data:2});	
	                  }else if(g_is_all){
	                    l_parent_callback({type:"get_video_img",data:"snapshot"});
	                  }
	               };
	               l_dom_everything_button.onclick = function(){
	               	  if(g_is_video){
                      l_parent_callback({type:"get_alarm_video_list",data:"all"});
	                  }else if(g_is_snapshot){ 
	                  	l_parent_callback({type:"get_image_list",data:0});
	                  }else if(g_is_all){
	                    l_parent_callback({type:"get_video_img",data:"all"});
	                  }
	               };
	               l_dom_onehour_button.onclick = function(){
	               	  mx("#buffer_page").style.display="block";
	               		g_select_incise_time = "1h";
	               		l_parent_callback({type:"reload_box_video_list"});
	               };
	               l_dom_halfhour_button.onclick = function(){
	               	  mx("#buffer_page").style.display="block";
	               		g_select_incise_time = "30min";
	               		l_parent_callback({type:"reload_box_video_list"});
	               };
	               l_dom_fiveminute_button.onclick = function(){
	               	  mx("#buffer_page").style.display="block";
	               		g_select_incise_time = "5min";
	               		l_parent_callback({type:"reload_box_video_list"});
	               };
	               l_dom_snapshot_button.onclick = function(){
	               	  g_is_snapshot = 1;
	               	  g_is_video = 0;
	               	  g_is_all=0;
	               	  mx("#time_length").style.display = "none";
	                  l_parent_callback({type:"get_image_list",data:0});
	                  jQuery("#category_options .filter_condite_choice_border").css({"background-color":"#efeff4"});
	                  jQuery("#everything_button").css({"background-color":"#00a6ba"});
	               };
	               l_dom_record_button.onclick = function(){
	               	  g_is_snapshot = 0;
	               	  g_is_video = 1;
	               	  g_is_all=0;
	               	  mx("#time_length").style.display = "block";
	                  l_dom_halfhour_button.click();
	                  jQuery("#category_options .filter_condite_choice_border").css({"background-color":"#efeff4"});
	                  jQuery("#everything_button").css({"background-color":"#00a6ba"});
	               };
	               l_dom_format_options_all.onclick = function(){
	               	  g_is_all = 1;
	               	  g_is_snapshot = 0;
	               	  g_is_video = 0;
	               	  mx("#time_length").style.display = "block";
	                  l_parent_callback({type:"get_video_img",data:"all"});
	                  jQuery("#category_options .filter_condite_choice_border").css({"background-color":"#efeff4"});
	                  jQuery("#everything_button").css({"background-color":"#00a6ba"});
	               };
               }
            };
            g_vimtag_filter = l_dom_vimtag_filter_img.onclick;
            l_dom_vimtag_calendar_choice.onclick = function(){
               var day_box_display = mx("#ui-datepicker-div").style.display;
               g_video_edit_click = false;
               if(day_box_display == "block"){
                jQuery("#ui-datepicker-div").hide();
               }else{
                jQuery(".ui-datepicker-trigger").click();
               }
            };
            g_vimtag_calendar_choice = l_dom_vimtag_calendar_choice.onclick;
            l_dom_add_devices_menu.onclick = function(){
               l_parent_callback({type:"create"});
               jQuery("#add_devices_menu").hide();
               jQuery("#device_list_character").hide();
               jQuery("#setting_wizard_character").show();
               jQuery("#set_menu_img").hide();
               mx("#refresh_dev_list_btn").style.display = "none";
            };
            l_dom_enter_messages.onclick = function(){
            	 g_is_video = 1;
            	 jQuery("#buffer_page").show();
               l_dom_enter_messages_img.click();
               g_is_in_play_page = 0;
            };
            g_enter_history = l_dom_enter_messages.onclick;
            l_dom_enter_setting.onclick = function(){
               l_dom_enter_setting_img.click();
               g_is_in_play_page = 0;
            };
            g_enter_set = l_dom_enter_setting.onclick;
            l_dom_enter_setting_img.onclick = function(){
            	 if(g_return_play_video_page == 3){
            	 	 g_return_play_video_page = 6;
            	 }else{
            	   g_return_play_video_page = 1; //He expressed now in the settings interface
            	 }
            	 jQuery("#play_page_return").hide();
               jQuery("#return_devices_list").hide();
            	 jQuery("#history_return").show();
               l_parent_callback({type:"create_setting_page"});
                 
                 ms.send_msg("upgrade_get",{sn:g_select_device_ipc,check:1},{type:"online",check_ver:0},dev_upgrade_get_ack);
                 function dev_upgrade_get_ack(msg,ref){
                      if((msg.ver_valid == msg.ver_current)&&(msg.ext_prj==msg.ext_hw||msg.ext_hw.length==0))
                        {
                            jQuery(".system_new_version").hide();
                        }
                        else
                        {
                            if(g_domain_oems_vimtag)
                            {
                               
                                jQuery(".system_new_version").show();
                             
                            }
                        }
                 }
            };

            l_dom_enter_messages_img.onclick = function(){
            	 g_return_play_video_page = 2;  //He expressed now in the history interface
            	 jQuery("#play_page_return").hide();
            	 jQuery("#history_return").show();            	 
               l_parent_callback({type:"create_messages_page", on_event:obj.on_event});
            };

            l_dom_return_devices_list.onclick = function(){
	              if(g_return_play_video_page == 5){
	                l_parent_callback({type:"destroy_box_device_video_page"});
	                g_is_in_playback_page = 0;
	              }
	              mx("#main_page").style.paddingTop="89px";             
	              l_parent_callback({type:"destroy_box_device_page"});
	              jQuery("#enter_setting").hide();
	              jQuery("#enter_setting_img").hide();
	              jQuery("#history_return").hide();
	              jQuery("#return_devices_list").hide();
	              jQuery("#device_list_character").show();
	              jQuery("#add_devices_menu").show();
	              jQuery("#set_menu_img").show();
	              jQuery("#play_page_return").show();
                jQuery("#box_title").hide();
                  mx("#refresh_dev_list_btn").style.display = "block";
	              g_return_play_video_page = "";
            };

            l_dom_play_page_return.onclick = function(){
                 g_is_in_play_page = 0;
               l_parent_callback({type:"destroy_play_page"});
               jQuery("#play_page_menu").hide();
               jQuery("#set_btn_menu").hide();
               jQuery("#add_devices_menu").show();
               jQuery("#device_list_character").show();
               jQuery("#set_menu_img").show();
               jQuery("#main_page").css({"padding-top":"89px"});
               jQuery("#box_title").hide();
               jQuery("#nav").show();
               mx("#refresh_dev_list_btn").style.display = "block";
            };

            l_dom_history_return.onclick = function(){
            	 if(g_return_play_video_page == 0)
            	 {
            	 	   g_is_play_back_download =0;
            	 	   g_is_in_playback_page = 0;   
            	 	   g_return_play_video_page = 2;
		               l_parent_callback({type:"destroy_history_play_page"});
		               l_dom_enter_messages_img.click();
		               g_now_page = "home";
            	 }
            	 else if(g_return_play_video_page == 1)
            	 {
            	 	   g_is_in_play_page = 1;
            	 	   l_parent_callback({type:"destroy_setting_page"});
            	 	   g_return_play_video_page = 7;
            	 	   jQuery("#play_page_return").show();
            	       jQuery("#history_return").hide();
            	 }
            	 else if(g_return_play_video_page == 2)
            	 {
            	 	   g_is_in_play_page = 1;
            	 	   l_parent_callback({type:"destroy_history_page"});
            	 	   g_return_play_video_page = 7;
                   jQuery("#vimtag_calendar_input").datepicker("destroy");
            	 	   jQuery("#vimtag_calendar_choice").hide();
                       jQuery(".ui-datepicker-trigger").css("display","none");
                       jQuery("#vimtag_filter_calendar_gap").hide();
            	 	   jQuery("#play_page_return").show();
            	       jQuery("#history_return").hide();
            	       mx("#vimtag_filter").style.display="none";
                     
                       g_video_edit_click =false;
                       mx("#video_edit").style.display="none";
            	 }
            	 else if(g_return_play_video_page == 3)
            	 {
        	 	       l_parent_callback({type:"destroy_box_device_page"});
        	 	       jQuery("#enter_setting").hide();
                       jQuery("#enter_setting_img").hide();
                       jQuery("#history_return").hide();
                       jQuery("#device_list_character").show();
                       jQuery("#add_devices_menu").show();
                       jQuery("#set_menu_img").show();
                       jQuery("#play_page_return").show();
                       jQuery("#box_title").hide();
                       jQuery("#main_page").css({"padding-top":"89px"});
                       jQuery("#return_devices_list").hide();
                       jQuery("#nav").show();
            	 	   g_return_play_video_page = "";
            	 	   mx("#refresh_dev_list_btn").style.display = "block";
            	 }
            	 else if(g_return_play_video_page == 4)
            	 {
            	 	   l_parent_callback({type:"destroy_box_device_history_page"});
                           jQuery("#vimtag_calendar_input").datepicker("destroy");
            	 	   jQuery("#vimtag_calendar_choice").hide();
                       jQuery(".ui-datepicker-trigger").css("display","none");
                       jQuery("#vimtag_filter_calendar_gap").hide();
                       jQuery("#vimtag_filter").hide();
                       jQuery("#vimtag_filter_img").hide();
                       jQuery("#enter_setting").show(); 
                       jQuery("#enter_setting_img").show();
                       jQuery("#main_title_body_mid").hide();
                       jQuery("#main_title_body_left").show();
                     
                       jQuery("#video_edit").hide();
                       g_video_edit_click = false;
            	 	   g_return_play_video_page = 3;
            	 }
            	 else if(g_return_play_video_page == 5)
            	 {
            	 	   l_parent_callback({type:"destroy_box_device_video_page"});
            	 	   jQuery("#vimtag_calendar_choice").show();
                       jQuery(".ui-datepicker-trigger").css("display","block");
                       jQuery("#vimtag_filter_calendar_gap").show();
                       jQuery("#vimtag_filter").show();
                     
                       mx("#video_edit").style.display="block";
                       jQuery("#vimtag_filter_img").show();
            	 	   g_return_play_video_page = 4;
            	 	   g_is_in_playback_page = 0;
            	 	   g_is_play_back_download =0;
            	 	   g_now_page = "home";
            	 }
            	 else if(g_return_play_video_page == 6)
            	 {
            	 	   l_parent_callback({type:"destroy_box_setting_page"});
            	 	   g_return_play_video_page = 3;
                       jQuery("#history_return").hide();
                       jQuery("#box_title").show();
                       jQuery("#return_devices_list").show();
            	 }
                 else if(g_return_play_video_page == 7)
                 {
                       l_dom_play_page_return.click();
                 }
                 else if(g_return_play_video_page == 8)
                 {
               	   l_parent_callback({type:"destroy_setting_page_offline"});
               	   mx("#nav").style.display = "block";
               	   mx("#box_title").style.display = "none";
               	   mx("#main_title_box_return").style.display = "none";
               	   mx("#main_title_body_right").style.display = "block";
                 }
            };

            l_dom_set_menu_img.onclick = function(){
               jQuery("#menu_box_sidebar").toggle();
               jQuery("#modify_admin_pwd").hide();
               jQuery("#modify_guest_pwd").hide();
            };

            l_dom_about_web_version.onclick = function(){
            	 system_pop_confirm_box({alert:true,str:mcs_software_version+":"+g_web_client_v, callback_func:function(){}});
            };

            l_dom_modify_account_admin_pwd.onclick = function(){
               jQuery("#modify_admin_pwd").show();
               jQuery("#menu_box_sidebar").hide();
            };

            l_dom_modify_account_guset_pwd.onclick = function(){
               jQuery("#modify_guest_pwd").show();
               jQuery("#menu_box_sidebar").hide();
            };
            //Administrator account password changes
            l_dom_admin_pw_btn.onclick = function(){
                var reg;
                if(!l_dom_admin_pw || l_dom_admin_pw.value == mcs_old_password){
                	  msg_tips({msg:mcs_the_password_is_empty + ".", type:"error", timeout:3000});
                    return;
                }
                if(!l_dom_admin_pw1.value || l_dom_admin_pw1.value == mcs_new_password){
                	  msg_tips({msg:mcs_the_password_is_empty + ".", type:"error", timeout:3000});
                    return;
                }else{
                    reg = /^\S{6,20}$/;
                    if(!reg.exec(l_dom_admin_pw1.value)){
                    	  msg_tips({msg:mcs_password_demand + ".", type:"error", timeout:3000});
                        return;
                    }
                }
                if(!l_dom_admin_pw2.value || l_dom_admin_pw2.value == mcs_confirm_new_password){
                	  msg_tips({msg:mcs_password_empty + ".", type:"error", timeout:3000});
                    return;
                }
                if(l_dom_admin_pw1.value != l_dom_admin_pw2.value){
                	  msg_tips({msg:mcs_two_password_input_inconsistent + ".", type:"error", timeout:3000});
                    return;
                }
                 ms.send_msg("account_passwd_set",{old_pass:l_dom_admin_pw.value,new_pass:l_dom_admin_pw1.value,is_guest:0},{is_guest:0},user_passwd_set_ack);
            };
            //Guest account password changes
            l_dom_guest_pw_btn.onclick = function(){
                if(!l_dom_guest_pw.value || l_dom_guest_pw.value == mcs_admin_password){
                	  msg_tips({msg:mcs_the_password_is_empty + ".", type:"error", timeout:3000});
                    return;
                }
                if(l_dom_guest_pw1.value != l_dom_guest_pw2.value){
                	  msg_tips({msg:mcs_two_password_input_inconsistent + ".", type:"error", timeout:3000});
                    return;
                }
                ms.send_msg("account_passwd_set",{old_pass:l_dom_guest_pw.value,new_pass:l_dom_guest_pw2.value,is_guest:1},{is_guest:1},user_passwd_set_ack);
            };
            
            l_dom_quit_account.onclick = function(){
                mcloud_agent.sign_out({type:obj.type, sn:g_select_device_ipc},function(msg,ref){
                    if( msg.result == "" || msg.result == "accounts.lid.invalid")//After modifying the administrative password, exit to the login screen
                    {
                       //No judgment Returns
                       mlocal_storage.set("auto_login","");
                       ms.ctrl({type:"logout",data:ref});
                    }
                });
            };

            l_dom_admin_show_pw.onfocus = function() {
               this.style.display = "none";
               mx("#admin_pw").style.display = "inline";
               mx("#admin_pw").focus();
            };
            l_dom_admin_pw.onfocus = function() {
               this.select();
            };
            l_dom_admin_pw.onblur = function() {
               if(this.value == "")
               {
                  this.style.display = "none";
                  mx("#admin_show_pw").style.display = "inline";
               }
            };

            l_dom_admin_show_pw1.onfocus = function(){
               this.style.display = "none";
               mx("#admin_pw1").style.display = "inline";
               mx("#admin_pw1").focus();
            };
            l_dom_admin_pw1.onfocus = function(){
               this.select();
            };
            l_dom_admin_pw1.onblur = function(){
               if(this.value == "")
               {
                  this.style.display = "none";
                  mx("#admin_show_pw1").style.display = "inline";
               }
            };

            l_dom_admin_show_pw2.onfocus = function(){
               this.style.display = "none";
               mx("#admin_pw2").style.display = "inline";
               mx("#admin_pw2").focus();
            };
            l_dom_admin_pw2.onfocus = function(){
               this.select();
            };
            l_dom_admin_pw2.onblur = function(){
               if(this.value == "")
               {
                  this.style.display = "none";
                  mx("#admin_show_pw2").style.display = "inline";
               }
            };

            l_dom_guest_show_pw.onfocus = function(){
               this.style.display = "none";
               mx("#guest_pw").style.display = "inline";
               mx("#guest_pw").focus();
            };
            l_dom_guest_pw.onfocus = function(){
               this.select();
            };
            l_dom_guest_pw.onblur = function(){
               if(this.value == ""){
                  this.style.display = "none";
                  mx("#guest_show_pw").style.display = "inline";
               }
            };

            l_dom_guest_show_pw1.onfocus = function(){
               this.style.display = "none";
               mx("#guest_pw1").style.display = "inline";
               mx("#guest_pw1").focus();
            };
            l_dom_guest_pw1.onfocus = function(){
               this.select();
            };
            l_dom_guest_pw1.onblur = function(){
               if(this.value == ""){
                  this.style.display = "none";
                  mx("#guest_show_pw1").style.display = "inline";
               }
            };

            l_dom_guest_show_pw2.onfocus = function(){
               this.style.display = "none";
               mx("#guest_pw2").style.display = "inline";
               mx("#guest_pw2").focus();
            };
            l_dom_guest_pw2.onfocus = function(){
               this.select();
            };
            l_dom_guest_pw2.onblur = function(){
               if(this.value == ""){
                  this.style.display = "none";
                  mx("#guest_show_pw2").style.display = "inline";
               }
            };
            l_dom_vimtag_load_plugs.onclick = function(){
               l_dom_net_setting.ctrl({type:"option_set"});
            };

            jQuery(document).bind("click", function(event){
            	 var e = event || window.event;
               var elem = e.srcElement||e.target;

               while(elem)
               {
                  if(elem.id=="set_menu_img"||elem.id=="modify_admin_pwd"||elem.id=="modify_account_admin_pwd"||elem.id=="modify_guest_pwd"||elem.id=="modify_account_guset_pwd"||
                  elem.id=="event_button"||elem.id=="everything_button"||elem.id=="onehour_button"||elem.id=="halfhour_button"||elem.id=="fiveminute_button"||elem.id=="filter_box_border"||
                  elem.id=="filter_condite_box"||elem.id=="box_device_video_list"||elem.id=="vimtag_filter"||elem.id=="vimtag_filter_img")
                  {
                      return;
                  }
                  elem = elem.parentNode;
               }
               jQuery("#menu_box_sidebar").hide();
               jQuery("#modify_admin_pwd").hide();
               jQuery("#modify_guest_pwd").hide();
               jQuery("#box_device_video_list").hide();
            });
            l_me.ctrl = function(obj){
               switch(obj.type){
                  case "update":
                     {
                     	  mx("#add_devices_menu").style.left = g_distance_to_edge + "px";
                     	  mx("#return_devices_list").style.left = g_distance_to_edge + "px";
                     	  mx("#play_page_menu").style.left = g_distance_to_edge + "px";
                     	  mx("#set_menu_img").style.right = g_distance_to_edge + "px";
                     	  mx("#menu_box_sidebar").style.marginRight = g_distance_to_edge + "px";
                     	  mx("#modify_admin_pwd").style.marginRight = g_distance_to_edge + "px";
                     	  mx("#modify_guest_pwd").style.marginRight = g_distance_to_edge + "px";
                     	  mx("#set_btn_menu").style.right = g_distance_to_edge + "px";
                     	  break;
                     }
               }
            }
            
            l_dom_net_setting=new net_setting_class({parent:l_me_parent, on_event:function(obj){return on_event(obj);}});
    }
    function class_vimtag_cntr_box(obj) {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_device_list_box_obj,
            l_dom_vimtag_device_list_box,
            l_dom_device_messages_page,
            l_add_devices_box_obj,
            l_dom_create_setting_page,
            l_dom_device_setting_page,
            l_home_cntr_obj,
            l_dom_add_device_guide_finish,
            l_dom_change_password,
            l_dom_setting_wifi,
            l_dom_add_device_guide_finish,
            l_dom_device_setting_page_center;

            l_dom_vimtag_device_list_box = dom_create_child(l_me_parent, "div", "vimtag_device_list_box");
            l_dom_vimtag_device_list_box[s_style][s_cssText] ="margin-left:" + g_distance_to_edge + "px;";

            l_device_list_box_obj = new class_vimtag_device_list_box({parent:l_dom_vimtag_device_list_box, on_event:on_event, offsetwidth:l_me_parent.offsetWidth});            

            var width = l_me_parent.offsetWidth, height = l_me_parent.offsetHeight;
            
		        function class_add_devices_box(obj) {
		    	  var l_me_parent = obj.parent,
		    	    l_me = this,
		    	    l_parent_callback = obj.on_event,
		    	    l_dom_add_devices_box,
		    	    l_dom_add_devices_box_body,
		    	    l_dom_add_devices_box_menu,
		    	    l_dom_devices_id,
		            l_dom_devices_show_pwd,
		            l_dom_devices_pwd,
		            l_dom_forgot_devices_password,
		            l_dom_reset_ipc,
		            l_dom_cancel_reset_page_button,
		            l_dom_forgot_devices_password,
		            l_dom_add_devices_button,
		            l_dom_setting_wifi,
		            l_dom_add_device_guide_finish,
		            l_dom_guide_begin_page,
		            l_dom_guide_modify_password_page,
		            l_dom_guide_config_wifi_page,
		            l_dom_devices_pwd_eye,
		            l_dom_guide_finish_page,
		            l_finish_send_req=1;
		
		            l_me_parent[s_innerHTML] = "";
		            l_dom_add_devices_box = dom_create_child(l_me_parent, "div", "add_devices_box");
		            l_dom_add_devices_box_menu = dom_create_child(l_dom_add_devices_box, "div", "add_devices_box_menu");
		            l_dom_add_devices_box_body = dom_create_child(l_dom_add_devices_box, "div", "add_devices_box_body");
		
		            var width = l_me_parent.offsetWidth, height = obj.offsetHeight;
		            l_dom_add_devices_box[s_style][s_cssText] = "height:556px;margin-top:10px;background:#ffffff;overflow:hidden;margin-right:"+g_distance_to_edge+"px;";
		            l_dom_add_devices_box_menu[s_style][s_cssText] = "width:" + width + "px;height:46px;";
		            
		            var guide_menu_width = (width -8 -g_distance_to_edge)/4;
		            l_dom_add_devices_box_menu[s_innerHTML] =
		            "<div>"
		            +          "<div id='guide_begin_page' class='add_devices_box_menu_pitch'>"+ "1、" + mcs_add_device +"</div>"
		            +          "<div id='guide_modify_password_page' class='add_devices_box_menu'>"+ "2、" + mcs_modify_password +"</div>"
		            +          "<div id='guide_config_wifi_page' class='add_devices_box_menu'>"+ "3、" + mcs_action_config_wifi +"</div>"
		            +          "<div id='guide_finish_page' class='add_devices_box_menu'>"+ "4、" + mcs_finish +"</div>"
		            +"</div>";
		
		            l_dom_add_devices_box_body[s_innerHTML] =
		            "<div id='add_first_page'>"
		            +          "<div id='add_devices_id_pwd'>"
		            +             "<div style='margin-bottom:20px;'>"+(obj.sn?mcs_hint_password_expired:"")+"</div>"
		            +             "<div id='add_devices_id'>"
		            +                "<div class='add_devices_id_img' style='margin-left:10px;margin-top:12px;margin-right:10px;position:absolute;'></div>"
		        	  +                "<input class='vimtag_standard_inputs_normal' id='devices_id' type='text' value='" + (obj.sn?obj.sn:mcs_input_device_id) + "' style='margin-top:2px;margin-left:41px;"+(obj.sn?'color:#404040':"")+"'"+(obj.sn?'readonly':"")+">"
		        	  +                "<div class='vimtag_login_input' style='margin-bottom:16px;'></div>"
		        	  +             "</div>"
		        	  +             "<div id='add_devices_pwd'>"
		        	  +                "<div class='vimtag_password_img' style='margin-left:10px;margin-top:12px;margin-right:10px;position:absolute;'></div>"
		        	  +                "<input class='vimtag_standard_inputs_normal' id='devices_show_pwd' type='text' value='" + mcs_password + "' style='margin-top:2px;width:220px;margin-left:42px;'>"
		        	  +                "<input class='vimtag_standard_inputs_normal' id='devices_pwd' type='password' style='display:none;width:220px;margin-top:2px;margin-left:42px;'>"
		        	  +                "<div id='devices_pwd_eye' class='password_eye_gray' style='float:left;margin-top:17.5px;'></div>"
		        	  +                "<div class='vimtag_login_input' style='margin-bottom:16px;'></div>"
		        	  +             "</div>"
		        	  +             "<button class='vimtag_btn' id='add_devices_button'>" + mcs_add + "</button>"
		        	  +             "<div>"
		        	  +                "<span id= 'forgot_devices_password' style='color:#00a6ba;font-size:14px;cursor:pointer;'>" + mcs_forgot_your_password + "?" + "</span>"
		        	  +             "</div>"
		            +          "</div>"
		            +       "<div id='reset_ipc'>"
		            +          "<div id='reset_ipc_img' style='margin-bottom:24px;'>"
		            +             "<img src='/oem/vimtag_v2n/imgs/reset_ipc.png'></img>"
		            +          "</div>"
		            +          "<div style='margin-bottom:44px'><span>" + mcs_wifi_config_third + "</span></div>"
		        	  +             "<button class='vimtag_btn' id='cancel_reset_page_button'>" + mcs_close + "</button>"
		            +       "</div>"
		            +"</div>";
		
		            l_dom_add_devices_id_pwd = mx("#add_devices_id_pwd");
		            l_dom_devices_id = mx("#devices_id");
		            l_dom_devices_show_pwd = mx("#devices_show_pwd");
		            l_dom_devices_pwd = mx("#devices_pwd");
		            l_dom_forgot_devices_password = mx("#forgot_devices_password");
		            l_dom_reset_ipc = mx("#reset_ipc");
		            l_dom_cancel_reset_page_button = mx("#cancel_reset_page_button");
		            l_dom_forgot_devices_password = mx("#forgot_devices_password");
		            l_dom_add_devices_button = mx("#add_devices_button");
		            l_dom_guide_begin_page = mx("#guide_begin_page");
		            l_dom_guide_modify_password_page = mx("#guide_modify_password_page");
		            l_dom_guide_config_wifi_page = mx("#guide_config_wifi_page");
		            l_dom_guide_finish_page = mx("#guide_finish_page");
		            l_dom_devices_pwd_eye = mx("#devices_pwd_eye");
		
		            l_dom_add_devices_id_pwd[s_style][s_cssText] = "width:290px;margin-left:" + (width-290)/2 + "px;margin-top:130px;text-align:center;";
		            l_dom_reset_ipc[s_style][s_cssText] = "width:350px;margin-left:" + (width-350)/2 + "px;margin-top:20px;";
		            l_dom_guide_begin_page[s_style][s_cssText] = "width:"+ guide_menu_width +"px;";	
		            l_dom_guide_modify_password_page[s_style][s_cssText] = "width:"+ guide_menu_width +"px;";	
		            l_dom_guide_config_wifi_page[s_style][s_cssText] = "width:"+ guide_menu_width +"px;";	
		            l_dom_guide_finish_page[s_style][s_cssText] = "width:"+ guide_menu_width +"px;";
		
		            jQuery("#reset_ipc").hide();
		            //Change Password interface
		            function class_change_password(obj){
		               var l_me_parent = obj.parent,
		                   l_me = this,		                 
		                   l_parent_callback,
		                   l_dom_device_change_pwd,
		                   l_dom_input_new_pwd,
		                   l_dom_input_devices_show_pwd,
		                   l_dom_input_devices_pwd,
		                   l_dom_input_new_pwd_again,
		                   l_dom_input_devices_show_pwd_again,
		                   l_dom_input_devices_pwd_again,
		                   l_dom_change_pwd_button,
		                   l_dom_input_devices_pwd_eye,
		                   l_dom_input_devices_pwd_again_eye,
		                   l_dom_change_pwd_btn;
		
		                   l_me_parent[s_innerHTML] =
		                   "<div id='device_change_pwd'>"
		                   +             "<div id='change_pwd_warn'>"
		                   +                "<div style='margin-bottom:16px;'><span>" + mcs_device_id + ":" + obj.sn + "</span></div>"
		                   +                "<div style='margin-bottom:16px;'><span>" + mcs_prompt_modify_passwd + "</span></div>"
		                   +             "</div>"
		                   +             "<div id='input_new_pwd'>"
		        	         +                "<div class='vimtag_password_img' style='margin-left:10px;margin-top:12px;margin-right:10px;float:left;'></div>"
		        	         +                "<input class='vimtag_standard_inputs_normal' id='input_devices_show_pwd' type='text' value='" + mcs_input_new_pass + "' style='margin-top:2px;width:220px;'>"
		        	         +                "<input class='vimtag_standard_inputs_normal' id='input_devices_pwd' type='password' style='display:none;width:220px;margin-top:2px;'>"
					        	   +                "<div id='input_devices_pwd_eye' class='password_eye_gray' style='float:left;margin-top:17.5px;'></div>"
					        	   +                "<div class='vimtag_login_input' style='margin-bottom:16px;'></div>"
					        	   +             "</div>"
					        	   +             "<div id='input_new_pwd_again'>"
		        	         +                "<div class='vimtag_password_img' style='margin-left:10px;margin-top:12px;margin-right:10px;float:left;'></div>"
		        	         +                "<input class='vimtag_standard_inputs_normal' id='input_devices_show_pwd_again' type='text' value='" + mcs_input_new_pass_again + "' style='margin-top:2px;width:220px;'>"
		        	         +                "<input class='vimtag_standard_inputs_normal' id='input_devices_pwd_again' type='password' style='display:none;width:220px;margin-top:2px;'>"
					        	   +                "<div id='input_devices_pwd_again_eye' class='password_eye_gray' style='float:left;margin-top:17.5px;'></div>"
					        	   +                "<div class='vimtag_login_input' style='margin-bottom:16px;'></div>"
					        	   +             "</div>"
					        	   +             "<button class='vimtag_btn' id='change_pwd_btn'>" + mcs_apply + "</button>"
		                   +"</div>";
		
		                   l_dom_device_change_pwd = mx("#device_change_pwd");
		                   l_dom_input_new_pwd = mx("#input_new_pwd");
		                   l_dom_input_devices_show_pwd = mx("#input_devices_show_pwd");
		                   l_dom_input_devices_pwd = mx("#input_devices_pwd");
		                   l_dom_input_new_pwd_again = mx("#input_new_pwd_again");
		                   l_dom_input_devices_show_pwd_again = mx("#input_devices_show_pwd_again");
		                   l_dom_input_devices_pwd_again = mx("#input_devices_pwd_again");
		                   l_dom_input_devices_pwd_eye = mx("#input_devices_pwd_eye");
		                   l_dom_input_devices_pwd_again_eye = mx("#input_devices_pwd_again_eye");
		                   //l_dom_change_pwd_button = mx("#change_pwd_button");
		                   l_dom_change_pwd_btn = mx("#change_pwd_btn");
		 
		                   mx("#guide_modify_password_page").className = "add_devices_box_menu_pitch";
		                   var width = l_me_parent.offsetWidth, height = l_me_parent.offsetHeight;
		                   l_dom_device_change_pwd[s_style][s_cssText] = "width:290px;margin-left:" + (width-290)/2 + "px;margin-top:30px;";
		                   
		                   function ccm_pwd_set()
				               {
				                       if(l_dom_input_devices_pwd.value =="")
				                       {
				                       	  msg_tips({msg:mcs_blank_password+ ".", type:"error", timeout:3000});
				                       	  mx("#buffer_page").style.display = "none";		                          
				                          return -1;
				                       }
				                       else if(l_dom_input_devices_pwd.value.length<6)
				                       {
				                       	  msg_tips({msg:mcs_password_demand+ ".", type:"error", timeout:3000});	
				                       	  mx("#buffer_page").style.display = "none";			                         
				                          return -1;
				                       }
				                       else if(l_dom_input_devices_pwd_again.value=="")
				                       {
				                       	  msg_tips({msg:mcs_blank_password+ ".", type:"error", timeout:3000});
				                       	  mx("#buffer_page").style.display = "none";				                        
				                          return-1;
				                       }
				                       else if(l_dom_input_devices_pwd.value!=l_dom_input_devices_pwd_again.value)
				                       {
				                       	  msg_tips({msg:mcs_two_password_input_inconsistent+ ".", type:"error", timeout:3000});
				                       	  mx("#buffer_page").style.display = "none";
				                          return -1;
				                       }
				                       ms.send_msg("dev_passwd_set",{sn:obj.sn,old_pass:obj.pass,new_pass:l_dom_input_devices_pwd.value,is_guest:0},{sn:obj.sn,pass:l_dom_input_devices_pwd.value},ccm_pwd_set_ack);
				               }
				               function switch_pwd_to_finish(obj){
				               	 remove_event();
				                 mx("#guide_modify_password_page").className = "add_devices_box_menu";
		                     l_dom_add_device_guide_finish = new class_add_device_guide_finish({parent:l_dom_add_devices_box_body, sn:obj.sn});
				               }
				               function switch_pwd_to_wifi(obj){
				                 remove_event();
				                 mx("#guide_modify_password_page").className = "add_devices_box_menu";
				    				     l_dom_setting_wifi = new class_setting_wifi({parent:l_dom_add_devices_box_body,sn:obj.sn});
				               }
				               function dev_add_ack(msg,ref){
				                   if(msg&&msg.result==""){
				                       for(var j=0,length=msg.info.p.length;j<length;j++){
                                 if(msg.info.p[j].n=="s.wifs"&&(msg.info.p[j].v =="srvok"||msg.info.p[j].v =="none")){ 
				                         	 switch_pwd_to_finish({sn:ref.sn});
				                         	 break;
				                         }else if(msg.info.p[j].n=="s.wifs"){
				                         	 switch_pwd_to_wifi({sn:ref.sn});
				                           break;
				                         }
				                       }
				                   }else {
				                   	   msg_tips({msg:mcs_add_device_failed,type:"error",timeout:5000});
				                   	   mx("#buffer_page").style.display = "none";
				                   }
				               }
				               function ccm_pwd_set_ack(msg,ref){
				                   if(!l_me_parent) return;			
				                   if(msg && msg.result == ""){
				                        ms.send_msg("dev_add",{sn:ref.sn,pass:ref.pass},{sn:ref.sn,pass:ref.pass},dev_add_ack);
				                   }else if(msg.result == "accounts.pass.invalid"){
				                   	   msg_tips({msg:mcs_invalid_password+ ".", type:"error", timeout:3000});
				                   	   mx("#buffer_page").style.display = "none";
				                   }else if(msg.result == "accounts.user.offline"){
				                   	   msg_tips({msg:mcs_offline+ ".", type:"error", timeout:3000});
				                   	   mx("#buffer_page").style.display = "none";
				                   }
				               }
		                   l_dom_input_devices_pwd_eye.onclick = function(){
		                       if(l_dom_input_devices_pwd_eye.className == "password_eye"){
                	             l_dom_input_devices_pwd_eye.className = "password_eye_gray";
                	             l_dom_input_devices_pwd.type = "password";
                           }else{
                	             l_dom_input_devices_pwd_eye.className = "password_eye";
                	             l_dom_input_devices_pwd.type = "text";
                           }
		                   };
		                   l_dom_input_devices_pwd_again_eye.onclick = function(){
		                       if(l_dom_input_devices_pwd_again_eye.className == "password_eye"){
                	             l_dom_input_devices_pwd_again_eye.className = "password_eye_gray";
                	             l_dom_input_devices_pwd_again.type = "password";
                           }else{
                	             l_dom_input_devices_pwd_again_eye.className = "password_eye";
                	             l_dom_input_devices_pwd_again.type = "text";
                           }
		                   };
					             l_dom_input_devices_show_pwd.onfocus = function() {
					                 this.style.display = "none";
					                 mx("#input_devices_pwd").style.display = "inline";
					                 mx("#input_devices_pwd").focus();
					             };
					             l_dom_input_devices_pwd.onfocus = function() {
					                 this.select();
					             };
					             l_dom_input_devices_pwd.onblur = function() {
					                 if(this.value == ""){
					                     this.style.display = "none";
					                     mx("#input_devices_show_pwd").style.display = "inline";
					                 }
					             };
					             l_dom_input_devices_show_pwd_again.onfocus = function() {
					                 this.style.display = "none";
					                 mx("#input_devices_pwd_again").style.display = "inline";
					                 mx("#input_devices_pwd_again").focus();
					             };
					             l_dom_input_devices_pwd_again.onfocus = function() {
					                 this.select();
					             };
					             l_dom_input_devices_pwd_again.onblur = function() {
					                 if(this.value == ""){
					                     this.style.display = "none";
					                     mx("#input_devices_show_pwd_again").style.display = "inline";
					                 }
					             };
					             l_dom_change_pwd_btn.onclick = function(){
					             	   jQuery("#buffer_page").show();
					             	   ccm_pwd_set();
					             };
					            
					             function remove_event(){
					                 l_dom_input_devices_show_pwd.onfocus = "";
					                 l_dom_input_devices_pwd.onfocus = "";
					                 l_dom_input_devices_pwd.onblur = "";
					                 l_dom_input_devices_show_pwd_again.onfocus = "";
					                 l_dom_input_devices_pwd_again.onfocus = "";
					                 l_dom_input_devices_pwd_again.onblur = "";
					                 l_dom_change_pwd_btn.onclick = "";
					                 l_me_parent[s_innerHTML] = "";
				                 	 l_me_parent = null;
					             }
					             
					             l_me.ctrl = function(obj){
					             		 switch(obj.type){
					             		 		case "update":
					             		 		   {
					             		 		   		l_dom_device_change_pwd.style.marginLeft = (obj.width-290)/2 + "px";
					             		 		   		break;
					             		 		   } 
					             		 }
					             }					           
		            }
		            //Set interface wifi
		            function class_setting_wifi(obj){
		               var l_me_parent = obj.parent,
		                   l_me = this,
		                   l_parent_callback = obj.on_event,
		                   l_dom_choice_wifi_list,
		                   l_dom_choice_wifi,
		                   l_dom_select_wifi_network,
		                   l_dom_wifi_refresh_btn,
		                   l_dom_input_wifi_pwd,
		                   l_dom_input_wifi_show_password,
		                   l_dom_input_wifi_password,
		                   l_dom_wifi_apply_btn,
		                   l_dom_wifi_skip_btn,
		                   l_dom_input_wifi_password_eye,
		                   now_ifs={},
		                   now_net_info={},
		                   l_dom_set_wifi,
		                   l_send_net_time;
		                   
		                   l_dom_set_wifi = dom_create_child(l_me_parent, "div", "set_wifi_guide");
		                   l_dom_set_wifi[s_innerHTML] =
		                   "<div id='choice_wifi_list'>"
		                   +             "<div id='wifi_connet_fail_warn' style='font-size:14px;color:#000000;margin-bottom:20px;'></div>"
		                   +             "<div id='choice_wifi'>"                  
		        	         +                "<div class='vimtag_password_img' style='margin-left:10px;margin-top:12px;margin-right:10px;float:left;'></div>"
		                   +                "<select id='select_wifi_network' style='float:left;width:220px;height:30px;border:0px;background-color:#f5f5f5;'></select>"
		                   +                "<div id='wifi_refresh_btn' style='line-height:44px;float:right;color:#000000;font-size:14px'>" + mcs_refresh + "</div>"
		                   +                "<div class='vimtag_login_input' style='margin-bottom:16px;'></div>"      
					        	   +             "</div>"
					        	   +             "<div id='input_wifi_pwd'>"
		        	         +                "<div class='vimtag_password_img' style='margin-left:10px;margin-top:12px;margin-right:10px;float:left;'></div>"
		        	         +                "<input class='vimtag_standard_inputs_normal' id='input_wifi_show_password' type='text' value='" + mcs_input_wifi_password + "' style='margin-top:2px;width:220px;'>"
		        	         +                "<input class='vimtag_standard_inputs_normal' id='input_wifi_password' type='password' style='display:none;width:220px;margin-top:2px;'>"
					        	   +                "<div id='input_wifi_password_eye' class='password_eye_gray' style='float:left;margin-top:17.5px;'></div>"
					        	   +                "<div class='vimtag_login_input' style='margin-bottom:16px;'></div>"
					        	   +             "</div>"
					        	   +             "<button class='vimtag_btn' id='wifi_apply_btn'>" + mcs_apply + "</button>"
					        	   +             "<button class='vimtag_btn' id='wifi_skip_btn'>" + mcs_action_skip + "</button>"
		                   +"</div>";
		
		                   l_dom_choice_wifi_list = mx("#choice_wifi_list");
		                   l_dom_choice_wifi = mx("#choice_wifi");
		                   l_dom_select_wifi_network = mx("#select_wifi_network");
		                   l_dom_wifi_refresh_btn = mx("#wifi_refresh_btn");
		                   l_dom_input_wifi_pwd = mx("#input_wifi_pwd");
		                   l_dom_input_wifi_show_password = mx("#input_wifi_show_password");
		                   l_dom_input_wifi_password = mx("#input_wifi_password");
		                   l_dom_input_wifi_password_eye = mx("#input_wifi_password_eye");
		                   l_dom_wifi_apply_btn = mx("#wifi_apply_btn");
		                   l_dom_wifi_skip_btn = mx("#wifi_skip_btn");
				                  
		                   var width = l_me_parent.offsetWidth, height = l_me_parent.offsetHeight;
		                   l_dom_choice_wifi_list[s_style][s_cssText] = "width:350px;margin-left:" + (width-290)/2 + "px;margin-top:30px;";
		                   mx("#guide_config_wifi_page").className = "add_devices_box_menu_pitch";
		                   //Back to the list wifi Refresh
								       function ccm_get_wifi_list_response(msg,ref){
                            jQuery("#buffer_page").hide();
								            if(!l_me_parent) return;
								            var i, length, inner_html = "";
								            if(msg && msg.result==""){
								            	  if(msg.networks){
								                	  for(var i=0;i<msg.networks.length;i++){
				                    	          if(msg.networks[i].token=="ra0"){
				                    	          	  now_ifs=msg.networks[i];
																            var msg_wifi_list=msg.networks[1].wifi_client.ap_list;
																            if(msg.networks[i].wifi_client.info.stat=="info.connecting"){ 
																              inner_html += "<option>"+msg.networks[i].wifi_client.conf.ssid+"</option>";
																              mx("#wifi_connet_fail_warn").innerHTML = mcs_prompt_config_wifi;
																            }else{
												                      inner_html += "<option>"+mcs_not_select+"</option>";
												                    }
												                    length = msg_wifi_list.length;
												                    for(i = 0; i < length; ++i){
												                    	  if(msg_wifi_list[i].ssid == "") continue;
												                        signal_level = Math.floor(msg_wifi_list[i].quality / 20);
												                        signal_level = (signal_level >= 4 ? 4 : signal_level);
												                        if(msg_wifi_list[i].connect){
												                            inner_html += "<option value='"+ msg_wifi_list[i].ssid  +"' selected='selected' front_img='/imgs/device_status_green.png' rear_img='/imgs/wifi_signal"+ signal_level + ".png'>" + msg_wifi_list[i].ssid + "</option>";
												                        }else{                                                                           
												                            inner_html += "<option value='" + msg_wifi_list[i].ssid + "' rear_img='/imgs/wifi_signal"+ signal_level + ".png'>" + msg_wifi_list[i].ssid + "</option>";
												                        }
												                    }
												                    jQuery(l_dom_select_wifi_network).html(inner_html);
												                }
												            }
								                }else{
								                    msg_tips({msg:"info:CcmGetWifiListResponse return WifiList is null in class_options_network.", type:"error", timeout:5000});
								                }
								            }
								       }
											 function CcmSetNetworkInfoRequest(){
						                now_net_info["ifs"] = {token:now_ifs.token, enabled:1};
						           	    now_net_info.ifs["phy"] = {conf:{mode:"wificlient"}};
						    				    now_net_info.ifs["wifi_client"] ={conf:{enabled:1,ssid:mx("#select_wifi_network").value,key:l_dom_input_wifi_password.value}};
						    						ms.send_msg("net_set",{sn:obj.sn,networks:now_net_info.ifs,dns:now_net_info.dns},{sn:obj.sn},ccm_set_network_info_response);
						
						           }
						           function ccm_set_network_info_response(msg,ref){
						           	    if(msg && msg.result == ""){
						                	 var wifi_con_time;
						                	   set_wifi_con=1;						                	    
						                	 	 ccm_get_network_info_request();
						                	 	 l_send_net_time = setInterval(function(){
						                	 	    set_wifi_con=0;
						                	 	    jQuery("#buffer_page").hide();
						                	 	    jQuery("#connect_warn").remove();
						                	 	    msg_tips({msg:mcs_wifi+"&nbsp"+mcs_state_config_wifi_fail, type:"error", timeout:5000});
						                	 	    clearInterval(l_send_net_time);	
						                	 	 }, 60000);
						                }else if(msg.result == "accounts.user.offline"){
						                     set_wifi_con=0;
						                	   if(l_dom_Connecting_div){ 
						                	  		msg_tips({msg:mcs_wifi+mcs_state_config_wifi_fail, type:"error", timeout:5000});
						                	  		jQuery("#buffer_page").hide();
						                	   }
						                }
						           }
		                   function ccm_get_network_info_request(){
				                    ms.send_msg("net_get",{sn:obj.sn,force_scan:0,filter:"all"},{ip:g_server_device, sn:obj.sn},ccm_get_network_info_response);
				               }
				               function ccm_get_network_info_response(msg, ref){
				               	    if(msg && msg.result == ""){
				                    	  if(msg.networks ){
				                    	      for(var i=0;i<msg.networks.length;i++){
				                    	          if(msg.networks[i].token=="ra0"){			                    	          	    
				                    	             	if(msg.networks[i].wifi_client && msg.networks[i].wifi_client.info.stat=="ok"){
				                    	             		  l_dom_add_devices_box_body[s_innerHTML] = "";
				                    	                  mx("#guide_config_wifi_page").className = "add_devices_box_menu";
				                    	                  l_dom_add_device_guide_finish = new  class_add_device_guide_finish({parent:l_dom_add_devices_box_body,on_event:obj.on_event, sn:ref.sn,wifi:1});
				                    	                  jQuery("#buffer_page").hide();
				                    	                  jQuery("#connect_warn").remove();
				                    	                  clearInterval(l_send_net_time);	
				                    	             	}
				                    	              else if(set_wifi_con==1){
				                										    if(!l_me_parent) return;
				                											  setTimeout(function(){ccm_get_network_info_request("all");},5000);
				                    	              }
				                    	          }
				                    	      }
				                    	  }
				                    }
				               }		                   
		                   l_dom_input_wifi_password_eye.onclick = function(){
		                       if(l_dom_input_wifi_password_eye.className == "password_eye"){
                	             l_dom_input_wifi_password_eye.className = "password_eye_gray";
                	             l_dom_input_wifi_password.type = "password";
                           }else{
                	             l_dom_input_wifi_password_eye.className = "password_eye";
                	             l_dom_input_wifi_password.type = "text";
                           }
		                   };
		                   l_dom_wifi_refresh_btn.onclick = function(){
                           jQuery("#buffer_page").show();
		                       ms.send_msg("net_get",{sn:obj.sn,force_scan:0,filter:"wifi_client"},null,ccm_get_wifi_list_response);
		                   };
		                   l_dom_wifi_apply_btn.onclick = function(){
		                   	   mx("#wifi_connet_fail_warn").innerHTML = "";
                           jQuery("#buffer_page").show();
                           jQuery("#buffer_page").append(
                           "<div id='connect_warn'>"+mx("#select_wifi_network").value+"&nbsp"+mcs_wifi_is_connection+"</div>");
		                       CcmSetNetworkInfoRequest(obj);
		                   };
		                   l_dom_wifi_skip_btn.onclick = function(){
		                   	   l_dom_add_devices_box_body[s_innerHTML] = "";
		                   	   mx("#guide_config_wifi_page").className = "add_devices_box_menu";
		                   	   l_dom_add_device_guide_finish = new  class_add_device_guide_finish({parent:l_dom_add_devices_box_body,on_event:obj.on_event, sn:obj.sn});
		                   };
		                   l_dom_input_wifi_show_password.onfocus = function(){
					                 this.style.display = "none";
					                 mx("#input_wifi_password").style.display = "inline";
					                 mx("#input_wifi_password").focus();
					             };
					             l_dom_input_wifi_password.onfocus = function(){
					                 this.select();
					             };
					             l_dom_input_wifi_password.onblur = function(){
					                 if(this.value == ""){
					                     this.style.display = "none";
					                     mx("#input_wifi_show_password").style.display = "inline";
					                 }
					             };
					             function remove_event(){
					             	   l_me_parent[s_innerHTML] = "";
					             	   l_dom_input_wifi_password.onblur = "";
					             	   l_dom_input_wifi_password.onfocus = "";
					             	   l_dom_input_wifi_show_password.onfocus = "";
					             	   l_dom_wifi_skip_btn.onclick = "";
					             	   l_dom_wifi_apply_btn.onclick = "";
					             	   l_dom_wifi_refresh_btn.onclick = "";
					             }
		                   l_dom_wifi_refresh_btn.click();
		                   
		                   l_me.ctrl = function(obj){
		                   		 switch(obj.type){
		                   		 		case "update":
		                   		 		   {
		                                l_dom_choice_wifi_list.style.marginLeft = (obj.width-290)/2 + "px";
		                                break;
		                   		 		   }
		                   		 }
		                   }
		            }
		            //Complete interface
		            function class_add_device_guide_finish(obj){
		               var l_me_parent = obj.parent,
		                   l_me = this,
		                   l_parent_callback = obj.on_event,
		                   l_dom_guide_finish_button,
		                   l_dom_guide_finish;
		
		                   l_me_parent[s_innerHTML] =
		                   "<div id='guide_finish'>"
		                   +       "<div style='margin-bottom:20px;'>" + mcs_device_id + ":"+ obj.sn +"</div>"
		                   +       "<div style='margin-bottom:20px;'>" + mcs_state_add_device_success + "</div>"
		                   +       "<div style='margin-bottom:20px;' id='wifi_ok'>" + mcs_hint_remove_ethernet + "</div>"
					             +       "<button class='vimtag_btn' id='guide_finish_btn'>" + mcs_action_ok + "</button>"
		                   +"</div>";
		                   
		                   l_dom_guide_finish = mx("#guide_finish");
		                   l_dom_guide_finish_button = mx("#guide_finish_btn");
		                   l_dom_guide_finish[s_style][s_cssText] = "margin-left:38%;margin-top:12%;";
		                   
		                   (!obj.wifi)?(mx("#wifi_ok").style.visibility="hidden"):"";
		                   mx("#guide_finish_page").className = "add_devices_box_menu_pitch";
		                   l_dom_guide_finish_button.onclick = function(){
		                       jQuery("#return_devices_list").click();
		                       mx("#guide_shade").style.display = "none";
                           mx("#vimtag_cntr_box").style.zIndex = "10";
                           jQuery("#close_guide").remove();
		                   };
		                   
		                   l_me.ctrl = function(obj){
		                   		 switch(obj.type)
		                   		 {
		                   		 		 case "update":
		                   		 		    {
		                   		 		    	 l_dom_guide_finish.style.marginLeft = 38% + "px";
		                   		 		    	 l_dom_guide_finish.style.marginTop = 12% + "px";
		                   		 		    	 break;
		                   		 		    }
		                   		 }
		                   }
		            }
		            function ccm_add_sub_device_response(msg, ref)
		            {
		            	     if(l_finish_send_req==0) return;
                       jQuery("#buffer_page").hide();
		                   if(!l_me_parent) return;
		                   if((msg &&  msg.result == "") && (ref.pass !== "")){
		                        CcmDiskCtrlRequest({sn:msg.info.sn,pass:ref.pass,p:msg.info.p});
		                   }
		                   else if(msg.result){
		                        if(msg.result=="accounts.user.offline")
		                        {
		                        	   if(!mx("#dev_offline")){
			                        	   jQuery("#add_first_page").hide();
			                        	   jQuery("#add_devices_box_body").append(
			                        	     "<div id='dev_offline'>"
			                        	     +  "<div id='return_add_btn' style='margin-top:3%;color:#0ea9bb;margin-left:20px;cursor:pointer;'><div id='return_add_page'></div>&nbsp;"+mcs_back+"</div>"
			                        	     +  "<div id='dev_offline_right'>"
			                        	     +    "<img style='width:35%;' src='/imgs/offline.png'>"
			                        	     +  "</div>"
			                        	     +  "<div id='dev_offline_left'>"
			                        	     +    "<div><div id='add_loading'></div>&nbsp;"+mcs_state_wait_device_online+"</div>"
			                        	     +    "<div>"
			                        	     +      "<p>"+mcs_device_id+":"+ref.sn+"</p>"
			                        	     +      "<p>"+mcs_prompt_check_device_connection+"</p>"
			                        	     +      "<p>"+mcs_step1_check_connect+"</p>"
			                        	     +      "<p>"+mcs_second_step_ethernet_connect+"</p>"
			                        	     +      "<p>"+mcs_hint_check_network+"</p>"
			                        	     +    "</div>"
			                        	     +  "</div>"
			                        	     +"</div>"
			                        	   );
			                        	   mx("#return_add_btn").onclick = function(){
			                        	   	 jQuery("#dev_offline").remove();
			                        	     mx("#add_first_page").style.display = "block";
			                        	     l_finish_send_req=0;
			                        	   };
		                        	   }
		                        	   setTimeout(function(){ms.send_msg("dev_add",{sn:ref.sn,pass:ref.pass},{passlength:ref.passlength,sn:ref.sn,pass:ref.pass},ccm_add_sub_device_response)},5000);
		                        }
		                        else if(msg.result=="accounts.pass.invalid")
		                        {
		                             msg_tips({msg:mcs_invalid_password + ".", type:"error", timeout:3000});

		                             if(mx("#dev_offline")!= null) jQuery("#return_add_btn").click();
		                        }
		                        else if(msg.result=="accounts.user.invalid")
		                        {
		                        	   msg_tips({msg:mcs_device_not_exist + ".", type:"error", timeout:3000});
		                        }
		                        else if(msg.result=="ccms.system.err"){
		                             msg_tips({msg:msg.result + ".", type:"error", timeout:3000});
		                        }
		                        else if(msg.result == "subdev.exceed.device")
		                        {
		                        	   msg_tips({msg:mcs_devices_in_the_account_overrun, type:"warning", timeout:3000});
		                        }
		                        else if(msg.result == "subdev.exceed.user")
		                        {
		                        	   msg_tips({msg:mcs_exceed_device, type:"error", timeout:3000});
		                        }
		                        else if(msg.result == "permission.denied")
		                        {
		                        	   msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
		                        }
		                        else if(msg.result == "server.timeout"){
		                             msg_tips({msg:mcs_connect_timeout, type:"error", timeout:3000}); 

		                              }
		                        return -1;
		                   }
		            }
		            function switch_add_to_wifi(obj){
		              l_dom_add_devices_box_body[s_innerHTML] = "";
                  mx("#guide_begin_page").className = "add_devices_box_menu";
                  l_dom_setting_wifi = new class_setting_wifi({parent:l_dom_add_devices_box_body, sn:obj.sn});  
		            }
		            function switch_add_to_finish(obj){
		              mx("#guide_begin_page").className = "add_devices_box_menu";
		              l_dom_add_device_guide_finish = new class_add_device_guide_finish({parent:l_dom_add_devices_box_body,sn:obj.sn,wifi:1});
		            }
		            function CcmDiskCtrlRequest(obj){
		                ms.send_msg("sd_set",{sn:obj.sn,ctrl_type:"",token:"sd",no_conf:1},{sn:obj.sn,pass:obj.pass,p:obj.p},ccm_DiskCtrlResponse);
		            }
		            function ccm_DiskCtrlResponse(msg, ref){
                   if(!l_me_parent) return;
                   if((msg && msg.result == "")||(msg.result == "ccms.param.invalid")){                            
                     if(ref.pass.length > 5){
                     	 for(var k=0,length=ref.p.length;k<length;k++){
                         if(ref.p[k].n=="s.wifs"&&(ref.p[k].v =="srvok"||ref.p[k].v =="none")){ 
		                       switch_add_to_finish({sn:ref.sn});
		                       break;
		                     }else if(ref.p[k].n=="s.wifs"){
		                     	 switch_add_to_wifi({sn:ref.sn});
		                       break;
		                     }
                     	 }
                     }else{
                       mx("#guide_begin_page").className = "add_devices_box_menu";
                       l_dom_change_password = new class_change_password({parent:l_dom_add_devices_box_body,on_event:obj.on_event, sn:ref.sn, pass:ref.pass});
                     }
                   }else if(msg.result=="permission.denied"){
                     switch_add_to_finish({sn:ref.sn});
                   }
		            }
		            l_dom_devices_id.onfocus = function(){
		               if(this.value == mcs_input_device_id){
		                   this.value = "";
		               }
		               this.style.color = "#404040";
		            };
		            l_dom_devices_id.onblur = function(){
		               if(this.value == ""){
		                   this.style.color = "#bdbdbd";
		                   this.value = mcs_input_device_id;
		               }else{
		                   this.style.color = "#404040";
		               }
		            };
		            l_dom_devices_show_pwd.onfocus = function(){
		                this.style.display="none";
		                mx("#devices_pwd").style.display = "inline";
		                mx("#devices_pwd").focus();
		            };
		            l_dom_devices_pwd.onfocus = function(){
		                this.select();
		            };
		            l_dom_devices_pwd.onblur = function(){
		                if(this.value==""){
		                    this.style.display = "none";
		                    mx("#devices_show_pwd").style.display = "inline";
		                }
		            };
		            l_dom_devices_pwd_eye.onclick = function(){
		                if(l_dom_devices_pwd_eye.className == "password_eye"){
		                  l_dom_devices_pwd_eye.className = "password_eye_gray";
		                  l_dom_devices_pwd.type = "password";
		                }else{
		                	l_dom_devices_pwd_eye.className = "password_eye";
		                	l_dom_devices_pwd.type = "text";
		                }
		            };
		            l_dom_add_devices_button.onclick = function(){
		            	  if(l_dom_devices_pwd.value == "amdin"){
		                	 l_dom_devices_pwd.value = "admin";
		                }
				        		var username_value = l_dom_devices_id.value.trim(),
				        		password_value = l_dom_devices_pwd.value.trim();
				       			if(!username_value || username_value == mcs_input_device_id){
				         			  msg_tips({msg:mcs_the_user_name_is_empty, type:"error", timeout:3000});
				          		  return;
				        		}
				        		if(!password_value || password_value == mcs_password){
				                msg_tips({msg:mcs_the_password_is_empty, type:"error", timeout:3000});
				                return;
				        		}
		                if(g_device_list_obj["sn_"+l_dom_devices_id.value]&&!obj.sn){
        						    msg_tips({msg:mcs_device_existed, type:"warning", timeout:3000});
        						}else{
                        jQuery("#buffer_page").show();
                        l_finish_send_req = 1;
        		            ms.send_msg("dev_add",{sn:username_value,pass:password_value},{passlength:password_value.length,sn:username_value,pass:password_value},ccm_add_sub_device_response);
        					  }
        		    };
		            l_dom_forgot_devices_password.onclick = function(){
		                jQuery("#add_devices_id_pwd").hide();
		                jQuery("#reset_ipc").show();
		            };
		            l_dom_cancel_reset_page_button.onclick = function(){
		                jQuery("#reset_ipc").hide();
		                jQuery("#add_devices_id_pwd").show();
		            };
		            //Destruction Add Device Interface
		            function remove_event(){
		                l_dom_cancel_reset_page_button.onclick = "";
		                l_dom_forgot_devices_password.onclick = "";
		                l_dom_add_devices_button.onclick = "";
		                l_dom_devices_pwd.onblur = "";
		                l_dom_devices_pwd.onfocus = "";
		                l_dom_devices_show_pwd.onfocus = "";
		                l_dom_devices_id.onblur = "";
		                l_dom_devices_id.onfocus = "";
		            	  l_dom_vimtag_device_list_box[s_innerHTML] = "";
		            }
		            
		            l_me.ctrl = function(obj)
		            {
		            	  switch(obj.type)
		            	  {
		            	  	  case "destroy":
		            	  	     {
		            	  	  	   remove_event();
		            	  	     }
		            	  	  case "update":
		            	  	     {
		            	  	     	 var width = l_me_parent.offsetWidth;
		            	  	     	 var guide_menu_width = (width -8- g_distance_to_edge)/4;
                             l_dom_add_devices_box.style.marginRight = g_distance_to_edge + "px";
		                         l_dom_add_devices_box_menu[s_style][s_width] = width + "px";
		                         l_dom_add_devices_box_body[s_style][s_width] = width + "px";
		            	  	     	 l_dom_add_devices_id_pwd.style.marginLeft =(width-290)/2 + "px";
		            	  	     	 if(mx("#close_guide")) mx("#close_guide").style.marginLeft = width - 20 + "px";
		                         l_dom_reset_ipc.style.marginLeft = (width-350)/2 + "px";
		                         l_dom_guide_begin_page[s_style][s_width] = guide_menu_width +"px";	
		                         l_dom_guide_modify_password_page[s_style][s_width] = guide_menu_width +"px";	
		                         l_dom_guide_config_wifi_page[s_style][s_width] = guide_menu_width +"px";	
		                         l_dom_guide_finish_page[s_style][s_width] = guide_menu_width +"px";
		                         if((l_dom_change_password) && (!l_dom_setting_wifi) && (!l_dom_add_device_guide_finish)){
		                         		l_dom_change_password.ctrl({type:"update",width:width});
		                         }
		                         if((l_dom_setting_wifi) && (!l_dom_add_device_guide_finish)){
		                         		l_dom_setting_wifi.ctrl({type:"update",width:width});
		                         }		                         
		                         if(l_dom_add_device_guide_finish){
		                         		l_dom_add_device_guide_finish.ctrl({type:"update",width:width});
		                         }	
		            	  	     }
		            	  }
		            }
		            jQuery("#vimtag_cntr_box").append(
                  "<img id='close_guide' src='../imgs/close_guide.png' style='cursor:pointer;'>");
                mx("#guide_shade").style.display = "block";
                mx("#vimtag_cntr_box").style.zIndex = "9999";
                mx("#close_guide").style.marginLeft = width - 30 + "px";
                mx("#close_guide").onclick = function(){
                  jQuery("#play_page_return").click();
	                mx("#guide_shade").style.display = "none";
                  mx("#vimtag_cntr_box").style.zIndex = "10";
                  jQuery("#close_guide").remove();
                  l_finish_send_req=0;
                };
		        }
		        
				function class_device_setting_page_center(obj)
                {
				        var l_me_parent = obj.parent,
				            l_me = this,
				            l_parent_callback = obj.on_event,
				            l_dom_create_setting_page_left,
				            l_dom_create_setting_page_right,
				            l_dom_set_option_branch,
				            l_dom_about,
				            l_dom_dev_name,
				            l_dom_admin_pwd,
				            l_dom_visitor_pwd,
				            l_dom_dev_network,
				            l_dom_dev_osd,
				            l_dom_dev_sd_card,
				            l_dom_storage_device_box,
				            l_dom_alert_dev,
				            l_dom_alert_linkage,
				            l_dom_plan,
				            l_dom_dev_date,
				            l_dom_dev_system,
				            l_dom_dev_other,				            
				            l_select_manager_option = "none";
				
				            l_dom_create_setting_page_left = new dom_create_child(l_me_parent, "div", "create_setting_page_left");
				            l_dom_create_setting_page_right = new dom_create_child(l_me_parent, "div", "create_setting_page_right");
				
				            l_dom_create_setting_page_left[s_style][s_cssText] = "width:200px;float:left;margin-left:100px;";
				            l_dom_create_setting_page_right[s_style][s_cssText] = "float:right;margin-top:40px;margin-right:100px;width:480px;";
				
				            l_dom_set_option_branch = new class_device_manager_content({parent:l_dom_create_setting_page_right, on_event:obj.on_event});				            
				
				            l_dom_create_setting_page_left[s_innerHTML] =
                            "<div id='list_left'>"
                            +      "<div id='product_information' class ='list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_about'>"+mcs_about+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id ='device_nickname' class ='list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_dev_name'>"+mcs_nickname+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'password_page' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_admin_pwd'>"+mcs_admin_password+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'guest_password_page' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_visitor_pwd'>"+mcs_guest_password+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'network' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_dev_network'>"+mcs_network+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'OSD' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_dev_osd'>"+mcs_osd+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'SD_card' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_dev_sd_card'>"+((mcloud_agent.devs.get(g_select_device_ipc)).type=="BOX"?mcs_hard_disk:mcs_sdcord)+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'storage_device' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_storage_device_box'>"+mcs_storage_device+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'scene' class = 'list_idle_div' style='display:none'>"
                            +         "<span class = 'list_left_text' id='lan_scene'>"+mcs_scenes+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'attachmen' class = 'list_idle_div' style='display:none'>"
                            +         "<span class = 'list_left_text' id='lan_attachmen'>"+mcs_accessory+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'auto' class = 'list_idle_div' style='display:none'>"
                            +         "<span class = 'list_left_text' id='lan_auto'>"+mcs_auto+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'alarm' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_alert_dev'>"+mcs_alarm_device+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'alarm_linkage' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_alert_linkage'>"+mcs_alarm_action+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'record_setting' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_plan'>"+mcs_scheduled_recording+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'time_date' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_dev_date'>"+mcs_date_time+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'system_maintain' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_dev_system'>"+mcs_system+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'others' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text' id='lan_dev_other'>"+mcs_others+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +      "<div id = 'del_dev' class = 'list_idle_div'>"
                            +         "<span class = 'list_left_text'>"+mcs_delete_device+"</span>"
                            +         "<div class = 'list_img' ></div>"
                            +      "</div>"
                            +"</div>";
				
					        function change_manager_content(obj)
					        {
					            l_dom_set_option_branch.ctrl({type:"options_destroy", data:{option:l_select_manager_option}});
					            l_select_manager_option = obj.data.option;
					            l_dom_set_option_branch.ctrl({type:"change_manager_content", data:obj.data});
					        }
				
				            var list_items;
				            list_items = jQuery(".list_idle_div");
				            for(var i = 0;i<list_items.length;i++)
				            {
				                list_items[i].onclick = (function() {
				                    for (var i = 0; i < list_items.length; i++)
				                    {
				                        list_items[i].setAttribute("class", "list_idle_div");
				                        if(this == list_items[i])
				                        {
				                            //g_receive_flag = i;
				                        }
				                    }
				                    this.setAttribute("class", "list_active_div");
				                    var id = this.id;
				                    change_manager_content({data:{option:id}});
				                });
				            }
				            var devs = mcloud_agent.devs.get(g_select_device_ipc);
				            list_items[0].onclick();
				            				            
				            if(devs.type=="BOX")
				            {
				            		mx("#OSD").style.display = "none";
				            		mx("#storage_device").style.display = "none";
				            		mx("#alarm").style.display = "none";
				            		mx("#alarm_linkage").style.display = "none";
				            		mx("#record_setting").style.display = "none";
				            		mx("#others").style.display = "none";
				            }

                            for(var i=0;i<devs.p.length;i++){
                                if(devs.p[i].n == "s.exdev"){
                                    mx("#scene").style.display = "block";
                                    mx("#attachmen").style.display = "block";
                                    mx("#auto").style.display = "block";
                                };
                            }    

				            if(devs.stat=="Offline"){
				                mx("#device_nickname").style.display = "none";
				                mx("#password_page").style.display = "none";
				                mx("#guest_password_page").style.display = "none";
				                mx("#network").style.display = "none";
				                mx("#OSD").style.display = "none";
				                mx("#SD_card").style.display = "none";
				                mx("#storage_device").style.display = "none";
				                mx("#alarm").style.display = "none";
				                mx("#alarm_linkage").style.display = "none";
				                mx("#record_setting").style.display = "none";
				                mx("#time_date").style.display = "none";
				                mx("#system_maintain").style.display = "none";
				                mx("#others").style.display = "none";
				                mx("#product_information").style.marginTop = "40px";
				            }
				            
				            l_me.ctrl = function(obj){
				                switch(obj.type){
				                    case "destroy":
				                       {
//				                       	  l_me_parent[s_innerHTML] = "";
//				                       	  l_me_parent = null;
				                       	  l_dom_set_option_branch.ctrl({type:"destroy", data:{option:l_select_manager_option}});
				                       	  list_items[0].onclick = "";
				                       	  break;
				                       }
				                }
				            }
				}
            //Generation player interface
            function create_play_page_box()
            {
            	  l_dom_vimtag_device_list_box = dom_create_child(l_me_parent, "div", "vimtag_device_list_box");
                l_dom_vimtag_device_list_box[s_style][s_cssText] ="margin-left:" + g_distance_to_edge + "px";          
            	  l_home_cntr_obj = new class_home_cntr({parent:l_dom_vimtag_device_list_box, on_event:obj.on_event, offsetwidth:l_me_parent.offsetWidth, sn:g_select_device_ipc});           	  	     
            }
            function on_event(obj)
            {
                switch(obj.type)
            	  {
            	  	 case "create_setting_page":
            	  	   {
            	  	     l_me.ctrl(obj);
            	  	     break;
            	  	   }
            	  	 case "create":
            	  	   {
            	  	     l_add_devices_box_obj = new class_add_devices_box({parent:l_dom_vimtag_device_list_box, on_event:obj.on_event, offsetHeight:l_me_parent.offsetHeight,sn:obj.sn});
            	  	     break;
            	  	   }
            	  }
            	  	 
            }
            l_me.ctrl = function(obj)
            {
            	  switch(obj.type)
            	  {
            	  	 case "update":
            	  	     {
            	  	     	  if((!g_is_in_playback_page)&&(mx("#vimtag_device_list_box"))) mx("#vimtag_device_list_box").style.marginLeft = g_distance_to_edge + "px";
            	  	     	  if(mx("#filter_condite_box")) mx("#filter_condite_box").style.width = g_devices_list_box_width + "px";
            	  	     	  if(l_device_list_box_obj && l_device_list_box_obj.ctrl){
            	  	     	  	 l_device_list_box_obj.ctrl(obj);
            	  	     	  }
            	  	     	  if(l_home_cntr_obj && g_is_in_play_page){
            	  	     	  	 l_home_cntr_obj.ctrl(obj);
            	  	     	  }
            	  	     	  if(l_add_devices_box_obj){
            	  	     	  	 l_add_devices_box_obj.ctrl(obj);
            	  	     	  }
            	  	     	  break;
            	  	     }
            	  	 case "create":
            	  	     {  //Add a device to generate a list of interface
            	  	     	  l_add_devices_box_obj = new class_add_devices_box({parent:l_dom_vimtag_device_list_box, on_event:obj.on_event, offsetHeight:l_me_parent.offsetHeight,sn:obj.sn});
            	  	 	      break;
            	  	     }
            	  	 case "create_setting_page":
            	  	     {  //Build Settings interface
            	  	     	  if(g_is_playing) l_device_list_box_obj.ctrl({type:"delete_ipc", data:{node_sn:g_select_device_ipc}});
            	  	     	  l_me_parent[s_innerHTML] = "";
            	  	     	  l_dom_device_setting_page = new dom_create_child(l_me_parent, "div", "device_setting_page");
            	  	     	  l_dom_device_setting_page[s_style][s_cssText] = "width:1050px;height:615px;margin-left:" + (width-1050)/2 + "px;background-color:#efeff4;";
            	  	     	  l_dom_device_setting_page_center = new class_device_setting_page_center({parent:l_dom_device_setting_page, on_event:obj.on_event, offsetWidth:width});
            	  	     	  break;
            	  	     }
            	  	 case "change_manager_content":
            	  	     {
            	  	     	  l_dom_set_option_branch.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	 case "create_messages_page":
            	  	     {  //Generate historical information interface
            	  	     	  if(g_is_playing) l_device_list_box_obj.ctrl({type:"delete_ipc", data:{node_sn:g_select_device_ipc}});//End playing video
            	  	     	  var dev_img_ver=mcloud_agent.devs.get(g_select_device_ipc).img_ver;
            		          var dev_type=mcloud_agent.devs.get(g_select_device_ipc).type;
                          if(dev_img_ver.substring(0,2)>="v2" && l_dom_device_messages_page){
                            if(g_select_device_ipc && dev_type != "BOX"){
              	              jQuery("#vimtag_device_list_box").show();
                      	  	  jQuery("#view_page_left").remove();
                      	  	  jQuery("#view_page_center").remove();
                      	  	  jQuery("#view_page_right").remove();
                      	  	  jQuery("#vimtag_calendar_choice").show();
                              jQuery(".ui-datepicker-trigger").css("display","block");
                              jQuery("#vimtag_filter_calendar_gap").show();
                              mx("#vimtag_filter").style.display="block";
                           
                              mx("#video_edit").style.display="block";
                            }
                          }else{
                            l_me_parent[s_innerHTML] = "";
          	  	     	      l_dom_device_messages_page = new class_device_messages_page({parent:l_me_parent, on_event:obj.on_event});
                          } 
            	  	     	  break;
            	  	     }
            	  	 case "destroy_play_page":
            	  	     { 
            	  	     	  if(g_is_playing) l_device_list_box_obj.ctrl({type:"delete_ipc", data:{node_sn:g_select_device_ipc}});//End playing video
                          l_dom_vimtag_device_list_box[s_innerHTML] = ""; //The destruction of the original settings or history interface
                          l_device_list_box_obj = new class_vimtag_device_list_box({parent:l_dom_vimtag_device_list_box, on_event:on_event, offsetwidth:l_me_parent.offsetWidth});
                          l_parent_callback({type:"update"});
                          break;
            	  	     }
            	  	 case "destroy_history_play_page":
            	  	     {
            	  	     	  l_dom_device_messages_page.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	 case "destroy_add_devices_box":
            	  	     {
            	  	     	  l_add_devices_box_obj.ctrl({type:"destroy"});
            	  	     	  l_device_list_box_obj = new class_vimtag_device_list_box({parent:l_dom_vimtag_device_list_box, on_event:on_event, offsetwidth:l_me_parent.offsetWidth});
            	  	     	  break;
            	  	     }
            	  	 case "destroy_setting_page":
            	  	     {
            	  	     	  l_dom_device_setting_page_center.ctrl({type:"destroy"});
            	  	     	  l_me_parent[s_innerHTML] = "";            	  	     	          	  	     	  
            	  	     	  create_play_page_box(); 
            	  	     	  break;
            	  	     }
            	  	 case "destroy_history_page":
            	  	     {
            	  	     	  l_dom_device_messages_page.ctrl(obj);
            	  	     	  l_dom_device_messages_page=null;
            	  	     	  l_me_parent[s_innerHTML] = "";           	  	     	  
            	  	     	  create_play_page_box();         	  	     
            	  	     	  break;
            	  	     }
            	  	 case "destroy_box_device_page":
            	  	     {
                          l_dom_vimtag_device_list_box[s_innerHTML] = ""; //destory the box device page
                          l_device_list_box_obj = new class_vimtag_device_list_box({parent:l_dom_vimtag_device_list_box, on_event:on_event, offsetwidth:l_me_parent.offsetWidth});
            	  	     	  break;
            	  	     }
            	  	 case "destroy_box_device_history_page":
            	  	     {
            	  	     	  l_dom_vimtag_device_list_box[s_innerHTML] = "";
            	  	     	  l_device_list_box_obj.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	 case "destroy_box_device_video_page":
            	  	     {
            	  	     	  l_device_list_box_obj.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	 case "destroy_box_setting_page":
            	  	     {
            	  	     	  l_dom_device_setting_page_center.ctrl({type:"destroy"});
            	  	     	  l_me_parent[s_innerHTML] = "";
            	  	     	  l_dom_vimtag_device_list_box = dom_create_child(mx("#vimtag_cntr_box"), "div", "vimtag_device_list_box");
                          l_dom_vimtag_device_list_box[s_style][s_cssText] ="margin-left:" + g_distance_to_edge + "px;";
            	  	     	  l_device_list_box_obj.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	 case "select_video_base_select_date":
            	  	     {
            	  	        var dev_type=mcloud_agent.devs.get(g_select_device_ipc).type;
            	  	        if(dev_type == "BOX"){
            	  	          l_device_list_box_obj.ctrl(obj);
            	  	        }else{
            	  	     	    l_dom_device_messages_page.ctrl(obj);
            	  	     	  }
            	  	     	  break;
            	  	     }
            	  	 case "reload_box_video_list":
            	  	     {
            	  	     	  if(l_dom_device_messages_page)
            	  	     	    l_dom_device_messages_page.ctrl(obj);
            	  	     	  else
            	  	     	    l_device_list_box_obj.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	 case "get_image_list":
            	  	     {
            	  	     	  if(l_dom_device_messages_page)
            	  	     	    l_dom_device_messages_page.ctrl(obj);
            	  	     	  else
            	  	     	    l_device_list_box_obj.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	 case "get_alarm_video_list":
            	  	     {
            	  	     	  if(l_dom_device_messages_page)
            	  	     	    l_dom_device_messages_page.ctrl(obj);
            	  	     	  else
            	  	     	    l_device_list_box_obj.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	 case "get_video_img":
            	  	     {
            	  	     	  if(l_dom_device_messages_page)
            	  	     	    l_dom_device_messages_page.ctrl(obj);
            	  	     	  else
            	  	     	    l_device_list_box_obj.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	 case "refresh_notif_latest":
            	  	     {//mmq Get refreshed after each
            	  	     	  if(l_device_list_box_obj) l_device_list_box_obj.ctrl(obj);
            	  	     	  break;
            	  	     }
                   case "refresh_dev_list":
                       {
                          l_device_list_box_obj.ctrl(obj);
                          break;
                       }
                   case "destroy_setting_page_offline":
                       {
                       	  l_dom_device_setting_page_center.ctrl({type:"destroy"});
                       	  jQuery("#device_setting_page").remove();
                       	  l_dom_vimtag_device_list_box = dom_create_child(l_me_parent, "div", "vimtag_device_list_box");
                       	  l_me.ctrl({type:"destroy_play_page"});
                       	  break;
                       }
            	  	 default:
            	  	     msg_tips({mag:"error:create the page of add devices is failed.", type:"error", tiomeout:3000});
            	  }
            }
    }
    function class_vimtag_device_list_box(obj) {
    	  var l_me_parent = obj.parent,
    	      l_me = this,
    	      l_parent_callback = obj.on_event,
    	      l_dom_vimtag_device_list = mx("#vimtag_device_list_box"),
    	      images = new Array(),
    	      l_load_images = new Array(),
    	      l_dom_device_list_img,
    	      l_home_cntr_obj,
            l_canvas_dom_array=[],
            l_b64_str_array=[],
            l_canvas_index=0,
            l_last_buffer,l_timer,
            device_list_scroll,
            l_dom_device_messages_pag,e;
    	      if(mcloud_agent.devs.list.length==0) return;
    	      
    	      function load_imgs(n){
                // images = new Image();
                // images.src = mcloud_agent.pic_url_get({sn:mcloud_agent.devs.list[n].sn,token:"p2"});
                // images.onload = function(){
                //     for(var j=0;j<mcloud_agent.devs.list.length;j++){
                //           if(!jQuery(".device_list_img")[j])return;
                //           var dev_sn = jQuery(".device_list_img").eq(j).attr("sn");
                //           if(this.src.indexOf(dev_sn)>-1){                                    
                //               break;
                //           }
                //     }
                //     jQuery(".device_list_img")[j].childNodes[1].style.background ="url("+this.src+")"; 
                // }

                 //new changed code at 2016/4/20 to load localcash images of devices
                 images = new Image(); 
                 if(get(mcloud_agent.devs.list[n].sn)!= null && g_dev_refresh_is_click == false){
                 var current_get_image_time = new Date();
                 get_image_time = current_get_image_time.getTime(); 
                 var storage_ipc_time = mlocal_storage.get(mcloud_agent.devs.list[n].sn+"_storage_time");
                 
                 if((get_image_time-storage_ipc_time)/(60*60*1000) <= 48/*true*/ && mcloud_agent.devs.list[n].stat == "Online"){
                     jQuery(".device_list_img")[n].childNodes[1].style.background="url("+get(mcloud_agent.devs.list[n].sn)+")";
                   }else{ 
                     images.src=mcloud_agent.pic_url_get({sn:mcloud_agent.devs.list[n].sn,token:"p2"});
                     set(mcloud_agent.devs.list[n].sn,images.src);
                     images.onload=function()
                      {
                       for(var j=0;j<mcloud_agent.devs.list.length;j++){
                          if(!jQuery(".device_list_img")[j])return;
                          var dev_sn = jQuery(".device_list_img").eq(j).attr("sn");
                          if(this.src.indexOf(dev_sn)>-1){                                    
                             break;
                      }
                      }
                         jQuery(".device_list_img")[j].childNodes[1].style.background = "url("+this.src+")"; 
                    }
                    }
                    }else{
                         images.src=mcloud_agent.pic_url_get({sn:mcloud_agent.devs.list[n].sn,token:"p2"});
                         set(mcloud_agent.devs.list[n].sn,images.src);

                       images.onload=function()
                      {
                       for(var j=0;j<mcloud_agent.devs.list.length;j++){
                          if(!jQuery(".device_list_img")[j])return;
                          var dev_sn = jQuery(".device_list_img").eq(j).attr("sn");
                          if(this.src.indexOf(dev_sn)>-1){                                    
                             break;
                        }
                      }
                         jQuery(".device_list_img")[j].childNodes[1].style.background = "url("+this.src+")"; 
                    }
                    }
               
                 function set(key,src){
                 var img = document.createElement('img');
                 img.addEventListener('load',function(){
                 var imgcavens = document.createElement('canvas');
                 imgcontent = imgcavens.getContext('2d');
                 imgcavens.width = this.width;
                 imgcavens.height = this.height;
                 imgcontent.drawImage(this,0,0,this.width,this.height);
                 var imgAsDataUrl = imgcavens.toDataURL('image/jpg'||'image/png');
                 try{
                       localStorage.setItem(key,imgAsDataUrl);
                       var storage_time = new Date().getTime();
                       mlocal_storage.set(mcloud_agent.devs.list[n].sn+"_storage_time",storage_time);
                    }catch(e)
                    {
                     console.log("storageFaild: "+e);
                    }
                    },false);
                     img.src = src;
                    }
                 function get(key){
                      images.src = localStorage.getItem(key);
                      return images.src;
                     }
            }            
            function ccm_ipcs_get_ack(msg, ref){
                if(!l_me_parent) return;
                if( msg && !msg.result && msg.ipcs){
                    for(var i=0;i<msg.ipcs.length;i++){
                        if(msg.ipcs[i].online==0){
                            var recording="not-recording.png";
                        }else if(msg.ipcs[i].online==1){
                            var recording="recording.png";
                        }  
                        mx("#vimtag_device_list_box")[s_innerHTML]+=
                            "<div class='box_device_list_img' >"
                            +  "<img class='box_camera_sign_picture' style='display:"+((g_old_browser_version||(navigator.appName == "Microsoft Internet Explorer" && navigator.appVersion.match(/9./i)=="9."))?'none':'block')+"'></img>"
                            +  "<div class='box_device_nick'>"
                            +     "<div style='float:left;margin-top:5px;width:22px;height:22px;background:url(./oem/vimtag_v2n/imgs/"+recording+")'></div>"
                            +     "<span>"+msg.ipcs[i].sn+"</span>"
                            +  "</div>"
                            +"</div>";
                    }
                    for(var i=0;i<msg.ipcs.length;i++){
                        mx(".box_device_list_img")[i].onclick=function(){
                        	  jQuery("#buffer_page").show();
                            var  sn = mx("/span", this)[0].innerHTML;
                            g_select_box_ipc = sn;
                            mx("#vimtag_device_list_box")[s_innerHTML] = "";
                            jQuery("#vimtag_calendar_choice").show();
                            jQuery(".ui-datepicker-trigger").css("display","block");
                            jQuery("#vimtag_filter_calendar_gap").show();
                          
                            mx("#video_edit").style.display="block";
                            jQuery("#vimtag_filter").show();
                            jQuery("#vimtag_filter_img").show();
                            jQuery("#setting_messages_gap").hide();
                            jQuery("#enter_setting").hide();
                            jQuery("#enter_setting_img").hide();
                            g_is_video = 1;
                            l_dom_device_messages_page = new class_box_device_messages_page({parent:l_me_parent, on_event:obj.on_event, box_ipc_sn:sn});
                            g_return_play_video_page = 4;                                /*enter the history video page of BOX's device*/
                        }
                    }
                    pic_base64_get(msg.ipcs);
                }
                jQuery("#buffer_page").hide();
            }
            function pic_base64_get(obj){
                l_b64_str_array=[];
                l_canvas_dom_array=[];
                l_canvas_index=0;
                var c_index=0;
                for(var i=0;i<obj.length;i++){
                    var token=obj[i].sn+"_p3_"+Math.pow(2,31) +"_"+Math.pow(2,31);
                    var url = window.location.protocol + "//"+window.location.host+"/ccm/ccm_pic_get.js?dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+token+"&dflag=2";
                    l_canvas_dom_array=mx("/img",mx("#vimtag_device_list_box"));
                    l_canvas_dom_array[i].src = url;
                }
            }
            function add_imgs_to_device(){
		            l_dom_vimtag_device_list[s_innerHTML] = "<div id='vimtag_device_list'>";
			    jQuery("#vimtag_device_list").after("<div id='auto_scene_box'></div><div id='activity_scene_box' style='display:none'>11111</div><div id='leave_scene_box' style='display:none'>22222</div><div id='quiet_scene_box' style='display:none'>33333</div>");
                    var auto_scene_box_list = mx("#auto_scene_box");	
		            for(var length = mcloud_agent.devs.list.length, i = 0; i < length; i++){
		              	 var data = mcloud_agent.devs.list[i],pic_url;
		              	 if(!data)  continue;
		              	 var sn = data.nick?data.nick:data.sn;
		              	 if((data.stat == "Online")&&(data.type == "BOX")){
		              	 	 l_dom_vimtag_device_list[s_innerHTML] += "<div class='device_list_img' state='online' sn="+data.sn+" style='display:none;'><img src='/imgs/alarm.png' style='float:left;display:none;'><div id='box_sign_picture' class='box_sign_picture'></div><div class='device_nick'><span>"+ sn+"</span></div></div>";
		              	 	 continue;
		              	 }
		              	 else if(data.stat == "Online"){
		                   l_dom_vimtag_device_list[s_innerHTML] += "<div class='device_list_img' state='online' sn="+data.sn+" style='display:none;'><img src='/imgs/alarm.png' style='float:left;display:none;'><div id='camera_sign_picture' class='camera_sign_picture'></div><div class='device_nick'><span>"+ sn+"</span></div></div>";
			    
		                   continue;
		              	 }
		              	 else if(data.stat == "Offline"){
		                   l_dom_vimtag_device_list[s_innerHTML] += "<div class='device_list_img' state='offline' sn="+data.sn+" style='display:none;'><img src='/imgs/alarm.png' style='float:left;display:none;'><div class='camera_offline_sign_picture'></div><div class='device_nick'><span>"+ sn+"</span></div></div>";
		              	 }
		              	 else if(data.stat == "InvalidAuth"){
		                   l_dom_vimtag_device_list[s_innerHTML] += "<div class='device_list_img' state='invalid_auth' sn="+data.sn+" style='display:none;'><img src='/imgs/alarm.png' style='float:left;display:none;'><div class='camera_invalid_auth_picture'></div><div class='device_nick'><span>"+ sn+"</span></div></div>";
		              	 }
		            }
		            l_dom_vimtag_device_list[s_innerHTML] += "</div>";

		            mx("#main_title_box_return").onclick = function(){l_dom_history_return.click();}
				        l_dom_device_list_img = mx(".device_list_img");
                dev_list_show();
		            for(var length=l_dom_device_list_img.length,i=0; i<length;++i){
var device_info = mcloud_agent.devs,device_sn = l_dom_device_list_img[i].getAttribute("sn");
		            	  //Event status Normal equipment
		                if(l_dom_device_list_img[i].getAttribute("state") == "online"){   
		                	  //State Normal equipment click event
		                    l_dom_device_list_img[i].onclick = function(){
				   //mx("#scene_box").style.display = "none";
		                    	   jQuery(window).unbind('scroll',device_list_scroll);		                    	   
		                    	   var old_sn = g_select_device_ipc;
		                         g_select_device_ipc = this.getAttribute("sn");
                             if(mcloud_agent.devs.get(g_select_device_ipc).type == "BOX"){
                             	  /*Show the buffer page when click the box to load ipc list*/
                         	      jQuery("#buffer_page").show();
                                mx("#main_page").style.paddingTop="89px"; //134px
                                jQuery("#box_title").show();
                                jQuery("#nav").hide();
                                jQuery("#main_title_box_return").show();
                                jQuery("#main_title_body_left").css({"margin-left":"35%"});
                                jQuery("#main_title_body_left").show();
                                jQuery("#main_title_body_left").html("BOX:"+g_select_device_ipc.toUpperCase());
                                jQuery("#main_title_body_right").show()
                                l_dom_vimtag_device_list[s_innerHTML] = "";
                                ms.send_msg("box_get",{box_sn:g_select_device_ipc,flag:1},{flag:1},ccm_ipcs_get_ack);  
                                g_is_in_box_ipc = 1; 
                                g_return_play_video_page = 3;
                                
                                mx("#enter_setting").onclick=function(){
                                    l_dom_enter_setting_img.click();
                                }
                                mx("#vimtag_filter").onclick=g_vimtag_filter;
                                mx("#vimtag_calendar_choice").onclick=g_vimtag_calendar_choice;                  
                             }else{
                                l_dom_vimtag_device_list[s_innerHTML] = "";
                                mx("#main_page").style.paddingTop="89px";//134
                                jQuery("#nav").hide();
                                jQuery("#box_title").show();
                                jQuery("#main_title_body_right").hide();
                                jQuery("#main_title_body_left").hide();
                                jQuery("#main_title_box_return").show();
                                g_is_in_play_page = 1;
                                g_return_play_video_page = 7;
                                l_home_cntr_obj = new class_home_cntr({parent:l_me_parent,on_event:obj.on_event, offsetwidth:obj.offsetwidth, sn:g_select_device_ipc});
                             }
		                         jQuery("#set_menu_img").hide();
		                         jQuery("#add_devices_menu").hide();
		                         jQuery("#device_list_character").hide();
		                         jQuery("#play_page_menu").show();
		                         jQuery("#set_btn_menu").show();
		                         mx("#refresh_dev_list_btn").style.display = "none";		                         
		                         if(mcloud_agent.devs.get(g_select_device_ipc).type == "BOX"){
                           	   
                                jQuery("#set_btn_menu").show();
                                jQuery("#vimtag_calendar_choice").hide();
                                jQuery("#vimtag_calendar_choice_img").hide();
                                jQuery("#vimtag_filter_calendar_gap").hide();
                                jQuery("#vimtag_filter").hide();
                             
                                jQuery("#video_edit").hide();
                                jQuery("#vimtag_filter_img").hide();
                                jQuery("#setting_messages_gap").hide();
                                jQuery("#enter_messages").hide();
                                jQuery("#enter_messages_img").hide();
                                jQuery("#history_return").hide();
                                jQuery("#play_page_return").hide();
                                jQuery("#enter_setting").show();   //show the box setting choice
                                jQuery("#enter_setting_img").show();
                                jQuery("#return_devices_list").show();
                             }else{
                             	  jQuery("#history_return").hide();
						                    jQuery("#play_page_return").show();
						                    jQuery("#enter_messages").show();
						                    jQuery("#enter_messages_img").show();
						                    jQuery("#setting_messages_gap").show();
						                    jQuery("#enter_setting").show();
						                    jQuery("#enter_setting_img").show();
                             }                         
		                    };                    
		                }
		                //Device is not online event
		                else if(l_dom_device_list_img[i].getAttribute("state") == "offline"){
		                	  l_dom_device_list_img[i].onclick = function(){
		                	  	  jQuery(window).unbind('scroll',device_list_scroll);
		                	      g_select_device_ipc = this.getAttribute("sn");
		                	      mx("#nav").style.display = "none";
		                	      mx("#box_title").style.display = "block";
		                	      mx("#main_title_box_return").style.display = "block";
		                	      mx("#main_title_body_right").style.display = "none";
		                	      g_return_play_video_page = 8;
		                	      l_parent_callback({type:"create_setting_page"});
		                	  };
		                }
		                //Device online but the password is wrong device events
		                else if(l_dom_device_list_img[i].getAttribute("state") == "invalid_auth"){
		                    l_dom_device_list_img[i].onclick = function(){
		                    	  jQuery(window).unbind('scroll',device_list_scroll);
		                    	  //If the ipc connection is using the device ID to sign in, then exit system
		                    	  g_select_device_ipc = this.getAttribute("sn");
		                        if(g_login_status == "ipc"){
		                           system_pop_confirm_box({alert:true,str:mcs_password_expired, callback_func:function(){
		                              jQuery("#system_logout").click();
		                           }});
		                        }else{
		                       l_parent_callback({type:"create",sn:this.getAttribute("sn")});
                               jQuery("#play_page_return").hide();
                               jQuery("#return_devices_list").show();
                               jQuery("#add_devices_menu").hide();
                               jQuery("#device_list_character").hide();
                               jQuery("#setting_wizard_character").show();
                               jQuery("#set_menu_img").hide();
                               mx("#refresh_dev_list_btn").style.display = "none";
		                        }
		                    };
		                }                                
		            }		           
            }
            add_imgs_to_device();
            for(var length=mcloud_agent.devs.list.length,i=0; i<length;i++){
            	  var data = mcloud_agent.devs.list[i];
            	  g_device_list_obj["sn_" + data.sn] = {name:name,type:mcloud_agent.devs.get(data.sn).type, ip:mcloud_agent.devs.get(data.sn).addr, isParent:true,
		                         state:{online:"Online", view:0, recording:0, call:0, playback:0,playback_download:0}};
            }
            function dev_list_show(){
                for(var i=0;i<mcloud_agent.devs.list.length;i++){
                    if(i<=32){
                        l_dom_device_list_img[i].style.display="block";
                        if(l_dom_device_list_img[i].getAttribute("state") == "online") load_imgs(i);
                    }
                }
                device_list_scroll = function(){
		              var scrollTop = jQuery(this).scrollTop();
		        	    var scrollHeight = jQuery(document).height();
		        	    var windowHeight = jQuery(this).height();
		        	    if(scrollTop + windowHeight == scrollHeight){
		        	  	  var block=0;
                    for(var z=0;z<mcloud_agent.devs.list.length;z++){
                      if(l_dom_device_list_img[z]){
                        if(l_dom_device_list_img[z].style.display=="block")block++;
                      }
                    }
                    for(var x=block;x<block+4&&x<mcloud_agent.devs.list.length;x++){
                      l_dom_device_list_img[x].style.display="block";
                      if(l_dom_device_list_img[x].getAttribute("state") == "online") load_imgs(x);
                    }
		        	    }    
		            };     
                jQuery(window).scroll(device_list_scroll);
            }
            function mark_alarm_message(obj){
            	              	  var item=obj.now_item;
//            	  if((l_dom_device_list_img[m].getAttribute("sn")==item.sn)&&(item.type=="device")&&(item.code=="info")){
//            	    
//            	  }
            	  //if(mcloud_agent.devs.get(item.sn).img_ver >= "v3"){
                  for(var m=0,length=l_dom_device_list_img.length;m<length;m++){
                    if(l_dom_device_list_img[m].getAttribute("sn")==item.sn){
                    	 if(!item.p){
                    	   return;
                    	 }else{
                    	   for(var n=0,len=item.p.length;n<len;n++){
                    	     if((item.p[n].n=="s.alert")&&(item.p[n].v=="start")){
                    	     	 msg_tips({msg:mcloud_agent.devs.get(item.sn).nick?(mcloud_agent.devs.get(item.sn).nick+"&nbsp:&nbsp"+mcs_motion_alert):(item.sn+"&nbsp:&nbsp"+mcs_motion_alert),type:"warning",timeout:3000});
                    	   	   l_dom_device_list_img[m].childNodes[0].style.display="block";
                    	   	   return;
                    	     }else if ((item.p[n].n=="s.alert")&&(item.p[n].v=="stop")){ 
                    	   	   l_dom_device_list_img[m].childNodes[0].style.display="none";
                    	   	   return;
                    	     }else if((item.p[n].n=="status")&&(item.p[n].v=="Offline")){
                    	       l_dom_device_list_img[m].setAttribute("state","offline");
                    	       jQuery(".device_list_img")[m].childNodes[1].removeAttribute("style");
                    	       jQuery(".device_list_img")[m].childNodes[1].className = "camera_offline_sign_picture"; 
                    	       l_dom_device_list_img[m].childNodes[0].style.display="none";
                    	       return;
                    	     }
                    	   }
                    	 }
                    	 if(l_dom_device_list_img[m].getAttribute("state")=="offline"){
                    	 	 l_dom_device_list_img[m].setAttribute("state","online");
                    	   var url = mcloud_agent.pic_url_get({sn:item.sn,token:"p2"});
                         jQuery(".device_list_img")[m].childNodes[1].style.background = "url("+url+")";
                    	 }
                       break;
                    }
                  }
//                }else {
//                	return;
//                }
            }
            function remove_event(){
                l_me_parent[s_innerHTML] = "";
            }

            l_me.ctrl = function(obj){
            	  switch(obj.type)
            	  {
            	  	  case "destroy_play_page":
            	  	     {
            	  	     	  l_home_cntr_obj.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	  case "delete_ipc":
            	  	     {
            	  	     	  l_home_cntr_obj.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	  case "update":
            	  	     {
            	  	     	  if((l_home_cntr_obj&&g_is_in_play_page)||g_is_in_playback_page){
            	  	     	  	 l_home_cntr_obj.ctrl(obj);
            	  	     	  	 break;
            	  	     	  }
            	  	     	  break;
            	  	     }
            	  	  case "destroy_box_device_history_page":
            	  	     {
            	  	     	  l_dom_device_messages_page.ctrl(obj);
            	  	     	  ms.send_msg("box_get",{box_sn:g_select_device_ipc,flag:1},{flag:1},ccm_ipcs_get_ack);
            	  	     	  break;
            	  	     }
            	  	  case "destroy_box_device_video_page":
            	  	     {
            	  	     	  l_dom_device_messages_page.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	  case "destroy_box_setting_page":
            	  	     {
            	  	     	  ms.send_msg("box_get",{box_sn:g_select_device_ipc,flag:1},{flag:1},ccm_ipcs_get_ack);
            	  	     	  break;
            	  	     }
            	  	  case "select_video_base_select_date":
            	  	     {
            	  	     	  l_dom_device_messages_page.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	  case "reload_box_video_list":
            	  	     {
            	  	     	  l_dom_device_messages_page.ctrl(obj);
            	  	     	  break;
            	  	     }
            	  	  case "get_alarm_video_list":
            	  	     {
            	  	     	  l_dom_device_messages_page.ctrl(obj);
            	  	     	  break;
            	  	     }
                    case "refresh_dev_list":
                       {
                          add_imgs_to_device();
                          break;
                       }
                    case "refresh_notif_latest":
                       {
                       	  mark_alarm_message(obj.data);
                       	  break;
                       }
                    case "get_image_list":
                       {
                       	  l_dom_device_messages_page.ctrl(obj);
                       	  break;
                       }
                    case "get_video_img":
                       {
                       	  l_dom_device_messages_page.ctrl(obj);
                       	  break;
                       }
            	  }
            }                       
    }
    function vim_create_big_image_preview_div(obj)
    {
        var correct_width, correct_height, prop,
            snapshot_preview_div = mx("#snapshot_preview_div"),
            snapshot_preview_inner = mx("#snapshot_preview_inner"),
            snapshot_preview_content = mx("#snapshot_preview_content");
        correct_width = obj.resolution_w;
        correct_height = obj.resolution_h;
        mx("#guide_shade").style.display="block";
        if(snapshot_preview_content){
            snapshot_preview_div.style.width = correct_width + 13*2 + "px";
            snapshot_preview_div.style.height = correct_height + 13*2 + "px";
            snapshot_preview_div.style.left = ((g_web.offsetWidth - correct_width) / 2) + "px";
            snapshot_preview_div.style.top = ((g_web.offsetHeight - correct_height) / 2)  + "px";
            snapshot_preview_content.src = obj.uri;
        }else{
            var snapshot_preview_close;
            snapshot_preview_div = dom_create_child(page, "div", "snapshot_preview_div");
            snapshot_preview_div[s_style][s_cssText] = "width:" + (correct_width + 13*2) + "px;height:" + (correct_height + 13*2) + "px;"
                + "left:" + ((g_web.offsetWidth - correct_width) / 2) + "px;"
                + "top:"+(g_web.offsetHeight*0.2+(window.pageYOffset?window.pageYOffset:window.document.documentElement.scrollTop))+"px;position:absolute;z-index:999";
            snapshot_preview_inner = dom_create_child(snapshot_preview_div, "div", "snapshot_preview_inner");
            snapshot_preview_inner[s_style][s_cssText] = "width:" + (correct_width + 13) + "px;height:" + (correct_height + 13) + "px;"
                + "left:6px;top:6px;position:relative;";
            snapshot_preview_content = dom_create_child(snapshot_preview_inner, "img", "snapshot_preview_content");
            snapshot_preview_content[s_style][s_cssText] = "width:" + correct_width + "px;height:" + correct_height + "px;"
                + "left:7px;top:7px;position:relative;";
            snapshot_preview_content.src = obj.uri;
            snapshot_preview_close = dom_create_child(snapshot_preview_div, "div", "snapshot_preview_close");		                
            if(g_domain_oems_vimtag){
            	 snapshot_preview_close[s_style][s_cssText] = "position:absolute;right:15px;top:15px;cursor:pointer;";
            }else{
            	 snapshot_preview_close[s_style][s_cssText] = "position:absolute;right:0;top:0;cursor:pointer;";
               background_img_set(snapshot_preview_close, sub_img_close0);
            }
            //Close preview key events
            snapshot_preview_close.onclick = function(){
                snapshot_preview_close.onclick = "";
                snapshot_preview_close.onmouseover = "";
                snapshot_preview_close.onmouseout = "";
                snapshot_preview_div[s_innerHTML] = "";
                page[s_removeChild](snapshot_preview_div);
                snapshot_preview_div = null;
                mx("#guide_shade").style.display="none";
            };
            if(!g_domain_oems_vimtag){
                snapshot_preview_close.onmouseover = function(){
                    background_img_change_pos(this, sub_img_close1);
                };
                snapshot_preview_close.onmouseout = function(){
                    background_img_change_pos(this, sub_img_close0);
                };
            }
        }
    }
    function class_box_device_messages_page(obj){
        var l_me_parent = obj.parent,
            l_dom_vimtag_device_list = mx("#vimtag_device_list_box"),
            l_parent_callback = obj.on_event,
            l_me = this,
            images = new Array(),
            l_box_device_list_img,
            l_dom_playback_obj,
            l_dom_box_playback_video,
            l_storage_dom_info = [],
            start_time = 0,
            end_time = 0,
            video_list_len,
            video_list_info,
            image_list_info,
            image_list_len,
            video_num_len,
            image_num_len,
            l_box_device_list_img,
            l_box_delete_video_img,
            l_box_device_counts_img,
            l_is_image_list=0,
            l_dom_playback_img,
            videosegs,
            img_data;
            
		        function create_video_list(obj){
		        	  video_list_len = obj.videodata.local_cut_video_data.length;
		        	  video_list_info = obj.videodata;
		        	  
                if(g_domain_oems_vimtag){
                  jQuery("#main_title_body_left").hide();
                  jQuery("#main_title_box_return").show();
                }
                
                if(video_list_len>=16){
                	if(!mx("#box_video_list")) mx("#vimtag_device_list_box")[s_innerHTML] = "<div id='box_device_video_list'></div><div id='box_video_list'></div>";
                  get_video_list({num:video_list_len,counts:video_list_len-16});
                }else {
                	if(!mx("#box_video_list")) mx("#vimtag_device_list_box")[s_innerHTML] = "<div id='box_device_video_list'></div><div id='box_video_list'></div>";
                	get_video_list({num:video_list_len,counts:0});
                }
		        }
		        function get_video_list(data){
		        	  video_num_len = data.counts;
		        	  for (var i=data.num-1;i>=data.counts;i--){
		        	  	  var dev_info=video_list_info.local_cut_video_data[i],devs_info=video_list_info.local_video_time_duration[i],len=dev_info.cut_video_data.length,mark_img_class,l_mark_alarm,l_mark_snapshot,
		        	  	  pic_token=dev_info.cut_video_data[0].pic_token,t_duration=devs_info.time_duration,v_time=new Date(dev_info.cut_video_data[0].pos_start).format("yyyy-MM-dd hh:mm:ss");
		        	  	  l_storage_dom_info[i]={
		        	  	    token:dev_info.cut_video_data[0].token,
		        	  	    end_token:dev_info.cut_video_data[len-1].token,
		        	  	    s_time:devs_info.time_start,
		        	  	    e_time:devs_info.time_end
		        	  	  };
		        	  	  if(dev_info.mark_alarm){
		        	  	    if(dev_info.mark_alarm[0]){
		        	  	      l_mark_alarm = dev_info.mark_alarm[0];
		        	  	    }else if(dev_info.mark_alarm[1]){
		        	  	   	  l_mark_snapshot = dev_info.mark_alarm[1];
		        	  	    }
		        	  	  }
		        	  	  if((dev_info.cut_video_data.length==1)&&(dev_info.cut_video_data[0].pos_end-dev_info.cut_video_data[0].pos_start <= 20000)){
		        	  	    if((dev_info.cut_video_data[0].f==1)||(dev_info.cut_video_data[0].f==3)){
                	      mark_img_class = 'alarm_sign_ico';
                	    }else if(dev_info.cut_video_data[0].f==2){
                	      mark_img_class = 'snapshot_sign_ico';
                	    }else {
                	   	  mark_img_class = 'alarm_sign_ico';
                	    }
                	    mx("#box_video_list")[s_innerHTML] +=
                      "<div class='device_list_img' style='position:relative;' num="+i+" img='true'>"
		        	  	 	  +  "<div class='alarm_ico_div'>"
		        	  	    +    "<div class="+mark_img_class+"></div>"
		        	  	    +  "</div>"
		        	  	 	  +  "<div class='camera_sign_picture'>"
		        	  	 	  +    "<img class='video_list_picture' data-original='"+window.location.protocol+"//"+window.location.host+"/ccm/ccm_pic_get.js?dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+pic_token+"&dflag=2"+"' style='width:304px;height:171px;'>"
		        	  	 	  +  "</div>"
		        	  	 	  +  "<div class='device_nick'>"
		        	  	 	  +    "<span>"+ v_time +"</span>"
		        	  	 	  +  "</div>"
		        	  	 	  +"</div>";
		        	  	  }else {
                            g_vimtag_box_video_counts++;
		        	  	    mx("#box_video_list")[s_innerHTML] += 
		        	  	    "<div class='device_list_img' style='position:relative;' num="+i+" img='false'>"
		        	  	    +  "<div class='alarm_ico_div'>"
		        	  	    +    "<div class='alarm_sign_ico' style='display:"+(l_mark_alarm?"block":"none")+"'></div>"
		        	  	    +    "<div class='snapshot_sign_ico' style='display:"+(l_mark_snapshot?"block":"none")+"'></div>"
		        	  	    +  "</div>"
		        	  	    +  "<div class='video_ico_show'></div>"
		        	  	    +  "<div class='video_duration_show'>"+ t_duration +"</div>"
		        	  	    +  "<div class='camera_sign_picture'>"
		        	  	    +    "<img class='video_list_picture' data-original='"+ window.location.protocol + "//"+window.location.host+"/ccm/ccm_pic_get.js?dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+pic_token+"&dflag=2"+"' style='width:304px;height:171px;'>"
		        	  	    +  "</div>"
		        	  	    +  "<div class='device_nick'>"
		        	  	    +    "<span>"+ v_time +"</span>"
                            +  "<div class='video_delete' style='float:right;background-image:url(../imgs/video_delete.png);width:20px;height:19px;margin-top:6px;margin-right:4px;display:none'>"
                            + "</div>"
		        	  	    +  "</div>"
		        	  	    +"</div>";
		        	  	  }
		        	  }
              l_box_device_counts_img = mx(".device_list_img");
		        	
               // delete history record of box
                mx("#video_edit").onclick=function(){
                     g_video_edit_click = true;
                     jQuery(".video_delete").css("display","block");
                }

                l_box_device_list_img = mx(".camera_sign_picture");
                l_box_delete_video_img = mx(".video_delete");

                function record_del_ack(msg,ref)
                {
                    ref.parent.style.display = "none";
                }

		        	  for(var r=0;r< l_box_device_counts_img.length;r++)
		        	  {
		        	  	 l_box_device_list_img[r].onclick = function(){
		        	  	 	  var num=this.parentNode.getAttribute("num");
		        	  	 	  if(this.parentNode.getAttribute("img")=="false"){
		        	  	 	    jQuery(window).unbind('scroll',video_list_scroll);
		        	  	 	    jQuery("#vimtag_calendar_choice").hide();
                        jQuery(".ui-datepicker-trigger").css("display","none"); /*hide the calendar*/
                        jQuery("#vimtag_filter_calendar_gap").hide();
                        jQuery("#vimtag_filter").hide();
                        jQuery("#vimtag_filter_img").hide();	
                        g_return_play_video_page = 5; 
                        g_is_in_playback_page = 1;	        	  	 	  
		        	  	      g_now_page = "playback";		        	  	    
                        jQuery("#vimtag_device_list_box").hide();  /*hide the page of video list page*/
                        l_dom_box_playback_video = new dom_create_child(mx("#vimtag_cntr_box"), "div", "box_playback_video");
                        l_dom_playback_obj = new class_home_cntr({parent:l_dom_box_playback_video, on_event:obj.on_event,token:l_storage_dom_info[num].token,video_data:video_list_info.local_cut_video_data[num],end_token:l_storage_dom_info[num].end_token,s_time:l_storage_dom_info[num].s_time,e_time:l_storage_dom_info[num].e_time,node_sn:g_select_box_ipc, playback:1});
                        jQuery("#resolute_choice").hide();
                      }else {
                      	var uri=(!!window.ActiveXObject||"ActiveXObject" in window)?this.childNodes[0].href.replace("_p3_","_p0_"):this.childNodes[0].currentSrc.replace("_p3_","_p0_");
		        	  	 		  vim_create_big_image_preview_div({resolution_w:640, resolution_h:360, uri:uri});
                      }
		        	  	 };

                   // delete box history record
                    if(g_vimtag_box_video_counts!=0){
                    for(var k=0;k<g_vimtag_box_video_counts;k++){ 
                    l_box_delete_video_img[k].onclick=function(){
                      var num =  this.parentNode.parentNode.getAttribute("num");
                      var s_time=video_list_info.local_cut_video_data[num].cut_video_data[0].pos_start,e_time = video_list_info.local_cut_video_data[num].cut_video_data[video_list_info.local_cut_video_data[num].cut_video_data.length-1].pos_end;
                      var this_parent_parent = this.parentNode.parentNode;
                      system_pop_confirm_box({str:mcs_delete + "?",callback_func:function(){
                        ms.send_msg("box_set",{box_sn:g_select_device_ipc,dev_sn:g_select_box_ipc,cmd:"erase",start_time:s_time,end_time:e_time},{box_sn:g_select_device_ipc,dev_sn:g_select_box_ipc,parent:this_parent_parent},record_del_ack);
                      }});
                    }
                    }  
                   }
		        	  }
		            /*To get the picture from the servers when slide the scroll bar*/
		            jQuery("img.video_list_picture").lazyload({event:"scrollstop"});                      
                jQuery("#buffer_page").hide();
                jQuery(window).scroll(video_list_scroll);
		        }
		        function get_image_list(data){
		        	  image_num_len = data.counts;
                if(g_domain_oems_vimtag){
                  jQuery("#main_title_body_left").hide();
                  jQuery("#main_title_box_return").show();
                }
		        	  for(var n=data.num-1;n>= data.counts;n--){
		        	  	  var pic_token=image_list_info[n].pic_token,v_time=new Date(image_list_info[n].pos_start).format("yyyy-MM-dd hh:mm:ss"),mark_class;
		        	  	  if((image_list_info[n].f==1)||(image_list_info[n].f==3)){
                	     mark_class = 'alarm_sign';
                	  }else if(image_list_info[n].f==2){
                	     mark_class = 'snapshot_sign';
                	  }else {
                	     mark_class = 'alarm_sign';
                	  }
		        	  	  mx("#box_video_list")[s_innerHTML] +=
		        	  	  "<div class='device_list_img' style='position:relative;' num="+n+">"
		        	  	  +  "<div class="+mark_class+"></div>"
		        	  	 	+  "<div class='camera_sign_picture'>"
		        	  	 	+    "<img class='video_list_picture' data-original='"+window.location.protocol+"//"+window.location.host+"/ccm/ccm_pic_get.js?dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+pic_token+"&dflag=2"+"' style='width:304px;height:171px;'>"
		        	  	 	+  "</div>"
		        	  	 	+  "<div class='device_nick'>"
		        	  	 	+    "<span>"+ v_time +"</span>"
		        	  	 	+  "</div>"
		        	  	 	+"</div>";
		        	  }
                l_dom_playback_img = mx(".device_list_img");
		        	  
		        	  for(var m=0;m< l_dom_playback_img.length;m++){
		        	  	 l_dom_playback_img[m].onclick = function(){
		        	  	 	  var num=this.getAttribute("num");
		        	  	 	  var uri=(!!window.ActiveXObject||"ActiveXObject" in window)?this.childNodes[1].childNodes[0].href.replace("_p3_","_p0_"):this.childNodes[1].childNodes[0].currentSrc.replace("_p3_","_p0_");
		        	  	 		vim_create_big_image_preview_div({resolution_w:640, resolution_h:360, uri:uri});                                        
		        	  	 };
		        	  }
		        	  /*To get the picture from the servers when slide the scroll bar*/
		        	  jQuery("img.video_list_picture").lazyload({event:"scrollstop"});                      
                jQuery("#buffer_page").hide();
                jQuery(window).scroll(video_list_scroll);        		
		        }
		        var video_list_scroll = function(){
		            var scrollTop = jQuery(this).scrollTop();
		        	  var scrollHeight = jQuery(document).height();
		        	  var windowHeight = jQuery(this).height();
		        	  if(scrollTop + windowHeight == scrollHeight){
		        	  	if(l_is_image_list){
		        	  	  if(image_num_len==0) return;
		        	  	  if(image_num_len>=12){
		        	  	    get_image_list({num:image_num_len,counts:image_num_len-12});
		        	  	  }else {
		        	  	  	get_image_list({num:image_num_len,counts:0});
		        	  	  }
		        	  	}else{
		        	      if(video_num_len==0) return;
		        	      if(video_num_len>=12){
		        	        get_video_list({num:video_num_len,counts:video_num_len-12});
		        	      }else {
		        	        get_video_list({num:video_num_len,counts:0});
		        	      } 	
		        	  	}
		        	  }
                     
                      if(g_video_edit_click==true){
                       jQuery(".video_delete").css("display","block");
                      }    
		        }
        		/*to get the video clip*/
            function ccm_segs_get_ack(msg,ref){
			          if( msg && !msg.result && (msg.segs_sdc||msg.segs)){
			          	 videosegs = cutVideo({msg:msg,base_start_time:ref.base_start_time,dev_sn:ref.dev_sn});
                   var videoData = draw_data_rect({videosegs:videosegs});
			             //var videoData = cutVideo({msg:msg,base_start_time:ref.base_start_time,dev_sn:ref.dev_sn});
			             if(!videoData.local_cut_video_data.length){
			             	  noHistoryVideoData({type:"boxHistoryList"});
			             }else{
                              g_vimtag_box_video_counts =0;
			             	  create_video_list({videodata:videoData});
			             }
			          }else{
			          	 noHistoryVideoData({type:"boxHistoryList"});
			          }
			      }
			      /*to solve the IE and firefox can't support new Date()*/
			      function getDateForStringDate(strDate){
			      		var s = strDate.split(".");
			      		return new Date(s[0],s[1]-1,s[2],s[3],s[4],s[5]);
			      }
            function ccm_calendar_data_ack(msg,ref){
                if( msg && !msg.result&&msg.date_infos){
                    var l_date_infos=[];
                    var l_local_date_infos=[];
                    var date_infos_time=[];
                    var l_date_infos=msg.date_infos;
                    for(var i=0;i<l_date_infos.length;i++){
                        var date_mis = new Date(l_date_infos[i].date * 1000).format("yyyy.MM.dd.00.00.00");
                        if(i>0&& date_mis != l_local_date_infos[l_local_date_infos.length-1]){
                            l_local_date_infos[l_local_date_infos.length]= date_mis;
                            date_infos_time[date_infos_time.length]= (getDateForStringDate(l_local_date_infos[l_local_date_infos.length-1])).getTime();
                        }else if (i==0){
                            l_local_date_infos[i]= date_mis;
                            date_infos_time[i]= (getDateForStringDate(l_local_date_infos[i])).getTime();
                        }                        
                    }
                    jQuery("#vimtag_calendar_input").datepicker({showOn:'button', buttonImageOnly:true,date_infos:date_infos_time, onSelect:function(dateText, inst){l_me.ctrl({type:"select_video_base_select_date", date:mx("#vimtag_calendar_input").value})}});
                    start_time = (getDateForStringDate(l_local_date_infos[l_local_date_infos.length-1])).getTime();

                    end_time = start_time+60*60*24*1000;
                		ms.send_msg("box_get",{box_sn:ref.box_sn,dev_sn:ref.dev_sn,flag:8,start_time:start_time,end_time:end_time},{box_sn:ref.box_sn,dev_sn:ref.dev_sn,flag:8,base_start_time:start_time},ccm_segs_get_ack);
                }else {
                	  noHistoryVideoData({type:"boxHistoryList"});
                }                                
            }
            l_me.ctrl = function(obj){
                switch(obj.type){
                    case "destroy_box_device_video_page":
                      {
                    	  jQuery(window).bind('scroll',video_list_scroll);
                    	  if(g_is_play_back||g_is_play_back_download) l_dom_playback_obj.ctrl({type:"destroy_playback_vimtag"});
                    	  l_dom_box_playback_video.parentNode.removeChild(l_dom_box_playback_video); /*destroy the box_playback_video page*/
                    	  jQuery("#vimtag_device_list_box").show();                                  /*show the page of video list page*/
                    	  break;
                      }
                    case "select_video_base_select_date":
                      {
                    	  mx("#vimtag_device_list_box")[s_innerHTML] = "";                        
                    	  l_me.ctrl({type:"destroy"});
                    	  start_time = (new Date(obj.date)).getTime();
                    	  end_time = start_time+60*60*24*1000;
                    	  ms.send_msg("box_get",{box_sn:g_select_device_ipc, dev_sn:g_select_box_ipc, flag:8,start_time:start_time,end_time:end_time},{box_sn:g_select_device_ipc,dev_sn:g_select_box_ipc,flag:8,base_start_time:start_time},ccm_segs_get_ack);
                    	  break;
                      }
                    case "reload_box_video_list":
                      {
                      	l_is_image_list = 0;
                      	if(mx("#box_video_list")) mx("#box_video_list").innerHTML="";
		                    var videoData = draw_data_rect({videosegs:videosegs,type:"all"});
		                    if(!videoData.local_cut_video_data.length){
			              	    noHistoryVideoData({type:"boxHistoryList"});
			                  }else{
                                g_vimtag_box_video_counts =0;
			              	    create_video_list({videodata:videoData});
			                  }	
                    	  break;
                      }
                    case "get_alarm_video_list":
                      {
                    	  if(mx("#box_video_list")) mx("#box_video_list").innerHTML="";
		                    var videoData = draw_data_rect({videosegs:videosegs,type:obj.data});
		                    if(!videoData.local_cut_video_data.length){
			              	    noHistoryVideoData({type:"boxHistoryList"});
			                  }else{
                                g_vimtag_box_video_counts =0;
			              	    create_video_list({videodata:videoData});
			                  }	
                    	  break;
                      }
                    case "get_image_list":
                      {
                    	  l_is_image_list = 1;
                    	  if(mx("#box_video_list")) mx("#box_video_list").innerHTML="";
                    	  /*To get the images, 0 mean all, 1 mean alarm, 2 mean snapshot*/
		                    if(obj.data==0){ 
		                  	  img_data = get_snapshot_pic({videosegs:videosegs});
		                  	  image_list_info = img_data.imgs_data;
		                    }else if(obj.data==1){
		                  	  image_list_info = img_data.alarm_imgs_data;
		                    }else if(obj.data==2){
		                  	  image_list_info = img_data.snapshot_imgs_data;
		                    }
		                    image_list_len = image_list_info.length;
                    	  if(!image_list_len){
                    	 	  noHistoryVideoData({type:"boxHistoryList"});
                    	 	  return;
                    	  } 
                    	  if(image_list_len>=16){
                    	    get_image_list({num:image_list_len,counts:image_list_len-16});
                    	  }else {
                    	 	  get_image_list({num:image_list_len,counts:0});
                    	  }
                    	  break;
                      }
                    case "destroy_box_device_history_page":
                      {
                    	  jQuery(window).unbind('scroll',video_list_scroll);
                    	  break;
                      }
                    case "destroy":
                      {                    
                        break;
                      }
                    case "get_video_img":
                      {
                      	l_is_image_list = 0;
                      	if(mx("#box_video_list")) mx("#box_video_list").innerHTML="";
		                  	var video_img_data = get_video_snapshot({videosegs:videosegs,type:obj.data});
		                  	if(!video_img_data.local_cut_video_data.length){
			              	    noHistoryVideoData({type:"boxHistoryList"});
			                  }else{
                                g_vimtag_box_video_counts =0;
			              	    create_video_list({videodata:video_img_data});
			                  }	
		                  	break;
                      }
                }
            }
            ms.send_msg("box_get",{box_sn:g_select_device_ipc, dev_sn:obj.box_ipc_sn, flag:2,start_time:0, end_time:0},{box_sn:g_select_device_ipc,dev_sn:obj.box_ipc_sn,flag:2,base_start_time:obj.start_time},ccm_calendar_data_ack);            
    }
    function class_device_messages_page(obj){
    	  var l_me_parent = obj.parent,
    	      l_parent_callback = obj.on_event,
    	      l_me = this,
    	      g_click_time,
		        g_shown_pic,
		        g_last_time,
		        g_history_message = new Array(),
		        g_first_time,
		        g_history_url = new Array(),
		        g_big_img_url = new Array(),
		        g_play_back_url,
		        g_weekArray = new Array(mcs_sunday, mcs_monday, mcs_tuesday, mcs_wednesday,mcs_thursday, mcs_friday, mcs_saturday),
		        l_dom_history_main,
		        l_dom_snapshot_pic,
		        l_view_page_obj,
            l_dom_history_definition,
		        l_dom_playback_obj,
		        l_dom_ipc_history_list,
            images = new Array(),
            cut_video_time = 0,
            l_box_device_list_img,
            l_dom_playback_obj,
            l_dom_box_playback_video,
            l_image_list,
            start_time = 0,
            end_time = 0,
            video_data_info,
            video_data_len,
            img_list_len,
            img_num,
            l_img_list=0,
            dev_num,
            l_box_device_list_img,
            l_box_delete_video_img,
            l_box_device_counts_img,
            storage_video_info=[],
            videosegs,
            video_img_data,
            img_data;
              
            l_dom_history_definition = dom_create_child(l_me_parent, "div", "vimtag_device_list_box")
    	      l_dom_history_main = dom_create_child(l_dom_history_definition, "div", "history_main");
    	      l_dom_ipc_history_list = dom_create_child(l_dom_history_definition, "div", "ipc_history_list");
    	      
		    	  function create_history_main(){
		            if((!g_is_in_playback_page)&&(mx("#vimtag_device_list_box"))) mx("#vimtag_device_list_box").style.marginLeft = g_distance_to_edge + "px";
		            var dev_img_ver=mcloud_agent.devs.get(g_select_device_ipc).img_ver;
		            var dev_type=mcloud_agent.devs.get(g_select_device_ipc).type;
                if(dev_img_ver.substring(0,2)>="v2"){                      
                    if(g_select_device_ipc && dev_type != "BOX"){
  	                    l_dom_history_main[s_innerHTML]="";
  	                    jQuery("#vimtag_calendar_choice").show();
                        jQuery(".ui-datepicker-trigger").css("display","block");
                        jQuery("#vimtag_filter_calendar_gap").show();
                      
                        mx("#video_edit").style.display="block";
                        jQuery("#history_main").hide();
                        mx("#vimtag_filter").style.display="block";
                        mx("#enter_setting").style.display="none";
                        mx("#main_title_body_right").style.display="block";
  			        	  		ms.send_msg("box_get",{box_sn:g_select_device_ipc, dev_sn:g_select_device_ipc, flag:2,start_time:0, end_time:0},{box_sn:g_select_device_ipc,dev_sn:g_select_device_ipc,flag:2,base_start_time:0},ccm_calendar_data_ack); 
                    }                    
                }else{
                    jQuery("#ipc_history_list").hide();
                    mcloud_agent.msgs_get({sn:g_select_device_ipc,start:l_start,counts:"-30",filter:""},null, get_device_information);
                }                  		            
		        }
        		function ccm_segs_get(obj){                
                var end_time=obj.start_time+60*60*24*1000;
                var flag=8;
                ms.send_msg("box_get",{box_sn:obj.box_sn,dev_sn:obj.dev_sn,flag:flag,start_time:obj.start_time,end_time:end_time},{box_sn:obj.box_sn,dev_sn:obj.dev_sn,flag:flag,base_start_time:obj.start_time},ccm_segs_get_ack);
            }
            function ccm_segs_get_ack(msg,ref){
            	  if(mx("#ipc_history_list")){
            	     mx("#ipc_history_list")[s_innerHTML]="";
            	  }
                if( msg && !msg.result && (msg.segs_sdc||msg.segs)){
                    videosegs = cutVideo({msg:msg,base_start_time:ref.base_start_time,dev_sn:ref.dev_sn});
                    var videoData = draw_data_rect({videosegs:videosegs});
			              if(!videoData.local_cut_video_data.length){
			              	 noHistoryVideoData({type:"ipcHistoryList"});
			              }else{
                             g_vimtag_ipc_video_counts =0;
			              	 create_video_list({videodata:videoData});
			              }			              
                }else {
                	  noHistoryVideoData({type:"ipcHistoryList"});
                }               
            }    				
            function create_video_list(obj){            	 
                video_data_len = obj.videodata.local_cut_video_data.length;
                video_data_info = obj.videodata;
		        	  if(video_data_len >= 16){
		        	    create_img_list({num:video_data_len,counts:video_data_len-16}); 
		        	  }else {
                        g_vimtag_ipc_video_counts =0;
		        	  	create_img_list({num:video_data_len,counts:0});
		        	  }
            }
            function create_img_list(data){            	
	        	  	dev_num = data.counts;
		        	  for(var i=data.num-1;i>= data.counts;i--){
		        	  	 var dev_info=video_data_info.local_cut_video_data[i],devs_info=video_data_info.local_video_time_duration[i],len=dev_info.cut_video_data.length,mark_img_class,l_mark_alarm,l_mark_snapshot,
                   pic_token=dev_info.cut_video_data[0].pic_token,t_duration=devs_info.time_duration,v_time=new Date(dev_info.cut_video_data[0].pos_start).format("yyyy-MM-dd hh:mm:ss");
		        	  	  
		        	  	 storage_video_info[i]={
		        	  	   token:dev_info.cut_video_data[0].token,
		        	  	   end_token:dev_info.cut_video_data[len-1].token,
		        	  	   s_time:devs_info.time_start,
		        	  	   e_time:devs_info.time_end
		        	  	 };
		        	  	 if(dev_info.mark_alarm){
		        	  	   if(dev_info.mark_alarm[0]){
		        	  	     l_mark_alarm = dev_info.mark_alarm[0];
		        	  	   }else if(dev_info.mark_alarm[1]){
		        	  	   	 l_mark_snapshot = dev_info.mark_alarm[1];
		        	  	   }
		        	  	 }
                   if((dev_info.cut_video_data.length==1)&&(dev_info.cut_video_data[0].pos_end-dev_info.cut_video_data[0].pos_start <= 20000)){
                     if((dev_info.cut_video_data[0].f==1)||(dev_info.cut_video_data[0].f==3)){
                	     mark_img_class = 'alarm_sign_ico';
                	   }else if(dev_info.cut_video_data[0].f==2){
                	     mark_img_class = 'snapshot_sign_ico';
                	   }else {
                	   	 mark_img_class = 'alarm_sign_ico';
                	   }
                     l_dom_ipc_history_list[s_innerHTML] +=
                     "<div class='device_list_img' style='position:relative;' num="+i+" img='true'>"
		        	  	 	 +  "<div class='alarm_ico_div'>"
		        	  	   +    "<div class="+mark_img_class+"></div>"
		        	  	   +  "</div>"
		        	  	 	 +  "<div class='camera_sign_picture'>"
		        	  	 	 +    "<img class='video_list_picture' data-original='"+window.location.protocol+"//"+window.location.host+"/ccm/ccm_pic_get.js?dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+pic_token+"&dflag=2"+"' style='width:304px;height:171px;'>"
		        	  	 	 +  "</div>"
		        	  	 	 +  "<div class='device_nick'>"
		        	  	 	 +    "<span>"+ v_time +"</span>"
		        	  	 	 +  "</div>"
		        	  	 	 +"</div>";
                   }else {
                           g_vimtag_ipc_video_counts++;
		        	  	   l_dom_ipc_history_list[s_innerHTML] += 
		        	  	   "<div class='device_list_img' style='position:relative;' num="+i+" img='false'>"
		        	  	   +  "<div class='alarm_ico_div'>"
		        	  	   +    "<div class='alarm_sign_ico' style='display:"+(l_mark_alarm?"block":"none")+"'></div>"
		        	  	   +    "<div class='snapshot_sign_ico' style='display:"+(l_mark_snapshot?"block":"none")+"'></div>"
		        	  	   +  "</div>"
		        	  	 	 +  "<div class='video_ico_show'></div>"
		        	  	 	 +  "<div class='video_duration_show'>"+ t_duration +"</div>"
		        	  	 	 +  "<div class='camera_sign_picture'>"
		        	  	 	 +    "<img class='video_list_picture' data-original='"+ window.location.protocol + "//"+window.location.host+"/ccm/ccm_pic_get.js?dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+pic_token+"&dflag=2"+"' style='width:304px;height:171px;' num="+i+">"
		        	  	 	 +  "</div>"
		        	  	 	 +  "<div class='device_nick'>"
		        	  	 	 +    "<span>"+ v_time +"</span>"
                             +  "<div class='video_delete' style='float:right;background-image:url(../imgs/video_delete.png);width:20px;height:19px;margin-top:6px;margin-right:4px;display:none'>"
                             + "</div>"
		        	  	 	 +  "</div>"
		        	  	 	 +"</div>";
		        	  	 }
		            }
                l_box_device_counts_img = mx(".device_list_img",l_dom_ipc_history_list);
                l_box_device_list_img = mx(".camera_sign_picture",l_dom_ipc_history_list);
                l_box_delete_video_img = mx(".video_delete");

                mx("#video_edit").onclick=function(){
                     g_video_edit_click = true; 
                     jQuery(".video_delete").css("display","block");
                }

                function record_del_ack(msg,ref)
                {
                    ref.parent.style.display = "none";
                } 
		        	  for(var r=0;r< l_box_device_counts_img.length;r++){
		        	  	 l_box_device_list_img[r].onclick = function(){
                              var num=this.parentNode.getAttribute("num");
		        	  	 	  if(this.parentNode.getAttribute("img")=="false"){
		        	  	 	    jQuery(window).unbind('scroll',video_list_scroll);
		        	  	 		  jQuery("#vimtag_calendar_choice").hide();
		                    jQuery(".ui-datepicker-trigger").css("display","none"); /*hide the calendar*/
		                    jQuery("#vimtag_filter_calendar_gap").hide();
		                    jQuery("#vimtag_filter").hide();
		                    jQuery("#vimtag_filter_img").hide();	
		                    jQuery("#vimtag_device_list_box").hide();	        	  	 	  
				        	  	  g_now_page = "playback";		        	  	    
				        	  	  g_return_play_video_page = 0; //When in the video player is 0
		                    g_is_in_playback_page = 1;
		                    l_dom_playback_obj = new class_home_cntr({parent:l_me_parent,on_event:obj.on_event, node_sn:g_select_device_ipc,video_data:video_data_info.local_cut_video_data[num],token:storage_video_info[num].token,end_token:storage_video_info[num].end_token,s_time:storage_video_info[num].s_time,e_time:storage_video_info[num].e_time, playback:1});
                        jQuery("#resolute_choice").hide(); 
                      }else {
                      	var uri=(!!window.ActiveXObject||"ActiveXObject" in window)?this.childNodes[0].href.replace("_p3_","_p0_"):this.childNodes[0].currentSrc.replace("_p3_","_p0_");
		        	  	 			vim_create_big_image_preview_div({resolution_w:640, resolution_h:360, uri:uri});
                        jQuery("#resolute_choice").hide();
                      }	  	 	  
		        	  	 };

                   
                 if(g_vimtag_ipc_video_counts!=0){
                    for(var k=0;k<g_vimtag_ipc_video_counts;k++){
                    l_box_delete_video_img[k].onclick=function(){
                    var num =  this.parentNode.parentNode.getAttribute("num");
                    var s_time=video_data_info.local_cut_video_data[num].cut_video_data[0].pos_start,e_time = video_data_info.local_cut_video_data[num].cut_video_data[video_data_info.local_cut_video_data[num].cut_video_data.length-1].pos_end;
                    var this_parent_parent = this.parentNode.parentNode;
                    system_pop_confirm_box({str:mcs_delete + "?",callback_func:function(){
                    ms.send_msg("box_set",{box_sn:g_select_device_ipc,dev_sn:g_select_device_ipc,cmd:"erase",start_time:s_time,end_time:e_time},{box_sn:g_select_device_ipc,dev_sn:g_select_box_ipc,parent:this_parent_parent},record_del_ack);
                   }});
                    }
                    }
                   }
		        	  }
		        	  /*To get the picture from the servers when slide the scroll bar*/
		        	  jQuery("img.video_list_picture").lazyload({event:"scrollstop"});
		        	  jQuery("#buffer_page").hide();
		        	  jQuery(window).scroll(video_list_scroll);
		        }
		        var video_list_scroll = function(){
		            var scrollTop = jQuery(this).scrollTop();
		        	  var scrollHeight = jQuery(document).height();
		        	  var windowHeight = jQuery(this).height();
		        	  if(scrollTop + windowHeight == scrollHeight){
		        	  	if(l_img_list){
		        	  	  if(img_num==0) return;
		        	  	  if(img_num>=12){
		        	  	    get_image_list({num:img_num,counts:img_num-12});
		        	  	  }else {
		        	  	  	get_image_list({num:img_num,counts:0});
		        	  	  }
		        	  	}else {
		        	      if(dev_num==0) return;
		        	      if(dev_num>=12){
		        	        create_img_list({num:dev_num,counts:dev_num-12});
		        	      }else {
		        	        create_img_list({num:dev_num,counts:0});
		        	      } 	
		        	  	}
		        	  }
                    
                      if(g_video_edit_click==true){
                        jQuery(".video_delete").css("display","block");
                      }    
		        }
            /*to solve the IE and firefox can't support new Date()*/
    	      function getDateForStringDate(strDate){
    	      		var s = strDate.split(".");
    	      		return new Date(s[0],s[1]-1,s[2],s[3],s[4],s[5]);
    	      }
            function ccm_calendar_data_ack(msg,ref){
                if( msg && !msg.result&&msg.date_infos){
                    var l_date_infos=[];
                    var l_local_date_infos=[];
                    var date_infos_time=[];
                    var l_date_infos=msg.date_infos;
                    for(var i=0;i<l_date_infos.length;i++){
                        var date_mis = new Date(l_date_infos[i].date * 1000).format("yyyy.MM.dd.00.00.00");
                        if(i>0&& date_mis != l_local_date_infos[l_local_date_infos.length-1] && (l_date_infos[i].date*1000) >date_infos_time[date_infos_time.length-1]){
                            l_local_date_infos[l_local_date_infos.length]= date_mis;
                            date_infos_time[date_infos_time.length]= (getDateForStringDate(l_local_date_infos[l_local_date_infos.length-1])).getTime();
                        }
                        else if(i==0){
                            l_local_date_infos[i]= date_mis;
                            date_infos_time[i]= (getDateForStringDate(l_local_date_infos[i])).getTime();
                        }                        
                    }
                    jQuery("#vimtag_calendar_input").datepicker({showOn:'button', buttonImageOnly:true,date_infos:date_infos_time, onSelect:function(dateText, inst){l_me.ctrl({type:"select_video_base_select_date", date:mx("#vimtag_calendar_input").value})}});
                    start_time = (getDateForStringDate(l_local_date_infos[l_local_date_infos.length-1])).getTime();

                    end_time = start_time+60*60*24*1000;
                		ms.send_msg("box_get",{box_sn:ref.box_sn,dev_sn:ref.dev_sn,flag:8,start_time:start_time,end_time:end_time},{box_sn:ref.box_sn,dev_sn:ref.dev_sn,flag:8,base_start_time:start_time},ccm_segs_get_ack);
                }else{
									  noHistoryVideoData({type:"ipcHistoryList"});
                }               
            }
            function get_device_information(msg,ref){
                if(msg.result==""){
                    l_length = (msg.messages)?msg.messages.length:0;
                    l_start = (msg.messages)?msg.messages[l_length-1].msg_id:"0X7fffffff";
                    var i = 0,load_images = new Array();
                    for(var i = 0;i<l_length;i++){
                        l_pic_id[i + 30 * g_click_time] = msg.messages[i];
                        g_history_message[i + 30 * g_click_time] = msg.messages[i];
                        l_message[i + 30 * g_click_time] = msg.messages[i].p;
                        msg.messages[i].p = msg.messages[i].p?msg.messages[i].p:" ";
                        var now_params = msg.messages[i].p;
                        if(!g_last_time){
                        	g_first_time = new Date(msg.messages[i].date * 1000).format("yyyy-MM-dd");
                        }
                        if(new Date(msg.messages[i].date * 1000).format("yyyy-MM-dd") != g_last_time){
                            g_last_time = new Date(msg.messages[i].date * 1000).format("yyyy-MM-dd");
                            var time = document.createElement("div");
                            time.setAttribute("class", "time_div");
                            time.innerHTML = g_last_time + "  " + g_weekArray[new Date(msg.messages[i].date * 1000).getDay()];
                            jQuery("#history_main")[0].appendChild(time);
                            jQuery(time).css("clear", "both");
                        }
                        var history_img = document.createElement("div");
                        history_img.setAttribute("class", "img_box");
                        var img = document.createElement("img");
                        img.setAttribute("class", "video_and_photo");
                        img.setAttribute("id", msg.messages[i].msg_id);
                        img.setAttribute("name", msg.messages[i].type);
                        history_img.appendChild(img);
                        jQuery("#history_main")[0].appendChild(history_img);
                        for (var j = 0; j < now_params.length; j++){
                            if (now_params[j].n == "img_thumb_token" && now_params[j].v != 0 && now_params[j].v != ""){
                                var pic_url = window.location.protocol + "//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid=" + mcloud_agent.create_nid() + "&dsess_sn=" + g_select_device_ipc + "&dtoken=" + now_params[j].v;
                                load_images[i+g_click_time*30] = new Image();
                                load_images[i+g_click_time*30].src = pic_url;
                                load_images[i+g_click_time*30].onload = (function(){
	                                	var dom_image = jQuery(".video_and_photo");
	                                	if(dom_image.length > 0){
	                                      for(var j = 0;j < g_history_message.length;j++){
	                                          if(this == load_images[j]){
	                                              break;
	                                          }
	                                      }
	                                      dom_image[j].src = this.src;
	                                 	}
                                });
                                g_history_url[i + 30 * g_click_time] = pic_url;
                            }
                            else if(now_params[j].n == "img_token" && now_params[j].v != 0 && now_params[j].v != ""){
                            	g_big_img_url[i + 30 * g_click_time]= window.location.protocol + "//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid=" + mcloud_agent.create_nid() + "&dsess_sn=" + g_select_device_ipc + "&dtoken=" + now_params[j].v;
                            }
                        }
                        var mark = document.createElement("div");
                        mark.setAttribute("class", "mark_of_pic");
                        mark.innerHTML = (msg.messages[i].type == "snapshot")?mcs_snapshot:(msg.messages[i].type == "record")?mcs_record:mcs_motion_alert;
                        history_img.appendChild(mark);
                        if(i == l_length - 1){
                            g_shown_pic  += l_length;
                            if (msg.total > g_shown_pic&&msg.total>30){
                                var more_pic = document.createElement("input");
                                more_pic.setAttribute("type", "button");
                                more_pic.setAttribute("id", "more_pic");
                                more_pic.setAttribute("value", mcs_show_more);
                                jQuery("#history_main")[0].appendChild(more_pic);
                            }
                            add_history_event();
                        }
                        g_shown_history = true;
                    }
                    if(!msg.messages){
                        jQuery("#history_main")[0].innerHTML = mcs_no_history;
                    }
                }
                else if(msg.result = "InvalidSession"){
                    create_history_main();
                }
                else{
                    msg_tips({msg:msg.result, type:"error", timeout:3000});
                }
                jQuery("#buffer_page").hide();
            };
            function get_image_list(data){
            	  img_num = data.counts;
                if(!l_image_list){
                    noHistoryVideoData({type:"ipcHistoryList"});  
                }else {
                	  var n;
                	  for(n=data.num-1;n>=data.counts;n--){
                	    var v_time=new Date(l_image_list[n].pos_start).format("yyyy-MM-dd hh:mm:ss"),mark_class,
                	    pic_token=l_image_list[n].pic_token;
                	    if((l_image_list[n].f==1)||(l_image_list[n].f==3)){
                	      mark_class = 'alarm_sign';
                	    }else if(l_image_list[n].f==2){
                	      mark_class = 'snapshot_sign';
                	    }else {
                	    	mark_class = 'alarm_sign';
                	    }
                	    l_dom_ipc_history_list[s_innerHTML] += 
		        	  	 		"<div class='device_list_img' style='position:relative;' num="+n+">"
		        	  	 		+  "<div class="+mark_class+"></div>"
		        	  	 		+  "<div class='camera_sign_picture'>"
		        	  	 		+    "<img class='video_list_picture' data-original='"+window.location.protocol+"//"+window.location.host+"/ccm/ccm_pic_get.js?dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+pic_token+"&dflag=2"+"' style='width:304px;height:171px;'>"
		        	  	 		+  "</div>"
		        	  	 		+  "<div class='device_nick'>"
		        	  	 		+    "<span>"+ v_time +"</span>"
		        	  	 		+  "</div>"
		        	  	 		+"</div>";  
                	  }
                	  var l_ipc_image_list = mx(".device_list_img",l_dom_ipc_history_list);
		        	  
		        	      for(var k=0;k< l_ipc_image_list.length;k++){
		        	  	    l_ipc_image_list[k].onclick = function(){
		        	  	 	    var num=this.getAttribute("num");
		        	  	 			var uri=(!!window.ActiveXObject||"ActiveXObject" in window)?this.childNodes[1].childNodes[0].href.replace("_p3_","_p0_"):this.childNodes[1].childNodes[0].currentSrc.replace("_p3_","_p0_");
		        	  	 			vim_create_big_image_preview_div({resolution_w:640, resolution_h:360, uri:uri});
                        jQuery("#resolute_choice").hide(); 	  	 	  
		        	  	    };
		        	      }
		        	      /*To get the picture from the servers when slide the scroll bar*/
		        	      jQuery("img.video_list_picture").lazyload({event:"scrollstop"});
		        	      jQuery("#buffer_page").hide();
                }   
            }
		        function add_history_event()
		        {
		            var video_and_photo = jQuery(".video_and_photo"),
		                dom_more = jQuery("#more_pic");
		            for(var i = 0;i<video_and_photo.length;i++){
		                video_and_photo[i].onclick = (function(){
		                    var p;
		                    for(var j = 0;j<video_and_photo.length;j++){
		                        if(this == video_and_photo[j]){
		                            p = g_history_message[j];
		                            break;
		                        }
		                    }
		                    if(this.name == "snapshot"){
                           //Creating large preview
                           vim_create_big_image_preview_div({resolution_w:640, resolution_h:360, uri:this.src});
		                    }else if(this.name == "record"){
		                    	  g_is_in_playback_page = 1;
		                        g_now_page = "playback";
		                        l_me_parent[s_innerHTML] = "";
		                        l_dom_playback_obj = new class_home_cntr({parent:l_me_parent,on_event:obj.on_event, node_sn:g_select_device_ipc, playback:1});
		                        l_dom_playback_obj.ctrl({type:"playback_token_vimtag",token:p.p[0].v});
		                        l_dom_playback_obj.ctrl({type:"playback_size_vimtag",size:p.p[3].v});
		                        l_dom_playback_obj.ctrl({type:"create_playback_vimtag",node_sn:g_select_device_ipc});
		                        g_return_play_video_page = 0; //When in the video player is 0
		                    }else if(this.name == "alert"){
		                        //Creating large preview
		                        vim_create_big_image_preview_div({resolution_w:640, resolution_h:360, uri:this.src});
		                    }                        
		                });
		            }
		            if(dom_more[0]){
		                dom_more[0].onclick = function(){
		                    g_click_time++;
		                    create_history_main();
		                };
		            }
		        }

		        l_me.ctrl = function(obj){
		            switch(obj.type){
		                case "update":
            	  	    {
            	  	     	 if((!g_is_in_playback_page)&&(mx("#vimtag_device_list_box"))) mx("#vimtag_device_list_box").style.marginLeft = g_distance_to_edge + "px";
            	  	     	 break;
            	  	    }
		                case "select_video_base_select_date":
	                    {
	                    	 l_me.ctrl({type:"destroy"});
	                    	 start_time = (new Date(obj.date)).getTime();
	                    	 end_time = start_time+60*60*24*1000;
	                    	 ms.send_msg("box_get",{box_sn:g_select_device_ipc, dev_sn:g_select_device_ipc, flag:8,start_time:start_time,end_time:end_time},{box_sn:g_select_device_ipc,dev_sn:g_select_device_ipc,flag:8,base_start_time:start_time},ccm_segs_get_ack);	
	                    	 break;
	                    }
		               case "destroy_history_play_page":
		                  {  //End playing video
		                  	 jQuery(window).bind('scroll',video_list_scroll);
		                  	 if(g_is_play_back) l_dom_playback_obj.ctrl({type:"destroy_playback_vimtag", node_sn:g_select_device_ipc});
		                  	 break;
		                  }
		               case "destroy_history_page":
		                  {
		                  	 jQuery(window).unbind('scroll',video_list_scroll);
		                  	 l_me_parent[s_innerHTML] = "";
		                  	 l_me_parent = null;
		                  	 break;
		                  }
		               case "reload_box_video_list":
		                  {
		                  	 l_image_list =0;
		                  	 create_history_main();
		                  	 break;
		                  }
		               case "get_image_list":
		                  {
		                  	 l_img_list = 1;
		                  	 if(mx("#ipc_history_list")) mx("#ipc_history_list")[s_innerHTML]="";
		                  	 /*To get the images, 0 mean all, 1 mean alarm, 2 mean snapshot*/
		                  	 if(obj.data==0){ 
		                  	   img_data = get_snapshot_pic({videosegs:videosegs});
		                  	   l_image_list = img_data.imgs_data;
		                  	 }else if(obj.data==1){
		                  	   l_image_list = img_data.alarm_imgs_data;
		                  	 }else if(obj.data==2){
		                  	   l_image_list = img_data.snapshot_imgs_data;
		                  	 }
		                  	 if(!l_image_list.length){
		                  	   noHistoryVideoData({type:"ipcHistoryList"});
		                  	   return;
		                  	 }
		                  	 img_list_len = l_image_list.length;
		                  	 if(img_list_len >= 16){
		                  	   get_image_list({num:img_list_len,counts:img_list_len-16});
		                  	 }else {
		                  	         get_image_list({num:img_list_len,counts:0});
		                  	 }
		                  	 break;
		                  }
		               case "get_video_img":
		                  {
		                  	 l_img_list = 0;
		                  	 if(mx("#ipc_history_list")) mx("#ipc_history_list")[s_innerHTML]="";
		                  	 video_img_data = get_video_snapshot({videosegs:videosegs,type:obj.data});
		                  	 if(!video_img_data.local_cut_video_data.length){
			              	     noHistoryVideoData({type:"ipcHistoryList"});
			                   }else{
                                 g_vimtag_ipc_video_counts=0;
			              	     create_video_list({videodata:video_img_data});
			                   }	
		                  	 break;
		                  }
		               case "get_alarm_video_list":
		                  {
		                  	 if(mx("#ipc_history_list")) mx("#ipc_history_list")[s_innerHTML]="";
		                  	 var videoData = draw_data_rect({videosegs:videosegs,type:obj.data});
		                  	 if(!videoData.local_cut_video_data.length){
			              	     noHistoryVideoData({type:"ipcHistoryList"});
			                   }else{
                                            g_vimtag_ipc_video_counts=0;
			              	     create_video_list({videodata:videoData});
			                   }	
		                  	 break;
		                  }
		            }
		        }
            var l_start = "0X7fffffff",l_length,l_message = [];
            var l_pic_id = [],l_min_id;
            g_click_time = 0;
            g_shown_pic = 0;
            g_last_time = 0;
            jQuery("#setup_list").remove();
            create_history_main();
    }
    function class_Tips_box(obj) {
        var l_me_parent = obj.parent, l_dom_add_device_Tips,l_dom_normal_Tips,
        l_client_h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,
        l_client_w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
        l_me_parent[s_innerHTML] = "<div id='add_device_Tips' style='width:10px;height:10px; z-index:95;   position:absolute'></div><div id='normal_Tips' style='width:10px;height:10px;z-index:95;   position:absolute'></div>";
        l_dom_add_device_Tips = mx("#add_device_Tips");
        l_dom_normal_Tips = mx("#normal_Tips");
        l_dom_add_device_Tips[s_style].top = g_device_list_inner_h + 40 + "px";
        l_dom_add_device_Tips[s_style].left = (l_client_w - g_cntr_content_w) / 2 + 85 + "px";
        l_dom_normal_Tips[s_style].top = "10px";
        l_dom_normal_Tips[s_style].right = (l_client_w - g_cntr_content_w) / 2 + 50 + "px";
        system_tooltip({parent: l_dom_add_device_Tips,color: "gray",position: "right",disappear_way: "time",str: mcs_devlist_adddev_hint});
        system_tooltip({parent: l_dom_normal_Tips,color: "gray",position: "left",disappear_way: "time",str: mcs_devlist_menu_hint});
    }
    function class_cntr_box(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_home_cntr,
            l_home_cntr_obj,
            l_dom_playback_cntr,
            l_playback_cntr_obj,
            l_dom_log_cntr,//storage log
            l_log_cntr_obj,
            l_dom_manager_cntr,
            l_manager_cntr_obj,
            l_dom_status_bar,
            l_status_bar_obj,
            l_dom_alarm_cntr,
            l_alarm_cntr_obj,
            l_dom_timeline_cntr,
            l_timeline_cntr_obj,
            l_dom_cntr_box_div,
            l_dom_device_list_box,
            l_device_list_box_obj,
            l_client_w;

        l_dom_cntr_box_div=  dom_create_child(l_me_parent, "div", "cntr_box_div");
        l_dom_status_bar = dom_create_child(l_me_parent, "div", "status_bar");
        l_dom_device_list_box = dom_create_child(l_dom_cntr_box_div, "div", "device_list_box");
        l_dom_home_cntr = dom_create_child(l_dom_cntr_box_div, "div", "home_cntr");

        //Switching Interface: Home, playback
        function exchange_page(obj)
        {
            var old_page = g_now_page;
            destroy_childNode(old_page);
            g_now_page = obj.page;
            create_childNode(g_now_page, old_page);
        }
        //Create a new page
        function create_childNode(new_page, old_page)
        {
            if(new_page == "home")
            {
                l_dom_home_cntr = dom_create_child(l_dom_cntr_box_div, "div", "home_cntr");
                l_dom_home_cntr[s_style][s_cssText] = "width:" + g_cntr_content_w + "px;height:" + (g_cntr_content_h - g_status_bar_h) + "px;";
                l_status_bar_obj.ctrl({type:"update"});
                l_home_cntr_obj = new class_home_cntr({parent:l_dom_home_cntr,on_event:on_event});
                if(old_page == "manager")
                {
                    var j_home_cntr_dom = jQuery(l_dom_home_cntr);
                    j_home_cntr_dom.hide();
                    j_home_cntr_dom.fadeIn();
                }
            }
            else if(new_page == "playback")
            {
                l_dom_playback_cntr = dom_create_child(l_dom_cntr_box_div, "div", "playback_cntr");
                l_dom_playback_cntr[s_style][s_cssText] = "width:" + g_cntr_content_w + "px;height:" + (g_cntr_content_h - g_status_bar_h) + "px;";
                l_status_bar_obj.ctrl({type:"update"});
                l_playback_cntr_obj = new class_playback_cntr({parent:l_dom_playback_cntr,on_event:on_event});
                if(old_page == "manager")
                {
                    var j_playback_cntr_dom = jQuery(l_dom_playback_cntr);
                    j_playback_cntr_dom.hide();
                    j_playback_cntr_dom.fadeIn();
                }
            }
            else if(new_page == "manager")
            {
                l_dom_manager_cntr = dom_create_child(l_dom_cntr_box_div, "div", "manager_cntr");
                l_dom_manager_cntr[s_style][s_cssText] = "width:" + g_cntr_content_w + "px;height:" + (g_cntr_content_h - g_status_bar_h) + "px;";
                l_status_bar_obj.ctrl({type:"update"});
                l_manager_cntr_obj = new class_manager_cntr({parent:l_dom_manager_cntr, on_event:function(obj){return on_event(obj);}});
            }
            else if(new_page == "alarm")
            {   //Remove red digital device list notification
                l_device_list_box_obj.ctrl({type:"delete_alarm_nofication",sn:g_select_device_ipc});
                l_dom_alarm_cntr = dom_create_child(l_dom_cntr_box_div, "div", "alarm_cntr");
                l_dom_alarm_cntr[s_style][s_cssText] = "width:" + g_cntr_content_w + "px;height:" + (g_cntr_content_h - g_status_bar_h) + "px;";
                l_status_bar_obj.ctrl({type:"update"});
                l_alarm_cntr_obj = new class_alarm_cntr({parent:l_dom_alarm_cntr, on_event:function(obj){return on_event(obj);}});
            }
            else if(new_page == "timeline")
            {              	
                l_dom_timeline_cntr = dom_create_child(cntr_box_div, "div", "timeline_cntr");
                l_dom_timeline_cntr[s_style][s_cssText] = "width:" + g_cntr_content_w + "px;height:" + (g_cntr_content_h - g_status_bar_h) + "px;";                

                l_timeline_cntr_obj = new class_timeline_cntr({parent:l_dom_timeline_cntr, on_event:function(obj){return on_event(obj);}});                
            }
        }
        //Delete the old interface
        function destroy_childNode(old_page)
        {
            switch(old_page)
            {
                case "home":
                    {
                        l_home_cntr_obj.ctrl({type:"destroy"});
                        l_dom_cntr_box_div[s_removeChild](l_dom_home_cntr);
                        l_dom_home_cntr = null;
                        l_home_cntr_obj = null;
                        break;
                    }
                case "playback":
                    {
                        l_playback_cntr_obj.ctrl({type:"destroy"});
                        l_dom_cntr_box_div[s_removeChild](l_dom_playback_cntr);
                        l_dom_playback_cntr = null;
                        l_playback_cntr_obj = null;
                        break;
                    }
                case "manager":
                    {
                        l_manager_cntr_obj.ctrl({type:"destroy"});
                        l_dom_cntr_box_div[s_removeChild](l_dom_manager_cntr);
                        l_dom_manager_cntr = null;
                        l_manager_cntr_obj = null;
                        break;
                    }
                case "alarm":
                    {
                        l_alarm_cntr_obj.ctrl({type:"destroy"});
                        l_dom_cntr_box_div[s_removeChild](l_dom_alarm_cntr);
                        l_dom_alarm_cntr = null;
                        l_alarm_cntr_obj = null;
                        break;
                    }
                case "timeline":
                    {
                        l_timeline_cntr_obj.ctrl({type:"destroy"});
                        l_dom_cntr_box_div[s_removeChild](l_dom_timeline_cntr);
                        l_dom_timeline_cntr = null;
                        l_timeline_cntr_obj = null;
                        break;
                    }
            }
            g_select_inner_window = "none";
            g_select_inner_ipc = "";
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_client_w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
                        l_dom_device_list_box[s_style].left=(l_client_w-g_cntr_content_w)/2+"px";
                        l_dom_device_list_box[s_style][s_width] = g_panel_box_all_w + "px";
                        l_dom_device_list_box[s_style][s_height] = g_panel_box_all_h + "px";
                        if(g_panel_box_all_w < g_panel_box_max_w)
                        {
                            l_dom_device_list_box[s_style].opacity = "0.5";
                        }
                        else
                        {
                            l_dom_device_list_box[s_style].opacity = "1";
                        }
                        l_device_list_box_obj.ctrl(obj);
                        switch(g_now_page)
                        {
                            case "home":
                                {
                                    l_dom_home_cntr.style.width = g_cntr_content_w + "px";
                                    l_dom_home_cntr.style.height = (g_cntr_content_h - g_status_bar_h) + "px";
                                    l_home_cntr_obj.ctrl(obj);
                                    break;
                                }
                            case "playback":
                                {
                                    l_dom_playback_cntr.style.width = g_cntr_content_w + "px";
                                    l_dom_playback_cntr.style.height = (g_cntr_content_h - g_status_bar_h) + "px";
                                    l_playback_cntr_obj.ctrl(obj);
                                    break;
                                }
                            case "manager":
                                {
                                    l_dom_manager_cntr.style.width = g_cntr_content_w + "px";
                                    l_dom_manager_cntr.style.height = (g_cntr_content_h - g_status_bar_h) + "px";
                                    l_manager_cntr_obj.ctrl(obj);
                                    break;
                                }
                            case "alarm":
                                {
                                    l_dom_alarm_cntr.style.width = g_cntr_content_w + "px";
                                    l_dom_alarm_cntr.style.height = (g_cntr_content_h - g_status_bar_h) + "px";
                                    l_alarm_cntr_obj.ctrl(obj);
                                    break;
                                }
                           case "timeline":
                                {
                                    l_dom_timeline_cntr.style.width = g_cntr_content_w + "px";
                                    l_dom_timeline_cntr.style.height = (g_cntr_content_h - g_status_bar_h) + "px";
                                    if(l_timeline_cntr_obj)l_timeline_cntr_obj.ctrl(obj);
                                    break;
                                }
                        }
                        l_dom_status_bar.style.width = g_cntr_content_w + "px";
                        l_status_bar_obj.ctrl(obj);
                        break;
                    }
                case "exchange_page"://Switch interface
                    {
                        exchange_page(obj.data);
                        break;
                    }
                case "refresh_notif":
                case "change_select_device_style":
                case "refresh_notif_latest"://Update equipment after red word
                case "refresh_device_list"://mmq return information from the new loading device list
                case "change_device_name"://Change Device Nickname
                    {
                        l_device_list_box_obj.ctrl(obj);
                        break;
                    }
                case "get_profiles":
                    {
                      return  l_device_list_box_obj.ctrl(obj);
                       break;
                    }
                case "profiles_play":
                case "update_imaging":
                    {
                         l_home_cntr_obj.ctrl(obj);
                         break;
                    }
                case "refresh_alarm":
                    {
                        if(l_alarm_cntr_obj)
                            l_alarm_cntr_obj.ctrl(obj);
                        break;
                    }
                case "select_net":
                case "select_device":
                    {
                         if(l_manager_cntr_obj)
                           l_manager_cntr_obj.ctrl(obj);
                         break;
                    }
                case "destroy":
                    {
                        if(g_now_page == "home")
                            l_home_cntr_obj.ctrl(obj);
                        else if(g_now_page == "playback")
                            l_playback_cntr_obj.ctrl(obj);
                        else if(g_now_page == "manager")
                            l_manager_cntr_obj.ctrl(obj);
                        else if(g_now_page == "alarm")
                            l_alarm_cntr_obj.ctrl(obj);
                        l_status_bar_obj.ctrl(obj);
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_cntr_box");
            }
        }
        function on_event(obj)
        {
            switch(obj.type)
            {
                case "delete_notif_info":
                case "Refresh_devs":
                    {
                        l_parent_callback(obj);
                        break;
                    }
                case "refresh_menu":
                    {
                       l_parent_callback(obj);
                       break;
                    }
                case "change_device_name"://Change Device Nickname
                case "refresh_device":
                    {
                        l_device_list_box_obj.ctrl(obj);
                        break;
                    }
                case "change_select_ipc"://Switching equipment
                    {
                        switch(g_now_page)
                        {
                            case "home":
                                {
                                    l_home_cntr_obj.ctrl(obj);
                                    break;
                                }
                            case "playback":
                                {
                                    l_playback_cntr_obj.ctrl(obj);
                                    break;
                                }
                            case "manager":
                                {
                                    l_manager_cntr_obj.ctrl(obj);
                                    break;
                                }
                            case "alarm":
                                {
                                    l_alarm_cntr_obj.ctrl(obj);
                                    break;
                                }
                            case "timeline":
                                {
                                    if(l_timeline_cntr_obj)l_timeline_cntr_obj.ctrl(obj);
                                    break;
                                }
                        }
                        break;
                    }
                case "create_ipc":
                case "delete_ipc":
                    {
                        switch(g_now_page)
                        {
                            case "home":
                                {
                                    l_home_cntr_obj.ctrl(obj);
                                    break;
                                }
                            case "playback":
                                {
                                    l_playback_cntr_obj.ctrl(obj);
                                    break;
                                }
                        }
                        break;
                    }
                case "download_path":
                    {
                    	  l_device_list_box_obj.ctrl(obj);
                    	  break;
                    }
                case "download_save_path":
                    {
                    	  l_timeline_cntr_obj.ctrl(obj);
                    	  break;
                    }
                default:
                    log("error:on_event's obj.type is not exist in class_cntr_box.");
            }
        }

        l_dom_device_list_box[s_style][s_width] = g_panel_box_all_w + "px";
        l_dom_device_list_box[s_style][s_height] = g_panel_box_all_h + "px";
        l_client_w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
        l_dom_device_list_box[s_style].left=(l_client_w-g_cntr_content_w)/2+"px";
        l_dom_home_cntr[s_style][s_cssText] = "width:" + g_cntr_content_w + "px;height:" + (g_cntr_content_h - g_status_bar_h) + "px;";
        l_dom_status_bar[s_style][s_cssText] = "width:" + g_cntr_content_w + "px;height:" + g_status_bar_h + "px;";
        if(g_panel_box_all_w < g_panel_box_max_w)
        {
           l_dom_device_list_box[s_style].opacity = "0.5";
        }

        l_status_bar_obj = new class_status_bar({parent:l_dom_status_bar});           //Before xxx_cntr_obj
        l_home_cntr_obj = new class_home_cntr({parent:l_dom_home_cntr,on_event:function(obj){on_event(obj)}});
        l_device_list_box_obj = new class_device_list_box({parent:l_dom_device_list_box, on_event:on_event});

        if(g_device_list_switch == "close")
        {
            l_dom_device_list_box.style.display = "none";
        }
    }
    function class_menu_box(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_page_flag = obj.page,
            l_ipc_type = obj.type,
            l_dom_menu_left,
            l_dom_menu_center,
            l_dom_menu_right,
            l_dom_menu_tag_li,
            l_dom_menu_change_password_page,l_dom_normal_install_page,l_dom_guest_change_password_page,
            l_dom_binding_email_page,
            l_dom_menu_select_language,
            l_dom_mobile_client_download,
            l_dom_mobile_client_install,
            l_dom_android_download,
            l_dom_ios_download,
            l_dom_current_show_password,
            l_dom_current_password,
            l_dom_new_show_password,
            l_dom_new_password,
            l_dom_new_show_confirm,
            l_dom_new_confirm,
            l_dom_current_guest_password,
            l_dom_guest_password,
            l_dom_new_show_guest_password,
            l_dom_new_guest_password,
            l_dom_new_show_guest_confirm,
            l_dom_new_guest_confirm,
            l_dom_change_guest_button,
            l_dom_change_button,
            l_dom_notif_latest, l_dom_ccm_notif,l_dom_download_div,l_dom_download_page,
            l_get_profiles,l_dom_play_setup,l_dom_normal_install,
            l_dom_system_logout,
            l_dom_guest_change_password,
            l_dom_system_about,
            l_dom_play_setup_body,
            l_dom_system_plug_option,
            l_dom_net_setting,
            l_dom_system_faq,
            l_dom_system_binding_email,
            l_dom_current_email_address,
            l_dom_email_address,
            l_dom_binding_email_button;

        function add_event(obj)
        {
            if(l_page_flag == "cntr_page")
            {
                if(g_select_device_ipc)
        	    {
        	        if(determine_the_version({type:"Anti",version:version_Category.Snapshot_version}))
        	        {
        	    	   jQuery(l_dom_menu_tag_li[2]).hide();
        	    	   jQuery(l_dom_menu_tag_li[3]).hide();
        	        }
        	    }
                var plugin_install = mx("#plugin_install"),
                    menu_change_password = mx("#menu_change_password"),
                    page_name = new Array("home", "playback", "alarm","timeline", "manager");
                var i, j, length = l_dom_menu_tag_li.length;
                for(i = 0; i < length - 1; ++i)
                {
                    l_dom_menu_tag_li[i + 1].now_page = page_name[i];
                    //Switch interface
                    l_dom_menu_tag_li[i + 1].onclick = function() {
                        if(!g_select_device_ipc || (g_now_page == this.now_page && (g_now_page=="home" || g_now_page=="playback" || g_now_page=="alarm")) ) return;
                        for(j = 1; j < length; ++j)
                        {
                            mx("/div", l_dom_menu_tag_li[j])[1][s_style][s_cssText] = "margin-top:8px;letter-spacing:0px";
                            if(g_now_lang == "ch") mx("/div", l_dom_menu_tag_li[j])[1][s_style].letterSpacing = "2px";
                        }
                        if(g_hostname=="www.luxcamapp.eu")
                        {
                             mx("/div", this)[1][s_style][s_cssText] = "margin-top:4px;font-size:18px;font-weight:800;color:red;letter-spacing:0px";
                        }
                        else
                        {
                             mx("/div", this)[1][s_style][s_cssText] = "margin-top:4px;font-size:18px;font-weight:800;color:#80a52d;letter-spacing:0px";
                        }
                        if(g_now_lang == "ch") mx("/div", this)[1][s_style].letterSpacing = "5px";
                        l_dom_menu_center.style.width = (l_me_parent.offsetWidth - l_dom_menu_left.offsetWidth - l_dom_menu_right.offsetWidth - 10) + "px";
                        l_parent_callback({type:"exchange_page", data:{page:this.now_page}});

                        if((mcloud_agent.devs.get(g_select_device_ipc)).type=="BOX"&&g_now_page=="manager")
                        {
	                          jQuery(OSD).hide();
	                          jQuery(alarm).hide();
	                          jQuery(alarm_linkage).hide();
	                          jQuery(record_setting).hide();
	                          jQuery(others).hide();
	                          jQuery(storage_device).hide();
                        }
                        if(!g_domain_oems_luxcamapp && g_now_page=="manager")
                        {
                            jQuery(notification).hide();
                        }
                        if(((mcloud_agent.devs.get(g_select_device_ipc)).img_ver.substr(0,2) < "v2") && g_now_page=="manager")
                        {
                            jQuery(storage_device).hide();
                        }
                    }
                }

                menu_change_password.onmouseover = function() {
                    this.style.color = "#fff";
                };
                menu_change_password.onmouseout = function() {
                    this.style.color = "#bbb";
                };
                menu_change_password.onclick = function() {
                    jQuery(l_dom_normal_install_page).hide();
                    jQuery(l_dom_menu_change_password_page).toggle();
                };
                //Exit key events
                l_dom_system_logout.onmouseover = function(){
                    this.style.color = "#fff";
                }
                l_dom_system_logout.onmouseout = function() {
                    this.style.color = "#bbb";
                };
                l_dom_system_logout.onclick=function(){
                    mcloud_agent.sign_out({type:obj.type, sn:g_select_device_ipc},function(msg,ref){
                         if( msg.result == "" || msg.result == "accounts.lid.invalid")//After modifying the administrative password, exit to the login screen
                         {
                            //No judgment Returns
                            ms.ctrl({type:"logout",data:ref});
                         }
                    });
                }; 
                l_dom_system_plug_option.onmouseover = function(){
                    this.style.color = "#fff";
                }; 
                l_dom_system_plug_option.onmouseout = function() {
                    this.style.color = "#bbb";
                };
                l_dom_system_plug_option.onclick = function(){
                	  l_dom_net_setting.ctrl({type:"option_set"});
                };
                
                if(g_domain_oems_serenelifehome)
                {
                	  l_dom_system_faq.onmouseover = function(){
                        this.style.color = "#fff";
		                }; 
		                l_dom_system_faq.onmouseout = function() {
		                    this.style.color = "#bbb";
		                };
		                l_dom_system_faq.onclick = function(){
		                	  window.open(window.location.protocol + "//pyleaudio.helpshift.com/a/serene-life/");
		                };
                }
                
                /*if(g_domain_oems_mipcm)
                {
                		l_dom_system_binding_email.onmouseover = function(){
                        this.style.color = "#fff";
		                }; 
		                l_dom_system_binding_email.onmouseout = function() {
		                    this.style.color = "#bbb";
		                };
		                l_dom_system_binding_email.onclick = function(){
		                	  jQuery(l_dom_normal_install_page).hide();
                        jQuery(l_dom_binding_email_page).toggle();
		                };
                }*/
                            
                l_dom_system_about.onmouseover = function(){
                    this.style.color = "#fff";
                };
                l_dom_system_about.onmouseout = function() {
                    this.style.color = "#bbb";
                };
                l_dom_system_about.onclick=function(){
                   system_pop_confirm_box({alert:true,str:mcs_software_version+":"+g_web_client_v, callback_func:function(){}});
                };
                l_dom_guest_change_password.onmouseover=function(){
                    this.style.color="#fff";
                };
                l_dom_guest_change_password.onmouseout=function(){
                    this.style.color="#bbb";
                };
                l_dom_guest_change_password.onclick=function(){
                    jQuery(l_dom_normal_install_page).hide();
                    jQuery(l_dom_guest_change_password_page).toggle();
                };
                l_dom_current_show_password.onfocus = function() {
                    this.style.display = "none";
                    l_dom_current_password.style.display = "inline";
                    l_dom_current_password.focus();
                };
                l_dom_current_guest_password.onfocus=function(){
                    this.style.display="none";
                    l_dom_guest_password.style.display="inline";
                    l_dom_guest_password.focus();
                };
                l_dom_current_password.onfocus = function() {
                    this.select();
                };
                l_dom_guest_password.onfocus=function(){
                   this.select();
                };
                jQuery(l_dom_guest_password).focus();
                jQuery(l_dom_current_password).focus();
                l_dom_current_password.onblur = function() {
                    if(this.value == "")
                    {
                        this.style.display = "none";
                        l_dom_current_show_password.style.display = "inline";
                    }
                };
                l_dom_guest_password.onblur =function(){
                    if(this.value =="")
                    {
                        this.style.display ="none";
                        l_dom_current_guest_password.style.display = "inline";
                    }
                };
                l_dom_new_show_password.onfocus = function() {
                    this.style.display = "none";
                    l_dom_new_password.style.display = "inline";
                    l_dom_new_password.focus();
                };
                l_dom_new_show_guest_password.onfocus = function() {
                    this.style.display = "none";
                    l_dom_new_guest_password.style.display = "inline";
                    l_dom_new_guest_password.focus();
                };
                l_dom_new_password.onfocus = function() {
                    this.select();
                    system_tooltip({parent:l_dom_new_password, color:"green", position:"left", disappear_way:"time", str:mcs_password_demand + "."});
                };

                l_dom_new_password.onblur = function() {
                    if(this.value == "")
                    {
                        this.style.display = "none";
                        l_dom_new_show_password.style.display = "inline";
                    }
                };
                l_dom_new_guest_password.onblur = function() {
                    if(this.value == "")
                    {
                        this.style.display = "none";
                        l_dom_new_show_guest_password.style.display = "inline";
                    }
                };
                l_dom_new_show_confirm.onfocus = function() {
                    this.style.display = "none";
                    l_dom_new_confirm.style.display = "inline";
                    l_dom_new_confirm.focus();
                };
                l_dom_new_show_guest_confirm.onfocus = function() {
                    this.style.display = "none";
                    l_dom_new_guest_confirm.style.display = "inline";
                    l_dom_new_guest_confirm.focus();
                };
                l_dom_new_confirm.onfocus = function() {
                    this.select();
                };
                l_dom_new_guest_confirm.onfocus = function() {
                    this.select();
                };

                l_dom_new_confirm.onblur = function() {
                    if(this.value == "")
                    {
                        this.style.display = "none";
                        l_dom_new_show_confirm.style.display = "inline";
                    }
                };
                l_dom_new_guest_confirm.onblur = function() {
                    if(this.value == "")
                    {
                        this.style.display = "none";
                        l_dom_new_show_guest_confirm.style.display = "inline";
                    }
                };
                l_dom_current_email_address.onfocus = function() {
                		this.style.display = "none";
                    l_dom_email_address.style.display = "inline";
                    l_dom_email_address.focus();
                };
                //bindging email 
                l_dom_email_address.onfocus = function(){
                		this.select();
                };
                l_dom_email_address.onblur = function() {
                		if(this.value == "")
                    {
                        this.style.display = "none";
                        l_dom_current_email_address.style.display = "inline";
                    }
                };
                l_dom_binding_email_button.onclick = function() {
                	  var reg;
                		if(!l_dom_email_address.value || l_dom_email_address.value == mcs_input_email_addr)
                		{
                				system_tooltip({parent:l_dom_email_address, color:"red", position:"left", disappear_way:"time", str:mcs_the_password_is_empty + "."});
                        return;
                		}
                		else
                		{
                				reg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/;
                				if(!reg.exec(l_dom_email_address.value))
                				{
                						system_tooltip({parent:l_dom_email_address, color:"red", position:"left", disappear_way:"time", str:mcs_invalid_email_addr + "."});
                        		return;
                				}
                		}
                		var l_hostname = {
		                	 "mipcm.com":{appid:"mipcm.com",name:"mipcm"},
		                	 "vimtag.com":{appid:"vimtag.com",name:"vimtag"}
		                };
		                for(temp in l_hostname)
		                {
		                	  if(temp==g_hostname || g_hostname.substring(g_hostname.indexOf('.')+1,g_hostname.length)==temp)
		                	  {	
		                	  	  var tp = l_hostname[temp];
                	 	        var appid = tp.appid, name = tp.name;												
                            var localPassword = (window.password_value == "......")?eval('('+mlocal_storage.get("remember_msg_info")+')').password:mmd5.hex(window.password_value);
                		        ms.send_msg("binding_email",{email:l_dom_email_address.value, user:window.username_value, pass:localPassword, lang:g_now_lang,version:g_web_client_v,appid:appid,name:name}, null, binding_email_ack);
		                	  }
		                }   
                };
                //User Management Password Change
                l_dom_change_button.onclick = function() {
                    var reg;
                    if(!l_dom_current_password.value || l_dom_current_password.value == mcs_old_password)
                    {
                        system_tooltip({parent:l_dom_current_password, color:"red", position:"left", disappear_way:"time", str:mcs_the_password_is_empty + "."});
                        return;
                    }
                    if(!l_dom_new_password.value || l_dom_new_password.value == mcs_new_password)
                    {
                        system_tooltip({parent:l_dom_new_password, color:"red", position:"left", disappear_way:"time", str:mcs_the_password_is_empty + "."});
                        return;
                    }
                    else
                    {
                        reg = /^\S{6,20}$/;
                        if(!reg.exec(l_dom_new_password.value))
                        {
                            system_tooltip({parent:l_dom_new_password, color:"red", position:"left", disappear_way:"time", str:mcs_password_demand + "."});
                            return;
                        }
                    }
                    if(!l_dom_new_confirm.value || l_dom_new_confirm.value == mcs_confirm_new_password)
                    {
                        system_tooltip({parent:l_dom_new_confirm, color:"red", position:"left", disappear_way:"time", str:mcs_password_empty + "."});
                        return;
                    }
                    if(l_dom_new_password.value != l_dom_new_confirm.value)
                    {
                        system_tooltip({parent:l_dom_new_confirm, color:"red", position:"left", disappear_way:"time", str:mcs_two_password_input_inconsistent + "."});
                        return;
                    }
                    ms.send_msg("account_passwd_set",{old_pass:l_dom_current_password.value,new_pass:l_dom_new_password.value,is_guest:0},{is_guest:0},user_passwd_set_ack);
                };
                //Visitors Password Change
                l_dom_change_guest_button.onclick =function(){
                    if(!l_dom_guest_password.value || l_dom_guest_password.value == mcs_old_password)
                    {
                        system_tooltip({parent:l_dom_guest_password, color:"red", position:"left", disappear_way:"time", str:mcs_the_password_is_empty + "."});
                        return;
                    }
                    if(l_dom_new_guest_password.value != l_dom_new_guest_confirm.value)
                    {
                        system_tooltip({parent:l_dom_new_guest_confirm, color:"red", position:"left", disappear_way:"time", str:mcs_two_password_input_inconsistent + "."});
                        return;
                    }
                    ms.send_msg("account_passwd_set",{old_pass:l_dom_guest_password.value,new_pass:l_dom_new_guest_password.value,is_guest:1},{is_guest:1},user_passwd_set_ack);
                };
                plugin_install.onmouseover = function() {
                    var ico = mx("/img", mx("#plugin_install_left"))[0];
                    ico.src = ico.src.replace(/plugin_install_ico_out.png/, "plugin_install_ico_over.png");
                };
                plugin_install.onmouseout = function() {
                    var ico = mx("/img", mx("#plugin_install_left"))[0];
                    ico.src = ico.src.replace(/plugin_install_ico_over.png/, "plugin_install_ico_out.png");
                };
                plugin_install.onclick = function() {
                };
                //main_page in the top right corner of the menu bar
                l_dom_normal_install.onclick=function()
                {
                    l_parent_callback({type:"get_profiles", data:{sn:g_select_device_ipc}});
                    create_control_play_setup({profiles:l_get_profiles,sn:g_select_device_ipc});
                    jQuery(l_dom_normal_install_page).toggle();
                };
                jQuery(document).bind("click", function (event)
                {
                    var e = event || window.event;
                    var elem = e.srcElement||e.target;

                    while(elem)
                    {
                        if(elem.id=="guest_change_password"||elem.id=="normal_install" || elem.id =="control_play_setup" || elem.id == "menu_change_password" || elem.id ==  "menu_change_password_page" || elem.id == "guest_change_password_page"/* ||
                        elem.id=="binding_email_inner"||elem.id=="current_email_address"||elem.id=="binding_email_button"||elem.id=="system_binding_email"*/)
                        {
                            return;
                        }
                        elem = elem.parentNode;
                    }
                    jQuery(l_dom_normal_install_page).hide();
                    jQuery(l_dom_menu_change_password_page).hide();
                    jQuery(l_dom_guest_change_password_page).hide();
                    jQuery(l_dom_binding_email_page).hide();
                    l_dom_guest_password.value="";
                    l_dom_new_password.value="";
                    l_dom_current_password.value="";
                    l_dom_new_confirm.value="";
                    l_dom_new_guest_password.value="";
                    l_dom_new_guest_confirm.value="";
                    l_dom_email_address.value="";
                    jQuery(l_dom_email_address).blur();
                    jQuery(l_dom_new_password).blur();
                    jQuery(l_dom_guest_password).blur();
                    jQuery(l_dom_current_password).blur();
                    jQuery(l_dom_new_confirm).blur();
                    jQuery(l_dom_new_guest_password).blur();
                    jQuery(l_dom_new_guest_confirm).blur();
                });
                 //When the account is empty, the landing will be prompted to type is null
                try{
                       if((mcloud_agent.devs.get(g_select_device_ipc)).type=="BOX"||(mcloud_agent.devs.get(g_select_device_ipc)).img_ver.substring(0,2)>="v2")
                       {
                  		    jQuery(l_dom_menu_tag_li[2]).hide();
                  		    jQuery(l_dom_menu_tag_li[3]).hide();
                  		    jQuery(l_dom_menu_tag_li[4]).show();
                       }
                       else
                       {
                  		    jQuery(l_dom_menu_tag_li[2]).show();
                  		    jQuery(l_dom_menu_tag_li[3]).show();
                  		    jQuery(l_dom_menu_tag_li[4]).hide();
                       }
                }catch(err){
                	        jQuery(l_dom_menu_tag_li[2]).show();
                  		    jQuery(l_dom_menu_tag_li[3]).show();
                  		    jQuery(l_dom_menu_tag_li[4]).hide();
                          log("error:the account is empty");
                }
            }
            else if(l_page_flag == "login_page")
            {
                if(l_ipc_type == "MS")
                {
                    var register_div = mx("#register_div"),
                        j_mobile_client_install = jQuery(l_dom_mobile_client_install);

                    register_div.onmouseover = function() {
                        this.style.color = "#fff";
                    };
                    register_div.onmouseout = function() {
                        this.style.color = "#bbb";
                    };
                    register_div.onclick = function() {
                        jQuery("#download_page").hide();
                        jQuery("#register_page").toggle();
                    };
                    l_dom_download_div.onmouseover = function() {
                        this.style.color = "#fff";
                    };
                    l_dom_download_div.onmouseout = function() {
                        this.style.color = "#bbb";
                    };
                    l_dom_download_div.onclick =function() {
                        jQuery("#register_page").hide();
                        jQuery("#download_page").toggle();
                    }
                    document.onclick = function (event)
                    {
                        var e = event || window.event;
                        var elem = e.srcElement||e.target;
                        while(elem)
                        {
                            if(elem.id == "download_div" || elem.id ==  "download_page" || elem.id == "register_div" || elem.id ==  "register_page" )
                            {
                                return;
                            }
                            elem = elem.parentNode;
                        }
                        jQuery("#download_page").hide();
                        jQuery("#register_page").hide();
                       // jQuery(l_dom_menu_select_language).tzSelect();
                    }
                     //jQuery("#download_div").hide();
                }
                l_dom_menu_select_language.change_value = function(e) {
                    if(this[this.selectedIndex].text == "中文")
                    {
                        mlocal_storage.set("language_choice_info", this[this.selectedIndex].value);
                        window.location.reload(true);
                    }
                    else if(this[this.selectedIndex].text == "English")
                    {
                        mlocal_storage.set("language_choice_info", this[this.selectedIndex].value);
                        window.location.reload(true);
                    }else
                    {
                        mlocal_storage.set("language_choice_info", this[this.selectedIndex].value);
                        window.location.reload(true);
                    }
                };
            }
        }
        function binding_email_ack(msg,ref)
        {
        	  if(msg&&msg.result == "")
        	  {
        	 		system_pop_confirm_box({alert:true,str:mcs_binding_send_prompt, callback_func:function(){}});
        	  }
        	  else if(msg.result == "accounts.bind.email.exist")
        	  {
        	  		system_tooltip({parent:l_dom_email_address, color:"red", position:"left", disappear_way:"time", str:mcs_accounts_bind_email_exist + "."});
                return;
        	  }
        	  else if(msg.result == "accounts.bind.email.busy")
        	  {
        	  		system_tooltip({parent:l_dom_email_address, color:"red", position:"left", disappear_way:"time", str:mcs_accounts_bind_email_busy + "."});
                return;
        	  }
        	  else if(msg.result == "accounts.pass.invalid")
        	  {
        	  	  system_tooltip({parent:l_dom_email_address, color:"red", position:"left", disappear_way:"time", str:mcs_invalid_password + "."});
        	  	  return;
        	  }        	  	
        }
        //User password settings results, including password management, guest password
        function user_passwd_set_ack(msg,ref)
        {
            if(!msg.result)
            {
               system_pop_confirm_box({alert:true, str:mcs_modified_successfully,
                 callback_func:function(obj){
                    if(!ref.is_guest)
                      jQuery("#system_logout").click();
               }});
            }
            else if(msg.result == "accounts.pass.invalid")
            {
               if(ref.is_guest)
               {
                   system_tooltip({parent:l_dom_guest_password, color:"red", position:"left", disappear_way:"time", str:mcs_invalid_password + "."});
               }else
               {
                   system_tooltip({parent:l_dom_current_password, color:"red", position:"left", disappear_way:"time", str:mcs_invalid_password + "."});
               }
            }
        }
        function remove_event()
        {
            if(l_page_flag == "login_page")
            {
                l_dom_menu_select_language.change_value = "";
                if(l_ipc_type == "MS")
                {
                   /* l_dom_mobile_client_install.onmouseonver = "";
                    l_dom_mobile_client_install.onmouseout = "";
                    l_dom_mobile_client_install.onclick = "";*/
                }
            }else if(l_page_flag == "cntr_page")
            {
                var i, length = l_dom_menu_tag_li.length,
                    plugin_install = mx("#plugin_install");

                for(i = 0; i < length; ++i)
                {
                    l_dom_menu_tag_li[i].onclick = "";
                }

                plugin_install.onmouseover = "";
                plugin_install.onmouseout = "";
                plugin_install.onclick = "";
            }
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        if(l_page_flag == "login_page")
                        {
                            l_dom_menu_select_language.parentNode.style.right = ((l_me_parent.offsetWidth - g_cntr_content_w) / 2 + 280) + "px";
                            if(l_ipc_type == "MS")
                            {
                                //l_dom_mobile_client_download.style.right = ((l_me_parent.offsetWidth - g_cntr_content_w) / 2 + 240) + "px";
                                l_dom_download_div.style.right = ((l_me_parent.offsetWidth - g_cntr_content_w) / 2 + 180) + "px";
                                mx("#register_div").style.right = ((l_me_parent.offsetWidth - g_cntr_content_w) / 2 + 50) + "px";
                                mx("#download_page").style.right =((l_me_parent.offsetWidth - g_cntr_content_w) / 2 +180 )+ "px";
                            }
                        }
                        else if(l_page_flag == "cntr_page")
                        {
                           mx("/ul", mx("#menu_left"))[0].style.marginLeft = ((l_me_parent.offsetWidth - g_cntr_content_w) / 2) + "px";
                           l_dom_menu_change_password_page.style.right =((l_me_parent.offsetWidth - g_cntr_content_w) / 2  )+ "px";
                           l_dom_guest_change_password_page.style.right=((l_me_parent.offsetWidth  -g_cntr_content_w) /2 )+"px";
                           l_dom_normal_install_page.style.right =((l_me_parent.offsetWidth - g_cntr_content_w) / 2  )+ "px"


                           mx("#normal_install").style.right = ((l_me_parent.offsetWidth - g_cntr_content_w) / 2 + 25 )+ "px";
                        }

                        l_dom_menu_center.style.width = (l_me_parent.offsetWidth - l_dom_menu_left.offsetWidth - l_dom_menu_right.offsetWidth - 10) + "px";
                        if(l_dom_ccm_notif){
                            l_dom_ccm_notif.style.cssText = "position:absolute;left:" + (l_dom_menu_tag_li[3].offsetLeft + 54) + "px;top:3px";
                        }
                        break;
                    }
                case "refresh_menu":
                    {
                    	if(obj.data==1)
                    	{
                    	    add_event(obj);
                    	    jQuery(l_dom_menu_tag_li[1]).click();
                    	}
                    	else if(obj.data==2)
                    	{
                    		  jQuery(l_dom_menu_tag_li[2]).show();
                    		  jQuery(l_dom_ccm_notif).show();
                    		  jQuery(l_dom_menu_tag_li[3]).show();
                    		  l_me.ctrl({type:"update"});
                    	}else if(obj.data==3)
                    	{

                    	    if(determine_the_version({type:"Anti",version:version_Category.Snapshot_version}))
        	                {
        	    	             jQuery(l_dom_menu_tag_li[2]).hide();
        	    	             jQuery(l_dom_menu_tag_li[3]).hide();
        	    	             jQuery(l_dom_ccm_notif).hide();
        	                }else
        	                {
        	                     jQuery(l_dom_menu_tag_li[2]).show();
                    		     jQuery(l_dom_ccm_notif).show();
                    		     jQuery(l_dom_menu_tag_li[3]).show();
                    		  }
                    	    jQuery(l_dom_menu_tag_li[5]).click();
                    	    l_parent_callback({type:"select_device"});
                    	}
                    	else if(obj.data==4)
                    	{
                    	    jQuery(l_dom_menu_tag_li[3]).click();
                    	}
                    	else if(obj.data==5)
                    	{
                    	    jQuery(l_dom_menu_tag_li[1]).hide();
                    	    jQuery(l_dom_menu_tag_li[2]).hide();
        	    	        jQuery(l_dom_menu_tag_li[3]).hide();
                    	    jQuery(l_dom_menu_tag_li[4]).show();
                    	    jQuery(l_dom_menu_tag_li[obj.click_index]).click();
                    	}
                    	else if(obj.data==6)
                	    {
                	        jQuery(l_dom_menu_tag_li[1]).show();
                	        jQuery(l_dom_menu_tag_li[2]).hide();
        	    	        jQuery(l_dom_menu_tag_li[3]).hide();
                    	    jQuery(l_dom_menu_tag_li[4]).show();
                    	    jQuery(l_dom_menu_tag_li[obj.click_index]).click();


                	    }
                	    else if(obj.data==7)
            	        {
            	            jQuery(l_dom_menu_tag_li[1]).show();
            	            jQuery(l_dom_menu_tag_li[2]).show();
                    	    jQuery(l_dom_menu_tag_li[3]).show();
                    	    jQuery(l_dom_menu_tag_li[4]).hide();
                    	    jQuery(l_dom_menu_tag_li[obj.click_index]).click();


            	        }
                    	else
                    	{
                    	  //jQuery(l_dom_menu_tag_li[1]).show();
                    		jQuery(l_dom_menu_tag_li[2]).hide();
                    		jQuery(l_dom_ccm_notif).hide();
                    		jQuery(l_dom_menu_tag_li[3]).hide();
                    	}
                      break;
                    }
                case "refresh_notif":
                    {
                        l_dom_ccm_notif = mx("#ccm_notif");

                        var  offset_left = obj.data.l_notif_count < 10 ? 5 : 3;

                        if(!l_dom_ccm_notif)
                        {

        	                if(determine_the_version({type:"Anti",version:version_Category.Snapshot_version}))
        	                {
        	              	     return;
        	                }
        	                if(obj.data.l_notif_count==0)
        	                {
        	                      return;
        	                }
                            l_dom_ccm_notif = dom_create_child(main_menu_left, "div", "ccm_notif");

                            l_dom_ccm_notif.innerHTML =
                                "<div>"
                                +   "<img style='width:15px;cursor:pointer' src='/imgs/notif_ico.png'></img>"
                                +"</div>"
                                +"<div style='color:#fff;font-size:7px;font-weight:900;left:" + offset_left + "px;position:absolute;top:4px'>"
                                +   "<span id='ccm_notif_count' style='cursor:pointer'>" + obj.data.l_notif_count + "</span>"
                                +"</div>";

                            l_dom_ccm_notif.style.cssText = "position:absolute;left:" + (l_dom_menu_tag_li[3].offsetLeft + 54) + "px;top:3px";

                            l_dom_ccm_notif.onclick = function() {
                                var i, length,
                                    notif_detail_dom = mx("#notif_detail"),
                                    notif_dom_bg = mx("/div", l_dom_ccm_notif)[0];

                                if(!notif_detail_dom)
                                {
                                    notif_detail_dom = dom_create_child(page, "div", "notif_detail");
                                    notif_detail_header_dom = dom_create_child(notif_detail_dom, "div", "notif_detail_header");
                                    notif_detail_content_dom = dom_create_child(notif_detail_dom, "div", "notif_detail_content");

                                    notif_detail_header_dom.innerHTML = mcs_alarm;

                                    l_inner_html = "<ul>";
                                    for(i in g_notif_info)
                                    {
                                        if(g_notif_info.hasOwnProperty(i) && g_notif_info[i])
                                        {
                                            l_inner_html += ("<li><div style='float:left;margin-left:10px'>" + i.substr(3) + "</div>"
                                                    + "<div style='float:right;margin-right:10px'>" + g_notif_info[i].length + "</div></li>");
                                        }
                                    }
                                    l_inner_html += "</ul>";

                                    notif_detail_content_dom.innerHTML = l_inner_html;
                                    var detail_offset_height = notif_detail_dom.offsetHeight;
                                    notif_detail_dom.style.cssText = "height:0px;top:" + (l_dom_ccm_notif.offsetTop + notif_dom_bg.offsetHeight) + "px;"
                                        + "left:" + l_dom_ccm_notif.offsetLeft + "px;";

                                    jQuery(notif_detail_dom).animate({top:"+=" + notif_detail_header_dom, height:detail_offset_height},
                                            {queue:false, duration:200, easing:"linear"});

                                    var notif_detail_li = mx("/li", notif_detail_dom);
                                    length = notif_detail_li.length;
                                    for(i = 0; i < length; ++i)
                                    {
                                        notif_detail_li[i].onclick = function() {
                                            g_select_device_ipc = mx("/div", this)[0].innerHTML;
                                            var pos = g_device_list_link.pos("sn_" + g_select_device_ipc);
                                            l_parent_callback({type:"change_select_device_style", data:pos});
                                            jQuery(l_dom_menu_tag_li[3]).click();
                                            page[s_removeChild](notif_detail_dom);
                                            notif_detail_dom = null;
                                            l_dom_ccm_notif.parentNode.removeChild(l_dom_ccm_notif);
                                        }
                                    }
                                    //notif_detail_dom.onmousedown = function(e) {
                                        //drag(this, e || window.event, null, null);
                                    //};

                                    var temp_func = function(evt) {
                                        var e = evt || window.event, target = e.target || e.srcElement;
                                        if(!target || is_ancestor(notif_detail_dom, target)) return;

                                        if(notif_detail_dom)
                                        {
                                            jQuery(notif_detail_dom).fadeOut("normal", function(){
                                                page[s_removeChild](notif_detail_dom);
                                                notif_detail_dom = null;
                                            });
                                        }
                                        g_j_page.unbind("mouseup", temp_func);
                                    };
                                    g_j_page.bind("mouseup", temp_func);
                                }
                                else
                                {
                                    jQuery(notif_detail_dom).fadeOut("normal", function(){
                                        //page[s_removeChild](notif_detail_dom);
                                        notif_detail_dom = null;
                                    });
                                }
                            }
                        }
                        else
                        {
                            if(obj.data.l_notif_count == 0)
                            {
                                l_dom_ccm_notif.innerHTML = "";
                                l_dom_ccm_notif.parentNode.removeChild(l_dom_ccm_notif);
                                l_dom_ccm_notif = null;
                            }
                            else
                            {
                                mx("#ccm_notif_count").parentNode.style.left = offset_left + "px";
                                mx("#ccm_notif_count").innerHTML = obj.data.l_notif_count;
                            }
                        }
                        break;
                    }
                case "refresh_notif_latest":
                    {
                        if(obj.data.now_item.code=="online" ||obj.data.now_item.code=="offline" || obj.data.now_item.code=="info")
                        {
                            break;
                        }
                        l_dom_notif_latest.innerHTML = new Date(obj.data.now_item.date * 1000).format("yyyy-MM-dd hh:mm:ss")
                            + " " + obj.data.now_item.sn
                            + " " + log_comparison_table[obj.data.now_item.type] + " " + (log_comparison_table[obj.data.now_item.code] || "");

                        jQuery(l_dom_notif_latest).stop(true,true).hide().fadeIn(500).delay(5000).fadeOut(400);
                        break;
                    }
                case "delete_notif_info":
                    {
                        if(mx("#ccm_notif_count")) mx("#ccm_notif_count").innerHTML = obj.data.l_notif_count;
                        if(obj.data.l_notif_count <= 0)
                        {

                        	if(l_dom_ccm_notif){
                               l_dom_ccm_notif.innerHTML = "";
                               l_dom_ccm_notif.parentNode.removeChild(l_dom_ccm_notif);
                               l_dom_ccm_notif = null;
                          }
                        }
                        break;
                    }
                case "get_profiles":
                    {
                       l_get_profiles=obj.data;
                       break;
                    }
                case "destroy":
                    {
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                case "wifs_replace"://mmq return s.wifi handle events
                    {
                       l_parent_callback({type:"select_net"});
                       break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_menu_box.");
            }
        }
        if(l_page_flag == "cntr_page")
        {
            l_dom_menu_left = dom_create_child(l_me_parent, "div", "main_menu_left");
            l_dom_menu_center = dom_create_child(l_me_parent, "div", "main_menu_center");
            l_dom_menu_right = dom_create_child(l_me_parent, "div", "main_menu_right");
            var colors=g_hostname=="www.luxcamapp.eu"?"red":"#80a52d";
            l_dom_menu_left[s_innerHTML] +=
                "<ul style='margin-left:" + ((l_me_parent.offsetWidth - g_cntr_content_w) / 2) + "px;'>"
                +   "<li style='padding-left:0px;padding-top:1px;position:relative;float:left;height:30px;width:40px'>"
                +       "<div id='home_logo_icon'></div>"
                +   "</li>"
                +   "<li class='menu_page_li'>"
                +       "<div class='menu_split_point' style='position:absolute'></div>"
                +       "<div style='margin-top:4px;font-size:18px;font-weight:800;color:"+colors+";letter-spacing:5px;' title='" + mcs_home + "'>" + mcs_home + "</div>"
                +   "</li>"
                +   "<li class='menu_page_li'>"
                +       "<div class='menu_split_point' style='position:absolute'></div>"
                +       "<div style='margin-top:8px;' title='" + mcs_playback + "'>" + mcs_playback + "</div>"
                +   "</li>"
                +   "<li class='menu_page_li'>"
                +       "<div class='menu_split_point' style='position:absolute'></div>"
                +       "<div style='margin-top:8px;' title='" + mcs_messages + "'>" + mcs_messages + "</div>"
                +   "</li>"
                +   "<li class='menu_page_li'>"
                +       "<div class='menu_split_point' style='position:absolute'></div>"
                +       "<div style='margin-top:8px;' title='" + mcs_settings + "'>" + mcs_playback + "</div>"
                +   "</li>"
                +   "<li class='menu_page_li'>"
                +       "<div></div>"
                +       "<div style='margin-top:8px;' title='" + mcs_settings + "'>" + mcs_settings + "</div>"
                +   "</li>"
                +"</ul>";
            l_dom_menu_tag_li = mx ("/li", mx("#main_menu_left"));

            var i, length,
                menu_split_point = mx(".menu_split_point");
            for(i = 0, length = menu_split_point.length; i < length; ++i)
            {
                background_img_set(menu_split_point[i], sub_img_column);
            }
            if(g_now_lang != "ch")
            {
                var menu_page_li = mx(".menu_page_li");
                length = menu_page_li.length;
                for(i = 0; i < length; ++i)
                    mx("/div", mx(".menu_page_li")[i])[1][s_style].letterSpacing = "0px";
            }

            l_dom_menu_center[s_innerHTML] = "<div id='notif_latest'></div>";
            l_dom_notif_latest = mx("#notif_latest");

            l_dom_menu_right[s_innerHTML] =
               "</div>"
                +"<div id='menu_change_password_page'></div>"
                +"<div id='guest_change_password_page'></div>"
                +"<div id='binding_email_page' style='height:150px;'></div>"
                +"<div id='normal_install' >"
                +"</div>"
                +"<div id='normal_install_page'></div>"
                +"<div id='plugin_install' style='display:none;float:left;'>"
                +   "<div id='plugin_install_left'>"
                +       "<img src='/imgs/plugin_install_ico_out.png'></img>"
                +   "</div>"
                +   "<div id='plugin_install_right'>"
                +       "<span>" + mcs_install_the_plug + "</span>"
                +   "</div>"
                +"</div>";
                l_dom_normal_install_page= mx("#normal_install_page");
                l_dom_normal_install_page[s_innerHTML]=
                     "<div id='normal_install_inner'>"
                     +   "<h2 >" + mcs_set_video_size + ":</h2>"
                     +   "<img class='normal_install_split_bar' src='/imgs/split_bar.png'></img>"
                     +   "<div  id='play_setup_body_dom'></div>"
                     +   "<img class='normal_install_split_bar' src='/imgs/split_bar.png'></img>"
                     +   "<div id='register_user_pass'>"
                     +   "<h2 id='menu_change_password' >" + mcs_password + "</h2>"
                     +   "<img class='normal_install_split_bar' src='/imgs/split_bar.png'></img>"
                     +   "<h2 id='guest_change_password' >" + mcs_guest_password + "</h2>"
                     +   "<img class='normal_install_split_bar' src='/imgs/split_bar.png'></img>"
                     +   "</div>"
                     +   "<div id='system_plug_faq'>"
                     +   "<h2 id='system_plug_option' >" + mcs_option + "</h2>"
                     +   "<img class='normal_install_split_bar' src='/imgs/split_bar.png'></img>"
                     +   "</div>"
                     +   "<h2 id='system_logout' >" + mcs_exit + "</h2>"
                     +   "<img class='normal_install_split_bar' src='/imgs/split_bar.png'></img>"
					           +   "<h2 id='system_about' >" + mcs_about + "</h2>"
                     +"</div>"
                     +   "<span class='caret_arrow_up' style='position:absolute;top:-6px;left:150px;'></span>";
                l_dom_normal_install_page.style.right =((l_me_parent.offsetWidth - g_cntr_content_w) / 2  )+ "px";

                l_dom_guest_change_password_page= mx("#guest_change_password_page");
                l_dom_guest_change_password_page[s_innerHTML]=
                "<div id='guest_change_password_inner'>"
                +   "<h2>" +mcs_change+mcs_guest_password + ":</h2>"
                +   "<div class='placeholding_input'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_first' id='current_guest_password' type='text' value='" + mcs_admin_password + "'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_first' id='guest_password' type='password' style='display:none;color:#404040'>"
                +   "</div>"
                +   "<div class='placeholding_input'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_mid' id='new_show_guest_password' type='text' value='" + mcs_guest_password + "'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_mid' id='new_guest_password' type='password' style='display:none;color:#404040'>"
                +   "</div>"
                +   "<div class='placeholding_input'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_last' id='new_show_guest_confirm' type='text' value='" + mcs_confirm_new_password+ "'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_last' id='new_guest_confirm' type='password' style='display:none;color:#404040'>"
                +   "</div>"
                +   "<button class='ok_button' id='change_guest_button'>" + mcs_change + "</button>"
                +"</div>";

                l_dom_current_guest_password = mx("#current_guest_password");
                l_dom_guest_password         = mx("#guest_password");
                l_dom_new_show_guest_password= mx("#new_show_guest_password");
                l_dom_new_guest_password     = mx("#new_guest_password");
                l_dom_new_show_guest_confirm = mx("#new_show_guest_confirm");
                l_dom_new_guest_confirm      = mx("#new_guest_confirm");
                l_dom_change_guest_button    = mx("#change_guest_button");
                l_dom_menu_change_password_page = mx("#menu_change_password_page");
                
                l_dom_binding_email_page = mx("#binding_email_page");
                l_dom_binding_email_page[s_innerHTML] =
                "<div id='binding_email_inner'>"
                +   "<h2>" + mcs_binding_email + ":</h2>"
                +   "<div class='placeholding_input'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_first' id='current_email_address' type='text' value='" + mcs_input_email_addr + "'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_first' id='email_address' type='text' style='display:none;color:#404040'>"
                +   "</div>"
                +   "<div class='placeholding_input'>"
                +       "<textarea class='standard_inputs_normal_ex pop_menu_mid' style='line-height:normal;width:214px;overflow:hidden;font-size:14px;'>" + mcs_binding_email_prompt + "</textarea>"
                +       "<input class='ok_button' type='button' style='margin-top:45px;' id='binding_email_button' value ='" + mcs_ok + "'>"
                +   "</div>"
                +"</div>";
                
                l_dom_current_email_address = mx("#current_email_address");
                l_dom_email_address = mx("#email_address");
                l_dom_binding_email_button = mx("#binding_email_button");
                
            l_dom_menu_change_password_page[s_innerHTML] =
                "<div id='menu_change_password_inner'>"
                +   "<h2>" + mcs_modify_password + ":</h2>"
                +   "<div class='placeholding_input'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_first' id='current_show_password' type='text' value='" + mcs_admin_password + "'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_first' id='current_password' type='password' style='display:none;color:#404040'>"
                +   "</div>"
                +   "<div class='placeholding_input'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_mid' id='new_show_password' type='text' value='" + mcs_new_password + "'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_mid' id='new_password' type='password' style='display:none;color:#404040'>"
                +   "</div>"
                +   "<div class='placeholding_input'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_last' id='new_show_confirm' type='text' value='" + mcs_confirm_new_password+ "'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_last' id='new_confirm' type='password' style='display:none;color:#404040'>"
                +   "</div>"
                +   "<button class='ok_button' id='change_pass_button'>" + mcs_change + "</button>"
                +"</div>";
            l_dom_current_show_password  = mx("#current_show_password");
            l_dom_current_password       = mx("#current_password");
            l_dom_new_show_password      = mx("#new_show_password");
            l_dom_new_password           = mx("#new_password");
            l_dom_new_show_confirm       = mx("#new_show_confirm");
            l_dom_new_confirm            = mx("#new_confirm");
            l_dom_change_button          = mx("#change_pass_button");
            l_dom_normal_install         = mx("#normal_install");
            l_dom_system_logout          = mx("#system_logout");
            l_dom_system_about           = mx("#system_about");
            l_dom_guest_change_password  = mx("#guest_change_password");
            l_dom_system_plug_option     = mx("#system_plug_option");

            l_dom_binding_email_page.style.right =((l_me_parent.offsetWidth - g_cntr_content_w) / 2  )+ "px"; 
            l_dom_menu_change_password_page.style.right =((l_me_parent.offsetWidth - g_cntr_content_w) / 2  )+ "px";
            l_dom_guest_change_password_page.style.right=((l_me_parent.offsetWidth - g_cntr_content_w) / 2 )+"px";
            l_dom_menu_center.style.width = (l_me_parent.offsetWidth - l_dom_menu_left.offsetWidth - l_dom_menu_right.offsetWidth -10) + "px";
            mx("#normal_install").style.right = ((l_me_parent.offsetWidth - g_cntr_content_w) / 2 + 25 )+ "px";
            if(g_login_status == "register_user")
            {
               mx("#register_user_pass").style.display = "block";
            }
            else
            {
               mx("#register_user_pass").style.display = "none";
            }
            
            if(g_domain_oems_serenelifehome)
            {
            	 var serenelifehome_faq = "<h2 id='system_faq' >" + mcs_help_information + "</h2><img class='normal_install_split_bar' src='/imgs/split_bar.png'></img>";
               jQuery("#system_plug_faq").append(serenelifehome_faq);
               l_dom_system_faq = mx("#system_faq");
            }
            
            /*if(g_domain_oems_mipcm)
            {
            	 var mipcm_binding_email = "<h2 id='system_binding_email' >" + mcs_binding_email + "</h2><img class='normal_install_split_bar' src='/imgs/split_bar.png'></img>";
            	 jQuery("#system_plug_faq").append(mipcm_binding_email);
            	 l_dom_system_binding_email = mx("#system_binding_email");
            }*/            
            add_event(obj);
        }
        else if(l_page_flag == "login_page"){
            l_dom_menu_left = dom_create_child(l_me_parent, "div", "login_menu_left");
            l_dom_menu_center = dom_create_child(l_me_parent, "div", "login_menu_center");
            l_dom_menu_right = dom_create_child(l_me_parent, "div", "login_menu_right");

            l_dom_menu_center.style.width = (l_me_parent.offsetWidth - l_dom_menu_left.offsetWidth - l_dom_menu_right.offsetWidth - 10) + "px";

            if(l_ipc_type == "MS"){
                l_dom_menu_right[s_innerHTML] =
                    "<div id='download_div' style='right:" + ((l_me_parent.offsetWidth - g_cntr_content_w) / 2 + 170) + "px;position:absolute;'>"
                    +   "<span>" + mcs_download + "</span>"
                    +   "<b class='caret_arrow'></b>"
                    +"</div>"
                    +"<div id='download_page'></div>";
            }
            l_dom_menu_center[s_innerHTML] += "<div id='use_https' style='float:left;color:#bbb;line-height:35px;margin-left:20px;'>For additional security we recommend that you use <a target='_blank' href='https://"+g_hostname+"' style='color:#fff;'>https://"+g_hostname+"</a></div>";
            if(window.fujikam=="fujikam"||location.protocol=="https:"||g_now_lang!="en"){
                jQuery("#use_https").hide();
            }else{
                jQuery("#use_https").show();
            }
            l_dom_menu_right[s_innerHTML] +=
                "<div style='right:" + ((l_me_parent.offsetWidth - g_cntr_content_w) / 2 + 280) + "px;position:absolute;'>"
                +   "<select id='select_language'>"
                +       "<option value='zh'>中文(简体)</option>"
                +       "<option value='tw'>中文(繁体)</option>"
                +       "<option value='ja'>日本語</option>"
                +       "<option value='ko'>한국의</option>"
                +       "<option value='de'>Deutsch</option>"
                +       "<option value='fr'>française</option>"
                +       "<option value='es'>española</option>"
                +       "<option value='ar'>العربية</option>"
                +       "<option value='pt'>português</option>"
                +       "<option value='it'>italiana</option>"
                +       "<option value='ru'>русский</option>"
                +       "<option value='en'>English</option>"
                +   "</select>"
                +"</div>";
            if(l_ipc_type == "MS"){
                //Displays the login page download options
                var srv=g_device_list_obj["sn_" + "MS"];
                l_dom_menu_right[s_innerHTML] +=
                     "<div id='register_div' style='right:" + ((l_me_parent.offsetWidth - g_cntr_content_w) / 2 + 50) + "px;_width:60px;'>"
                    +   "<span>" + mcs_sign_up + "</span>"
                    +   "<b class='caret_arrow'></b>"
                    +"</div>";

                l_dom_mobile_client_download = mx("#mobile_client_download");
                l_dom_mobile_client_install = mx("#mobile_client_install");
                l_dom_android_download = mx("#android_download");
                l_dom_ios_download = mx("#ios_download");
                l_dom_download_div = mx("#download_div");
                l_dom_download_page = mx("#download_page");
                if(download_page){
                    var inner_html = "";
                    var oem_obj = g_domain[g_hostname];
                    if( oem_obj != null && oem_obj.download != null ){
                        var download = oem_obj["download_"+g_now_lang];
                        if( download == null ){
                            download = oem_obj["download"];
                        }
                        if( download != null ){
                            for(var i=0;i<download.length;i++){
                                var url="";
                                var item = download[i];
                                if(item.url!=null){
                                    url = item.url;
                                }
                                else if(item.file!=null){
                                	var server_ip = g_server_device.substring(0,g_server_device.lastIndexOf(":"));
                                    var sever_addr = "61.147.109.92:7080";
                                    if(!g_inland_server_ip_ok){
                                        sever_addr = "209.133.212.170:7080";
                                    }
                                    url = window.location.protocol + "//" + sever_addr + "/" + item.file;
                                }
                                if( url != "" ){
                                    var target_content = "";
                                    if( item.win != null ){
                                        target_content = "target='download" + i + "'";
                                    }
                                    inner_html+="<div class='download_input'><a href='" + url + "' " + target_content + "> <div class='download_inputs_normal_ex pop_menu_first' id='android_client' type='text'>"+ item.content + " </div></a></div>"
                                }
                            }
                        }
                        var download_page_inner=dom_create_child(download_page,"div","download_page_inner");
                        download_page_inner[s_innerHTML]=inner_html;
                        download_page.style.right =((l_me_parent.offsetWidth - g_cntr_content_w) / 2 +170 )+ "px";
                    }
                    if( inner_html == ""){
                        jQuery(download_div).hide();
                    }
                }
            }
            l_dom_menu_select_language = mx("#select_language");
            add_event(obj);

            var i, length,lang_choice = mlocal_storage.get("language_choice_info");
            length = l_dom_menu_select_language.length;
            if(lang_choice){
                for(i = 0; i < length; ++i){
                    if(l_dom_menu_select_language[i].value == lang_choice)
                        l_dom_menu_select_language[i].selected = true;
                }
            }else{
                if(g_now_lang == "en"){
                    for(i = 0; i < length; ++i){
                        if(l_dom_menu_select_language[i].value == "en")
                            l_dom_menu_select_language[i].selected = true;
                    }
                }
                else if(g_now_lang == "ch"){
                    for(i = 0; i < length; ++i){
                        if(l_dom_menu_select_language[i].value == "chinese")
                            l_dom_menu_select_language[i].selected = true;
                    }
                }else{
                    for(i = 0; i < length; ++i){
                        if(l_dom_menu_select_language[i].value == g_now_lang)
                            l_dom_menu_select_language[i].selected = true;
                    }
                }
            }
            jQuery(l_dom_menu_select_language).tzSelect();
            if(g_domain_oems_vimtag){
            	  jQuery("#menu_box").hide();
            }
        }
        function create_control_play_setup(obj){
            if(obj.profiles){
                l_dom_play_setup = mx("#control_play_setup");
                if(!l_dom_play_setup){
                    var l_inner_html = "",
                        i, length = obj.profiles.length,
                        little_arrow = dom_create_child(l_me_parent, "span", "", "little_arrow");
                    l_dom_play_setup_body=mx("#play_setup_body_dom");
                    if(!obj.profiles[0].def){
                      var token_array=new Array(mcs_hd_1280x720,mcs_normal_640x360,mcs_half_320x180,mcs_small_160x90);
                    }else {
                    	var token_array=new Array("1080P",mcs_normal_640x360,mcs_half_320x180,mcs_small_160x90);
                    }
                    for(i = length-1; i >= 0; i--){
                        if(obj.profiles[i].token){
                            l_inner_html += "<li class='play_setup_li' value=" + obj.profiles[i].token + ">     <div class='profiles_play_token'></div>"
                                + "<span>" +token_array[i] + "</span></li>";
                        }else{
                            log("error:create_control_play_setup's profiles[" + i + "].VideoEncoderConfiguration is null in class_home_control_box.");
                            return -1;
                        }
                    }
                    l_dom_play_setup_body[s_innerHTML] = "<ul>" + l_inner_html + "</ul>";
                    var profile_token_choice = mlocal_storage.get("PlayProfile");                    
                    var play_setup_li = mx(".play_setup_li");
                    var profile_play_token = mx(".profiles_play_token");
                    var i, j, length = play_setup_li.length;
                    for(i = 0; i < length; ++i){
                        background_img_set(profile_play_token[i], sub_img_profile_token0);
                        play_setup_li[i].flag = 1;
                        play_setup_li[i].checked = false;
                        //Resolution Select event
                        play_setup_li[i].onclick = function() {
                            this.checked = this.checked ? false : true;
                            if(this.checked)
                            {   //The resolution of local storage options
                                mlocal_storage.set("PlayProfile",  this.getAttribute("value"));
                                if(g_select_inner_ipc){
                                  var pos = parseInt(g_select_inner_window.charAt(g_select_inner_window.length - 1));
                                  l_parent_callback({type:"profiles_play",pos:pos,profile_token:this.getAttribute("value")});
                                }
                                for(j = 0; j < length; ++j){
                                   background_img_change_pos(profile_play_token[j], sub_img_profile_token0);
                                }
                                background_img_change_pos(mx(".profiles_play_token", this)[0], sub_img_profile_token1);
                                if(this.flag)
                                    close_name_pop_menu({name:"play"});
                                else
                                    this.flag = 1;
                            }
                        };
                    }
                    if(profile_token_choice){
                        for(i = 0; i < length; ++i){
                            if(play_setup_li[i].getAttribute("value") == profile_token_choice){
                                play_setup_li[i].flag = 0;
                                jQuery(play_setup_li[i]).click();
                            }
                        }
                    }else{
                        if(g_network_environ == "private")
                            jQuery(play_setup_li[3]).click();
                        else if(g_network_environ == "public")
                            jQuery(play_setup_li[2]).click();
                    }
                    page.onmouseup = function(evt) {
                        var e = evt || window.event, target = e.target || e.srcElement;
                        if(!target || is_ancestor(l_dom_play_setup, target)) return;
                        for(i = 0; i < length; ++i){
                            if(mx(".profiles_play_token")[i]){
                                mx(".profiles_play_token")[i].onclick = "";
                            }
                        }
                        close_name_pop_menu({name:"play"});
                    };
                }
            }
        }
        function close_name_pop_menu(obj){
            var i , length,
                control_name_setup = mx("#control_" + obj.name + "_setup"),
                name_setup_li = mx("." + obj.name + "_setup_li"),
                little_arrow = mx(".little_arrow")[0];

            if(control_name_setup && name_setup_li){
                length = name_setup_li.length;
                for(i = 0; i < length; ++i){
                    name_setup_li[i].onclick = "";
                }
                l_me_parent[s_removeChild](control_name_setup);
                control_name_setup = null;
            }
            if(little_arrow){
                l_me_parent[s_removeChild](little_arrow);
                little_arrow = null;
            }
            page.onmouseup = "";
        }
        l_dom_net_setting=new net_setting_class({parent:l_me_parent, on_event:function(obj){return on_event(obj);}});
    }
    function class_device_list_box(obj)
    {
        var l_me = this,l_inner_html = "",
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_device_list_panel,
            l_dom_device_list_arrow,
            l_dom_device_list_inner,
            l_dom_device_list_header,
            l_dom_device_list_content,
            l_dom_device_list_footer,
            l_dom_list_classDom,
            l_dom_list_state_classDom,
            l_dom_list_span_classDom,
            l_dom_device_add_menu,
            l_dom_device_edit_ico,
            l_dom_device_add_ico,
            l_dom_device_refresh_ico,
            l_dom_device_invalid_div,
            l_dom_device_invalid_close,
            l_dom_device_invalid_inner,
            l_dom_device_invalid_content,
            l_dom_device_invalid_Prompt,
            l_cable_page_create_obj,
            l_option_cable_page,
            l_dom_net_skip,l_dom_net_next,l_dom_net_cancel,l_dom_net_setting,
            l_profiles=[{token:"p0",width:1280,height:720},{token:"p1",width:640,height:360},{token:"p2",width:320,height:180},{token:"p3",width:160,height:90}],
            l_add_waiting_flag = 0, //Add to spacing device, namely a second adding device has not yet responded, the system does not allow click Add the device again
            // The current number is used to store information
            l_device_list_man_qid={};

        l_dom_device_list_panel = dom_create_child(l_me_parent, "div", "device_list_panel");
        l_dom_device_list_arrow =  dom_create_child(l_me_parent, "span", "device_list_arrow");
        l_dom_device_list_inner = dom_create_child(l_dom_device_list_panel, "div", "device_list_inner", "standard_box_inner_style");
        l_dom_device_list_header = dom_create_child(l_dom_device_list_inner, "div", "device_list_header");
        l_dom_device_list_content = dom_create_child(l_dom_device_list_inner, "div", "device_list_content");
        l_dom_device_list_footer = dom_create_child(l_dom_device_list_inner, "div", "device_list_footer");
        //Device list at the bottom of the menu
        l_dom_device_list_footer[s_innerHTML] =
            "<div id='device_edit_div'><div id='device_edit_ico'></div></div>"
            +"<div id='device_add_div'><div id='device_add_ico'></div></div>"
            +"<div id='device_Refresh_div'><div id='device_Refresh_ico'></div></div>";
        l_dom_device_edit_ico = mx("#device_edit_ico");
        l_dom_device_refresh_ico = mx("#device_Refresh_ico");
        l_dom_device_add_ico = mx("#device_add_ico");
        background_img_set(l_dom_device_edit_ico, sub_img_device_edit);
        background_img_set(l_dom_device_refresh_ico, sub_img_device_search);
        background_img_set(l_dom_device_add_ico, sub_img_device_add);
        //If ipc connectivity device does not appear under the list
        if(g_login_status == "ipc")
        {
            l_dom_device_list_footer[s_style].display = "none";
        }

        l_dom_device_list_footer[s_style][s_width] = g_panel_box_w + "px";
        g_device_list_inner_h = g_panel_box_inner_h - l_dom_device_list_footer.offsetHeight;
        l_dom_device_list_panel[s_style][s_cssText] = "width:" + g_panel_box_w + "px;height:" + g_panel_box_h + "px;left:" + g_panel_box_offset + "px;";
        l_dom_device_list_inner[s_style][s_cssText] = "width:" + g_panel_box_w + "px;height:" + g_device_list_inner_h + "px;";
        l_dom_device_list_arrow[s_style].top = g_panel_box_h + 8 + "px";
        function get_definition(){
        	  function dev_info_get_ack(msg,ref){
        	      if(msg&&msg.result==""){
        	        if(!msg.def){
                    l_profiles=[{token:"p0",width:1280,height:720},{token:"p1",width:640,height:360},{token:"p2",width:320,height:180},{token:"p3",width:160,height:90}];
        	        }else{
        	          if(msg.def=="HD1080p"){
        	              l_profiles=[{token:"p0",width:1280,height:720,def:1},{token:"p1",width:640,height:360},{token:"p2",width:320,height:180},{token:"p3",width:160,height:90}];
        	          }else if(msg.def=="HD720p"){
        	              l_profiles=[{token:"p0",width:1280,height:720},{token:"p1",width:640,height:360},{token:"p2",width:320,height:180},{token:"p3",width:160,height:90}];
        	          }
        	        }
        	      }
        	  }
            ms.send_msg("dev_info_get",{sn:g_select_device_ipc},null,dev_info_get_ack);
        }
        //Create a list of devices
        function create_device_list(obj)
        {
            var i, j, length, sn, pos, old_sn,type;
            if(mcloud_agent.devs.list.length == 0) return;
            if(l_dom_device_list_content[s_innerHTML] == ""){
              //Create a list of devices

              l_inner_html = "<ul id='device_list_tree'>";
              for( length = mcloud_agent.devs.list.length, i = 0; i < length; i++)
              {
              	 var data = mcloud_agent.devs.list[i];
              	 if(!data)  continue;
              	 if(data.stat == "Online")
              	 {
                   l_inner_html += "<li class='device_list_li' state='online'>"
                      + "<div class='omit_layer'><div class='device_list_li_state'  title=" + mcs_connnected + " state='normal'></div>";
              	 }
              	 else if(data.stat == "Offline")
              	 {
                   l_inner_html += "<li class='device_list_li' state='offline'>"
                      + "<div class='omit_layer'><div class='device_list_li_state' title=" + mcs_not_connected + " state='not_connected'></div>";
              	 }
              	 else if(data.stat == "InvalidAuth")
              	 {
                    l_inner_html += "<li class='device_list_li' state='invalid_auth'>"
                      + "<div class='omit_layer'><div class='device_list_li_state' title=" + mcs_invalid_password + " state='password_correction'></div>";
              	 }
              	 l_inner_html += "<span class='device_list_li_span' title=" + data.sn + "&#13;" + data.addr + " sn=" + data.sn + ">" + ((data.nick.trim() != "")?data.nick:data.sn) + "</span>";
              	 if(i < length-1)
                   l_inner_html += "<img class='device_list_split_bar' src='/imgs/split_bar.png'></img></div>"
                       +"</li>";
              }
              l_inner_html += "</ul>";
              l_dom_device_list_content[s_innerHTML] = l_inner_html;
              jQuery(l_dom_device_list_content).mCustomScrollbar();

              l_dom_list_classDom = mx(".device_list_li");
              l_dom_list_state_classDom = mx(".device_list_li_state");
              l_dom_list_span_classDom = mx(".device_list_li_span");
            }else{
            	  for(length = mcloud_agent.devs.list.length, i = 0; i < length; i++)
                {
                    var data = mcloud_agent.devs.list[i];
                    if(l_dom_list_classDom[i]==null )
                    {
                        l_dom_device_list_content[s_innerHTML] ="";
                        create_device_list({type:"create"});
                        return;
                    }
                    if(data.stat == "Online")
                    {
                        l_dom_list_classDom[i].setAttribute("state","online");
                        l_dom_list_state_classDom[i].setAttribute("state","normal");
                        l_dom_list_state_classDom[i].setAttribute("title",mcs_connnected);

                    }
                    else if(data.stat == "Offline")
                    {
                        l_dom_list_classDom[i].setAttribute("state","offline");
                        l_dom_list_state_classDom[i].setAttribute("state","not_connected");
                        l_dom_list_state_classDom[i].setAttribute("title",mcs_not_connected);
                    }
                    else if(data.stat == "InvalidAuth")
                    {
                        l_dom_list_classDom[i].setAttribute("state","invalid_auth");
                        l_dom_list_state_classDom[i].setAttribute("state","password_correction");
                        l_dom_list_state_classDom[i].setAttribute("title",mcs_invalid_password);
                    }
                }
                jQuery(l_dom_device_list_content).mCustomScrollbar("update");
            }

            for(length = mcloud_agent.devs.list.length, i = 0; i < length; i++)
            {
            	  var data = mcloud_agent.devs.list[i];
            	  //The equipment list information stored into g device_list obj in
                  g_device_list_obj["sn_" + data.sn] = {name:name,type:mcloud_agent.devs.get(data.sn).type, ip:mcloud_agent.devs.get(data.sn).addr, isParent:true,
                         state:{online:"Online", view:0, recording:0, call:0, playback:0,playback_download:0}};  //["sn_" + data.sn]
            }
            //Device status to the list of devices put Figure
            for(i = 0, length = l_dom_list_state_classDom.length; i < length; ++i)
            {
                if(l_dom_list_state_classDom[i].getAttribute("state") == "normal")
                    background_img_set(l_dom_list_state_classDom[i], sub_img_status0);
                else if(l_dom_list_state_classDom[i].getAttribute("state") == "password_correction")
                    background_img_set(l_dom_list_state_classDom[i], sub_img_status1);
                else if(l_dom_list_state_classDom[i].getAttribute("state") == "not_connected")
                    background_img_set(l_dom_list_state_classDom[i], sub_img_status2);
            }
            length = l_dom_list_span_classDom.length;
            for(i = 0; i < length; ++i)
            {
            	  //Event status Normal equipment
                if(l_dom_list_classDom[i].getAttribute("state") == "online")
                {   //State Normal equipment click event
                    l_dom_list_span_classDom[i].onclick = function() {
                        old_sn = g_select_device_ipc;
                        g_select_device_ipc = this.getAttribute("sn");
                        pos = mcloud_agent.devs.get_index(g_select_device_ipc);
                        type= mcloud_agent.devs.get(g_select_device_ipc).type;
                        var dev_img_ver=mcloud_agent.devs.get(g_select_device_ipc).img_ver;
                        //If you click on the same equipment is doing nothing
                        //if((old_sn == g_select_device_ipc)&& (type != "BOX")) return;

                        //Style changes to selected items
                        change_select_device_style(pos);

                        //Change the menu bar according to device version
        	            	if(determine_the_version({type:"Positive",version:version_Category.Info_version}) )
        	            	{
        	              	  l_parent_callback({type:"refresh_menu",data:2});
        	            	}

                        if((g_now_page == "home" || g_now_page == "playback")/* && type != "BOX"*/)
                        {   //Processing Change Device
                            l_parent_callback({type:"change_select_ipc", data:{old_sn:old_sn}});
                            if(this.getAttribute("window_id"))
                                mx("#" + this.getAttribute("window_id")).click_ex();
                            if(determine_the_version({type:"Anti",version:version_Category.Snapshot_version}) && g_now_page == "home")
        	                	{    //Change the menu bar
        	                     //l_parent_callback({type:"refresh_menu",data:0});
        	                	}
        	                	else if(determine_the_version({type:"Anti",version:version_Category.Snapshot_version})  && g_now_page == "playback")
        	                	{
        	                     //l_parent_callback({type:"refresh_menu",data:1});
        	                	}
                        }
                        else if(g_now_page == "manager")//Set interface does not need to deal with changeselect ipc
                        {   //After setting interface switching equipment click on
                            jQuery("#product_information").click();
                            if(determine_the_version({type:"Positive",version:version_Category.Snapshot_version}))
        	                  {
        	                     //l_parent_callback({type:"refresh_menu",data:3});
        	                  }
        	                  if(type == "BOX")
        	                  {
        	                  jQuery(OSD).hide();
                              jQuery(alarm).hide();
                              jQuery(alarm_linkage).hide();
                              jQuery(record_setting).hide();
                              jQuery(others).hide();
                              jQuery(storage_device).hide();
        	                  }
                            if(!g_domain_oems_luxcamapp)
                            {
                              jQuery(notification).hide();
                            }
                            if((mcloud_agent.devs.get(g_select_device_ipc)).img_ver.substr(0,2) < "v2")
                            {
                              jQuery(storage_device).hide();
                            }
                        }
                        else if(g_now_page == "alarm")
                        {   //Remove red digital device list after
                            del_alarm_notification({sn:g_select_device_ipc});
                            l_parent_callback({type:"change_select_ipc"});
                            if(determine_the_version({type:"Anti",version:version_Category.Snapshot_version}))
        	                  {
        	                    //l_parent_callback({type:"refresh_menu",data:1});
        	                  }
                        }
                        else if(g_now_page == "timeline")
                        {
                            if(determine_the_version({type:"Positive",version:version_Category.Snapshot_version}))
        	                  {
        	                    // l_parent_callback({type:"refresh_menu",data:1});
        	                  }
                        }

                        if(type == "BOX")
        	            	{
        	            	    if(determine_the_version({type:"Positive",version:version_Category.Snapshot_version}))
        	                  {
        	                    l_parent_callback({type:"refresh_menu",data:5,click_index:(g_now_page == "manager")?5:4});
        	                    if(g_now_page != "manager")
        	                    {
        	                        //g_now_page = "timeline";
        	                        //l_parent_callback({type:"change_select_ipc"});
        	                    }
        	                    //return;
        	                  }
        	            	}
        	            	else if(dev_img_ver.substring(0,2)>="v2")
    	            	    {
    	            	        var t_index=(g_now_page == "home")?1:((g_now_page == "manager")?5:4);
    	            	        l_parent_callback({type:"refresh_menu",data:6,click_index:t_index});
    	            	        //if(g_now_page != "manager")l_parent_callback({type:"change_select_ipc"});
    	            	    }
        	            	else
    	            	    {
    	            	        var t_index=(g_now_page == "home")?1:
    	            	            ((g_now_page == "manager")?5:
    	            	            ((g_now_page == "playback")?2:
    	            	            ((g_now_page == "alarm")?3:2)));
    	            	         l_parent_callback({type:"refresh_menu",data:7,click_index:t_index});
  	            	      }
  	            	      get_definition();
                    };
                    //Double-click the event status is normal equipment
                    l_dom_list_span_classDom[i].ondblclick = function() {
                        var old_sn = g_select_device_ipc;
                        g_select_device_ipc = this.getAttribute("sn");
                        if(old_sn == g_select_device_ipc){
                        	if(g_is_playing == 1){
                        		return;
                        	}
                        }else{
                          pos = mcloud_agent.devs.get_index(g_select_device_ipc);
                          change_select_device_style(pos);
                        }
                        if(g_now_page != "home" || l_dom_list_classDom[pos].getAttribute("state") != "online") return;
                        if(g_is_playing == 1)
                        {
                           l_parent_callback({type:"delete_ipc", data:{node_sn:old_sn}});
                           l_parent_callback({type:"create_ipc", data:{node_sn:g_select_device_ipc}});
                        }
                        else
                        {
                           l_parent_callback({type:"create_ipc", data:{node_sn:g_select_device_ipc}});
                        }
                        get_definition();
                    };
                }
                //Device online but the password is wrong device events
                else if(l_dom_list_classDom[i].getAttribute("state") == "invalid_auth")
                {
                    l_dom_list_span_classDom[i].onclick = function() {
                    	  //If the ipc connection is using the device ID to sign in, then exit system
                        if(g_login_status == "ipc"){
                           system_pop_confirm_box({alert:true,str:mcs_password_expired, callback_func:function(){
                              jQuery("#system_logout").click();
                           }});
                        }
                        else
                        {
                           create_device_add_menu({parent:this, sn:this.getAttribute("sn"), type:"re_enter", direction:"bottom"});
                        }
                    };
                }
            }
            if(obj.type == "create"){
            		//If you have a choice of equipment is click the device entry equipment list
            		if(g_select_device_ipc){
               		 	pos = mcloud_agent.devs.get_index(g_select_device_ipc);
         				change_select_device_style(pos);
            		}
            }else{
            	 if(g_select_device_ipc){
            	 	  pos = mcloud_agent.devs.get_index(g_select_device_ipc);
            	 	  if(obj.data.change){
            	 	  	g_select_device_ipc = obj.data.old_sn;
            	 	  	jQuery(".device_list_li_span:eq(" + pos + ")").click();
            	 	  }else{
            	 	  	change_select_device_style(pos);
            	 	  }
            	 }
            }
        }

        //Style changes to selected items
        function change_select_device_style(index)   //from 0
        {
            device_list_li_span=mx(".device_list_li_span");
            for(var i=0;i<device_list_li_span.length;i++)
            {
                device_list_li_span[i][s_style].color = "#BBBBBB";
                device_list_li_span[i][s_style].fontSize ="14px";
            }
            if(device_list_li_span[index])
            {
               if(g_hostname=="www.luxcamapp.eu")
               {
                  device_list_li_span[index][s_style].color ="red";
               }
               else
               {
                  device_list_li_span[index][s_style].color = "#80a52d";
               }
               device_list_li_span[index][s_style].fontSize ="16px";
            }
        }
        function create_device_add_menu(obj)
        {
            var origin_left = 0, origin_top = 0,
                offset_left = 0, offset_top = 0,
                p = obj.parent, sn = obj.sn,
                add_device_sn,
                add_device_show_pw, add_device_pw,
                add_button,
                l_inner_html = "";

            if(l_dom_device_add_menu) return;
            while(p !== null)
            {
                origin_left += p.offsetLeft;
                origin_top += p.offsetTop;
                p = p.offsetParent;
            }
            l_dom_device_add_menu = dom_create_child(page, "div", "device_add_menu");
            l_inner_html = "<div id='device_add_menu_inner'>";
            //If the property is top of obj direction represented add new equipment for the bottom showing the password
            if(obj.direction == "top")
            {
                l_inner_html += "<h2>" + mcs_add_device + ":</h2>";
            }
            else if(obj.direction == "bottom")
            {
                l_inner_html += "<h2>" + mcs_re_enter_the_password + ":</h2>";
            }
            l_inner_html += "<div class='placeholding_input'>";
            if(obj.type == "add")
                l_inner_html += "<input class='standard_inputs_normal_ex pop_menu_first' id='add_device_sn' type='text' value='" + mcs_input_device_id + "'>";
            else if(obj.type == "re_enter")
                l_inner_html += "<input class='input_read_only pop_menu_first'"
                    + "style='text-align:left;color:#bbb;height:39px;line-height:39px;padding-left:10px;width:166px'"
                    + "id='add_device_sn' type='text' value='" + obj.sn + "' " + g_input_read_only + "/>";
            l_inner_html +=
                "</div>"
                +   "<div class='placeholding_input'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_last' id='add_device_show_pw' type='text' value='" + mcs_password+ "'>"
                +       "<input class='standard_inputs_normal_ex pop_menu_last' id='add_device_pw' type='password' style='display:none;color:#404040'>"
                +   "</div>"
                +   "<button id='device_add_button' class='ok_button'>" + mcs_add + "</button>";
            if(obj.direction == "top")
            {
                l_inner_html +=
                    "<span class='caret_arrow_bottom' style='position:absolute;bottom:-6px;left:90px;'></span>"
                    +"</div>";
            }
            else if(obj.direction == "bottom")
            {
                l_inner_html +=
                    "<span class='caret_arrow_up' style='position:absolute;top:-6px;left:90px;'></span>"
                    +"</div>";
            }
            l_dom_device_add_menu[s_innerHTML] = l_inner_html;

            jQuery(l_dom_device_add_menu).hide().fadeIn();
            add_device_sn = mx("#add_device_sn");
            add_device_show_pw = mx("#add_device_show_pw");
            add_device_pw = mx("#add_device_pw");
            add_button = mx("#device_add_button");

            if(obj.direction == "top")
            {
                offset_top = origin_top - mx(".caret_arrow_bottom")[0].offsetHeight - l_dom_device_add_menu.offsetHeight - 6;
                offset_left = origin_left - l_dom_device_add_menu.offsetWidth / 2 + 10;
            }
            else if(obj.direction == "bottom")
            {
                offset_top = origin_top + mx(".caret_arrow_up")[0].offsetHeight + obj.parent.offsetHeight + 6;
                offset_left = origin_left - l_dom_device_add_menu.offsetWidth / 3;
            }
            l_dom_device_add_menu[s_style][s_cssText] = "top:" + offset_top + "px;left:" + (offset_left < 0 ? 0 : offset_left) + "px;";

            if(obj.type == "add")
            {
                add_device_sn.onfocus = function() {
                    this.style.color = "#404040";
                    if(this.value == mcs_input_device_id)
                    {
                        this.value = "";
                    }
                };
                add_device_sn.onblur = function () {
                    if(this.value == "")
                    {
                        this.style.color = "#4D4D4D";
                        this.value = mcs_input_device_id;
                    }
                    else
                    {
                        this.style.color = "#404040";
                    }
                };
            }
            add_device_show_pw.onfocus = function() {
                this.style.display = "none";
                add_device_pw.style.display = "inline";
                add_device_pw.focus();
            };
            add_device_pw.onfocus = function() {
                this.select();
            };
            add_device_pw.onblur = function() {
                if(this.value == "")
                {
                    this.style.display = "none";
                    add_device_show_pw.style.display = "inline";
                }
            };
            //Equipment add key events
            add_button.onclick = function() {
            	  if(add_device_pw.value == "amdin")
            	  {
            	  	add_device_pw.value = "admin";
            	  }
                if(mx("#system_tooltip"))
                {
                  mx("#system_tooltip")[s_innerHTML]="";
                }
                if(!add_device_sn.value || add_device_sn.value == mcs_input_device_id)
                {
                  system_tooltip({parent:add_device_sn, color:"red", position:"right", disappear_way:"time", str:mcs_blank_device_id + "."});
                  return;
                }
                if(!add_device_pw.value || add_device_pw.value == mcs_password)
                {
                  system_tooltip({parent:add_device_show_pw, color:"red", position:"right", disappear_way:"time", str:mcs_the_password_is_empty + "."});
                  return;
                }
                //Equipment used to determine whether it contains a list of equipment, type of re_enter showing re-enter the password
                if(mcloud_agent.devs.get(add_device_sn.value.trim())&& obj.type != "re_enter"){
                	system_tooltip({parent:add_device_sn, color:"red", position:"right", disappear_way:"time", str:mcs_device_existed + "."});
                  return;
                }
                if(l_add_waiting_flag == 0){
                	l_add_waiting_flag = 1;
                  ms.send_msg("dev_add",{sn:add_device_sn.value.trim(),pass:add_device_pw.value},{sn:add_device_sn.value.trim(),pass:add_device_pw.value,passlength:add_device_pw.value.length,type:obj.type},ccm_dev_add_ack);
                }
            };
            var temp_func = function(evt) {
                var e = evt || window.event, target = e.target || e.srcElement;

                if(!target || is_ancestor(l_dom_device_add_menu, target)) return;

                if(l_dom_device_add_menu)
                {
                    page[s_removeChild](l_dom_device_add_menu);
                    l_dom_device_add_menu = null;
                }
                g_j_page.unbind("mouseup", temp_func);
            };
            g_j_page.bind("mouseup", temp_func);

            var temp_func2 = function(e) {
                if(e.keyCode == 13)
                {
                    jQuery(document).unbind("keydown", temp_func2);
                    trigger_click(add_button);
                }
            }
            jQuery(document).bind("keydown", temp_func2);
        }
        //Create Delete device keys
        function create_device_delete_img(obj)
        {
            var i, length, delete_div,
                delete_imgs = mx(".device_delete_img"), delete_divs;

            if(delete_imgs.length) return;
            if(l_dom_list_classDom){
            	length = l_dom_list_classDom.length;
            	for(i = 0; i < length; ++i)
            	{
                l_dom_list_classDom[i].firstChild.style.width = "142px";
                delete_div = dom_create_child(l_dom_list_classDom[i], "div", "", "device_delete_div");
                background_img_set(delete_div, sub_img_delete);
                //Delete Device button click event
                delete_div.onclick = function() {
                    var sn = mx(".device_list_li_span", this.parentNode)[0].getAttribute("sn");
                    ms.send_msg("dev_del",{sn:sn},{sn:sn},ccm_dev_del_ack);
                }
                delete_div.style.display = "none";
            	}
            	delete_divs = mx(".device_delete_div");
            	jQuery(delete_divs).fadeIn(400);
              //Removal equipment Delete button
            	var temp_func = function(evt) {
                var e = evt || window.event, target = e.target || e.srcElement;
                if(!target) return;
                delete_divs = mx(".device_delete_div");
                delete_imgs = mx(".device_delete_img");
                length = delete_divs.length;
                for(i = 0; i < length; ++i)
                {
                    if(delete_divs[i] === target || delete_imgs[i] === target) return;
                }
                --length;
                for(; length >= 0; --length)
                {
                    l_dom_list_classDom[length].firstChild.style.width = "152px";
                    delete_divs[length].onclick = null;
                    delete_divs[length].parentNode[s_removeChild](delete_divs[length]);
                }
                g_j_page.unbind("mouseup", temp_func);
            	};
            	g_j_page.bind("mouseup", temp_func);
          	}
            return 0;
        }
        function delete_device(sn)
        {
            var pos = mcloud_agent.devs.get_index(sn),
                l_dom_list_classDom = mx(".device_list_li"),
                j_list_classDom;

            j_list_classDom = jQuery(l_dom_list_classDom[pos]);
            //Animation
            if(!j_list_classDom.is(":animated")) {
                j_list_classDom.animate({width:"0px"}, {queue:true, duration:200}).slideUp(200,
	                function(){
	                //Dom destroy
	                l_dom_list_classDom[pos][s_innerHTML] = "";
	                l_dom_list_classDom[pos].parentNode[s_removeChild](l_dom_list_classDom[pos]);
	                l_dom_list_classDom[pos] = null;
	                //Data adjustment
	                mcloud_agent.devs.del(sn);
	                //Change select device
	
	                if(g_select_device_ipc == sn){
	                	var i,length = mcloud_agent.devs.list.length;
	                	if(length != 0){
	                		for(i=0;i<length;i++){
	                	  	if(mcloud_agent.devs.list[i].stat == "Online"){
	                	  		 pos = mcloud_agent.devs.get_index(mcloud_agent.devs.list[i].sn);
	                	  	 	 jQuery(".device_list_li_span:eq(" + pos + ")").click();
	                	  	   break;
	                	    }
	                	  }
	                	}else{
	                		l_parent_callback({type:"delete_ipc",data:{node_sn:sn}});
	                		g_select_device_ipc = "";
	                	}
	                }
	                var del_g_device_list_obj = new Array();
	                g_device_list_obj = del_g_device_list_obj;
	                for(var i=0; i<mcloud_agent.devs.list.length; i++){
	                   g_device_list_obj["sn_" + mcloud_agent.devs.list[i].sn] = {name:name,type:mcloud_agent.devs.get(mcloud_agent.devs.list[i].sn).type, ip:mcloud_agent.devs.get(mcloud_agent.devs.list[i].sn).addr, isParent:true,
	                       state:{online:"Online", view:0, recording:0, call:0, playback:0,playback_download:0}};
	                }
                });
            }
        }
        //Add Device
        function ccm_dev_add_ack(msg,ref)
        {
        	  l_add_waiting_flag = 0;
            if(!l_me_parent) return;
            if(msg.result == "" && msg.info)
            {   var old_sn,device_change;
                jQuery(l_dom_device_add_menu).toggle();
                if(mcloud_agent.devs.get(msg.info.sn)){
                	mcloud_agent.devs.get(msg.info.sn).stat = msg.info.stat;
                }
                if(g_select_device_ipc == ""){
                	old_sn = "",
                	device_change = 1;
                	g_select_device_ipc = msg.info.sn;
                }
                create_device_list({type:"refresh",data:{old_sn:old_sn,change:device_change}});
            }
            else
            {
                if(msg.result=="accounts.user.offline"){
                   system_tooltip({parent:add_device_sn, color:"red", position:"right", disappear_way:"time", str:mcs_offline+ "."});
                }
                else if(msg.result=="accounts.pass.invalid")
                {
                   system_tooltip({parent:add_device_pw, color:"red", position:"right", disappear_way:"time", str:mcs_invalid_password + "."});
                }
                else if(msg.result=="accounts.user.invalid")
                {
                   system_tooltip({parent:add_device_sn, color:"red", position:"right", disappear_way:"time", str: mcs_device_not_exist+ "."});
                }
                else if(msg.result == "subdev.exceed.device")
                {
                   g_system_prompt_box(mcs_devices_in_the_account_overrun, -10, -200);
                }
                else if(msg.result == "subdev.exceed.user")
                {
                   g_system_prompt_box(mcs_exceed_device, -10, -200);
                }
                return;
            }
            if(ref.passlength<6)
            {
                if(ref.type=="re_enter")
                {
                   system_pop_confirm_box({str:mcs_password_too_simple_hint, callback_func:
                    	function(obj){
                          if(mcloud_agent.devs.get(msg.info.sn).stat == "Online")
                          {
                          	var pos = mcloud_agent.devs.get_index(msg.info.sn);
                      	    jQuery(".device_list_li_span:eq(" + pos + ")").click();
                          }
                    	  	l_parent_callback({type:"refresh_menu",data:3});
                    	}
                   });
                }
                else if(ref.type=="add")
                {
                    l_dom_net_setting.ctrl({type:"ipc_pass_set",data:{user:ref.sn,pass:ref.pass}});
                }
            }
        }
        //Remove Device
        function ccm_dev_del_ack(msg,ref)
        {
            if(!l_me_parent) return;
            if( msg && !msg.result)
            {
                delete_device(ref.sn);
            }
            else
            {
                log("error:CcmAddSubDeviceResponse return Result error in class_device_list_box.");
            }
        }
        //Generating device row behind red digital
        function alarm_notification(obj)
        {   //count Digital Display
            var pos,length,classDom_last,count;
            pos = mcloud_agent.devs.get_index(obj.now_item.sn);
            if(!l_device_list_man_qid["q_"+obj.now_item.sn])
            {
               l_device_list_man_qid["q_"+obj.now_item.sn] = obj.sn;
               count=1;
            }else
            {  //With a pass over the message number added to the old number
               count = obj.sn - l_device_list_man_qid["q_"+obj.now_item.sn];
               if(count <= 0) return;
            }
            if(!l_dom_list_classDom[pos])return;
            classDom_last=l_dom_list_classDom[pos].lastChild;
            //Red figures not cleared
            if(classDom_last.className == "device_alarm_div")
            {
                if(count>99){count=99;}
                l_dom_list_classDom[pos].lastChild.lastChild.lastChild[s_innerHTML]=count;
            }
            else
            {
                if(obj.now_item.sn==g_select_device_ipc && g_now_page=="alarm")return;
                //Create stored red numbers div
                device_alarm_div = dom_create_child(l_dom_list_classDom[pos], "div", "", "device_alarm_div");
                //Create html code red figures
                device_alarm_div.innerHTML =
                    "<div>"
                   +   "<img style='width:18px;cursor:pointer' src='/imgs/notif_ico.png'></img>"
                   +"</div>"
                   +"<div style='color:#fff;font-size:7px;font-weight:900;width:18px;text-align:center;position:absolute;top:2px'>"
                   +   "<span id='ccm_notif_count' style='cursor:pointer'>" + count + "</span>"
                   +"</div>";
                //Red numbers clicked event
                device_alarm_div.onclick=function()
                {
                   //Click on the device list of equipment items
                   jQuery(".device_list_li_span:eq(" + pos + ")").click();
                   //Jump to information interface
                   setTimeout(function(){l_parent_callback({type:"refresh_menu",data:4});},500);
                }
            }
        }
        //When delete a column behind the red digital device when using the interface or switch interface to information when the information interface switching device
        function del_alarm_notification(obj)
        {
        	var pos,classDom_last;
        	pos = mcloud_agent.devs.get_index(obj.sn);
        	if(!l_dom_list_classDom[pos])return;
          classDom_last=l_dom_list_classDom[pos].lastChild;
          //There are red figures
          if(classDom_last.className == "device_alarm_div")
          {
						//Clear red digital
            l_dom_list_classDom[pos][s_removeChild](l_dom_list_classDom[pos].lastChild);
            //Empty current information number
            if(l_device_list_man_qid["q_"+obj.sn])
            {
               l_device_list_man_qid["q_"+obj.sn] = null;
            }
          }
        }
        function add_event()
        {   //Add Device button event
            l_dom_device_add_ico.onclick = function() {
                //create_device_add_menu({parent:this, type:"add", direction:"top"});
                l_dom_net_setting.ctrl({type:"add_device"});
            };
            //Refresh Device key events
            l_dom_device_refresh_ico.onclick = function() {
                l_parent_callback({type:"Refresh_devs"});
            };
            //Delete device key events
            l_dom_device_edit_ico.onclick = function() {
                create_device_delete_img();
            };
            l_me_parent.onmouseover = function() {
                if(g_panel_box_all_w < g_panel_box_max_w)
                {
                    if(!g_old_browser_version)
                    {
                        jQuery(this).animate({opacity:"1"}, {queue:false, duration:400, easing:'easeOutQuint'});
                    }
                    jQuery(this).animate({width:g_panel_box_max_w}, {queue:false, duration:400, easing:'easeOutQuint'});
                    jQuery(l_dom_device_list_panel).animate({left:"3"}, {queue:false, duration:400, easing:'linear'});

                    var temp_func = function(evt) {
                        var e = evt || window.event, target = e.target || e.srcElement;

                        if(!target || is_ancestor(l_me_parent, target)) return;

                        if(!g_old_browser_version)
                        {
                            jQuery(l_me_parent).animate({opacity:"0.5"}, {queue:false, duration:400, easing:'linear'});
                        }
                        jQuery(l_me_parent).animate({width:g_panel_box_all_w}, {queue:false, duration:400, easing:'linear'});
                        jQuery(l_dom_device_list_panel).animate({left:g_panel_box_offset}, {queue:false, duration:400, easing:'linear'});
                        g_j_page.unbind("mouseup", temp_func);
                    };
                    g_j_page.bind("mouseup", temp_func);
                }
            };
            l_me_parent.onmouseout = function () {
                if(g_panel_box_all_w < g_panel_box_max_w)
                {
                    if(!g_old_browser_version)
                    {
                        jQuery(this).animate({opacity:"0.5"}, {queue:false, duration:400, easing:'linear'});
                    }
                    jQuery(this).animate({width:g_panel_box_all_w}, {queue:false, duration:400, easing:'linear'});
                    jQuery(l_dom_device_list_panel).animate({left:g_panel_box_offset}, {queue:false, duration:400, easing:'linear'});
                }
            };
        }
        function remove_event()
        {
        	 l_dom_device_add_ico.onclick = "";
        	 l_dom_device_refresh_ico.onclick = "";
        	 l_dom_device_edit_ico.onclick = "";
        	 l_me_parent.onmouseover = "";
        	 l_me_parent.onmouseout = "";
        }
        function on_event(obj)
        {
            switch(obj.type)
            {
            	  case "download_save_path":
            	  {
            	      l_parent_callback(obj);
            	      break;
            	  }
                case "update":
                {

                }
            }
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        g_device_list_inner_h = g_panel_box_inner_h - l_dom_device_list_footer.offsetHeight;
                        l_dom_device_list_panel[s_style][s_width]  = g_panel_box_w + "px";
                        l_dom_device_list_panel[s_style][s_height] = g_panel_box_h + "px";
                        l_dom_device_list_panel[s_style].left      = g_panel_box_offset + "px";
                        l_dom_device_list_inner[s_style][s_width]  = g_panel_box_w + "px";
                        l_dom_device_list_inner[s_style][s_height] = g_device_list_inner_h + "px";
                        l_dom_device_list_footer[s_style][s_width] = g_panel_box_w + "px";
                        l_dom_device_list_arrow[s_style].top       = g_panel_box_h + 8 + "px";
                        break;
                    }
                case "destroy":
                    {
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                case "delete_alarm_nofication"://Remove Device column behind the red digital
                    {
                    	 del_alarm_notification(obj);
                    	 break;
                    }
                case "change_select_device_style":
                    {
                        change_select_device_style(obj.data);
                        break;
                    }
                case "refresh_notif_latest":
                    {
                       alarm_notification(obj.data);
                       break;
                    }
                case "change_device_name"://Change Device Nickname
                    {
                    	 var pos = mcloud_agent.devs.get_index(obj.sn);
                       if(l_dom_list_span_classDom[pos])
                          l_dom_list_span_classDom[pos][s_innerHTML] = mcloud_agent.devs.get(obj.sn).nick?mcloud_agent.devs.get(obj.sn).nick:obj.sn;
                       break;
                    }
                case "get_profiles":
                    {
                        return l_profiles;
                    }
                case "refresh_device_list"://Refresh device list
                    {
                        create_device_list({type:"refresh",data:obj.data});
                        break;
                    }
                case "download_path":
                    {
                    	  l_dom_net_setting.ctrl(obj);
                    	  break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_device_list_box.");
            }
        }
        add_event();
        create_device_list({type:"create"});
        l_dom_net_setting=new net_setting_class({parent:l_me_parent, on_event:function(obj){return on_event(obj);}});
    }
    function net_setting_class(obj)
    {
	      var l_me = this, i, inner_html = "",
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_device_list_panel,
            l_dom_device_list_arrow,
            l_dom_device_list_inner,
            l_dom_device_list_header,
            l_dom_device_list_content,
            l_dom_device_list_footer,
            l_dom_list_classDom,
            l_dom_list_state_classDom,
            //l_dom_list_span_classDom,
            l_dom_device_add_menu,
            l_dom_device_edit_ico,
            l_dom_device_add_ico,
            l_dom_device_refresh_ico,
            l_dom_device_invalid_div,
            l_dom_device_invalid_close,
            l_dom_device_invalid_inner,
            l_dom_device_invalid_content,
            l_dom_device_add_content,
            l_dom_device_invalid_Prompt,
            l_cable_page_create_obj,
            l_option_cable_page,
            l_dom_net_skip,l_dom_net_next,l_dom_net_cancel,
        	  option_pos=0,l_is_ipc_pass;


		    function create_device_invalid_div(obj)
        {
            var correct_width, correct_height, prop;
                l_dom_device_invalid_div = mx("#device_invalid_div");
                l_dom_device_invalid_inner = mx("#device_invalid_inner");
                l_dom_device_invalid_content = mx("#device_invalid_content");

            correct_width = 500;
            correct_height = 300;
            if(correct_width > g_web.offsetWidth * 8 / 10)
            {
                correct_width = parseInt(g_web.offsetWidth * 8 / 10);
                correct_height = parseInt(correct_width * 300 / 500);
            }
            if((correct_height > g_web.offsetHeight * 8 / 10)&&(!g_domain_oems_vimtag))
            {
                correct_height = parseInt(g_web.offsetHeight * 8 / 10);
                correct_width = parseInt(correct_height * 500 / 300);
            }
            if(l_dom_device_invalid_content)
            {
                l_dom_device_invalid_div.style.width = correct_width + 13*2 + "px";
                l_dom_device_invalid_div.style.height = correct_height + 13*2 + "px";
                l_dom_device_invalid_div.style.left = ((g_web.offsetWidth - correct_width) / 2) + "px";
                l_dom_device_invalid_div.style.top = ((g_web.offsetHeight - correct_height) / 2)  + "px";
                //snapshot_preview_content.src = obj.uri;
            }
            else
            {  
                if(g_domain_oems_vimtag&&(obj.type!="notice_board"))
            	  {
            	  	  l_dom_device_invalid_div = dom_create_child(page, "div", "device_invalid_div");
		                l_dom_device_invalid_div[s_style][s_cssText] = "width:"+(correct_width+13*2)+"px;height:"+(correct_height+13*2)+"px;"
		                    + "left:" + ((g_web.offsetWidth - correct_width) / 2) + "px;"
		                    + "top:30%;position:absolute;z-index:50";
		
		                l_dom_device_invalid_div = mx("#device_invalid_div");
		                l_dom_device_invalid_inner = dom_create_child(device_invalid_div, "div", "device_invalid_inner");
		                l_dom_device_invalid_inner[s_style][s_cssText] = "width:"+(correct_width+13)+"px;height:"+(correct_height+13)+"px;left:6px;top:6px;position:relative;color:#000000;";
		                
		                l_dom_device_invalid_content = dom_create_child(l_dom_device_invalid_inner, "div", "device_invalid_content");
		                l_dom_device_invalid_content[s_style][s_cssText] = "width:"+correct_width+"px;height:"+correct_height+"px;"
		                      + "left:7px;top:7px;position:relative;";

		                l_cable_page_create_obj =new cable_page_create({parent:l_dom_device_invalid_content,on_event:function(obj){return on_event(obj);}});
            	  }
            	  else
            	  {
		                l_dom_device_invalid_div = dom_create_child(page, "div", "device_invalid_div");
		                l_dom_device_invalid_div[s_style][s_cssText] = "width:" + (correct_width + 13*2) + "px;height:" + (correct_height + 13*2) + "px;"
		                    + "left:" + ((g_web.offsetWidth - correct_width) / 2) + "px;"
		                    + "top:" + ((g_web.offsetHeight - correct_height) / 2)  + "px;position:absolute;z-index:50";
		
		
		                l_dom_device_invalid_div = mx("#device_invalid_div");
		                l_dom_device_invalid_inner = dom_create_child(device_invalid_div, "div", "device_invalid_inner");
		                l_dom_device_invalid_inner[s_style][s_cssText] = "width:" + (correct_width + 13) + "px;height:" + (correct_height + 13) + "px;"
		                    + "left:6px;top:6px;position:relative;background-image:url(/imgs/add-gd-bg.png);color:white;";
		
		
		
		
		                l_dom_device_invalid_content = dom_create_child(l_dom_device_invalid_inner, "div", "device_invalid_content");
		                l_dom_device_invalid_content[s_style][s_cssText] = "width:" + correct_width  + "px;height:" + correct_height + "px;"
		                    + "left:7px;top:7px;position:relative;";
		
		                l_cable_page_create_obj =new cable_page_create({parent:l_dom_device_invalid_content,on_event:function(obj){return on_event(obj);}});
		            }
                //d_page=jQuery("#device_invalid_content");
                l_dom_device_invalid_close = dom_create_child(l_dom_device_invalid_div, "div", "device_invalid_close");		                
                if(g_domain_oems_vimtag)
                {
		                l_dom_device_invalid_close[s_style][s_cssText] = "position:absolute;right:0;top:0;cursor:pointer;width:25px;height:25px;";
		                mx("#device_invalid_close").style.backgroundImage = "url('/imgs/close.png')";
                }
                else
                {
                		l_dom_device_invalid_close[s_style][s_cssText] = "position:absolute;right:0;top:0;cursor:pointer;";
                    background_img_set(l_dom_device_invalid_close, sub_img_close0);
                }

                net_cable_page({option:"home"});
                //hide the backgroundimage when notice board is open
                try{		                	
								    if(obj.type=="notice_board") l_dom_device_invalid_inner.style.backgroundImage = "none";
							  }catch(e){};
                l_dom_device_invalid_close.onclick=function(){
                    l_cable_page_create_obj.ctrl({type:"options_destroy",data:{option:l_option_cable_page}});
                    l_dom_device_invalid_div[s_innerHTML] = "";
                    page[s_removeChild](l_dom_device_invalid_div);
                    l_dom_device_invalid_div = null;
                    l_dom_device_invalid_close.onclick = "";
                    l_dom_device_invalid_close.onmouseover = "";
                    l_dom_device_invalid_close.onmouseout = "";

                }
                if(!g_domain_oems_vimtag)
                {
		                l_dom_device_invalid_close.onmouseover = function() {
		                    background_img_change_pos(this, sub_img_close1);
		                };
		                l_dom_device_invalid_close.onmouseout = function() {
		                    background_img_change_pos(this, sub_img_close0);
		                };
                }
            }
        }

		    function net_cable_page(obj)
        {
            l_cable_page_create_obj.ctrl({type:"options_destroy", data:{option:l_option_cable_page}});
            l_option_cable_page = obj.option;
            l_cable_page_create_obj.ctrl({type:"chang_net_cable_content", data:obj});
        }
        function cable_page_create(obj)
        {
            var l_me=this,
                l_me_parent = obj.parent,
                l_parent_callback = obj.on_event,
                l_dom_add_device,
                l_add_device_obj,
                l_dom_connection_device,
                l_connection_device_obj,
                l_dom_device_set_pass,
                l_device_set_pass_obj,
                l_dom_setting_wifi,
                l_setting_wifi_obj,
                l_dom_is_configured_wifi,
                l_is_configured_wifi_obj,
                l_dom_into_the_wizard,
                l_into_the_wizard_obj,
                l_dom_guiding_connection,
        				l_guiding_connection_obj,
        				l_dom_ipc_set_pass,
        				l_ipc_set_pass_obj,
                l_dom_ipc_set_wifi,
        				l_ipc_set_wifi_obj,
        				l_dom_ipc_Guide_ok,
        				l_ipc_Guide_ok_obj,
        				l_dom_option_set,
		            l_option_set_obj,
		            l_dom_notice_board,
		            l_notice_board_obj,
		            l_dom_download_path,
		            l_download_path_obj;

             function chang_net_cable_content(obj)
             {
                    switch(obj.option)
                    {
                            case "add_device":
                            {
                                 l_dom_add_device = dom_create_child(l_me_parent, "div", "add_device");
                                 l_add_device_obj = new add_device_class({parent:l_dom_add_device});
                                 break;
                            }
                            case "into_the_wizard":
                            {
                                 l_dom_into_the_wizard = dom_create_child(l_me_parent, "div", "into_the_wizard");
                                 l_into_the_wizard_obj = new into_the_wizard_class({parent:l_dom_into_the_wizard});
                                 break;
                            }
                            case "device_set_pass":
                            {
                                 l_dom_device_set_pass = dom_create_child(l_me_parent, "div", "device_set_pass");
                                 l_device_set_pass_obj = new device_set_pass_class({parent:l_dom_device_set_pass ,sn:obj.sn,pass:obj.pass});
                                 break;
                            }
                            case "setting_wifi":
                            {
                                 l_dom_setting_wifi = dom_create_child(l_me_parent, "div", "setting_wifi");
                                 l_setting_wifi_obj = new setting_wifi_class({parent:l_dom_setting_wifi,old_page:obj.old_page,sn:obj.sn});
                                 break;
                            }
                            case "is_configured_wifi":
                            {
                                 l_dom_is_configured_wifi = dom_create_child(l_me_parent, "div", "is_configured_wifi");
                                 l_is_configured_wifi_obj = new is_configured_wifi_class({parent:l_dom_is_configured_wifi,Completion_status:obj.Completion_status});
                                 break;
                            }
                            case "guiding_connection":
                						{
                						     l_dom_guiding_connection = dom_create_child(l_me_parent, "div", "guiding_connection");
                             	   l_guiding_connection_obj = new guiding_connection_class({parent:l_dom_guiding_connection,data:obj.data,on_event:function(obj){return on_event(obj);}});
                						     break;
                						}
                						case "ipc_set_pass":
                						{
                						     if(l_ipc_set_pass_obj)
                    						 {
                    							   options_destroy({option:"ipc_set_pass"});
                    						 }
                						     l_dom_ipc_set_pass = dom_create_child(l_me_parent, "div", "ipc_set_pass");
                             	   l_ipc_set_pass_obj = new ipc_set_pass_class({parent:l_dom_ipc_set_pass,data:obj.data,on_event:function(obj){return on_event(obj);}});
                						     break;
                						}
                						case "ipc_set_wifi":
                						{
                						     l_dom_ipc_set_wifi = dom_create_child(l_me_parent, "div", "ipc_set_wifi");
                             	   l_ipc_set_wifi_obj = new ipc_set_wifi_class({parent:l_dom_ipc_set_wifi,sn:obj.sn,old_page:obj.old_page,on_event:function(obj){return on_event(obj);}});
                						     break;
                						}
                						case "ipc_Guide_ok":
                						{
                						    l_dom_ipc_Guide_ok = dom_create_child(l_me_parent, "div", "ipc_Guide_ok");
                							  l_ipc_Guide_ok_obj = new ipc_Guide_ok_class({parent:l_dom_ipc_Guide_ok,sn:obj.sn,Completion_status:obj.Completion_status,on_event:function(obj){return on_event(obj);}});
                						    break;
                						}
		                				case "option_set":
		                        {
		                        	  l_dom_option_set = dom_create_child(l_me_parent, "div", "option_set");
		                        	  l_option_set_obj = new option_set_class({parent:l_dom_option_set});
		                        	  break;
		                        }
		                        case "notice_board":
		                        {
		                        		l_dom_notice_board = dom_create_child(l_me_parent, "div", "notice_board");
		                        	  l_notice_board_obj = new notice_board_class({parent:l_dom_notice_board, url:obj.url});
		                        	  break;
		                        }
		                        case "download_path":
		                        {
		                        	  l_dom_download_path = dom_create_child(l_me_parent, "div", "download_path");
		                        	  l_download_path_obj = new download_path_class({parent:l_dom_download_path,on_event:function(obj){return on_event(obj);}});
		                        	  break;
		                        }
                    }

             }
             function options_destroy(obj)
             {
                  if(obj.option=="add_device" && l_add_device_obj)
                  {
                     l_add_device_obj.ctrl({type:"destroy"});
                     l_me_parent[s_removeChild](l_dom_add_device);
                     l_dom_add_device = null;
                     l_add_device_obj = null;
                  }
                  else if(obj.option == "into_the_wizard" && l_into_the_wizard_obj)
                  {
                     l_into_the_wizard_obj.ctrl({type:"destroy"});
                     l_me_parent[s_removeChild](l_dom_into_the_wizard);
                     l_dom_into_the_wizard = null;
                     l_into_the_wizard_obj = null;
                  }
                  else if(obj.option=="device_set_pass" && l_device_set_pass_obj)
                  {
                     l_device_set_pass_obj.ctrl({type:"destroy"});
                     l_me_parent[s_removeChild](l_dom_device_set_pass);
                     l_dom_device_set_pass = null;
                     l_device_set_pass_obj = null;
                  }
                  else if(obj.option =="is_configured_wifi" && l_is_configured_wifi_obj)
                  {
                     l_is_configured_wifi_obj.ctrl({type:"destroy"});
                     l_me_parent[s_removeChild](l_dom_is_configured_wifi);
                     l_dom_is_configured_wifi = null;
                     l_is_configured_wifi_obj = null;
                  }
                  else if(obj.option=="setting_wifi" && l_setting_wifi_obj)
                  {
                     l_setting_wifi_obj.ctrl({type:"destroy"});
                     l_me_parent[s_removeChild](l_dom_setting_wifi);
                     l_dom_setting_wifi = null;
                     l_setting_wifi_obj = null;
                  }
                  else if(obj.option=="ipc_set_pass" && l_ipc_set_pass_obj)
                  {
        				     l_me_parent[s_removeChild](l_dom_ipc_set_pass);
                     l_ipc_set_pass_obj.ctrl({type:"destroy"});
                     l_dom_ipc_set_pass = null;
                     l_ipc_set_pass_obj = null;
                  }
        				  else if(obj.option=="guiding_connection" && l_guiding_connection_obj)
                  {
                     l_guiding_connection_obj.ctrl({type:"destroy"});
                     l_me_parent[s_removeChild](l_dom_guiding_connection);
                     l_dom_guiding_connection = null;
                     l_guiding_connection_obj = null;
                  }
        				  else if(obj.option=="ipc_set_wifi" && l_ipc_set_wifi_obj)
                  {
        				     l_me_parent[s_removeChild](l_dom_ipc_set_wifi);
                     l_ipc_set_wifi_obj.ctrl({type:"destroy"});
                     l_dom_ipc_set_wifi = null;
                     l_ipc_set_wifi_obj = null;
                  }
        				  else if(obj.option=="ipc_Guide_ok" && l_ipc_Guide_ok_obj)
                  {
                     l_ipc_Guide_ok_obj.ctrl({type:"destroy"});
                     l_me_parent[s_removeChild](l_dom_ipc_Guide_ok);
                     l_dom_ipc_Guide_ok = null;
                     l_ipc_Guide_ok_obj = null;
                  }
                  else if(obj.option=="option_set" && l_option_set_obj)
                  {
                 		 l_option_set_obj.ctrl({type:"destroy"});
                 		 l_me_parent[s_removeChild](l_dom_option_set);
                 		 l_dom_option_set = null;
                 		 l_option_set_obj = null;        
                  }
             }
             l_me.ctrl=function(obj)
             {
                   switch(obj.type)
                   {
                        case "update":
                           {

                               break;
                           }
                        case "chang_net_cable_content":
                           {
                                 chang_net_cable_content(obj.data);
                               break;
                           }
                        case "options_destroy":
                           {
                                 options_destroy(obj.data);
                               break;
                           }
                        case "add_device":
                           {
                                if(l_add_device_obj)
                                {
                                   l_add_device_obj.ctrl(obj);
                                }
                                break;
                           }
                        case "device_set_pass":
                           {
                                if(l_device_set_pass_obj)
                                {
                                   l_device_set_pass_obj.ctrl(obj);
                                }
                              break;
                           }
                        case "connection_device":
                           {
                                if(l_connection_device_obj)
                                {
                                      l_connection_device_obj.ctrl(obj);
                                }
                                break;
                           }
                        case "setting_wifi":
                           {
                                if(l_setting_wifi_obj)
                                {
                                       l_setting_wifi_obj.ctrl(obj);
                                }
                              break;
                           }
                   }
             }
             function on_event(obj)
             {
                  switch(obj.type)
                  {
                       case "login_ack":
                       {
        					         options_destroy({option:"guiding_connection"});
        					         l_dom_device_invalid_div[s_innerHTML] = "";
                           g_page[s_removeChild](l_dom_device_invalid_div);
                           l_dom_device_invalid_div = null;
                           l_dom_device_invalid_close.onclick = "";
                           l_dom_device_invalid_close.onmouseover = "";
                           l_dom_device_invalid_close.onmouseout = "";
					                 //l_parent_callback(obj);
        						       break;
                       }
        					     case "Guide_ok":
        					     {
        					         options_destroy({option:obj.option});
        					         l_dom_device_invalid_div[s_innerHTML] = "";
                           g_page[s_removeChild](l_dom_device_invalid_div);
                           l_dom_device_invalid_div = null;
                           l_dom_device_invalid_close.onclick = "";
                           l_dom_device_invalid_close.onmouseover = "";
                           l_dom_device_invalid_close.onmouseout = "";
                       	   l_parent_callback({type:"logined"});
        					         break;
        					     }
        					     case "download_save_path":
        					     {
        					     	   l_parent_callback(obj);
        					     	   break;
        					     }
                  }
             }
        }
        function add_device_class(obj)
        {
               var l_me=this,
               l_me_parent = obj.parent,
               l_dom_add_device_id,
               l_dom_add_device_pass="",
               l_add_device_stat=1,
               l_dom_pass_div,l_dom_Prompt_div,l_dom_adevice_div,
               l_dom_dom_adevice_div,l_dom_device_stat,l_dom_device_con,
               l_dom_device_div,l_dom_net_add,
               l_dom_image_div,l_dom_adevice_div_page,l_dom_connection_page,
               l_dom_device_invalid_Operat,
               correct_width=500,correct_height=300;
               l_dom_device_invalid_Prompt = dom_create_child(l_me_parent, "div", "device_invalid_Prompt");
               l_dom_device_invalid_Prompt[s_style][s_cssText] = "width:" + correct_width-20  + "px;height:" + 92 + "px;text-align:center;"
               + "position:relative;text-align:left;margin-left:20px;";
               l_dom_device_invalid_Prompt.style.top ="5px";
               l_dom_device_invalid_Prompt[s_innerHTML]="<h3>"+mcs_add_device+"</h3><div style='margin-top:12px;'><div id='device_stat'></div><div id='device_con' ></div></div>";


               l_dom_adevice_div_page = dom_create_child(l_me_parent, "div", "adevice_div_page");
               l_dom_adevice_div_page[s_style][s_cssText] = "width:" + correct_width  + "px;height:" +( correct_height-142) + "px;"
               + "position:relative";
                l_dom_device_invalid_Operat = dom_create_child(l_me_parent, "div", "device_invalid_Operat");
                l_dom_device_invalid_Operat[s_style][s_cssText] = "width:" + correct_width  + "px;height:" + 50 + "px;text-align:center;"
                + "position:relative;text-align:right;";

                l_dom_device_invalid_Operat[s_innerHTML]=
                 "<button class='standard_buttons_green' id='net_cancel' style='margin-right:25px;margin-top:18px'>"+mcs_cancel+"</button>"
                 +"<button class='standard_buttons_green' id='net_next' style='margin-top:18px; margin-right:20px;'>"+mcs_action_next+"</button>"
                 +"<button class='standard_buttons_green' id='net_add' style='margin-top:18px; margin-right:20px;'>"+mcs_add+"</button>";
               //+ "<button class='standard_buttons_green' id='net_cancel' style='margin-left:25px;margin-top:10px'>"+mcs_cancel+"</button>";


               l_dom_adevice_div_page[s_innerHTML]=
               "<div id='adevice_div'>"
               +"<div id='device_div' style='height:40px; margin-top:10px;'>"
               +     " <input id='add_device_id' class='standard_inputs_wifi_set' type='text'/><span style='float:right;margin-right:5px;line-height:22px;'>"+mcs_input_device_id+":</span><br/>"
               +"</div>"
               +"<div id='pass_div' style='height:40px;float:right;margin-top:10px;'>"
               +    "<input id='add_device_pass' class='standard_inputs_wifi_set' type='password'/><span style='float:right;margin-right:5px;line-height:22px;'>"+mcs_password+": </span>"
               +"</div>"
               +"</div>"
               +"<div id='image_div'>"
               +   "<div id='mcs_step_div' style='width:480px;height:160px;text-align:left;margin-left:20px;'>"
               +    mcs_prompt_check_connection+"<br/>"
               +    mcs_step1_check_connect+"<image style='width:40px;height:40px;' src='/imgs/lan.png'/><br/>"
               +    mcs_step2_check_connect+"<br/><br/>"
               +    mcs_hint_check_network+"<br/>"
               +"</div>"
               +"</div>";

               l_dom_add_device_id  = mx("#add_device_id");
               l_dom_add_device_pass= mx("#add_device_pass");
               l_dom_pass_div       = mx("#pass_div");
               l_dom_Prompt_div     = mx("#Prompt_div");
               l_dom_adevice_div    = mx("#adevice_div");
               l_dom_image_div      = mx("#image_div");
               l_dom_device_div    = mx("#device_div");
               l_dom_device_stat   = mx("#device_stat");
               l_dom_device_con    = mx("#device_con");

               jQuery(l_dom_image_div).hide();
               jQuery(l_dom_pass_div).hide();

               l_me_parent[s_style][s_cssText] ="width:100%;height:100%;position:absolute;text-align:center;";
               l_dom_adevice_div[s_style][s_cssText] ="text-align:center;position:absolute;margin-top:10px;";

               l_dom_adevice_div.style.left = ((l_dom_adevice_div_page.offsetWidth - l_dom_adevice_div.offsetWidth) / 2) + "px";
               l_dom_adevice_div.style.top = ((l_dom_adevice_div_page.offsetHeight - l_dom_adevice_div.offsetHeight) / 2)  + "px";

               l_dom_net_next = mx("#net_next");
               l_dom_net_cancel = mx("#net_cancel");
               l_dom_net_skip   = mx("#net_skip");
               l_dom_net_add    = mx("#net_add");
               jQuery(l_dom_net_cancel).hide();
               jQuery(l_dom_net_add).hide();
                jQuery("#mcs_step_div").mCustomScrollbar();
               l_dom_net_add.onclick=function(){
               	    if(l_dom_add_device_pass.value == "amdin")
               	    {
               	    	 l_dom_add_device_pass.value = "admin";
               	    }
                    l_dom_device_con[s_innerHTML]="<image src='"+client_name+"loading.gif'/>"+mcs_request_send;
                    l_cable_page_create_obj.ctrl({type:"add_device"});
               }
               l_dom_net_next.onclick=function(){
                    l_dom_device_con[s_innerHTML]="<image src='"+client_name+"loading.gif'/>"+mcs_request_send;
                    if(g_device_list_obj["sn_"+l_dom_add_device_id.value])
									{
					   					 l_cable_page_create_obj.ctrl({type:"options_destroy",data:{option:l_option_cable_page}});
					   					 l_dom_device_invalid_div[s_innerHTML] = "";
                       page[s_removeChild](device_invalid_div);
                       l_dom_device_invalid_div = null;
                       l_dom_device_invalid_close.onclick = "";
                       l_dom_device_invalid_close.onmouseover = "";
                       l_dom_device_invalid_close.onmouseout = "";

					   				system_pop_confirm_box({alert:true,str:mcs_device_existed, callback_func:function(){
             	        }});

									}else{
                	 	l_cable_page_create_obj.ctrl({type:"add_device"});
				    			}
                     //l_cable_page_create_obj.ctrl({type:"add_device"});
               }
               l_dom_net_cancel.onclick=function(){
                    l_cable_page_create_obj.ctrl({type:"options_destroy",data:{option:l_option_cable_page}});
                      l_dom_device_invalid_div[s_innerHTML] = "";
                    g_page[s_removeChild](l_dom_device_invalid_div);
                    l_dom_device_invalid_div = null;
                    l_dom_device_invalid_close.onclick = "";
                    l_dom_device_invalid_close.onmouseover = "";
                    l_dom_device_invalid_close.onmouseout = "";
               }
               l_me.ctrl=function(obj)
               {
                  switch(obj.type)
                  {
                      case "destroy":
                      {
                            l_me_parent[s_innerHTML]="";
                            l_me_parent=null;
                            break;
                      }
                      case "add_device":
                      {
                              if(l_add_device_stat==1)
                              {
                                    ccm_add_sub_device_req({sn:l_dom_add_device_id.value,pass:""});
                              }
                              else if(l_add_device_stat==2)
                              {

                                    ccm_add_sub_device_req({sn:l_dom_add_device_id.value,pass:l_dom_add_device_pass.value});
                              }
                              break;
                      }
                  }
               }
            function ccm_add_sub_device_req(obj)
            {
                ms.send_msg("dev_add",{sn:obj.sn,pass:obj.pass},{passlength:obj.pass.length,sn:obj.sn,pass:obj.pass},ccm_add_sub_device_response);

            }
            function ccm_add_sub_device_response(msg, ref)
            {
               if(!l_me_parent) return;
               if((msg &&  msg.result == "") && (ref.pass !== ""))
               {
                    add_device(msg.info, ref.sn);
                    pos = g_device_list_link.pos("sn_" + msg.info.sn);
                    /*if(g_device_list_obj["sn_" + msg.info.sn].stat.online == "Online")
                    {
                        jQuery(".device_list_li_span:eq(" + pos + ")").click();
                    }*/
                    jQuery("#device_Refresh_ico").click();
                    //CcmDiskCtrlRequest({sn:msg.info.sn,pass:ref.pass});
                    if(ref.pass.length > 5)
                    {
                        net_cable_page({option:"setting_wifi",sn:msg.info.sn,old_page:"add_device"});
                    }
                    else
                    {
                        net_cable_page({option:"device_set_pass",sn:msg.info.sn,pass:ref.pass});
                    }
               }
               else if(msg.result)
               {
                    if(msg.result=="accounts.user.offline")
                    {
                       if(l_add_device_stat==1)
                       {
                         jQuery(l_dom_image_div).show();
                         jQuery(l_dom_adevice_div).hide();
                         l_dom_device_stat[s_innerHTML]="<div>"+mcs_device_id+":"+l_dom_add_device_id.value+"</div>";
                         setTimeout(function(){
                             if(!l_me_parent)
                             {
                                  return;
                             }
                             l_dom_device_con[s_innerHTML]="<image src='"+client_name+"loading.gif'/>"+mcs_state_wait_device_online;

                            ccm_add_sub_device_req({sn:l_dom_add_device_id.value,pass:""});
                          },3000);
                          jQuery(l_dom_net_next).hide();
                          jQuery("#net_cancel").show();
                          jQuery("#mcs_step_div").mCustomScrollbar("update");
                       }
                    }
                    else if(msg.result=="accounts.pass.invalid")
                    {
                       if(l_add_device_stat==1)
                       {
                          l_dom_device_con[s_innerHTML]="";
                          l_add_device_stat=2;
                          jQuery(l_dom_net_next).hide();
                          jQuery(l_dom_net_add).show();
                          jQuery(l_dom_device_div).hide();
                          jQuery(l_dom_pass_div).show();
                          jQuery(l_dom_adevice_div).show();
                          jQuery(l_dom_image_div).hide();

                          l_dom_adevice_div.style.left = ((l_dom_adevice_div_page.offsetWidth - l_dom_adevice_div.offsetWidth) / 2) + "px";
                          l_dom_device_stat[s_innerHTML]="<div>"+mcs_device_id+":"+l_dom_add_device_id.value+"</div><div>"+mcs_status+":"+mcs_state_device_online+"</div>";
                          jQuery(l_dom_net_cancel).hide();
                          return;
                       }
                       l_dom_device_con[s_innerHTML]="";
                       system_tooltip({parent:l_dom_add_device_pass, color:"red", position:"right", disappear_way:"time", str:mcs_invalid_password + "."});
                    }
                    else if(msg.result=="accounts.user.invalid")
                    {
                        l_dom_device_con[s_innerHTML]="";
                        system_tooltip({parent:l_dom_add_device_id, color:"red", position:"right", disappear_way:"time", str: mcs_device_not_exist+ "."});
                    }
                    else if(msg.result=="ccms.system.err"){

                    }
                    else if(msg.result == "subdev.exceed.device")
                    {
                        g_system_prompt_box(mcs_devices_in_the_account_overrun, -10, -200);
                    }
                    else if(msg.result == "subdev.exceed.user")
                    {
                        g_system_prompt_box(mcs_exceed_device, -10, -200);
                    }
                    else if(msg.result == "permission.denied")
                    {
                    	  log(mcs_permission_denied);
                    }
                    return -1;
               }
            }
            /*2015.12.4 add devices for a new account,input the passowrd and get error "ccms.param_invalid"*/
            /*function CcmDiskCtrlRequest(obj)
            {
                ms.send_msg("sd_set",{sn:g_select_device_ipc,ctrl_type:"",token:"sd",no_conf:1},{sn:obj.sn,pass:obj.pass},ccm_DiskCtrlResponse);

            }
            function ccm_DiskCtrlResponse(msg, ref)
            {
                 if(!l_me_parent) return;
                   if(msg && msg.result == "")
                   {
                      if(ref.pass.length > 5)
                      {
                          net_cable_page({option:"setting_wifi",sn:ref.sn,old_page:"add_device"});
                      }
                      else
                      {
                          net_cable_page({option:"device_set_pass",sn:ref.sn,pass:ref.pass});
                      }
                   }
                   else if(msg.result=="permission.denied")
                   {
                      net_cable_page({option:"is_configured_wifi",Completion_status:1});
                   }
            }*/
        }
        function device_set_pass_class(obj)
        {
               var l_me=this,
               l_me_parent = obj.parent,
               sn=obj.sn,
               pass=obj.pass,
               l_dom_old_pass,l_dom_new_pass,l_dom_confirm_new_pass,
               l_dom_device_set_div_page,l_dom_net_change,
               l_dom_connection_page,l_dom_device_stat,l_dom_device_con,
               l_dom_device_invalid_Operat,l_dom_device_set_div,
               correct_width=500,correct_height=300;


                l_dom_device_invalid_Prompt = dom_create_child(l_me_parent, "div", "device_invalid_Prompt");
                l_dom_device_invalid_Prompt[s_style][s_cssText] = "width:" + correct_width-20  + "px;height:" + 132 + "px;text-align:left;margin-left:20px;"
                    + "position:relative;";
                l_dom_device_invalid_Prompt.style.top ="5px";
                l_dom_device_invalid_Prompt[s_innerHTML]="<h3>"+mcs_modify_password+"</h3><div  style='margin-top:12px;'><div>"+mcs_device_id+":"+obj.sn+"</div><div id='device_stat'><div>"+mcs_state_add_device_success+"</div><div><br/>"+mcs_prompt_modify_passwd+"</div></div><div id='device_con' ></div></div>";

               l_dom_device_set_div_page = dom_create_child(l_me_parent, "div", "device_set_div_page");
               l_dom_device_set_div_page[s_style][s_cssText] = "width:" + correct_width  + "px;height:" +( correct_height-182) + "px;"
               + "position:relative";


               l_dom_device_set_div = dom_create_child(l_dom_device_set_div_page, "div", "device_set_div");

                l_dom_device_invalid_Operat = dom_create_child(l_me_parent, "div", "device_invalid_Operat");
                l_dom_device_invalid_Operat[s_style][s_cssText] = "width:" + correct_width  + "px;height:" + 50 + "px;text-align:center;"
                + "position:relative;text-align:right";

                l_dom_device_invalid_Operat[s_innerHTML]=
                 "<button class='standard_buttons_green' id='net_change' style='margin-top:18px;margin-right:20px;'>"+mcs_change+"</button>";

               jQuery("#net_next").hide();
               jQuery("#net_cancel").hide();

               l_dom_net_next = mx("#net_next");
               l_dom_net_change =mx("#net_change");
               l_dom_net_cancel = mx("#net_cancel");
               l_dom_device_con = mx("#device_con");

               l_dom_net_change.onclick=function(){
                      ccm_pwd_set();
               }
               l_dom_device_set_div[s_style][s_cssText] ="height:120px;position:absolute;text-align:center;";

               l_dom_device_set_div[s_innerHTML]=
                 "<div style='height:40px; margin-top:10px;'>"
                  +   "<input id='new_pass' class='standard_inputs_wifi_set' type='password'><span style='float:right;line-height:22px;margin-right:5px;'>"+mcs_new_password+":</span>"
                  +"</div>"
                  +"<div style='height:40px; margin-top:10px;'>"
                  +   "<input id='confirm_new_pass' class='standard_inputs_wifi_set' type='password'><span style='float:right;line-height:22px;margin-right:5px;'>"+mcs_confirm_new_password+":</span>"
                  +"</div>";
                l_dom_old_pass        = mx("#old_pass");
                l_dom_new_pass        = mx("#new_pass");
                l_dom_confirm_new_pass= mx("#confirm_new_pass");

                l_dom_device_set_div.style.left = ((l_dom_device_set_div_page.offsetWidth - l_dom_device_set_div.offsetWidth) / 2) + "px";
                l_dom_device_set_div.style.top = ((l_dom_device_set_div_page.offsetHeight-l_dom_device_set_div.offsetHeight) / 2)  + "px";

               function ccm_pwd_set(obj)
               {
                       if(l_dom_new_pass.value =="")
                       {
                           system_tooltip({parent:l_dom_new_pass, color:"red", position:"right", disappear_way:"time", str: mcs_blank_password+ "."});
                          return -1;
                       }
                       else if(l_dom_new_pass.value.length<6)
                       {
                           system_tooltip({parent:l_dom_new_pass, color:"red", position:"right", disappear_way:"time", str: mcs_password_demand+ "."});
                          return -1;
                       }
                       else if(l_dom_confirm_new_pass.value=="")
                       {
                           system_tooltip({parent:l_dom_confirm_new_pass, color:"red", position:"right", disappear_way:"time", str:mcs_blank_password+ "."});
                          return-1;
                       }
                       else if(l_dom_new_pass.value!=l_dom_confirm_new_pass.value)
                       {
                            system_tooltip({parent:l_dom_confirm_new_pass, color:"red", position:"right", disappear_way:"time", str: mcs_two_password_input_inconsistent+ "."});
                               return -1;
                       }
                       l_dom_device_con[s_innerHTML]="<image src='"+client_name+"loading.gif'/>"+mcs_request_send;
                       ms.send_msg("dev_passwd_set",{sn:sn,old_pass:pass,new_pass:l_dom_confirm_new_pass.value,is_guest:0},{sn:sn,pass:l_dom_confirm_new_pass.value},ccm_pwd_set_ack);

               }
               function ccm_pwd_set_ack(msg,ref)
               {
                   if(!l_me_parent) return;

                   l_dom_device_con[s_innerHTML]="";
                   if(msg && msg.result == "")
                   {
                        ms.send_msg("dev_add",{sn:ref.sn,pass:ref.pass},{sn:ref.sn,pass:ref.pass},
                              function(msg, ref){
//                              	     ms.send_msg("sign_in",{srv:g_server_device,user:msg.sn, password:mmd5.hex(msg.pass)},{user:sn, password:mmd5.hex(new_pass.value)},on_cacs_login_ack);
//                   											function on_cacs_login_ack(msg,ref)
//    			   														{
//                 													if(msg && msg.result=="")
//                 													{
//    				       													net_cable_page({option:"setting_wifi",sn:ref.user,old_page:"set_pass"});
//    					   													}
//    					   												}
                                  if(msg && msg.result == ""){
                                        net_cable_page({option:"setting_wifi",sn:msg.info.sn,old_page:"set_pass"});
                                  }
                              });
                   }
                   else if(msg.result == "accounts.pass.invalid")
                   {
                            l_dom_device_con[s_innerHTML]="";
                            system_tooltip({parent:l_dom_new_pass, color:"red", position:"right", disappear_way:"time", str: mcs_invalid_password+ "."});
                   }
                   else if(msg.result == "accounts.user.offline")
                   {
                            l_dom_device_con[s_innerHTML]="";
                            system_tooltip({parent:l_dom_new_pass, color:"red", position:"right", disappear_way:"time", str: mcs_offline+ "."});
                   }
               }
               l_me.ctrl=function(obj)
               {
                  switch(obj.type)
                  {
                      case "destroy":
                      {
                            l_me_parent[s_innerHTML]="";
                            l_me_parent=null;
                            break;
                      }
                      case "device_set_pass":
                      {
                          ccm_pwd_set();
                      }
                  }
               }
        }
    		function guiding_connection_class(obj)
    		{
    		       var l_me=this,
                   l_me_parent = obj.parent,
                   l_parent_callback = obj.on_event,
                   l_dom_pass_div,l_dom_Prompt_div,l_dom_adevice_div,
                   l_dom_adevice_div,l_dom_device_stat,l_dom_device_con,
    			         l_dom_device_div,l_dom_net_add,
                   l_dom_image_div,l_dom_adevice_div_page,l_dom_connection_page,
                   l_dom_device_invalid_Operat,correct_width=500,correct_height=300;
                   l_dom_device_invalid_Prompt = dom_create_child(l_me_parent, "div", "device_invalid_Prompt");
                   l_dom_device_invalid_Prompt[s_style][s_cssText] = "width:" + correct_width-20  + "px;height:" + 52 + "px;text-align:center;"
                        + "position:relative;text-align:left;margin-left:20px;";
                   l_dom_device_invalid_Prompt.style.top ="5px";
                   l_dom_device_invalid_Prompt[s_innerHTML]="<div style='margin-top:12px;'><div id='device_stat'></div><div id='device_con' ></div></div>";

                   l_dom_adevice_div_page = dom_create_child(l_me_parent, "div", "adevice_div_page");
                   l_dom_adevice_div_page[s_style][s_cssText] = "width:" + correct_width  + "px;height:" +( correct_height-112) + "px;"
                   + "position:relative";
                   l_dom_device_invalid_Operat = dom_create_child(me_parent, "div", "device_invalid_Operat");
                   l_dom_device_invalid_Operat[s_style][s_cssText] = "width:" + correct_width  + "px;height:" + 50 + "px;text-align:center;"
                   + "position:relative;text-align:right;";

                   l_dom_device_invalid_Operat[s_innerHTML]=
                    "<button class='standard_buttons_green' id='net_cancel' style='margin-right:25px;margin-top:18px'>"+mcs_cancel+"</button>";


                   l_dom_adevice_div_page[s_innerHTML]=
                   "<div id='image_div'>"
                   +   "<div id='mcs_step_div' style='width:480px;height:160px;text-align:left;margin-left:20px;'>"
    			         +    mcs_prompt_check_connection+"<br/>"
                   +    mcs_step1_check_connect+"<image style='width:40px;height:40px;' src='/imgs/lan.png'/><br/>"
                   +    mcs_step2_check_connect+"<br/><br/>"
                   +    mcs_hint_check_network+"<br/>"
                   +"</div>"
                   +"</div>";

                   l_dom_pass_div       = mx("#pass_div");
                   l_dom_Prompt_div     = mx("#Prompt_div");
                   l_dom_adevice_div    = mx("#adevice_div");
                   l_dom_image_div      = mx("#image_div");
                   l_dom_device_stat   = mx("#device_stat");
                   l_dom_device_con    = mx("#device_con");

                   l_me_parent[s_style][s_cssText] ="width:100%;height:100%;position:absolute;text-align:center;";

                   l_dom_device_stat[s_innerHTML]="<div>"+mcs_device_id+":"+obj.data.user+"</div>";
            			 l_dom_device_con[s_innerHTML]="<image src='"+client_name+"loading.gif'/>"+mcs_state_wait_device_online;
                   l_dom_net_cancel = mx("#net_cancel");
            			 jQuery("#mcs_step_div").mCustomScrollbar();
            			 l_dom_net_cancel.onclick=function(){
                        l_cable_page_create_obj.ctrl({type:"options_destroy",data:{option:l_option_cable_page}});
                      	l_dom_device_invalid_div[s_innerHTML] = "";
                        g_page[s_removeChild](l_dom_device_invalid_div);
                        l_dom_device_invalid_div = null;
                        l_dom_device_invalid_close.onclick = "";
                        l_dom_device_invalid_close.onmouseover = "";
                        l_dom_device_invalid_close.onmouseout = "";
                   }
    			   l_me.ctrl=function(obj)
    			   {
    			      switch(obj.type)
    				  {
    				     case "destroy":
    				     {
    				        l_me_parent[s_innerHTML]="";
                    l_me_parent=null;
                    break;
    				     }
    				  }
    			   }
    			   function login_req()
    			   {
    			       var now_handle_info=acs.ctrl({type:"get_info"});
    			       var password=acs.ctrl({type:"md5_pass", data:{pass:obj.data.pass}});
    				     ms.send_msg("sign_in",{srv:g_server_device,user:obj.data.user, password:password},{user:obj.data.user, pass:acs.ctrl({type:"md5_message_encrypt", data:{pass:obj.data.pass}}).toString(), lid_relate:{lid:now_handle_info.lid,share_key:now_handle_info.share_key}, remember:obj.data.flag, to:"ccm"},on_cacs_login_ack);

    			   }
    			   function on_cacs_login_ack(msg,ref)
    			   {
    			       if(!l_me_parent) return;
                       if(msg && msg.result=="")
                         {
    				       l_parent_callback({type:"login_ack",data:{type:"cacs_login_req",msg:msg,ref:ref}});
                         }
    				     else if(msg.result)
    				     {
    				         if(msg.result=="accounts.user.offline"){
                    		   	  setTimeout(function(){
                    		   	      if(!l_me_parent)
                    		   	      {
                    		   	      	 return;
                    		   	      }
                    		   	     login_req();
                               },3000);
                   	        }
    						     else if(msg.result == "accounts.pass.invalid")
        				     {
        				           l_cable_page_create_obj.ctrl({type:"options_destroy",data:{option:l_option_cable_page}});
        				           l_dom_device_invalid_div[s_innerHTML] = "";
                           g_page[s_removeChild](l_dom_device_invalid_div);
                           l_dom_device_invalid_div = null;
                           l_dom_device_invalid_close.onclick = "";
                           l_dom_device_invalid_close.onmouseover = "";
                           l_dom_device_invalid_close.onmouseout = "";
        						       system_tooltip({parent:mx("#sign_in"), color:"red", position:"right", disappear_way:"time", str:mcs_invalid_password});
        				     }
    				     }
    			   }
             login_req();
    		}
    		function ipc_set_pass_class(obj)
        {
        		    var l_me=this,
                    l_me_parent = obj.parent,
                		l_parent_callback = obj.on_event,
                		sn=obj.data.user,
                	  pass=obj.data.pass,
                	  l_dom_net_change,
                    l_dom_old_pass,l_dom_device_stat,l_dom_device_con,
                    l_dom_new_pass,l_dom_confirm_new_pass,l_dom_device_set_div_page,l_dom_connection_page,l_dom_device_invalid_Prompt,l_dom_device_set_div,
                    l_dom_device_invalid_Operat,correct_width=500,correct_height=300;

                l_dom_device_invalid_Prompt = dom_create_child(l_me_parent, "div", "device_invalid_Prompt");
                l_dom_device_invalid_Prompt[s_style][s_cssText] = "width:" + correct_width-20  + "px;height:" + 152 + "px;text-align:left;margin-left:20px;"
                + "position:relative;";
                l_dom_device_invalid_Prompt.style.top ="5px";
                l_dom_device_invalid_Prompt[s_innerHTML]="<h3>"+mcs_modify_password+"</h3><div  style='margin-top:12px;'><div>"+mcs_device_id+":"+sn+"</div><div id='device_stat'>"+mcs_login_sucess+"<div><br/>"+mcs_prompt_modify_passwd+"</div></div><div id='device_con' ></div></div>";

                l_dom_device_set_div_page = dom_create_child(l_me_parent, "div", "device_set_div_page");
                l_dom_device_set_div_page[s_style][s_cssText] = "width:" + correct_width  + "px;height:" +( correct_height-202) + "px;"
                + "position:relative";

                l_dom_device_set_div = dom_create_child(l_dom_device_set_div_page, "div", "device_set_div");

                l_dom_device_invalid_Operat = dom_create_child(l_me_parent, "div", "device_invalid_Operat");
                l_dom_device_invalid_Operat[s_style][s_cssText] = "width:" + correct_width  + "px;height:" + 50 + "px;text-align:center;"
                + "position:relative;text-align:right";

                l_dom_device_invalid_Operat[s_innerHTML]=
                "<button class='standard_buttons_green' id='net_change' style='margin-top:18px;margin-right:20px;'>"+mcs_change+"</button>";
                jQuery("#device_invalid_close").hide();
                l_dom_net_change =mx("#net_change");
                jQuery(l_me_parent).hide();
                l_dom_net_change.onclick=function(){
                   	   ccm_pwd_set();
                }
                l_dom_device_set_div[s_style][s_cssText] ="height:98px;position:absolute;text-align:center;";

                l_dom_device_set_div[s_innerHTML]=
                   "<div style='height:40px; margin-top:10px;'>"
                   +   "<input id='new_pass' class='standard_inputs_wifi_set' type='password'><span style='float:right;line-height:22px;margin-right:5px;'>"+mcs_new_password+":</span>"
                   +"</div>"
                   +"<div style='height:40px; margin-top:10px;'>"
                   +   "<input id='confirm_new_pass' class='standard_inputs_wifi_set' type='password'><span style='float:right;line-height:22px;margin-right:5px;'>"+mcs_confirm_new_password+":</span>"
                   +"</div>";
                l_dom_old_pass        = mx("#old_pass");
                l_dom_new_pass        = mx("#new_pass");
                l_dom_confirm_new_pass= mx("#confirm_new_pass");
    			      l_dom_device_con      = mx("#device_con");

        		    if(!l_is_ipc_pass)
        			  {
        			      jQuery("#device_invalid_div").hide();
                }
                l_dom_device_set_div.style.left = ((l_dom_device_set_div_page.offsetWidth - l_dom_device_set_div.offsetWidth) / 2) + "px";
                l_dom_device_set_div.style.top = ((l_dom_device_set_div_page.offsetHeight-l_dom_device_set_div.offsetHeight) / 2)  + "px";

        			function CcmDiskCtrlRequest(obj)
        			{
        			    ms.send_msg("sd_set",{sn:sn,no_conf:1},{sn:sn,pwd:pass,now_page:"login_page"},ccm_DiskCtrlResponse);
        			}
        			function ccm_DiskCtrlResponse(msg, ref)
        			{
        			     if(!l_me_parent) return;
                   if(msg && msg.result == "")
                   {
        				      if(ref.pwd.length > 5)
                    	{

        						     var not_prompt =mlocal_storage.get("not_prompt_"+sn);
            						 if(not_prompt)
            						 {
            							   l_parent_callback({type:"Guide_ok",option:"ipc_set_pass"});
            						 }
            						 else
            						 {
                						  var old_page;
                						  if(l_is_ipc_pass)
                							{
                							    old_page="pass_page";
                							    l_is_ipc_pass=false;
                							}
                							else
                							{
                							    old_page="login_page";
                							}
                              net_cable_page({option:"ipc_set_wifi",sn:sn,old_page:old_page});
                         }
                      }
                      else
                      {
        					        jQuery(l_me_parent).show();
        						      jQuery("#device_invalid_div").show();
        					    }
        					    l_dom_device_set_div.style.left = ((l_dom_device_set_div_page.offsetWidth - l_dom_device_set_div.offsetWidth) / 2) + "px";
                      l_dom_device_set_div.style.top = ((l_dom_device_set_div_page.offsetHeight-l_dom_device_set_div.offsetHeight) / 2)  + "px";
                   }
                   else if(msg.result=="permission.denied")
                   {
        				       l_parent_callback({type:"Guide_ok",option:"ipc_set_pass"});
                   }
        			}
        			function ccm_pwd_set(obj)
              {
               	    if(l_dom_new_pass.value =="")
               	    {
                  		 system_tooltip({parent:l_dom_new_pass, color:"red", position:"right", disappear_way:"time", str: mcs_blank_password+ "."});
               	       return -1;
               	    }
               	    else if(l_dom_new_pass.value.length<6||l_dom_new_pass.value.length>20)
               	    {
                  		 system_tooltip({parent:l_dom_new_pass, color:"red", position:"right", disappear_way:"time", str: mcs_password_demand+ "."});
               	       return -1;
               	    }
               	    else if(l_dom_confirm_new_pass.value=="")
               	    {
                  		 system_tooltip({parent:l_dom_confirm_new_pass, color:"red", position:"right", disappear_way:"time", str:mcs_blank_password+ "."});
               	       return-1;
               	    }
               	    else if(l_dom_new_pass.value!=l_dom_confirm_new_pass.value)
               	    {
                  		  system_tooltip({parent:l_dom_confirm_new_pass, color:"red", position:"right", disappear_way:"time", str: mcs_two_password_input_inconsistent+ "."});
               	    		return -1;
               	    }
               	    l_dom_device_con[s_innerHTML]="<image src='"+client_name+"loading.gif'/>"+mcs_request_send;
				            ms.send_msg("dev_passwd_set",{sn:sn,old_pass:pass,new_pass:l_dom_confirm_new_pass.value,is_guest:0},{sn:sn,pass:l_dom_confirm_new_pass.value},ccm_pwd_set_ack);

              }
              function ccm_pwd_set_ack(msg,ref)
              {
                    if(!l_me_parent) return;
                   	l_dom_device_con[s_innerHTML]="";
    				        l_is_ipc_pass=true;
                   if(msg && msg.result == "")
                   {
                      ms.send_msg("sign_in",{srv:g_server_device,user:ref.sn, password:mmd5.hex(ref.pass)},{user:ref.sn, password:mmd5.hex(ref.pass)},
                   			function (msg,ref)
    			   						{
                 					if(msg && msg.result=="")
                 					{
    				       					net_cable_page({option:"setting_wifi",sn:ref.user,old_page:"set_pass"});
    					   					}
    					   				});
    			         }
                   else if(msg.result == "accounts.pass.invalid")
                   {
                   	    l_dom_device_con[s_innerHTML]="";
                  		  system_tooltip({parent:l_dom_new_pass, color:"red", position:"right", disappear_way:"time", str: mcs_invalid_password+ "."});
                   }
                   else if(msg.result == "accounts.user.offline")
                   {
                            l_dom_device_con[s_innerHTML]="";
                            system_tooltip({parent:l_dom_new_pass, color:"red", position:"right", disappear_way:"time", str: mcs_offline+ "."});
                   }
              }
        			l_me.ctrl=function(obj)
        			{
        			   switch(obj.type)
        			   {
        			      case "destroy":
        				   {
        				      l_me_parent[s_innerHTML]="";
                      l_me_parent=null;
                      break;
        				   }
        			   }
        			}
        			CcmDiskCtrlRequest();
        }

    		function ipc_set_wifi_class(obj)
    		{
    		    var l_me=this,
                l_me_parent = obj.parent,
    				    l_parent_callback = obj.on_event,
    				    sn=obj.sn,
                now_ifs={},
                now_net_info={},
                set_wifi_con=0,
                l_dom_select_ssid,
                l_dom_Connecting_div,
                l_dom_setting_wifi,
                l_dom_setting_wifi_p,
                l_dom_setting_wifi_Prompt,
                l_dom_wifi_Refresh,
                l_dom_connection_page,
                l_dom_device_stat,
    				    l_dom_not_prompt,
                l_dom_device_con,l_dom_wifi_button_refresh,
    				    l_dom_ssid_password,l_dom_device_invalid_Operat,
    				    correct_width=500,correct_height=300;

           jQuery("#device_invalid_close").show();
           l_me_parent[s_style][s_cssText] ="width:100%;height:100%;position:absolute;text-align:center;";

           l_dom_setting_wifi_Prompt = dom_create_child(l_me_parent, "div", "setting_wifi_Prompt");
           l_dom_setting_wifi_Prompt[s_style][s_cssText] = "width:" + correct_width-20  + "px;height:152px;"
           + "position:relative;text-align:left;margin-left:20px;";
           l_dom_setting_wifi_Prompt.style.top="5px";

           l_dom_setting_wifi_p = dom_create_child(l_me_parent, "div", "setting_wifi_p");
           l_dom_setting_wifi_p[s_style][s_cssText] = "width:" + correct_width  + "px;height:" +( correct_height-202) + "px;"
           + "position:relative;text-align:center;";

           l_dom_setting_wifi = dom_create_child(l_dom_setting_wifi_p, "div", "setting_wifi");

           l_dom_wifi_Refresh = dom_create_child(l_dom_setting_wifi_p, "div", "wifi_Refresh");
           l_dom_device_invalid_Operat = dom_create_child(l_me_parent, "div", "device_invalid_Operat");
           l_dom_device_invalid_Operat[s_style][s_cssText] = "width:" + correct_width  + "px;height:" + 60 + "px;text-align:center;"
           + "position:absolute;text-align:right";

           l_dom_device_invalid_Operat[s_innerHTML]=
            "<button class='standard_buttons_green' id='net_cancel' style='margin-right:25px;margin-top:18px;'>"+mcs_action_skip+"</button>"
           +"<button class='standard_buttons_green' id='net_next' style='margin-top:18px;margin-right:20px;'>"+mcs_apply+"</button>";

           l_dom_setting_wifi_Prompt[s_innerHTML]="<div><h3>"+mcs_action_config_wifi+"</h3><div id='device_stat' style='margin-top:12px;'></div><div id='device_con' ></div><div id='Connecting_div'></div></div>";
           l_dom_device_con  = mx("#device_con");
           l_dom_device_stat = mx("#device_stat");
           if(obj.old_page=="login_page")
           {
			        l_dom_device_stat[s_innerHTML]="<div>"+mcs_device_id+":"+sn+"</div><div>"+mcs_login_sucess+"</div><br/></div>"+mcs_prompt_config_wifi+"</div></div>";
           }
           else
           {
            	l_dom_device_stat[s_innerHTML]="<div>"+mcs_device_id+":"+sn+"</div><div>"+mcs_state_modify_pass_success+"</div><div><br/>"+mcs_prompt_config_wifi+"</div>";
           }
           l_dom_setting_wifi[s_innerHTML]=
                	"<div style='width:300px;height:35px; '>"
                	+"SSID:&nbsp;&nbsp;<select id='select_ssid' style='text-align:left;'></select>"
                	+"</div>"
                	+"<div style='width:300px;height:35px;'>"
                	+"<input id='ssid_password' class='standard_inputs_wifi_set' type='password' ><span style='float:right;line-height:22px;'>"+mcs_password+":&nbsp;&nbsp;</span>"
                	+"</div>"
				            +"<div style='width:300px;height:20px;line-height:20px;'>"

                	+"<input id='not_prompt'type='checkbox' >&nbsp;&nbsp;"+mcs_donot_remind
                	+"</div>"
                	+"</div>"
                	;

           l_dom_select_ssid    = mx("#select_ssid");
           l_dom_Connecting_div = mx("#Connecting_div");
           l_dom_not_prompt     = mx("#not_prompt");

           l_dom_setting_wifi[s_style][s_cssText] ="width:300px;height:90px;position:relative;text-align:right;";

           l_dom_wifi_Refresh[s_innerHTML]=" <button id='wifi_button_refresh' class='standard_buttons_white' style='margin-left:3px'>" + mcs_refresh + "</button>";
           l_dom_wifi_Refresh[s_style][s_cssText] ="width:150px;height:90px;position:absolute;z-index:51;top:20px;right:10px;text-align:right;float:right;";
           l_dom_setting_wifi.style.left = "30px";
           setting_wifi.style.top =  "10px";

           l_dom_net_next = mx("#net_next");
           l_dom_net_cancel = mx("#net_cancel");
           l_dom_wifi_button_refresh = mx("#wifi_button_refresh");

           l_dom_net_next.onclick=function(){
           	   CcmSetNetworkInfoRequest();
           }
           l_dom_wifi_button_refresh.onclick=function(){
                ccm_get_network_info_request("wifi_client");
           }
           l_dom_net_cancel.onclick=function(){
             	if(mx("#not_prompt").checked)
              {
			            mlocal_storage.set("not_prompt_"+sn,"true");
    					}
    					if(obj.old_page=="login_page")
    					{
    					      l_parent_callback({type:"Guide_ok",option:"ipc_set_wifi"});
    					}else
    					{
    					      net_cable_page({option:"ipc_Guide_ok",sn:sn,Completion_status:"set_pass"});
    					}

           }
           jQuery(l_me_parent).hide();
           function ccm_get_network_info_request(filter)
           {
                ms.send_msg("net_get",{sn:sn,force_scan:0,filter:"all"},{ip:g_server_device},ccm_get_network_info_response);

           }
           function ccm_get_network_info_response(msg, ref)
           {
           	    if(msg && msg.result == "")
                {
                	  if(msg.networks)
                	  {
                	      for(var i=0;i<msg.networks.length;i++)
                	      {
                	          if(msg.networks[i].token=="ra0")
                	          {
    						                if(msg.networks[i].enabled  )
                    	          {
                	          	      now_ifs=msg.networks[i];
                    	             	if(msg.networks[i].enabled==1 && msg.networks[i].wifi_client && msg.networks[i].wifi_client.info.stat=="ok")
                    	             	{
                    	                    l_dom_device_con[s_innerHTML]="";
                        									if(set_wifi_con)
                        									{
                        									   if(obj.old_page=="login_page")
                        			               {
                        										    net_cable_page({option:"ipc_Guide_ok",sn:sn,Completion_status:"set_wifi"});
                        			               }
                        			               else
            			                           {
            			                              net_cable_page({option:"ipc_Guide_ok",sn:sn,Completion_status:"pass_and_wifi"});
            			                           }
                        									}
                        									else
                        									{
                        									   if(obj.old_page=="login_page")
            			                           {
            			                              l_parent_callback({type:"Guide_ok",option:"ipc_set_wifi"});
            			                           }
            			                           else
            			                           {
            			                              net_cable_page({option:"ipc_Guide_ok",sn:sn,Completion_status:"set_pass"});
            			                           }
                        									}

                                    }
                                    else if(msg.networks[i].phy&& msg.networks[i].phy.info && msg.networks[i].phy.info.stat=="err" && set_wifi_con==0)
                        						{
                								         if(obj.old_page=="login_page")
        			                           {
        			                              l_parent_callback({type:"Guide_ok",option:"ipc_set_wifi"});
        			                           }else
        			                           {
        			                              net_cable_page({option:"ipc_Guide_ok",sn:sn,Completion_status:"set_pass"});
        			                           }
                							      }
                        						else if(msg.networks[i].wifi_client && !set_wifi_con )
                                    {
                    								   if(msg.networks[i].wifi_client.ap_list )
                    								   {
                        	                  var iner_htm="";
                        	              	  for(var j=0;j<msg.networks[i].wifi_client.ap_list.length;j++)
                        	              	  {
                        	              	     iner_htm+="<option style='color:white;' value='"+msg.networks[i].wifi_client.ap_list[j].ssid+"'>"+msg.networks[i].wifi_client.ap_list[j].ssid+"</option>"	;
                        	                  }
                    								        jQuery("#select_ssid").html(iner_htm);
                    								   }
                                      jQuery(l_me_parent).show();
                    								  jQuery(select_ssid).tzSelect(null,2);
                    								  jQuery(l_me_parent).show();
                    								  l_dom_device_con[s_innerHTML]="";
                    								  jQuery("#device_invalid_div").show();
                                    }
                	                  else if(set_wifi_con==1)
                	                  {
                    								    if(!l_me_parent) return;
                    									  setTimeout(function(){
                        	              		ccm_get_network_info_request("all");},3000);
                        	          }
                							  }
                							  else
                								{
                						        if(obj.old_page=="login_page")
                    								{
                    			              l_parent_callback({type:"Guide_ok",option:"ipc_set_wifi"});
                    			          }else
                    								{
                			                  net_cable_page({option:"ipc_Guide_ok",sn:sn,Completion_status:"set_pass"});
                								    }
                							  }
                	          }
                	      }
                	  }
                }
                else if(msg.result == "accounts.user.offline")
                {
                     set_wifi_con=0;
                	  	if(l_dom_Connecting_div)
                	  	{
                	  		   l_dom_device_con[s_innerHTML]="";
                	  	     l_dom_Connecting_div[s_innerHTML]=mcs_failed_to_set_the;
                	    }
                }
           }
           function CcmSetNetworkInfoRequest(obj)
           {
	              if(mx("#not_prompt").checked)
                {
			              mlocal_storage.set("not_prompt_"+sn,"true");
    					  }
    					  l_dom_Connecting_div[s_innerHTML]="";
                l_dom_ssid_password = mx("#ssid_password");
                now_net_info["ifs"] = {token:now_ifs.token, enabled:1};
           	    now_net_info.ifs["phy"] = {conf:{mode:"wificlient"}};
    				    now_net_info.ifs["wifi_client"] ={conf:{enabled:1,ssid:mx("#select_network_edit").value,key:ssid_password.value}};
    						ms.send_msg("net_set",{sn:sn,networks:now_net_info.ifs,dns:now_net_info.dns},{sn:sn},ccm_set_network_info_response);

           }
           function ccm_set_network_info_response(msg,ref)
           {
           	    if(msg && msg.result == "")
                {
                	 var wifi_con_time;
                	    set_wifi_con=1;
           	          l_dom_device_con[s_innerHTML]="<image src='"+client_name+"loading.gif'/>"+mcs_state_connecting_to+" "+mx("#select_network_edit").value;
                	 	  ccm_get_network_info_request();

                	 setTimeout(function(){
                	  	set_wifi_con=0;
                	  	if(l_dom_Connecting_div)
                	  	{
                	  		   l_dom_device_con[s_innerHTML]="";
                	  	     l_dom_Connecting_div[s_innerHTML]=mcs_failed_to_set_the;
                	    }
                	 },70000);
                }
                else if(msg.result == "accounts.user.offline")
                {
                     set_wifi_con=0;
                	  	if(l_dom_Connecting_div)
                	  	{
                	  		   l_dom_device_con[s_innerHTML]="";
                	  	     l_dom_Connecting_div[s_innerHTML]=mcs_failed_to_set_the;
                	    }
                }
           }
           l_me.ctrl=function(obj)
           {
              switch(obj.type)
              {
                  case "destroy":
                  {
                  	  l_me_parent[s_innerHTML]="";
                  	  l_me_parent=null;
                  	  break;
                  }
                  case "setting_wifi":
                  {
                  	  CcmSetNetworkInfoRequest(obj);
                  	  break;
                  }
              }
           }
           ccm_get_network_info_request("all");
    		}
        function ipc_Guide_ok_class(obj)
    		{
    		     var l_me=this,
                 l_me_parent = obj.parent,
                 l_dom_complete_div,l_dom_connection_page,
    			       l_dom_device_invalid_Remark,
                 l_dom_device_invalid_Operat,
                 correct_width=500,correct_height=300;

                jQuery("#device_invalid_close").show();
                l_me_parent[s_style][s_cssText] ="width:100%;height:100%;position:relative;text-align:center;";

               l_dom_connection_page = dom_create_child(l_me_parent, "div", "connection_page");
               l_dom_connection_page[s_style][s_cssText] = "width:" + correct_width  + "px;height:30px;"
               + "position:relative;text-align:left;margin-left:20px;";

               l_dom_connection_page[s_innerHTML]=mcs_done;

               l_dom_complete_div_p = dom_create_child(l_me_parent, "div", "complete_div_p");
               l_dom_complete_div_p[s_style][s_cssText] = "width:" + correct_width  + "px;height:" +( correct_height-100) + "px;"
               + "position:relative;text-align:center;";

               l_dom_complete_div = dom_create_child(l_dom_complete_div_p, "div", "complete_div");
               l_dom_device_invalid_Remark = dom_create_child(l_dom_complete_div_p, "div", "device_invalid_Remark");
               l_dom_device_invalid_Operat = dom_create_child(l_me_parent, "div", "device_invalid_Operat");
               l_dom_device_invalid_Operat[s_style][s_cssText] = "width:" + correct_width  + "px;height:" + 50 + "px;text-align:right;"
               + "position:relative;text-align:right";

               l_dom_device_invalid_Operat[s_innerHTML]=
               "<button class='standard_buttons_green' id='net_cancel' style='margin-top:18px;margin-right:20px;'>"+mcs_ok+"</button>";
               l_dom_device_invalid_Operat.style.top="20px";

               l_dom_net_cancel = mx("#net_cancel");
               l_dom_net_cancel.onclick=function(){
			         l_cable_page_create_obj.ctrl({type:"options_destroy",data:{option:l_option_cable_page}});
                  	l_dom_device_invalid_div[s_innerHTML] = "";
                    g_page[s_removeChild](device_invalid_div);
                    l_dom_device_invalid_div = null;
                    l_dom_device_invalid_close.onclick = "";
                    l_dom_device_invalid_close.onmouseover = "";
                    l_dom_device_invalid_close.onmouseout = "";

    					      l_parent_callback({type:"logined"});
                   }

                   l_dom_complete_div[s_style][s_cssText] ="height:80px;position:absolute;text-align:left;";
    			         l_dom_device_invalid_Remark[s_style][s_cssText] ="height:40px;position:absolute;text-align:left;";
                   if(obj.Completion_status=="set_pass")
                   {
                      l_dom_complete_div[s_innerHTML]="1 . "+mcs_modify_password+" "+mcs_state_success//+"<br/>2 . "+mcs_modify_password+"<br/>3 . "+mcs_action_config_wifi;
                   }
                   else if(obj.Completion_status=="set_wifi")
                   {
                   		l_dom_complete_div[s_innerHTML]="1 . "+mcs_action_config_wifi+" "+mcs_state_success//+"<br/>3 . "+mcs_action_config_wifi;
    					        l_dom_device_invalid_Remark[s_innerHTML]=mcs_hint_remove_ethernet;
                   }
                   else if(obj.Completion_status=="pass_and_wifi")
                   {
                   		l_dom_complete_div[s_innerHTML]="1 . "+mcs_modify_password+" "+mcs_state_success+"<br/>2 . "+mcs_action_config_wifi+" "+mcs_state_success;
    					        l_dom_device_invalid_Remark[s_innerHTML]=mcs_hint_remove_ethernet;
                   }
                   l_dom_complete_div.style.right = ((l_dom_complete_div_p.offsetWidth - l_dom_complete_div.offsetWidth) / 2) + "px";
                   l_dom_complete_div.style.top = ((l_dom_complete_div_p.offsetHeight- l_dom_complete_div.offsetHeight) / 2)  + "px";
    			         l_dom_device_invalid_Remark.style.right = ((l_dom_complete_div_p.offsetWidth - l_dom_device_invalid_Remark.offsetWidth) / 2) + "px";
                   l_dom_device_invalid_Remark.style.top = ((l_dom_complete_div_p.offsetHeight- l_dom_device_invalid_Remark.offsetHeight) / 2)+80 + "px";

                   jQuery("#net_cancel").show();
                   l_me.ctrl=function(obj)
                   {
                      switch(obj.type)
                      {
                          case "destroy":
                          {
                          	  l_me_parent[s_innerHTML]="";
                          	  l_me_parent=null;
                          	  break;
                          }
                      }
                   }

    		}
    		function is_configured_wifi_class(obj)
        {
              var l_me=this,
               l_me_parent = obj.parent,
               l_dom_complete_div,l_dom_connection_page,
               l_dom_device_invalid_Operat,
               correct_width=500,correct_height=300;

               l_me_parent[s_style][s_cssText] ="width:100%;height:100%;position:relative;text-align:center;";

               l_dom_connection_page = dom_create_child(l_me_parent, "div", "connection_page");
               l_dom_connection_page[s_style][s_cssText] = "width:" + correct_width  + "px;height:30px;"
               + "position:relative;text-align:left;margin-left:20px;";

               l_dom_connection_page[s_innerHTML]=mcs_done;

               l_dom_complete_div_p = dom_create_child(l_me_parent, "div", "complete_div_p");
               l_dom_complete_div_p[s_style][s_cssText] = "width:" + correct_width  + "px;height:" +( correct_height-100) + "px;"
               + "position:relative;text-align:center;";

               l_dom_complete_div = dom_create_child(l_dom_complete_div_p, "div", "complete_div");

               l_dom_device_invalid_Operat = dom_create_child(l_me_parent, "div", "device_invalid_Operat");
               l_dom_device_invalid_Operat[s_style][s_cssText] = "width:" + correct_width  + "px;height:" + 50 + "px;text-align:center;"
               + "position:relative;text-align:right";

               l_dom_device_invalid_Operat[s_innerHTML]=
               "<button class='standard_buttons_green' id='net_cancel' style='margin-top:18px;margin-right:20px;'>"+mcs_ok+"</button>";
               l_dom_device_invalid_Operat.style.top="20px";

               l_dom_net_cancel = mx("#net_cancel");
               l_dom_net_cancel.onclick=function(){
                    l_cable_page_create_obj.ctrl({type:"options_destroy",data:{option:l_option_cable_page}});
                    l_dom_device_invalid_div[s_innerHTML] = "";
                    g_page[s_removeChild](l_dom_device_invalid_div);
                    l_dom_device_invalid_div = null;
                    l_dom_device_invalid_close.onclick = "";
                    l_dom_device_invalid_close.onmouseover = "";
                    l_dom_device_invalid_close.onmouseout = "";

                     l_parent_callback({type:"logined"});
               }

               l_dom_complete_div[s_style][s_cssText] ="height:80px;position:absolute;text-align:left;";
               if(obj.Completion_status==1)
               {
                  l_dom_complete_div[s_innerHTML]="1 . "+mcs_add_device+" "+mcs_state_success//+"<br/>2 . "+mcs_modify_password+"<br/>3 . "+mcs_action_config_wifi;
               }
               else if(obj.Completion_status==2)
               {
                   l_dom_complete_div[s_innerHTML]="1 . "+mcs_add_device+" "+mcs_state_success+"<br/>2 . "+mcs_modify_password+" "+mcs_state_success//+"<br/>3 . "+mcs_action_config_wifi;
               }
               else if(obj.Completion_status==3)
               {
                   l_dom_complete_div[s_innerHTML]="1 . "+mcs_add_device+" "+mcs_state_success+"<br/>2 . "+mcs_modify_password+" "+mcs_state_success+"<br/>3 . "+mcs_action_config_wifi+" "+mcs_state_success;
               }
               else if(obj.Completion_status==4)
               {
                   l_dom_complete_div[s_innerHTML]="1 . "+mcs_add_device+" "+mcs_state_success+"<br/>"/*+2 . "+mcs_modify_password+" <br/>*/+"2 . "+mcs_action_config_wifi+" "+mcs_state_success;
               }

               l_dom_complete_div.style.right = ((l_dom_complete_div_p.offsetWidth - l_dom_complete_div.offsetWidth) / 2) + "px";
               l_dom_complete_div.style.top = ((l_dom_complete_div_p.offsetHeight- l_dom_complete_div.offsetHeight) / 2)  + "px";

               jQuery("#net_cancel").show();
               l_me.ctrl=function(obj)
               {
                  switch(obj.type)
                  {
                      case "destroy":
                      {
                            l_me_parent[s_innerHTML]="";
                            l_me_parent=null;
                            break;
                      }
                  }
               }
        }
        function setting_wifi_class(obj)
        {
            var l_me=this,
                l_me_parent = obj.parent,
                now_ifs={},
                now_net_info={},
                set_wifi_con=0,
                l_dom_select_ssid,
                l_dom_Connecting_div,
                l_dom_setting_wifi,
                l_dom_setting_wifi_p,
                l_dom_setting_wifi_Prompt,
                l_dom_connection_page,
                l_dom_device_stat,
                l_dom_device_con,l_dom_wifi_button_refresh,
                l_dom_ssid_password,l_dom_device_invalid_Operat,
                correct_width=500,correct_height=300;

               l_me_parent[s_style][s_cssText] ="width:100%;height:100%;position:absolute;text-align:center;";

               l_dom_setting_wifi_Prompt = dom_create_child(l_me_parent, "div", "setting_wifi_Prompt");
               l_dom_setting_wifi_Prompt[s_style][s_cssText] = "width:" + correct_width-20  + "px;height:152px;"
               + "position:relative;text-align:left;margin-left:20px;";
               l_dom_setting_wifi_Prompt.style.top="5px";

               l_dom_setting_wifi_p = dom_create_child(l_me_parent, "div", "setting_wifi_p");
               l_dom_setting_wifi_p[s_style][s_cssText] = "width:" + correct_width  + "px;height:" +( correct_height-202) + "px;"
               + "position:relative;text-align:center;";

               l_dom_setting_wifi = dom_create_child(setting_wifi_p, "div", "setting_wifi");

               l_dom_wifi_Refresh = dom_create_child(setting_wifi_p, "div", "wifi_Refresh");
               l_dom_device_invalid_Operat = dom_create_child(l_me_parent, "div", "device_invalid_Operat");
               l_dom_device_invalid_Operat[s_style][s_cssText] = "width:" + correct_width  + "px;height:" + 60 + "px;text-align:center;"
                + "position:absolute;text-align:right";

               l_dom_device_invalid_Operat[s_innerHTML]=
                "<button class='standard_buttons_green' id='net_cancel' style='margin-right:25px;margin-top:18px;'>"+mcs_cancel+"</button>"
               +"<button class='standard_buttons_green' id='net_next' style='margin-top:18px;margin-right:20px;'>"+mcs_apply+"</button>";

               l_dom_setting_wifi_Prompt[s_innerHTML]="<div><h3>"+mcs_action_config_wifi+"</h3><div id='device_stat' style='margin-top:12px;'></div><div id='device_con'></div></div>";
               l_dom_device_con  = mx("#device_con");
               l_dom_device_stat = mx("#device_stat");
               if(obj.old_page=="set_pass"){
                   l_dom_device_stat[s_innerHTML]="<div>"+mcs_device_id+":"+obj.sn+"</div><div>"+mcs_state_modify_pass_success+"</div><div><br/>"+mcs_prompt_config_wifi+"</div>";
               }else{
                    l_dom_device_stat[s_innerHTML]="<div>"+mcs_device_id+":"+obj.sn+"</div><div>"+mcs_state_add_device_success+"</div><div><br/>"+mcs_prompt_config_wifi+"</div>";
               }
               l_dom_setting_wifi[s_innerHTML]=
                        "<div style='width:300px;height:40px; '>"
                        +"SSID:&nbsp;&nbsp;<select id='select_ssid' style='text-align:left;'></select>"
                        +"</div>"
                        +"<div style='width:300px;height:40px;'>"
                        +"<input id='ssid_password' class='standard_inputs_wifi_set' type='password' ><span style='float:right;line-height:22px;'>"+mcs_password+":&nbsp;&nbsp;</span>"
                        +"</div>"
                        +"<div id='Connecting_div'>"
                        +"</div>"
                        +"</div>";

               l_dom_select_ssid    = mx("#select_ssid");
               l_dom_Connecting_div = mx("#Connecting_div");

               l_dom_setting_wifi[s_style][s_cssText] ="width:300px;height:90px;position:relative;text-align:right;";

               l_dom_wifi_Refresh[s_innerHTML]=" <button id='wifi_button_refresh' class='standard_buttons_white' style='margin-left:3px'>" + mcs_refresh + "</button>";
               l_dom_wifi_Refresh[s_style][s_cssText] ="width:150px;height:90px;position:absolute;z-index:51;top:20px;right:10px;text-align:right;float:right;";
               l_dom_setting_wifi.style.left = "30px";
               //l_dom_setting_wifi.style.top = (((correct_height-182) - setting_wifi.offsetHeight) / 2)  + "px";

               l_dom_net_next = mx("#net_next");
               l_dom_net_cancel = mx("#net_cancel");
               l_dom_wifi_button_refresh = mx("#wifi_button_refresh");
               l_dom_net_next.onclick=function(){
                      CcmSetNetworkInfoRequest(obj);
               }
               l_dom_wifi_button_refresh.onclick=function(){
                    ccm_get_network_info_request("wifi_client");
               }
               l_dom_net_cancel.onclick=function(){
                    if(obj.old_page=="set_pass"){
                          net_cable_page({option:"is_configured_wifi",Completion_status:2});
                    }
                    else if(obj.old_page=="add_device"){
                          net_cable_page({option:"is_configured_wifi",Completion_status:1});
                    }
               }
               jQuery(l_me_parent).hide();
               function ccm_get_network_info_request(){
                    ms.send_msg("net_get",{sn:obj.sn,force_scan:0,filter:"all"},{ip:g_server_device},ccm_get_network_info_response);
               }
               function ccm_get_network_info_response(msg, ref){
               	    if(msg && msg.result == ""){
                    	  if(msg.networks ){
                    	      for(var i=0;i<msg.networks.length;i++){
                    	          if(msg.networks[i].token=="ra0"){
                    	          	  now_ifs=msg.networks[i];
                    	             	if(msg.networks[i].enabled==1 && msg.networks[i].wifi_client && msg.networks[i].wifi_client.info.stat=="ok"){
                    	                  l_dom_device_con[s_innerHTML]="";
                    	                  if(obj.old_page=="set_pass" &&set_wifi_con==1){
                    	                      net_cable_page({option:"is_configured_wifi",Completion_status:3});
                    	                  }
                    	                  else if(obj.old_page=="add_device" &&set_wifi_con==1){
                    	                      net_cable_page({option:"is_configured_wifi",Completion_status:4});
                    	                  }
                    	                  else if(obj.old_page=="set_pass" && set_wifi_con==0){
                    	                      net_cable_page({option:"is_configured_wifi",Completion_status:2});
                    	                  }else{
                    	                      net_cable_page({option:"is_configured_wifi",Completion_status:1});
                    	                  }
                    	             	}
                    	             	else if(msg.networks[i].wifi_client && msg.networks[i].wifi_client.ap_list && !set_wifi_con )
                    	              {
                    	                  var iner_htm="";
                    	              	  for(var j=0;j<msg.networks[i].wifi_client.ap_list.length;j++){
                    	              	     iner_htm+="<option style='color:white;' value='"+msg.networks[i].wifi_client.ap_list[j].ssid+"'>"+msg.networks[i].wifi_client.ap_list[j].ssid+"</option>"	;
                    	              	  }

                										  jQuery("#select_ssid").html(iner_htm);
                                      jQuery(l_me_parent).show();
                										  jQuery(select_ssid).tzSelect(null,2);

                										  l_dom_device_con[s_innerHTML]="";
                    	              }
                    	              else if(set_wifi_con==1){
                										    if(!l_me_parent) return;
                											  setTimeout(function(){ccm_get_network_info_request("all");},3000);
                    	              }
                										else if(set_wifi_con==0){
                										  if(obj.old_page=="add_device"){
                										     net_cable_page({option:"is_configured_wifi",Completion_status:1});
                										  }else if(obj.old_page=="set_pass"){
                                    	    net_cable_page({option:"is_configured_wifi",Completion_status:2});
                										  }
                									  }
                    	          }
                    	      }
                    	  }
                    }
               }
               function CcmSetNetworkInfoRequest(obj)
               {
                      ssid_password = mx("#ssid_password");
                      now_net_info["networks"] = {token:now_ifs.token, enabled:1};
               	      now_net_info.networks["phy"] = {conf:{mode:"wificlient"}};

                      now_net_info.networks["wifi_client"] ={conf:{enabled:1,ssid:mx("#select_network_edit").value,key:ssid_password.value}};

								      ms.send_msg("net_set",{sn:obj.sn,networks:now_net_info.networks,dns:now_net_info.networks.dns},{sn:obj.sn, ip_refresh:obj.to, select:obj.select,ip:obj.to},ccm_set_network_info_response);
                      //ms.send_msg("net_set",{sn:obj.sn,networks:now_net_info.networks,},null,ccm_set_network_info_response);
               }
               function ccm_set_network_info_response(msg,ref)
               {
               	    if(msg && msg.result == "")
                    {
                    	 var wifi_con_time;
                    	    set_wifi_con=1;
               	          l_dom_device_con[s_innerHTML]="<image src='"+client_name+"loading.gif'/>"+mcs_request_send;
                    	 	  ccm_get_network_info_request();

                    	 setTimeout(function(){
                    	  	set_wifi_con=0;
                    	  	if(l_dom_Connecting_div)
                    	  	{
                    	  		 l_dom_device_con[s_innerHTML]="";
                    	  	   l_dom_Connecting_div[s_innerHTML]=mcs_failed_to_set_the;
                    	    }
                    	 },70000);
                    }
               }
               l_me.ctrl=function(obj)
               {
                  switch(obj.type)
                  {
                      case "destroy":
                      {
                            l_me_parent[s_innerHTML]="";
                            l_me_parent=null;
                            break;
                      }
                      case "setting_wifi":
                      {
                            CcmSetNetworkInfoRequest();
                            break;
                      }
                  }
               }
            ccm_get_network_info_request();
        }
        function option_set_class(obj)
        {        	     
        	     var l_me = this,
        	     l_me_parent = obj.parent,
        	     correct_width=500,correct_height=300;
        	     if(g_domain_oems_vimtag)
        	     {
        	     	  l_me_parent[s_innerHTML] =
        	     	  "<div>"
        	     	  +  "<div style='height:60px;line-height:60px;text-align:center;font-size:16px;'>" + mcs_option + "</div>"
        	     	  +  "<div style='width:260px;height:1px;background-color:#cccccc;'></div>"
        	     	  +  "<div style='height:40px;line-height:40px;font-size:16px;'>" + mcs_plug + ":</div>"
        	     	  +  "<div id='adevice_div' style='width:260px;height:40px;margin-bottom:30px;font-size:14px;'>"
			            +     "<select id='select_plug' style='width:260px;height:40px;cursor:pointer;'>"
			            +         "<option value='1'>"+mcs_plug_load+"</option>"
			            +         "<option value='2'>"+mcs_plug_load_refuse+"</option>"
			            +         "<option value='3'>"+mcs_plug_load_auto+"</option>"
			            +     "</select>"
			            +  "</div>"
			            +  "<button id='option_ok' style='font-size:16px;width:260px;height:40px;background-color:#00a6ba;margin-bottom:10px;border:0px;cursor:pointer;'>" + mcs_option_ok + "</button>"
        	     	  +"<div>";
        	     	  
        	     	  select_plug_option = mx("#select_plug");
        	     	  plug_option_ok = mx("#option_ok");
        	     }
        	     else
        	     {
		        	     device_invalid_Prompt = dom_create_child(l_me_parent, "div", "device_invalid_Prompt");
		               device_invalid_Prompt[s_style][s_cssText] = "width:" + correct_width-20  + "px;height:" + 92 + "px;text-align:center;"
		               + "position:relative;text-align:left;margin-left:20px;";
		               device_invalid_Prompt.style.top ="5px";
		        	     device_invalid_Prompt[s_innerHTML]="<h3>"+mcs_option+"</h3><div style='margin-top:12px;'><div id='device_stat'></div><div id='device_con' ></div></div>";
		        	     
		        	     adevice_div_page = dom_create_child(l_me_parent, "div", "adevice_div_page");
		               adevice_div_page[s_style][s_cssText] = "width:" + correct_width  + "px;height:" +( correct_height-142) + "px;text-align:center;"
		               + "position:relative;";
		                device_invalid_Operat = dom_create_child(l_me_parent, "div", "device_invalid_Operat");
		                device_invalid_Operat[s_style][s_cssText] = "width:" + correct_width  + "px;height:" + 50 + "px;text-align:center;"
		                + "position:relative;text-align:right;";
		                
		                device_invalid_Operat[s_innerHTML]=
		                 "<button class='standard_buttons_green' id='option_ok' style='margin-right:25px;margin-top:18px'>"+mcs_option_ok+"</button>";
		               
				            adevice_div_page[s_innerHTML] = 
				            "<div id='adevice_div' class='select_block'>"
				            +           "<span style='width:100px;text-align:right;display:inline-block;display:-moz-inline-block;'>"+mcs_plug+"</span>"
				            +           "<select id='select_plug'>"
				            +               "<option value='1'>"+mcs_plug_load+"</option>"
				            +               "<option value='2'>"+mcs_plug_load_refuse+"</option>"
				            +               "<option value='3'>"+mcs_plug_load_auto+"</option>"
				            +           "</select>"
				            +"</div>"
                    +"<div style='margin-top:24px;'>"
        	          +     "<span style='width:100px;text-align:right;display:inline-block;display:-moz-inline-block;'>"+mcs_input_download_path+"</span>"
        	          +     "<input id='md_download_path' type='text' value='"+(mlocal_storage.get("download_path")?mlocal_storage.get("download_path"):(navigator.platform.indexOf("Win")>-1?('c:/downloads/'):('/Users/Shared/')))+"'>"
				            +"</div>";
		
		             select_plug_option = mx("#select_plug");
		             plug_option_ok = mx("#option_ok");
		             
		             jQuery(select_plug_option).tzSelect();
               }
               
             if(g_domain_oems_vimtag)
             {
             	   select_plug_option.onchange = function(e){
             	   	     if(this[this.selectedIndex].text == mcs_plug_load )
		                    {
		                    	  mlocal_storage.set(str.remember_plug_str, this[this.selectedIndex].value); 
		                        g_is_plug_load = 1;
		                        g_is_plug_load_refuse = 0;
		                        g_play_flash_video = 0;
		                    }
		                   else if(this[this.selectedIndex].text == mcs_plug_load_refuse) 
		                   	{  
		                   		  mlocal_storage.set(str.remember_plug_str, this[this.selectedIndex].value);
		                   		  g_is_plug_load_refuse = 1;
		                        g_is_plug_load = 0;
		                   	}
		                   else if(this[this.selectedIndex].text == mcs_plug_load_auto) 
		                   	{ 
		                   		  mlocal_storage.set(str.remember_plug_str, this[this.selectedIndex].value);
		                   		  g_is_plug_load = 0;
		                        g_is_plug_load_refuse = 0;
		                   	}
             	   };
             }
             else
             {
		             var l_dom_list_span_classDom = jQuery(".device_list_li_span"), number;
		             select_plug_option.change_value = function(){
		             	     for(var i=0, length=l_dom_list_span_classDom.length; i < length; i++)
		             	     {
			             	     	  if(l_dom_list_span_classDom[i].getAttribute("sn") == g_select_device_ipc)
			             	     	  {
			             	     	  	 number = i;
			             	     	  }
		             	     }
		                   if(this[this.selectedIndex].text == mcs_plug_load )
		                   {
		                    	  mlocal_storage.set(str.remember_plug_str, this[this.selectedIndex].value); 
		                        g_is_plug_load = 1;
		                        g_is_plug_load_refuse = 0;
		                        g_play_flash_video = 0;
		                        jQuery(l_dom_list_span_classDom[number]).click();
		                   }
		                   else if(this[this.selectedIndex].text == mcs_plug_load_refuse) 
		                   {  
		                   		  mlocal_storage.set(str.remember_plug_str, this[this.selectedIndex].value);
		                   		  g_is_plug_load_refuse = 1;
		                        g_is_plug_load = 0;
		                        jQuery(l_dom_list_span_classDom[number]).click(); 
		                   }
		                   else if(this[this.selectedIndex].text == mcs_plug_load_auto) 
		                   { 
		                   		  mlocal_storage.set(str.remember_plug_str, this[this.selectedIndex].value);
		                   		  g_is_plug_load = 0;
		                        g_is_plug_load_refuse = 0;
		                        jQuery(l_dom_list_span_classDom[number]).click();
		                   }
		             }
             }
             
             var str =
             {
             	  remember_plug_str:"remember_plug_info"
             };
             var i, length = select_plug_option.length, plug_choice = mlocal_storage.get("remember_plug_info");

             if(plug_choice)
             {
             	  for(i=0;i<length;++i)
             	  {
             	  	if(select_plug_option[i].value == plug_choice)
             	  	select_plug_option[i].selected = true;
             	  }
             }
             else
             {
             	  select_plug_option[2].selected = true;
             }
             if(!g_domain_oems_vimtag) jQuery(select_plug_option).tzSelect(); //After each change should be submitted
             l_me.ctrl=function(obj)
             {
	               switch(obj.type)
	               {
	                  case "destroy":
	                   {
	                      l_me_parent[s_innerHTML]="";
	                      l_me_parent=null;
	                      break;
	                   }
	               }
             }
             plug_option_ok.onclick=function(){
             	   var reg = navigator.platform.indexOf("Win")>-1?(/[a-zA-Z]+:[a-zA-Z0-9]*/):(/[a-zA-Z0-9]*/);
	               if(!reg.exec(mx("#md_download_path").value.replace(/[/]/g,"")))
		        	   {
		        	       g_domain_oems_vimtag?msg_tips({msg:mcs_download_path_name_error,type:"error",timeout:3000}):system_tooltip({parent:mx("#md_download_path"), color:"red", position:"right", disappear_way:"time", str:mcs_download_path_name_error+"."});
		        	   }else {
		        	       mlocal_storage.set("download_path",mx("#md_download_path").value);
		        	       l_cable_page_create_obj.ctrl({type:"options_destroy",data:{option:l_option_cable_page}});
                     l_dom_device_invalid_div[s_innerHTML] = "";
                     page[s_removeChild](l_dom_device_invalid_div);
                     l_dom_device_invalid_div = null;
		        	   }
             }                                                    
        }
        function download_path_class (obj) {
        	   var l_me = this, l_me_parent = obj.parent,
        	   l_parent_callback = obj.on_event,
        	   correct_width=500,correct_height=300,
        	   l_dom_input_download_path,
        	   l_dom_input_path_ok;
        	   
        	   l_me_parent[s_innerHTML] =
        	   "<div style='padding-top:135px;'>"
        	   +   "<div>"
        	   +       "<span>"+mcs_input_download_path+"</span>"
        	   +       "<input id='input_download_path' type='text' value='"+(navigator.platform.indexOf("Win")>-1?('c:/downloads/'):('/Users/Shared/'))+"'>"
        	   +   "</div>"
        	   +   "<button class='"+(g_domain_oems_vimtag?'list_right_button':'standard_buttons_green')+"' id='input_path_ok' style='position:absolute;right:25px;bottom:3px;'>"+mcs_option_ok+"</button>";
        	   +"</div>";
        	   
        	   l_dom_input_download_path = mx("#input_download_path");
        	   l_dom_input_path_ok = mx("#input_path_ok");
        	   
        	   l_dom_input_path_ok.onclick = function(){
        	       var reg = navigator.platform.indexOf("Win")>-1?(/[a-zA-Z]+:[a-zA-Z0-9]*/):(/[a-zA-Z0-9]*/);
	               if(!reg.exec(l_dom_input_download_path.value.replace(/[/]/g,"")))
		        	   {
		        	       g_domain_oems_vimtag?msg_tips({msg:mcs_download_path_name_error,type:"error",timeout:3000}):system_tooltip({parent:l_dom_input_download_path, color:"red", position:"right", disappear_way:"time", str:mcs_download_path_name_error+"."});
		        	   }else {
		        	       l_parent_callback({type:"download_save_path",data:l_dom_input_download_path.value});
		        	       jQuery("#device_invalid_close").click();
		        	       mlocal_storage.set("download_path",l_dom_input_download_path.value);
		        	   }
        	   }
//        	   l_dom_input_download_path.onfocus = function(){
//        	       if(this.value=="c:/downloads/"||this.value=="/Users/Shared/"){
//        	           this.value = "";
//        	       }
//        	   }
        	   l_dom_input_download_path.onblur = function(){
        	       if(this.value == ""){
        	       	   if(navigator.platform.indexOf("Win") > -1){
			               	   this.value = "c:/downloads/";
			               }else if(navigator.platform.indexOf("Mac") > -1){
			               	   this.value = "/Users/Shared/";
			          		 }
        	       }
        	   }
        }
        function notice_board_class(obj)
        {    	       
        	   jQuery("#device_invalid_content").append("<iframe id='board_iframe' style='width:500px;height:300px;border:none;' src="+ obj.url +" ></iframe>");
        }
    		function add_device(msg,sn)
    		{
    		   l_parent_callback({type:"add_device",data:{msg:msg,sn:sn}});
    	  }
    	  function on_event(obj)
        {
            switch(obj.type)
            {
                case "logined":
                {
                    l_parent_callback({type:"logined"});
                    break;
                }
                case "download_save_path":
                {
                	  l_parent_callback(obj);
                	  break;
                }
            }
        }
    	    l_me.ctrl=function(obj)		//net_setting_class
    	    {
    	       switch(obj.type)
    	       {
        		     case "add_device":
            		 {
            			   create_device_invalid_div({type:"add_device"});
            				 net_cable_page({option:"add_device"});
            			   break;
            		 }
          			 case "ipc_pass_set":
          			 {
          			     create_device_invalid_div({type:"ipc_pass_set"});
          				   net_cable_page({option:"ipc_set_pass",data:obj.data});
          			     break;
          			 }
          			 case "guiding_connection":
          			 {
          			     create_device_invalid_div({type:"guiding_connection"});
          			     net_cable_page({option:"guiding_connection",data:obj.data});
          				   break;
          			 }
          			 case "option_set":
		             {
		             	   create_device_invalid_div({type:"option_set"});
		             	   net_cable_page({option:"option_set"});
		             	   break;
		             } //set option
		             case "notice_board":
		             {
		             		 create_device_invalid_div({type:"notice_board"});
		             		 net_cable_page({option:"notice_board",url:obj.url});
		             		 break;
		             }
		             case "download_path":
		             {
		             	   create_device_invalid_div({type:"download_path"});
		             	   net_cable_page({option:"download_path"});
		             	   break;
		             }
    		     }
    	    }
    }
    function class_home_cntr(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_view_page,
            l_view_page_obj,
            l_dom_ptz_control_box,
            l_ptz_control_box_obj,
            l_dom_home_control_box,
            l_home_control_box_obj,
            l_dom_view_page_up,
            l_dom_view_page_bottom,
            l_dom_view_page_bottom_menu,
            l_dom_view_page_left,
            l_dom_view_page_center,
            l_dom_view_page_right,
            l_view_page_bottom_menu,
            l_dom_video_buffer_rate,
            l_dom_net_setting,
            l_old_progress,
            l_download_progress_timeout;

        if(g_domain_oems_vimtag){
        	  l_dom_view_page_left = dom_create_child(l_me_parent, "div", "view_page_left");
        	  l_dom_view_page_center = dom_create_child(l_me_parent, "div", "view_page_center");
        	  l_dom_view_page_right = dom_create_child(l_me_parent, "div", "view_page_right");
        	  l_dom_view_page_up = dom_create_child(l_dom_view_page_left, "div", "view_page_up");
        	  l_dom_view_page = dom_create_child(l_dom_view_page_left, "div", "view_page");
        	  l_dom_view_page_bottom = dom_create_child(l_dom_view_page_left, "div", "view_page_bottom");
        	  l_dom_view_page_bottom_menu = dom_create_child(l_dom_view_page_left, "div", "view_page_bottom_menu");
        	  if(g_is_in_playback_page){
        	  	 l_dom_video_buffer_rate = dom_create_child(l_dom_view_page, "div", "show_video_buffer_rate");
        	  }
        	  else {
        	  	 l_dom_ptz_control_box = dom_create_child(l_dom_view_page, "div", "vimtag_ptz_control_box");
        	  }        	  
        }else{
        	  l_dom_view_page = dom_create_child(l_me_parent, "div", "view_page");
        	  l_dom_ptz_control_box = dom_create_child(l_me_parent, "div", "ptz_control_box");
        	  l_dom_home_control_box = dom_create_child(l_me_parent, "div", "home_control_box");
        }
        function playback_download (obj) {
	        	var sn=g_select_device_ipc;
	      		var node = mcloud_agent.devs.get(g_select_device_ipc);
	      		l_old_progress = 0;
	      		clearTimeout(l_download_progress_timeout);
	      		if(g_is_play_back_download){
	                document.getElementById("download_rate").innerHTML=(g_is_play_back_download && obj.iscomplete)?"100%":"×";
	                delete_ipc_vim({node_sn:sn,isDownload:0});
	                g_is_play_back_download = 0;
	          }else{
	                if(navigator.platform.indexOf("Win") > -1){
	                    create_ipc_vim({node_sn:sn,isDownload:1,localPath:obj.way.replace(/[/]/g,'\\/')+obj.path.replace(/:/g,".")+".mp4"});
	                }
	          			else if(navigator.platform.indexOf("Mac") > -1){
	          			    create_ipc_vim({node_sn:sn,isDownload:1,localPath:obj.way.replace(/[/]/g,'\\/')+obj.path.replace(/:/g,".")+".mp4"});
	          			}
	          			mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName=obj.path;
	          }
        }
				function create_ipc_vim(obj){
	          if(!obj.isDownload)g_is_play_back = 1; 
	          if(obj.isDownload)g_is_play_back_download = 1; 
	          var inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:1}});
	          l_view_page_obj.ctrl({type:"add_playback_ipc", data:{inner_window_info:inner_window_info, node_sn:obj.node_sn,isDownload:obj.isDownload?obj.isDownload:0,localPath:obj.localPath?obj.localPath:""}});
				}
				function delete_ipc_vim (obj) {
            g_is_play_back = 0;
            var inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:1}});
            l_view_page_obj.ctrl({type:"remove_ipc", data:{inner_window_info:inner_window_info,isDownload:obj.isDownload?obj.isDownload:0}});
				}
        function create_ipc(obj)
        {
            if(!obj.node_sn) return;
            if(!g_view_link.add(obj.node_sn)){
                var pos = g_view_link.pos(obj.node_sn) + 1,
                    inner_window_info, page_state;
                if(g_view_link.length >= (g_view_split_count * g_view_pages))
                    ++g_view_pages;
                if(!g_domain_oems_vimtag){
		                var trow = mx("/tr", mx("#now_page_state"))[0];
		                var tcol = trow.insertCell(-1);
                }
                if(pos <= (g_view_split_count * g_now_view_page)){
                    inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:pos - g_view_split_count * (g_now_view_page - 1)}});
                    l_view_page_obj.ctrl({type:"snapshot",data:0});
                    l_view_page_obj.ctrl({type:"add_home_ipc",data:{inner_window_info:inner_window_info, node_sn:obj.node_sn}});
                }
                g_is_playing = 1;
                if(!g_domain_oems_vimtag){
		                if(g_now_view_page == Math.ceil(pos / g_view_split_count)){
		                     page_state = dom_create_child(tcol, "div");
		                     background_img_set(page_state, sub_img_page_state0);
		                     l_home_control_box_obj.ctrl({type:"adjust_play_button_state", data:{play_state:"play"}});
		                }else{
		                    page_state = dom_create_child(tcol, "div");
		                    background_img_set(page_state, sub_img_page_state1);
		                }
                }
            }
        }
        function delete_ipc(obj)
        {
            if(g_view_link.del(obj.node_sn))
            {
                var pos = g_view_link.pos(obj.node_sn),
                    trol, page_state;
                if(!g_domain_oems_vimtag)
                {
		                if(trol = mx("/tr", mx("#now_page_state"))[0])
		                {
		                    trol.deleteCell(pos);
		                }
                }
                if((obj.type != "refresh"))
                    g_is_playing = 0;
                if(!g_domain_oems_vimtag) l_home_control_box_obj.ctrl({type:"adjust_play_button_state", data:{play_state:"stop"}});
                if(g_view_pages > 1 && g_view_link.length <= (g_view_split_count * (g_view_pages - 1)))
                {
                    --g_view_pages;
                    if(g_view_link.length && g_view_link.length  == (g_view_split_count * (g_now_view_page - 1)))                   //the last page is empty
                    {
                        --g_now_view_page;
                        if(g_view_page_redraw)
                            g_view_page_redraw();
                    }
                }
                var i = 0, in_pos, count_pos,
                    temp_pos = pos - g_view_split_count * g_now_view_page,
                    list_obj = g_view_link.get_first(),
                    trow, inner_window_info;
                if(temp_pos < 0)
                {
                    in_pos = 0;
                    count_pos = g_view_split_count * (g_now_view_page - 1);
                }
                else if(temp_pos > g_view_split_count)
                {
                    in_pos = g_view_split_count;
                    count_pos = 0;
                }
                else
                {
                    in_pos = temp_pos;
                    count_pos = pos;
                    if(list_obj == null)                //the last remaining
                    {
                        inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:in_pos + 1}});
                         l_view_page_obj.ctrl({type:"remove_ipc", data:{inner_window_info:inner_window_info}});
                        return;
                    }
                }
                while(i++ < count_pos)
                    list_obj = list_obj.next;
                if(list_obj == null)                    //the one that at the end of
                {
                    g_select_inner_ipc = "";
                }
                else
                    g_select_inner_ipc = list_obj.data;
                for(; in_pos < g_view_split_count && in_pos < g_view_link.length - g_view_split_count * (g_now_view_page - 1) ; ++in_pos)
                {
                    inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:in_pos + 1}});
                    l_view_page_obj.ctrl({type:"remove_ipc", data:{inner_window_info:inner_window_info}});

                    l_view_page_obj.ctrl({type:"snapshot",data:0});
                        l_view_page_obj.ctrl({type:"add_home_ipc", data:{inner_window_info:inner_window_info, node_sn:list_obj.data}});
                    pos = g_view_link.pos(list_obj.data);
                    if(!g_domain_oems_vimtag)
                    {
		                    if(trow = mx("/tr", mx("#now_page_state"))[0])
		                    {
		                    }
                    }
                    list_obj = list_obj.next;
                }
                if(in_pos < g_view_split_count)
                {
                     inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:in_pos + 1}});
                     l_view_page_obj.ctrl({type:"remove_ipc", data:{inner_window_info:inner_window_info}});
                     l_view_page_obj.ctrl({type:"snapshot",data:1});
                }
            }
        }
        function split_screen(obj)
        {
            if(g_split_update)
                g_split_update({count:obj.count});
        }
        //Turn on or off the device list
        function operate_device_list(obj)
        {
            if(g_device_list_switch == obj.state)
                return 0;
            else
            {
                var j_device_list_panel = jQuery("#device_list_panel"),
                    j_device_list_inner = jQuery("#device_list_inner"),
                    j_device_list_arrow = jQuery("#device_list_arrow");
                if(obj.state == "open")
                {
                    mx("#device_list_panel").style.display = "inline";
                    if(!j_device_list_panel.is(":animated")){
                        j_device_list_panel.animate({height:g_panel_box_h, top:"8", left:"3"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_panel.animate({width:g_panel_box_w}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_inner.animate({height:g_device_list_inner_h}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_inner.animate({width:(g_panel_box_w)}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_arrow.animate({top:g_panel_box_h + 8}, {queue:false, duration:200, easing:'linear'});
                        if(!g_old_browser_version)
                        {
                            j_device_list_panel.animate({opacity:"1"}, {queue:false, duration:500, easing:'linear'});
                            j_device_list_inner.animate({opacity:"1"}, {queue:false, duration:500, easing:'linear'});
                            j_device_list_arrow.animate({opacity:"1"}, {queue:false, duration:500, easing:'linear'});
                        }
                        g_device_list_switch = obj.state;
                    }
                }
                else if(obj.state == "close")
                {
                    if(!j_device_list_panel.is(":animated")){
                        j_device_list_panel.animate({height:"0", top:g_panel_box_h + 15, left:"10"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_panel.animate({width:"0"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_inner.animate({height:"0"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_inner.animate({width:"0"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_arrow.animate({top:g_panel_box_h + 8 + 10}, {queue:false, duration:200, easing:'linear'});
                        if(!g_old_browser_version)
                        {
                            j_device_list_panel.animate({opacity:"0"}, {queue:false, duration:500, easing:'linear'});
                            j_device_list_inner.animate({opacity:"0"}, {queue:false, duration:500, easing:'linear'});
                            j_device_list_arrow.animate({opacity:"0"}, {queue:false, duration:500, easing:'linear'});
                        }
                        g_device_list_switch = obj.state;
                    }
                }
                l_view_page_obj.ctrl({type:"update"});
            }
        }
        function operate_ptz_control(obj)
        {
            if(g_ptz_control_switch == obj.state)
                return ;
            else
            {
                var j_ptz_control_panel = jQuery("#ptz_control_panel"),
                    j_ptz_control_inner = jQuery("#ptz_control_inner"),
                    j_ptz_control_arrow = jQuery("#ptz_control_arrow");
                if(obj.state == "open")
                {
                    mx("#ptz_control_panel").style.display = "inline";
                    if(!j_ptz_control_panel.is(":animated")){
                        j_ptz_control_panel.animate({height:g_panel_box_h, top:"8", right:"3"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_ptz_control_panel.animate({width:g_panel_box_w}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_ptz_control_inner.animate({height:(g_panel_box_h - 18)}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_ptz_control_inner.animate({width:(g_panel_box_w)}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_ptz_control_arrow.animate({top:g_panel_box_h + 8}, {queue:false, duration:200, easing:'linear'});
                        if(!g_old_browser_version)
                        {
                            j_ptz_control_panel.animate({opacity:"1"}, {queue:false, duration:500, easing:'linear'});
                            j_ptz_control_inner.animate({opacity:"1"}, {queue:false, duration:500, easing:'linear'});
                            j_ptz_control_arrow.animate({opacity:"1"}, {queue:false, duration:500, easing:'linear'});
                        }
                        g_ptz_control_switch = obj.state;
                    }
                }
                else if(obj.state == "close")
                {
                    if(!j_ptz_control_panel.is(":animated")){
                        j_ptz_control_panel.animate({height:"0", top:g_panel_box_h + 15, right:"10"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_ptz_control_panel.animate({width:"0"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_ptz_control_inner.animate({height:"0"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_ptz_control_inner.animate({width:"0"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_ptz_control_arrow.animate({top:g_panel_box_h + 8 + 10}, {queue:false, duration:200, easing:'linear'});
                        if(!g_old_browser_version)
                        {
                            j_ptz_control_panel.animate({opacity:"0"}, {queue:false, duration:500, easing:'linear'});
                            j_ptz_control_inner.animate({opacity:"0"}, {queue:false, duration:500, easing:'linear'});
                            j_ptz_control_arrow.animate({opacity:"0"}, {queue:false, duration:500, easing:'linear'});
                        }
                        g_ptz_control_switch = obj.state;
                    }
                }
                l_view_page_obj.ctrl({type:"update"});
            }
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                    	  if(g_domain_oems_vimtag)
                    	  {
                    	  	  if(g_is_in_playback_page)
                    	  	  {
                    	  	  	 l_dom_view_page_left.style.left = (g_body_width - g_player_width)/2 + "px";
                    	  	  }
                    	  	  l_dom_view_page_left[s_style][s_width] = g_player_width + "px";
                    	  	  l_dom_view_page_left[s_style][s_height] = g_player_height + 64 + "px";                      	  	  
                    	  	  l_dom_view_page[s_style][s_width] = g_player_width + "px";
                    	  	  l_dom_view_page[s_style][s_height] = g_player_height + "px";
                    	  	  l_dom_view_page_up[s_style][s_width] = g_player_width + "px";
                    	  	  l_dom_view_page_bottom[s_style][s_width] = g_player_width + "px";
                    	  	  l_dom_view_page_bottom.style.marginTop = g_player_height + 10 + "px";
                    	  	  l_dom_view_page_bottom_menu[s_style][s_width] = g_player_width + "px";
                    	  	  l_dom_view_page_bottom_menu.style.marginTop = g_player_height + 20 + "px";
                    	  	  if(!g_is_in_playback_page)
                    	  	  {
                    	  	  	  l_dom_view_page_center[s_style][s_height] = g_player_height + 64 + "px";
		                    	  	  l_dom_view_page_right[s_style][s_height] = g_player_height + 64 + "px";
		                    	  	  if(g_body_width == 900)
		                    	  	  {
		                    	  	  	 mx("#vimtag_device_list_box").style.marginLeft = g_nine_hundred_side + "px";
										        	  	 l_dom_view_page.style.left = "0px";
		                    	  	  }
		                    	  	  else if(g_body_width > 900)
										        	  {
										        	  	 mx("#vimtag_device_list_box").style.marginLeft = (g_body_width - g_player_width -244)/2 + "px";
										        	  	 l_dom_view_page.style.left = (g_body_width - g_player_width -244)/2 + "px";
										        	  }
										        	  l_view_page_right.ctrl(obj);
										        	  l_ptz_control_box_obj.ctrl(obj);
								        	  }                    	  	  
                    	  	  l_view_page_obj.ctrl(obj);                    	  	                      	  	  
                    	  }
                    	  else
                    	  {
		                        l_dom_view_page[s_style][s_width] = (l_me_parent.offsetWidth - g_panel_box_all_w * 2) + "px";
		                        l_dom_view_page[s_style][s_height] = (l_me_parent.offsetHeight - g_control_box_h) + "px";
		                        l_dom_view_page[s_style].left = g_panel_box_all_w + "px";
		                        l_dom_ptz_control_box[s_style][s_width] = g_panel_box_all_w + "px";
		                        l_dom_ptz_control_box[s_style][s_height] = g_panel_box_all_h + "px";
		                        l_dom_home_control_box[s_style][s_width] = g_cntr_content_w + "px";
		                        if(g_panel_box_all_w < g_panel_box_max_w)
		                        {
		                            l_dom_ptz_control_box[s_style].opacity = "0.5";
		                        }
		                        else
		                        {
		                            l_dom_ptz_control_box[s_style].opacity = "1";
		                        }
		                        l_view_page_obj.ctrl(obj);
		                        l_ptz_control_box_obj.ctrl(obj);
		                        l_home_control_box_obj.ctrl(obj);
                        }
                        break;
                    }
                case "change_select_device_style":
                case "refresh_device_list":
                    {
                        l_device_list_box_obj.ctrl(obj);
                        break;
                    }
                case "change_select_ipc"://Processing Change Device
                    {
                        if(l_view_page_obj)
                            l_view_page_obj.ctrl({type:"change_select_ipc", data:obj.data});
                        if(!g_domain_oems_vimtag)
                        {
                        	  if(l_ptz_control_box_obj)
                                l_ptz_control_box_obj.ctrl({type:"change_select_ipc", data:obj.data});
		                        if(l_home_control_box_obj)
		                            l_home_control_box_obj.ctrl({type:"change_select_ipc", data:obj.data});
                        }
                        break;
                    }
                case "get_profiles":
                    {
                        return l_device_list_box_obj.ctrl(obj);
                        break;
                    }
                case "profiles_play":
                    {
                        l_home_control_box_obj.ctrl(obj);
                        break;
                    }
                case "update_imaging":
                    {
                    	  l_ptz_control_box_obj.ctrl(obj);
                    	  break;
                    }
                case "create_ipc":
                    {
                    	  create_ipc({node_sn:obj.data.node_sn});
                        break;
                    }
                case "delete_ipc":
                    {
                    	  delete_ipc({node_sn:obj.data.node_sn});
                        break;
                    }
                case "destroy"://Clear this element
                    {   //If you are playing video pop player
                    	  if(g_is_playing){
                    	 	  delete_ipc({node_sn:g_select_device_ipc});
                    	 	  g_is_playing = 0;
                    	  }
                        l_view_page_obj.ctrl(obj);
                        l_home_control_box_obj.ctrl(obj);
                        l_ptz_control_box_obj.ctrl(obj);
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                case "create_playback_vimtag":
                    {
                        create_ipc_vim(obj);
                    	  break;
                    }
                case "destroy_playback_vimtag":
                    {
                        delete_ipc_vim(obj);
                        break;
                    }
                case "playback_token_vimtag":
                    {
                    	  l_view_page_obj.ctrl({type:"RecordingToken", data:obj.token});
                    	  break;
                    }
                case "playback_size_vimtag":
                    {
                    	  l_view_page_obj.ctrl({type:"RecordingSize", data:obj.size});
                    	  break;
                    }
                case "destroy_play_page":
                    {
                    	  if(g_is_playing){
                    	 	  delete_ipc({node_sn:g_select_device_ipc});
                    	 	  g_is_playing = 0;
                    	  }
                    	  l_view_page_right.ctrl(obj);
                    	  l_view_page_bottom_menu.ctrl(obj);
                    	  l_view_page_obj.ctrl(obj);
                    	  l_ptz_control_box_obj.ctrl(obj);
                    	  l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                    	  break;
                    }
                case "playback_download":
                    {
                    	  playback_download(obj);
                    	  break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_home_cntr.");
            }
        }
        function on_event(obj)
        {
            switch(obj.type)
            {
                case "create_ipc":
                    {
                        create_ipc(obj.data);
                        break;
                    }
                case "delete_ipc":
                    {
                        delete_ipc(obj.data);
                        break;
                    }
                case "refresh_menu":
                    {
                        l_parent_callback(obj);
                        break;
                    }
                case "Refresh_devs":
                    {
                        l_parent_callback(obj);
                        break;
                    }
                case "speed":
                    {
                        (g_domain_oems_vimtag)?l_view_page_bottom_menu.ctrl(obj):l_home_control_box_obj.ctrl(obj);
                        break;
                    }
                case "clearSpeed":
                		{
                				l_view_page_obj.ctrl(obj);
                				break;
                		}
                case "relative_move":
                    {
                        l_view_page_obj.ctrl(obj);
                        break;
                    }
                case "operate_device_list_box":
                    {
                        operate_device_list(obj.data);
                        break;
                    }
                case "operate_ptz_control_box":
                    {
                        operate_ptz_control(obj.data);
                        break;
                    }
                case "get_snapshot_uri":
                    {
                        l_view_page_obj.ctrl(obj);
                        break;
                    }
                case "call_button_clicked":
                    {
                        var inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:obj.data.inner_window_index}});
                        if(inner_window_info){
                            if(inner_window_info.audio_chls === null){
                                l_view_page_obj.ctrl({type:"get_audio_output_stream_uri", data:{inner_window_info:inner_window_info}});
                            }else{
                                inner_window_info.mme.chl_destroy(inner_window_info.audio_chls);
                                inner_window_info.audio_chls = null;
                                if(g_domain_oems_vimtag){
                                	mx("#talkback_off_pic").className = "talkback_off_picture";
                                }else{ 
                                  l_home_control_box_obj.ctrl({type:"adjust_calling_button_state", data:{calling_state:"normal"}});
                                }
                            }
                        }
                        break;
                    }
                case "adjust_calling_button_state":
                    {
                    		l_home_control_box_obj.ctrl(obj);
                    		break;
                    }
                case "re_create_ipc":
                    {
                        l_view_page_obj.ctrl(obj);
                        break;
                    }
                case "update_sound_settings":
                    {
                        l_view_page_obj.ctrl({type:"update_sound_settings"});
                        break;
                    }
                case "get_inner_window_info":
                    {
                        return l_view_page_obj.ctrl(obj);
                    }
                case "play_button_onclick":
                    {
                        var sn, node;
                        sn = g_select_device_ipc;
                        node = mcloud_agent.devs.get(sn);
                        if(g_is_playing){
                        	if(g_plug_is_missing==1){
                       	      l_view_page_obj.ctrl({type:"is_missing"});
                          	}
                            delete_ipc({node_sn:sn});
                            if(g_domain_oems_vimtag){
                              jQuery("#video_play_stop").attr("src","/imgs/play.png");
                              jQuery("#vimtag_ptz_control").hide();
                            }  
                        }else{
                           create_ipc({node_sn:sn});
                           if(g_domain_oems_vimtag) jQuery("#video_play_stop").attr("src","/imgs/pause.png");
                        }
                        break;
                    }
                case "get_profiles":
                    {
                        return l_device_list_box_obj.ctrl(obj);
                        break;
                    }
                case "snapshot":
                    {
                    	l_view_page_obj.ctrl(obj);
                    	break;
                    }
                case "adjust_play_button_state":
                    {
                    	l_home_control_box_obj.ctrl(obj);
                      break;
                    }
                case "add_home_ipc":
                    {
                      l_view_page_obj.ctrl({type:"snapshot",data:0});
                      l_view_page_obj.ctrl(obj);
                      break;
                    }
                case "remove_ipc":
                    {
                      l_view_page_obj.ctrl(obj);
                      break;
                    }
                case "change_select_ipc":
                    {
                    	l_me.ctrl(obj);
                    	break;
                    }
                case "profiles_play":
                    {
                    	l_me.ctrl(obj);
                    	break;
                    }
                case "end_playback":
                		{
                			l_me.ctrl({type:"destroy_playback_vimtag",isDownload:obj.isDownload?obj.isDownload:0});
                			break;
                		}
                case "playback_token_vimtag":
                		{
                			l_me.ctrl(obj);
                			break;
                		}
                case "create_playback_vimtag":
                		{
                			l_me.ctrl(obj);
                			break;
                		}
                case "download_path":
                    {
                    	l_dom_net_setting.ctrl(obj);
                    	break;
                    }
                case "download_save_path":
                    {
                    	l_view_page_bottom_menu.ctrl(obj);
                    	break;
                    }
                case "playback_size_vimtag":
                    {
                    	l_me.ctrl(obj);
                    	break;
                    }
                case "playback_download":
                    {
                    	l_me.ctrl(obj);
                    	break;
                    }
                case "playback_download_progress":
                    {
                    	var download_progress_dom=document.getElementById("download_rate");
                      var current_progress=(obj.current_progress*100).toFixed(2);
		                  download_progress_dom.innerHTML=current_progress+"%";
		                  if(current_progress>=100){
		                  	on_event({type:"playback_download",path:mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName,iscomplete:1});
		                  }
//		                  l_download_progress_timeout=setTimeout(function(){
//		                    if(current_progress==l_old_progress){
//				                  on_event({type:"playback_download",path:mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName,iscomplete:1});
//				                }
//		                  },6000);

		                  l_old_progress=current_progress;
                			break;
                    }
                case "pause_ipc":
                    {
                    	l_view_page_obj.ctrl(obj);
                    	break;
                    }
                case "play_ipc":
                    {
                    	l_view_page_obj.ctrl(obj);
                    	break;
                    }
                default:
                    log("error:on_event's obj.type is not exist in class_home_cntr.");
            }
        }

        if(g_domain_oems_vimtag)
        {
        	  if(obj.playback){
        	     l_dom_view_page_left[s_style][s_cssText] = "width:" + g_player_width+ "px;height:" + (g_player_height + 64) + "px;margin-top:10px;position:absolute;left:"+ (obj.parent.offsetWidth - g_player_width )/2 +"px;";
        	  }else{
        	  	 l_dom_view_page_left[s_style][s_cssText] = "width:" + g_player_width+ "px;height:" + (g_player_height + 64) + "px;margin-top:10px;float:left;";
        	  }
        	  
        	  if(!obj.playback) l_dom_view_page_center[s_style][s_cssText] = "width:10px;height:" + (g_player_height + 64) + "px;background-color:#4d4d4d;margin-top:10px;float:left;"
        	  l_dom_view_page[s_style][s_cssText] = "width:" + g_player_width+ "px;height:" + g_player_height + "px;left:" + (obj.offsetwidth - l_me_parent.offsetWidth )/2 + "px;";
        	  l_dom_view_page_up[s_style][s_cssText] = "width:" + g_player_width+ "px;height:10px;background-color:#1b1b1b;position:absolute;";
        	  l_dom_view_page_bottom[s_style][s_cssText] = "width:" + g_player_width+ "px;height:10px;background-color:#1b1b1b;margin-top:" + (g_player_height + 10) + "px;";
        	  l_dom_view_page_bottom_menu[s_style][s_cssText] = "width:" + g_player_width+ "px;height:44px;background-color:#2b2b2b;font-size:16px;color:#00a6ba;margin-top:" + (g_player_height + 20) + "px;";
        	  if(!obj.playback) l_dom_view_page_right[s_style][s_cssText] = "width:234px;height:" + (g_player_height + 64) + "px;margin-top:10px;float:left;";        	  
        	          	  
        	  if(g_body_width == 900 && (!obj.playback)){
    	  	  	 mx("#vimtag_device_list_box").style.marginLeft = g_nine_hundred_side + "px";
        	  	 l_dom_view_page.style.left = "0px";
    	  	  }
    	  	  else if(g_body_width > 900 && (!obj.playback)){
        	  	 mx("#vimtag_device_list_box").style.marginLeft = (g_body_width - g_player_width -244)/2 + "px";
        	  	 l_dom_view_page.style.left = (g_body_width - g_player_width -244)/2 + "px";
        	  }
        	  if(!obj.playback) l_view_page_right = new class_view_page_right({parent:l_dom_view_page_right, on_event:on_event, sn:obj.sn});
        	  l_view_page_bottom_menu = new class_view_page_bottom_menu({parent:l_dom_view_page_bottom_menu, on_event:on_event, playback:obj.playback, s_time:obj.s_time,e_time:obj.e_time,video_data:obj.video_data});
        	  if(obj.playback) l_view_page_bottom_menu.ctrl({type:"transmit_parameter", data:{sn:obj.node_sn, token:obj.token, playback:obj.playback,end_token:obj.end_token}});
        }else{
        	  l_dom_view_page[s_style][s_cssText] = "width:" + (l_me_parent.offsetWidth - g_panel_box_all_w * 2) + "px;"
              +"height:" + (l_me_parent.offsetHeight - g_control_box_h) + "px;left:" + g_panel_box_all_w + "px;";
            l_dom_ptz_control_box[s_style][s_cssText] = "width:" + g_panel_box_all_w + "px;height:" + g_panel_box_all_h + "px;";
		        l_dom_home_control_box[s_style][s_cssText] = "width:" + g_cntr_content_w + "px;height:" + g_control_box_h + "px;";
		        if(g_panel_box_all_w < g_panel_box_max_w){
		            l_dom_ptz_control_box[s_style].opacity = "0.5";
		        }

		        l_home_control_box_obj = new class_home_control_box({parent:l_dom_home_control_box, on_event:on_event});
        }
 if(g_domain_oems_vimtag&&g_now_page=="playback"){
            l_view_page_obj = new class_view_page({parent:l_dom_view_page, type:"create", on_event:on_event,pic_token:obj.video_data.cut_video_data[0].pic_token});  
        }else{
    		l_view_page_obj = new class_view_page({parent:l_dom_view_page, type:"create", on_event:on_event});
}
        if(!obj.playback) l_ptz_control_box_obj = new class_ptz_control_box({parent:l_dom_ptz_control_box, on_event:on_event});

        if(g_device_list_switch == "close"){
            g_device_list_switch = "waiting change";
            operate_device_list({state:"close"});
        }
        if(g_ptz_control_switch == "close"){
            g_ptz_control_switch = "waiting change";
            l_dom_ptz_control_box.style.display = "none";
            operate_ptz_control({state:"close"});
        }
        if(g_domain_oems_vimtag)
        {//When entering the preview screen to hide the control interface
        	  if(jQuery("#video_pause_pic")||jQuery("#play_pause_pic")){
        	  	 jQuery("#vimtag_ptz_control").hide();
        	  }
        }
        if(g_domain_oems_vimtag) l_dom_net_setting=new net_setting_class({parent:l_me_parent, on_event:function(obj){return on_event(obj);}});;
    }
    function class_view_page_bottom_menu(obj)
    {
    	  var l_me_parent = obj.parent,
    	      l_me = this,
    	      l_parent_callback = obj.on_event,
    	      l_video_data = obj.video_data,
    	      l_dom_input_device_speaker,
    	      l_dom_voice_close_open,
    	      l_dom_resolute_choice,
    	      l_dom_full_screen_btn,
    	      l_dom_playback_play_btn,
            l_dom_play_btn,
    	      l_playback_token = "",
    	      l_playback_end_token = "",
    	      l_playback_ture = 0,
    	      l_video_token = "",
    	      l_video_end_token = "",
    	      l_video_start_token = "",
    	      l_sub_video_start_token = "",
    	      l_dom_playback_progressbar,
    	      l_playback_video_token,
    	      l_video_total_time,
			      l_dom_high_definition,
			      l_dom_standard_definition,
			      l_dom_fluency_definition,
			      l_dom_auto_definition,
			      l_dom_choice_play_definition,
			      l_dom_video_play_stop,
			      l_dom_vim_download,
    	      handle_val,
    	      time_val,
    	      timeValue;
            l_me_parent[s_innerHTML] =
            "<div id='playback_progress_bar'>"
            +       "<label for='playback_progressbar'></label>"
            +       "<input name='slider' type='text' id='playback_progressbar' class='fd_tween fd_classname_extraclass fd_hide_input "
            +           "fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update' value='0%'</input>"
            +"<div>"
            +"<div id='view_page_bottom_menu_option_left' style='position:absolute;margin-left:24px;'>"
            +          "<div id='voice_close_open' class='voice_close' style='margin-top:12px;float:right;margin-left:15px;'></div>"
            +             "<img id='video_play_stop' src='/imgs/play.png'>"
            +             "<div id='playback_set_left' style='width:300px;'>"
            +             "<div id='playback_play_btn' style='float:left;cursor:pointer;'></div>"
            +             "<div id='vimvs_time' style='float:left;font-size:14px;margin-left:24px;'>"+ obj.s_time +"</div>"
            +             "<div style='float:left;font-size:14px;'>/"+ obj.e_time +"</div>"
            +          "</div>"
            +       "</div>"
            +       "<div id='view_page_bottom_menu_option_right' style='float:right;'>"
            +          "<img id='vim_download' src='/imgs/vim_download.png'>"
            +          "<div id='enter_history_img' class='history_img' style='float:left;margin:10px 15px 0 15px;cursor: pointer;'></div><div class='enter_nav' style='height: 18px;width: 1px;background: #1F1F1F;float: left;margin-top: 10px;'></div>"
            +          "<div id='enter_set_img' class='device_set_img' style='float:left;margin:10px 15px 0 15px;cursor: pointer;'></div><div class='enter_nav' style='height: 18px;width: 1px;background: #1F1F1F;float: left;margin-top: 10px;'></div>"
            +          "<div id='resolute_choice' style='float:left;font-size:16px;color:#00a6ba;text-align:center;'></div>"
            +          "<div id='choice_play_definition'>"
	          +             "<div id='high_definition' class='definition_cha'>720P</div>"
	          +             "<div style='width:55px;height:1px;background-color:#ffffff;margin:auto;'></div>"
	          +             "<div id='standard_definition' class='definition_cha'>"+ mcs_standard_clear +"</div>"
	          +             "<div style='width:55px;height:1px;background-color:#ffffff;margin:auto;'></div>"
	          +             "<div id='fluency_definition' class='definition_cha'>"+ mcs_fluent_clear +"</div>"
	          +             "<div style='width:55px;height:1px;background-color:#ffffff;margin:auto;'></div>"
	          +             "<div id='auto_definition' class='definition_cha'>"+ mcs_auto +"</div>"
	          +          "</div>"
            +          "<div id='full_screen_btn' class='full_screen' style='margin-top:13px;margin-right:24px;margin-left:44px;float:right;'></div>"
            +"</div>";
            l_dom_input_device_speaker = mx("#input_device_speaker");
            l_dom_voice_close_open = mx("#voice_close_open");
            l_dom_resolute_choice = mx("#resolute_choice");
            l_dom_full_screen_btn = mx("#full_screen_btn");
            l_dom_enter_history = mx("#enter_history_img");
            l_dom_enter_set = mx("#enter_set_img");
            l_dom_playback_play_btn = mx("#playback_play_btn");
            l_dom_video_play_stop = mx("#video_play_stop");
            l_dom_playback_progressbar = mx("#playback_progressbar");
            l_dom_high_definition = mx("#high_definition");
            l_dom_standard_definition = mx("#standard_definition");
            l_dom_fluency_definition = mx("#fluency_definition");
            l_dom_auto_definition = mx("#auto_definition");
            l_dom_choice_play_definition = mx("#choice_play_definition");
            l_dom_vim_download = mx("#vim_download");
            fdSliderController.create();
            l_dom_enter_set.onclick = g_enter_set;
            l_dom_enter_history.onclick = g_enter_history;    	      

            jQuery("#full_screen_btn").hide();
            if(obj.playback){
        		    jQuery("#voice_close_open").hide();
                jQuery("#enter_history_img").hide();
                jQuery("#enter_set_img").hide();
                jQuery(".enter_nav").hide();
                jQuery("#video_play_stop").hide();
                jQuery("#vim_download").show();
            }else{
            		jQuery("#playback_set_left").hide();
            		jQuery("#fd-slider-playback_progressbar").hide();
            }
		    	  function dev_audio_get_ack(msg,ref)
		        {
		            if(!l_me_parent) return;
		            if(msg && msg.result == ""){
		                if(l_dom_input_device_speaker)
		                    fdSliderController.increment("input_speaker", msg.speaker_level - l_dom_input_device_speaker.value);
		            }else{
		                log("error:GetAudioOutputConfigurationResponse return Result error in class_options_others.");
		            }
		        }
		        function dev_info_get_ack (msg,ref) {
		        	  if(msg&&msg.result==""){
		        	  	  if(!msg.def&&g_is_in_play_page){
		        	  	  	mx("#high_definition").innerHTML = "720P";
		        	  	  	if((mx("#resolute_choice").innerHTML=="1080P")||(mx("#resolute_choice").innerHTML=="960P")) mx("#resolute_choice").innerHTML="720P";
		        	  	  	g_is_support_1080p = 0;
		        	  	  	return;
		        	  	  }else{
		        	  	  	if(msg.def=="HD1080p"){
		        	  	  	  mx("#high_definition").innerHTML = "1080P";
		        	  	  	  if((mx("#resolute_choice").innerHTML=="720P")||(mx("#resolute_choice").innerHTML=="960P")) mx("#resolute_choice").innerHTML="1080P";
		        	  	  	  g_is_support_1080p = 1;
		        	  	  	}else if(msg.def=="HD720p"){ 
		        	  	  	  mx("#high_definition").innerHTML = "720P";
		        	  	  	  if((mx("#resolute_choice").innerHTML=="1080P")||(mx("#resolute_choice").innerHTML=="960P")) mx("#resolute_choice").innerHTML="720P";
		        	  	  	  g_is_support_1080p = 0;
		        	  	  	}else if(msg.def=="HD960p"){
		        	  	  	  mx("#high_definition").innerHTML = "960P";
		        	  	  	  if((mx("#resolute_choice").innerHTML=="1080P")||(mx("#resolute_choice").innerHTML=="720P")) mx("#resolute_choice").innerHTML="960P";
		        	  	  	  g_is_support_1080p = 2;
		        	  	  	}
		        	  	  }
		        	  }
		        }
            if(l_video_data){
            		var len1=l_video_data.cut_video_data.length;
                g_slider_start=l_video_data.cut_video_data[0].pos_start;
                g_slider_end=l_video_data.cut_video_data[len1-1].pos_end;
            	  l_video_total_time = g_slider_end - g_slider_start;
            }
            function video_download (obj) {
                var CurrentRecordingSaveName=document.getElementById("vimvs_time").innerHTML;
                if(g_is_play_back_download){
                	 if(CurrentRecordingSaveName==mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName)
                	 l_parent_callback({type:"playback_download"});
                	 mx("#fd-slider-playback_progressbar").style.visibility = "visible";
                   jQuery("#playback_play_btn").show();
                }else{
                   l_parent_callback({type:"playback_token_vimtag", token:l_playback_token});
                   l_parent_callback({type:"playback_size_vimtag",size:(g_slider_end-g_slider_start)});
                	 l_parent_callback({type:"playback_download",path:CurrentRecordingSaveName,way:obj.data});
                }
            }
            function progress_bar(obj)
            {
            		if(g_slider_data){
	            			l_parent_callback({type:"clearSpeed"});
	            			moveProgressBar();
	            			g_slider_data=0;
            		}else{
		            		var play_pro = obj.speeds/l_video_total_time;
		            		var playback_data = Number(parseInt(play_pro*100)) + Number(handle_val?handle_val:0);
		            		fdSliderController.increment("playback_progressbar",playback_data-mx("#playback_progressbar").value);
		            		if(playback_data >= 100){
		            			  l_parent_callback({type:"end_playback"});
		            			  mx("#playback_play_btn").style.backgroundImage = "url('/imgs/play.png')";
		            		}
            		}
            }            
            function moveProgressBar(){
            		handle_val = mx("#playback_progressbar").value;
								var video_token_add = parseInt((handle_val*l_video_token)/100);
								l_playback_video_token = l_sub_video_start_token +"_" + (Number(video_token_add)+Number(l_video_start_token))							
								if(g_is_play_back){
            			l_parent_callback({type:"end_playback"});
            			l_parent_callback({type:"playback_token_vimtag",token:l_playback_video_token});
            	  	l_parent_callback({type:"create_playback_vimtag",node_sn:l_playback_node_sn});
            	  }else{
            	  	l_parent_callback({type:"playback_token_vimtag",token:l_playback_video_token});
            	  	l_parent_callback({type:"create_playback_vimtag",node_sn:l_playback_node_sn});
            	  }
            }
            //Display resolution options when clicking Resolution
            l_dom_resolute_choice.onclick = function(){
                jQuery("#choice_play_definition").show();
            };
            
    	      l_dom_voice_close_open.onclick = function(){
    	      	  if(g_m_speaker_is_mute){
                    g_m_speaker_is_mute=0;
                    l_dom_voice_close_open.className = "voice_open";
                }else{
                    g_m_speaker_is_mute=1;
                    l_dom_voice_close_open.className = "voice_close";
                }
    	          l_parent_callback({type:"update_sound_settings"});
    	      };
            l_dom_playback_play_btn.onclick = function(){
                  jQuery("#vim_download").hide();
            		if(g_is_play_back){
            				l_parent_callback({type:"end_playback"});
                                        l_parent_callback({type:"snapshot",pic_token:l_video_data.cut_video_data[0].pic_token,data:1});
            				mx("#playback_play_btn").style.backgroundImage = "url('/imgs/play.png')";
            	  }else{
                          l_parent_callback({type:"snapshot",data:0});
            	  		l_parent_callback({type:"playback_token_vimtag",token:(l_playback_video_token?l_playback_video_token:l_playback_token)});
            	  		l_parent_callback({type:"create_playback_vimtag",node_sn:l_playback_node_sn});
            	  		mx("#playback_play_btn").style.backgroundImage = "url('/imgs/pause.png')";
            	  }
            };						
            l_dom_high_definition.onclick = function(){
                mlocal_storage.set("PlayProfile","p0");
                if(g_is_support_1080p==0){
                  jQuery("#resolute_choice").text("720P"); 
                }else if(g_is_support_1080p==1){
                  jQuery("#resolute_choice").text("1080P");
                }else if(g_is_support_1080p==2){
                  jQuery("#resolute_choice").text("960P");
                }
            	  if(g_select_inner_ipc){
                  var pos = parseInt(g_select_inner_window.charAt(g_select_inner_window.length - 1));
                  var  home_window_info = l_parent_callback({type:"get_inner_window_info", data:{index:pos}});
                  if("p0" !== home_window_info.profile_token)
                  l_parent_callback({type:"re_create_ipc", data:{inner_window_info:home_window_info, node_sn:home_window_info.node_sn}});
                }
            };
            l_dom_standard_definition.onclick = function(){
                mlocal_storage.set("PlayProfile", "p1");
                jQuery("#resolute_choice").text(mcs_standard_clear);
            	  if(g_select_inner_ipc)
                {
                  var pos = parseInt(g_select_inner_window.charAt(g_select_inner_window.length - 1));
                  var  home_window_info = l_parent_callback({type:"get_inner_window_info", data:{index:pos}});
                  if("p1" !== home_window_info.profile_token)
                  l_parent_callback({type:"re_create_ipc", data:{inner_window_info:home_window_info, node_sn:home_window_info.node_sn}});
                }
            };
            l_dom_fluency_definition.onclick = function(){
                mlocal_storage.set("PlayProfile", "p2");
                jQuery("#resolute_choice").text(mcs_fluent_clear);
            	  if(g_select_inner_ipc)
                {
                  var pos = parseInt(g_select_inner_window.charAt(g_select_inner_window.length - 1));
                  var  home_window_info = l_parent_callback({type:"get_inner_window_info", data:{index:pos}});
                  if("p2" !== home_window_info.profile_token)
                  l_parent_callback({type:"re_create_ipc", data:{inner_window_info:home_window_info, node_sn:home_window_info.node_sn}});
                }
            };
            l_dom_auto_definition.onclick = function(){
            	  jQuery("#resolute_choice").text(mcs_auto);
            };
            l_dom_video_play_stop.onclick = function(){
            		if(g_select_device_ipc) l_parent_callback({type:"play_button_onclick"});
            };
            l_dom_vim_download.onclick = function(){
            	  if(mx("#input_download_path")) return;
                if(g_is_play_back){
	            	   l_parent_callback({type:"end_playback",isDownload:0});
	            	   mx("#playback_play_btn").style.backgroundImage = "url('/imgs/play.png')";
	            	}
                if(g_is_play_back_download){
                	 video_download();
                }else{
                	 if(mlocal_storage.get("download_path")){
                	   video_download({data:mlocal_storage.get("download_path")});
                	 }else{
                	 	 l_parent_callback({type:"download_path"});
                	 }
                   mx("#fd-slider-playback_progressbar").style.visibility = "hidden";
                   jQuery("#playback_play_btn").hide();
                   jQuery("#vim_download").hide();
                }
                if(!mx("#download_rate")){
                  mx("#video_download_buffer").innerHTML =
                  "<div style='text-align:center;'>"
                  +  "<div style='background:url(/imgs/buffer.gif) 0px 0px transparent no-repeat;width:100px;height:100px;margin:0 auto;'>"
                  +    "<div id='download_rate' style='color:#ffffff;font-size:16px;text-align:center;line-height:100px;'></div>"
                  +  "</div>"
                  +  "<input id='download_stop' type='button' value="+mcs_stop+">"
                  +  "<input id='download_pause' type='button' value="+mcs_pause+">"
                  +"</div>";
                  
                  mx("#download_stop").onclick = function(){
                    video_download();
                  };
                  mx("#download_pause").onclick = function(){
                  	var inner_window_info = l_parent_callback({type:"get_inner_window_info", data:{index:1}});
                  	if(inner_window_info.playback_state=="pause"){
                  		mx("#download_pause").value=mcs_pause;
                  	  l_parent_callback({type:"play_ipc",data:{inner_window_info:inner_window_info}});
                  	}else{
                  		mx("#download_pause").value=mcs_continue;
                  	  l_parent_callback({type:"pause_ipc",data:{inner_window_info:inner_window_info}});	
                  	}	
                  };
                }
            };
            //Get local storage resolution
            if(mlocal_storage.get("PlayProfile") == "p0")
            {
            	 if(g_is_support_1080p==0){
                 jQuery("#resolute_choice").text("720P"); 
               }else if(g_is_support_1080p==1){
                 jQuery("#resolute_choice").text("1080P");
               }else if(g_is_support_1080p==2){
                 jQuery("#resolute_choice").text("960P");
               }
            }
            else if(mlocal_storage.get("PlayProfile") == "p1")
            {
            	 jQuery("#resolute_choice").text(mcs_standard_clear);
            }
            else if(mlocal_storage.get("PlayProfile") == "p2")
            {
            	 jQuery("#resolute_choice").text(mcs_fluent_clear);
            }
            else if(mlocal_storage.get("PlayProfile") == "p3")
            {
            	 jQuery("#resolute_choice").text(mcs_fluent_clear);
            }
            else
            {
            	 jQuery("#resolute_choice").text(mcs_auto);
            }	
    	      function remove_event()
    	      {
                l_dom_voice_close_open.onclick = "";
                l_dom_resolute_choice.onclick = "";
    	      }

            jQuery(document).bind("click", function(event){
            	 var e = event || window.event;
               var elem = e.srcElement||e.target;

               while(elem)
               {
                  if(elem.id=="resolute_choice")
                  {
                      return;
                  }
                  elem = elem.parentNode;
               }
               jQuery("#choice_play_definition").hide();
            });
            
    	      l_me.ctrl = function(obj){
    	          switch(obj.type){
    	          	 case "destroy_play_page":
    	          	    {
    	          	    	  remove_event();
                          l_me_parent[s_innerHTML] = "";
                          l_me_parent = null;
                          break;
    	          	    }
    	          	 case "transmit_parameter":
    	          	 		{
    	          	 				if(mcloud_agent.devs.get(g_select_device_ipc).img_ver < "v2")
    	          	 				{
    	          	 					 jQuery("#playback_set_left").hide();
            		             jQuery("#fd-slider-playback_progressbar").hide();
    	          	 					 jQuery("#voice_close_open").hide(); 
    	          	 					 break;
    	          	 				} 
    	          	 				l_playback_token = obj.data.token;
    	          	 				l_playback_end_token = obj.data.end_token;
    	          	 				l_video_end_token = l_playback_end_token.substring(l_playback_end_token.indexOf("_")+1);
    	          	 				l_video_end_token = l_video_end_token.substring(l_video_end_token.indexOf("_")+1);
    	          	 				l_sub_video_start_token = l_playback_token.substring(0, l_playback_token.lastIndexOf("_"));
    	          	 				l_video_start_token = l_playback_token.substring(l_playback_token.indexOf("_")+1);
    	          	 				l_video_start_token = l_video_start_token.substring(l_video_start_token.indexOf("_")+1);
    	          	 				l_playback_node_sn = obj.data.node_sn;
    	          	 				l_video_token = l_video_end_token - l_video_start_token;
    	          	 				break;
    	          	 		}
    	          	 case "speed":
    	          	 		{
    	          	 				progress_bar(obj);
    	          	 				break;
    	          	 		}
    	          	 case "download_save_path":
    	          	    {
    	          	    	  video_download(obj);
    	          	    	  break;
    	          	    }
    	          	 case "playback_download_progress":
    	          	    {
    	          	    	  var download_progress_dom=document.getElementById("download_pro");
                        	var current_progress=(obj.current_progress*100).toFixed(2);
		                      download_progress_dom.innerHTML=current_progress+"%";
		                      l_download_progress_timeout=setTimeout(function(){
		                        if(current_progress==l_old_progress){
				                      on_event({type:"playback_download",path:mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName,iscomplete:1});
				                    }
		                      },6000);
		                      l_old_progress=current_progress;
                			    break;
    	          	    }
    	          }
     	      }
    	      //ms.send_msg("audio_get",{sn:g_select_device_ipc},null,dev_audio_get_ack);
    	      /*To show the definition of IPC from the server*/
    	      if(g_now_page!="playback") ms.send_msg("dev_info_get",{sn:g_select_device_ipc},null,dev_info_get_ack);
    }
    function class_view_page_right(obj)
    {
        var l_me_parent = obj.parent,
            l_me = this,
            l_me_parent_callback = obj.on_event,
            l_dom_device_list_sidebar,
            l_dom_device_list_sidebar_up,
            l_dom_device_list_sidebar_center,
            l_dom_device_list_sidebar_center_left,
            l_dom_device_list_sidebar_bottom;

            l_me_parent[s_innerHTML] =
               "<div id='device_list_sidebar'>"
               +     "<div id='device_list_sidebar_up'>" + mcs_device_list + "</div>"
               +     "<div id='device_list_sidebar_center'>"
               +        "<div id='device_list_sidebar_center_left'></div>"
               +     "</div>"
               +     "<div id='device_list_sidebar_bottom'></div>"
               +"</div>";

            l_dom_device_list_sidebar = mx("#device_list_sidebar");
            l_dom_device_list_sidebar_up = mx("#device_list_sidebar_up");
            l_dom_device_list_sidebar_center = mx("#device_list_sidebar_center");
            l_dom_device_list_sidebar_center_left = mx("#device_list_sidebar_center_left");
            l_dom_device_list_sidebar_bottom = mx("#device_list_sidebar_bottom");

            var height = l_me_parent.offsetHeight;
            l_dom_device_list_sidebar_up[s_style][s_cssText] = "width:234px;height:44px;background-color:#1b1b1b;font-size:14px;color:#ffffff;text-align:center;line-height:44px;";
            l_dom_device_list_sidebar_center[s_style][s_cssText] = "width:234px;height:" + (height-49) + "px;";
            l_dom_device_list_sidebar_center_left[s_style][s_cssText] = "width:234px;height:" + (height-49) + "px;background-color:#2b2b2b;";
            l_dom_device_list_sidebar_bottom[s_style][s_cssText] = "width:234px;height:5px;background-color:#2b2b2b;";

            var l_dom_device_list_box_sidebar = new class_device_list_box_sidebar({parent:l_dom_device_list_sidebar_center_left, on_event:obj.on_event, sn:obj.sn});
            jQuery(l_dom_device_list_sidebar_center_left).mCustomScrollbar();

            l_me.ctrl = function(obj){
                switch(obj.type){
                	 case "destroy_play_page":
                	    {
                	    	 if(l_dom_device_list_box_sidebar.ctrl){
                	    	   l_dom_device_list_box_sidebar.ctrl(obj);
                	    	 }
                	    	 break;
                	    }
                	 case "update":
                	    {
                	    	 l_dom_device_list_sidebar_center[s_style][s_height] = g_player_height + 15 + "px";
                	    	 l_dom_device_list_sidebar_center_left[s_style][s_height] = g_player_height + 15 + "px";
                	    	 break;
                	    }
                }
            }
    }
    function class_device_list_box_sidebar(obj)
    {
    	  var l_me_parent = obj.parent,
    	      l_me = this,
    	      l_parent_callback = obj.on_event,
    	      images = new Array(),
    	      l_dom_device_list_img,
    	      l_home_cntr_obj;
    	      
    	      if(mcloud_agent.devs.list.length == 0) return;
    	      if(l_me_parent[s_innerHTML] == ""){
		            l_me_parent[s_innerHTML] = "<div id='vimtag_device_list'>"
		            for(var length = mcloud_agent.devs.list.length, i = 0; i < length; i++){
		              	 var data = mcloud_agent.devs.list[i],pic_url;
		              	 if(!data)  continue;
		              	 var sn = data.nick?data.nick:data.sn;
		              	 if((data.stat == "Online")&&(data.type == "BOX")){
		              	 	 //l_me_parent[s_innerHTML] += "<div class='device_list_sidebar_img' state='online' sn="+data.sn+"><div class='device_sidebar_list_box_img'></div><div class='device_sidebar_nick'><span>"+ sn+"</span></div></div>";  //if the device is BOX, hide its
		              	 	 continue;
		              	 }
		              	 else if(data.stat == "Online"){
		                   l_me_parent[s_innerHTML] += "<div class='device_list_sidebar_img' state='online' sn="+data.sn+"><div id='camera_sign_picture' class='sidebar_camera_sign_picture'></div><div class='device_sidebar_nick'><span>"+ sn+"</span></div></div>";
		                   continue;
		              	 }
		              	 else if(data.stat == "Offline"){
		                   l_me_parent[s_innerHTML] += "<div class='device_list_sidebar_img' state='offline' sn="+data.sn+"><div class='device_sidebar_list_offline_img'></div><div class='device_sidebar_nick'><span>"+ sn+"</span></div></div>"
		              	 }
		            }
		            l_me_parent[s_innerHTML] += "<div id='active_dev' style='width:208px;height:141px;border:2px solid #0EA9BB;position:relative;left:8px;'></div></div>";
                
                l_dom_device_list_img = mx(".device_list_sidebar_img");
		            load_imgs();
            }
            for(var length = mcloud_agent.devs.list.length, i = 0; i < length; i++){
            	  var data = mcloud_agent.devs.list[i];
            	  g_device_list_obj["sn_" + data.sn] = {name:name,type:mcloud_agent.devs.get(data.sn).type, ip:mcloud_agent.devs.get(data.sn).addr, isParent:true,
		                         state:{online:"Online", view:0, recording:0, call:0, playback:0,playback_download:0}};
            }
            function load_imgs(){
            	  for(var length = l_dom_device_list_img.length, k = 0; k < length; k++){
            	  	  if(l_dom_device_list_img[k].getAttribute("state")=="offline") continue;
            	  	  images[k] = new Image();
                    images[k].src = mcloud_agent.pic_url_get({sn:l_dom_device_list_img[k].getAttribute("sn"),token:"p2"});
                    images[k].onload = function(){
                        for(var j=0;j<length;j++){
                            if(!jQuery(".device_list_sidebar_img")[j])return;
                            var dev_sn = jQuery(".device_list_sidebar_img").eq(j).attr("sn");
                            if(this.src.indexOf(dev_sn)>-1){                                    
                                break;
                            }
                        }
                        jQuery(".device_list_sidebar_img")[j].childNodes[0].style.background ="url("+this.src+")";
                    };
            	  }
            }
            function get_definition(){
            	  function dev_info_get_ack(msg,ref){
            	      if(msg&&msg.result==""){
            	        if(!msg.def){
            	          mx("#high_definition").innerHTML = "720P";
            	          if((mx("#resolute_choice").innerHTML=="1080P")||(mx("#resolute_choice").innerHTML=="960P")) mx("#resolute_choice").innerHTML="720P";
            	          g_is_support_1080p = 0;
            	        }else{
            	          if(msg.def=="HD1080p"){
            	              mx("#high_definition").innerHTML = "1080P";
            	              if((mx("#resolute_choice").innerHTML=="720P")||(mx("#resolute_choice").innerHTML=="960P")) mx("#resolute_choice").innerHTML="1080P";
            	              g_is_support_1080p = 1;
            	          }else if(msg.def=="HD720p"){
            	              mx("#high_definition").innerHTML = "720P";
            	              if((mx("#resolute_choice").innerHTML=="1080P")||(mx("#resolute_choice").innerHTML=="960P")) mx("#resolute_choice").innerHTML="720P";
            	              g_is_support_1080p = 0;
            	          }else if(msg.def=="HD960p"){
            	              mx("#high_definition").innerHTML = "960P";
            	              if((mx("#resolute_choice").innerHTML=="1080P")||(mx("#resolute_choice").innerHTML=="720P")) mx("#resolute_choice").innerHTML="960P";
            	              g_is_support_1080p = 2;
            	          }
            	        }
            	      }
            	  }
                ms.send_msg("dev_info_get",{sn:g_select_device_ipc},null,dev_info_get_ack);
            }
            for(var length= l_dom_device_list_img.length, i = 0; i < length; ++i){
                if(l_dom_device_list_img[i].getAttribute("sn") == obj.sn){
                    mx("#active_dev").style.top=(10*(i+1)+145*i)+"px";
                }
            	  //Event status Normal equipment
                if(l_dom_device_list_img[i].getAttribute("state") == "online")
                {   //State Normal equipment click event
                    l_dom_device_list_img[i].onclick = function() {
                        var active_dev_top = this.offsetTop;
                        jQuery("#active_dev").animate({"top":active_dev_top+"px"})
                        var old_sn = g_select_device_ipc;
                        g_select_device_ipc = this.getAttribute("sn");
                        pos = mcloud_agent.devs.get_index(g_select_device_ipc);

                        l_parent_callback({type:"change_select_ipc", data:{old_sn:old_sn}});
                        if(this.getAttribute("window_id")){
                           mx("#" + this.getAttribute("window_id")).click_ex();
                        }
                        if(g_domain_oems_vimtag)
								        {//When entering the preview screen to hide the control interface
								        	  if(jQuery("#video_pause_pic")||jQuery("#play_pause_pic")){
								        	  	 jQuery("#vimtag_ptz_control").hide();
								        	  }
								        }
								        get_definition();
                    };
                    l_dom_device_list_img[i].ondblclick = function(){
                        var old_sn = g_select_device_ipc;
                        g_select_device_ipc = this.getAttribute("sn");
                        pos = mcloud_agent.devs.get_index(g_select_device_ipc);
                        if(old_sn == g_select_device_ipc){
                        	if(g_is_playing == 1){
                        		return;
                        	}
                        }else{
                          //pos = mcloud_agent.devs.get_index(g_select_device_ipc);
                          //change_select_device_style(pos);
                        }
                        if(g_is_playing == 1){
                           l_parent_callback({type:"delete_ipc", data:{node_sn:old_sn}});
                           l_parent_callback({type:"create_ipc", data:{node_sn:g_select_device_ipc}});
                        }else{
                           l_parent_callback({type:"create_ipc", data:{node_sn:g_select_device_ipc}});
                        }
                        get_definition();
                    };
                }
                //Device is not online event
                else if(l_dom_device_list_img[i].getAttribute("state") == "offline")
                {
                	  l_dom_device_list_img[i].onclick = function() {
                	      g_select_device_ipc = this.getAttribute("sn");
                	      jQuery("#enter_set_img").click();
                	  };
                }
                //Device online but the password is wrong device events
                else if(l_dom_device_list_img[i].getAttribute("state") == "invalid_auth")
                {
                    l_dom_device_list_img[i].onclick = function() {
                    	  //If the ipc connection is using the device ID to sign in, then exit system
                        if(g_login_status == "ipc"){
                           system_pop_confirm_box({alert:true,str:mcs_password_expired, callback_func:function(){
                              jQuery("#system_logout").click();
                           }});
                        }else{
                           create_device_add_menu({parent:this, sn:this.getAttribute("sn"), type:"re_enter", direction:"bottom"});
                        }
                    };
                }
            }
//            for(var length=l_dom_device_list_img.length,j=0;j<length;++j){
//                if(l_dom_device_list_img[j].getAttribute("state")=="online"){
//                    l_dom_device_list_img[j].click();
//                    break;
//                }
//            }
            function remove_event(){
            	 l_me_parent[s_innerHTML] ="";
            	 l_me_parent = null;
            }
            l_me.ctrl = function(obj)
            {
            	  switch(obj.type)
            	  {
            	  	  case "destroy_play_page":
            	  	     {
            	  	     	  remove_event();
            	  	     }
            	  }
            }
    }
    function class_playback_cntr(obj)
    {
       	var l_me = this,
            l_me_parent = obj.parent,
            l_playback_slider_max_range = 1000,
            l_get_event_count = -10,//Playback interface for each query 10 records
            l_parent_callback = obj.on_event,
            l_search_time = 0X7fffffff,
            l_starting_line,
            l_passed_second,
            l_event_array,
            l_RecordingToken = "",
            l_search_begin_date,
            l_search_end_date,
						l_download_progress_timeout,
            l_play_pause_timer,
            l_dom_view_page = dom_create_child(l_me_parent, "div", "view_page"),
            l_view_page_obj,
            l_dom_playback_search_box = dom_create_child(l_me_parent, "div", "playback_search_box"),
            l_playback_search_box_obj,
            l_dom_playback_control_box = dom_create_child(l_me_parent, "div", "playback_control_box"),
            l_playback_control_box_obj;

        function create_ipc(obj)
        {
	          if(!g_playback_link.add(obj.node_sn)){
	             if(!obj.isDownload)g_is_play_back = 1; //debug by summer
	             if(obj.isDownload)g_is_play_back_download = 1; //debug by summer
	             var inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:1}});
	             l_view_page_obj.ctrl({type:"add_playback_ipc", data:{inner_window_info:inner_window_info, node_sn:obj.node_sn,isDownload:obj.isDownload?obj.isDownload:0,localPath:obj.localPath?obj.localPath:""}});
	          }
        }
        function delete_ipc(obj)
        {
            if(g_playback_link.del(obj.node_sn))
            {               
                g_is_play_back = 0;
                l_playback_control_box_obj.ctrl({type:"adjust_play_button_state", data:{play_state:"pause"}});
                var inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:1}});
                l_view_page_obj.ctrl({type:"remove_ipc", data:{inner_window_info:inner_window_info}});
            }
        }
        //Turn on or off the device list
        function operate_device_list(obj)
        {
            if(g_device_list_switch == obj.state)
                return;
            else
            {
                var j_device_list_panel = jQuery("#device_list_panel"),
                    j_device_list_inner = jQuery("#device_list_inner"),
                    j_device_list_arrow = jQuery("#device_list_arrow");
                if(obj.state == "open")
                {
                    mx("#device_list_panel").style.display = "inline";
                    if(!j_device_list_panel.is(":animated")){
                        j_device_list_panel.animate({height:g_panel_box_h, top:"8", left:"3"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_panel.animate({width:g_panel_box_w}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_inner.animate({height:g_device_list_inner_h}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_inner.animate({width:(g_panel_box_w)}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_arrow.animate({top:g_panel_box_h + 8}, {queue:false, duration:200, easing:'linear'});
                        if(!g_old_browser_version)
                        {
                            j_device_list_panel.animate({opacity:"1"}, {queue:false, duration:500, easing:'linear'});
                            j_device_list_inner.animate({opacity:"1"}, {queue:false, duration:500, easing:'linear'});
                            j_device_list_arrow.animate({opacity:"1"}, {queue:false, duration:500, easing:'linear'});
                        }
                        g_device_list_switch = obj.state;
                    }
                }
                else if(obj.state == "close")
                {
                    if(!j_device_list_panel.is(":animated")){
                        j_device_list_panel.animate({height:"0", top:g_panel_box_h + 15, left:"10"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_panel.animate({width:"0"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_inner.animate({height:"0"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_inner.animate({width:"0"}, {queue:false, duration:500, easing:'easeOutQuint'});
                        j_device_list_arrow.animate({top:g_panel_box_h + 8 + 10}, {queue:false, duration:200, easing:'linear'});
                        if(!g_old_browser_version)
                        {
                            j_device_list_panel.animate({opacity:"0"}, {queue:false, duration:500, easing:'linear'});
                            j_device_list_inner.animate({opacity:"0"}, {queue:false, duration:500, easing:'linear'});
                            j_device_list_arrow.animate({opacity:"0"}, {queue:false, duration:500, easing:'linear'});
                        }
                        g_device_list_switch = obj.state;
                    }
                }
                l_view_page_obj.ctrl({type:"update"});
            }
        }
        function get_current_date(obj)
        {
            var i, length = 0, begin_event, end_event, pos,
                offset_millisecond, offset_date,
                between_millisecond = (l_search_end_date - l_search_begin_date);

            if(undefined !== obj.date)
            {
                offset_date = obj.date;
                if(l_event_array)
                    length = l_event_array.length;
                for(i = 0; i < length; ++i)
                {
                    if(offset_date < l_event_array[i].date)
                    {
                        if(l_event_array[i].type == "end")
                        {
                            return {state:"normal", offset_date:offset_date,
                                offset_value:Math.round(l_playback_slider_max_range * (offset_date - l_search_begin_date) / between_millisecond)};
                        }
                        else if(l_event_array[i].type == "begin")
                        {
                            offset_date = l_event_array[i].date;
                            return {state:"jump", offset_date:offset_date,
                                offset_value:Math.round(l_playback_slider_max_range * (offset_date - l_search_begin_date) / between_millisecond)};
                        }
                    }
                }
                //Not in any event in front of That is the last event behind the event
                if(l_event_array[length - 1].type == "begin")
                {
                    return {offset_date:offset_date,
                        offset_value:Math.round(l_playback_slider_max_range * (offset_date - l_search_begin_date) / between_millisecond)};
                }
                else
                {
                    return {offset_date:0, offset_value:0};
                }
            }
            else if(undefined !== obj.value)
            {
                pos = obj.value / l_playback_slider_max_range;
                offset_millisecond = Math.round(between_millisecond * pos);
                offset_date = l_search_begin_date + offset_millisecond;
                if(l_event_array && l_event_array.length)
                    length = l_event_array.length;
                else return {offset_date:0, offset_value:0};
                for(i = 0; i < length; ++i)
                {
                    if(offset_date < l_event_array[i].date)
                    {
                        if(l_event_array[i].type == "end")
                        {
                            return {state:"normal", offset_date:offset_date, offset_value:obj.value};
                        }
                        else if(l_event_array[i].type == "begin")
                        {
                            offset_date = l_event_array[i].date;
                            return {state:"jump", offset_date:offset_date,
                                offset_value:Math.round(l_playback_slider_max_range * (offset_date - l_search_begin_date) / between_millisecond)};
                        }
                    }
                }
                //Not in any event in front of That is the last event behind the event
                if(l_event_array[length - 1].type == "begin")
                {
                    return {offset_date:offset_date, offset_value:obj.value};
                }
                else
                {
                    return {offset_date:0, offset_value:0};
                }
            }
        }
        function play_playback_handle(obj)
        {
            var between_milliseconds = (l_search_end_date - l_search_begin_date);
            var exchange_rate = l_playback_slider_max_range / (between_milliseconds / 1000),
                current_value,current_time, next_time;

            current_value = parseInt(mx(".fd-slider-handle", mx("#fd-slider-playback_slider"))[0].getAttribute("aria-valuenow"), 10);
            l_passed_second = 1;
            l_starting_line = current_value;
            if(current_value < l_playback_slider_max_range)
            {
                current_time = get_current_date({value:current_value});
                l_view_page_obj.ctrl({type:"seek_ipc", data:{type:"time", date:current_time.offset_date, inner_window_info:obj.inner_window_info}});
                next_time = get_current_date({value:current_time.offset_value + exchange_rate});
                fdSliderController.increment("playback_slider", next_time.offset_value - current_time.offset_value);
                if(l_play_pause_timer)
                    clearInterval(l_play_pause_timer);
                l_play_pause_timer = setInterval(
                    function() {
                        ++l_passed_second;
                        current_value = parseInt(mx(".fd-slider-handle", mx("#fd-slider-playback_slider"))[0].getAttribute("aria-valuenow"), 10);
                        if(current_value < l_playback_slider_max_range)
                        {
                            next_time = get_current_date({value:l_starting_line + l_passed_second * exchange_rate});
                            if(next_time.state == "jump")
                            {
                                l_passed_second = 0;
                                l_starting_line = next_time.offset_value;
                                l_view_page_obj.ctrl({type:"seek_ipc", data:{type:"time", date:next_time.offset_date, inner_window_info:obj.inner_window_info}});
                            }
                            if(!next_time.offset_date)
                            {
                                l_passed_second = 0;
                                clearInterval(l_play_pause_timer);
                                if(!obj.isDownload)l_playback_control_box_obj.ctrl({type:"adjust_play_button_state", data:{playback_state:"pause"}});
                                l_view_page_obj.ctrl({type:"pause_ipc", data:{inner_window_info:obj.inner_window_info}});
                                fdSliderController.increment("playback_slider", l_playback_slider_max_range);
                                return;
                            }
                            if(Math.round(next_time.offset_value) == l_playback_slider_max_range)
                            {
                                l_passed_second = 0;
                                clearInterval(l_play_pause_timer);
                                if(!obj.isDownload)l_playback_control_box_obj.ctrl({type:"adjust_play_button_state", data:{playback_state:"pause"}});
                                l_view_page_obj.ctrl({type:"pause_ipc", data:{inner_window_info:obj.inner_window_info}});
                                fdSliderController.increment("playback_slider", l_playback_slider_max_range);
                            }
                            else
                            {
                                fdSliderController.increment("playback_slider", next_time.offset_value - current_value);
                            }
                        }
                        else
                        {
                            l_passed_second = 0;
                            clearInterval(l_play_pause_timer);
                            if(!obj.isDownload)l_playback_control_box_obj.ctrl({type:"adjust_play_button_state", data:{playback_state:"pause"}});
                            l_view_page_obj.ctrl({type:"pause_ipc", data:{inner_window_info:obj.inner_window_info}});
                        }
                    }, 1000);
                    //l_view_page_obj.ctrl({type:"play_ipc", data:{inner_window_info:obj.inner_window_info}});
                return 0;
            }
            else
            {
                return -1;
            }
        }
        //Get playback recording
        function ccm_msg_get_ack(msg, ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.result == "")
            {
                l_playback_search_box_obj.ctrl({type:"create_playback_file_list", data:msg});
                if(msg.messages){
                    l_search_time=msg.messages[msg.messages.length-1].msg_id;
                }
            }
            else
            {
                log("error:ccm_msg_get return error in class_playback_cntr.");
            }
        }
        //Get playback recording
        function ccm_msg_get(obj)
        {
            var node, node_sn;
            l_playback_control_box_obj.ctrl({type:"remove_playback_slider_block"});
            l_event_array = new Array();
            node_sn = obj.inner_window_info? obj.inner_window_info.node_sn : g_select_device_ipc;
            if(node_sn == "none" || node_sn == "")
            {
                 obj.inner_window_info=null;
                 node_sn=g_select_device_ipc;
            }
            node = mcloud_agent.devs.get(node_sn);;
            if(!node) return;
            obj.start_point = obj.start_point ? Date.parse(obj.start_point) / 1000 : "";
            obj.end_point = obj.end_point ? Date.parse(obj.end_point) / 1000 : "";

            ms.send_msg("msgs_get",{sn:g_select_device_ipc, start:(l_search_time), counts:l_get_event_count,filter:"record"},{inner_window_info:obj.inner_window_info || null},ccm_msg_get_ack);
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_dom_view_page[s_style][s_width] = (l_me_parent.offsetWidth - g_panel_box_all_w * 2) + "px";
                        l_dom_view_page[s_style][s_height] = (l_me_parent.offsetHeight - g_control_box_h) + "px";
                        l_dom_view_page[s_style].left = g_panel_box_all_w + "px";
                        l_dom_playback_search_box[s_style][s_width] = g_panel_box_all_w + "px";
                        l_dom_playback_search_box[s_style][s_height] = g_panel_box_all_h + "px";
                        l_dom_playback_control_box[s_style][s_width] = l_me_parent.offsetWidth + "px";
                        if(g_panel_box_all_w < g_panel_box_max_w)
                        {
                            l_dom_playback_search_box[s_style].opacity = "0.5";
                        }
                        else
                        {
                            l_dom_playback_search_box[s_style].opacity = "1";
                        }
                        l_view_page_obj.ctrl(obj);
                        l_playback_search_box_obj.ctrl(obj);
                        l_playback_control_box_obj.ctrl(obj);
                        break;
                    }
                case "change_select_device_style":
                case "refresh_device_list":
                    {
                        l_device_list_box_obj.ctrl(obj);
                        break;
                    }
                case "change_select_ipc"://Change device selection change notification other modules
                    {
                        l_RecordingToken = "";
                        if(l_view_page_obj)
                            l_view_page_obj.ctrl({type:"change_select_ipc", data:obj.data});
                        if(l_playback_search_box_obj)
                            l_playback_search_box_obj.ctrl({type:"change_select_ipc", data:obj.data});
                        if(l_playback_control_box_obj)
                            l_playback_control_box_obj.ctrl({type:"change_select_ipc", data:obj.data});
                        break;
                    }
                case "create_ipc":
                    {
                        create_ipc(obj);
                        break;
                    }
                case "delete_ipc":
                    {
                        delete_ipc(obj);
                        break;
                    }
                case "destroy"://Clear this element
                    {  //If you are deleting playback Playback
                    	 if(g_is_play_back){
                    	 	  delete_ipc({node_sn:g_select_device_ipc});
                    	 }
                       l_view_page_obj.ctrl(obj);
                       l_playback_control_box_obj.ctrl(obj);
                       l_playback_search_box_obj.ctrl(obj);
                       clearInterval(l_play_pause_timer);
                       remove_event();
                       l_me_parent[s_innerHTML] = "";
                       l_me_parent = null;
                       break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_playback_cntr.");
            }
        }
         function on_event(obj)
        {
            switch(obj.type)
            {
                case "create_ipc":
                    {
                        create_ipc(obj);
                        break;
                    }
                case "delete_ipc":
                    {
                        delete_ipc(obj.data);
                        break;
                    }
                case "refresh_menu":
                    {
                      l_parent_callback(obj);
                      break;
                    }
                case "playback_button_onclick": //Playback Play button click
                    {
                        if(g_is_play_back)
                        {
                           delete_ipc({node_sn:g_select_device_ipc});
                        }
                        else
                        {
                           create_ipc({node_sn:g_select_device_ipc});
                        }
                        break;
                    }
                case "playback_download":
                    {
                    		var sn=g_select_device_ipc?g_select_device_ipc:g_device_list_link.get_first().data.substr(3);
                    		var node = mcloud_agent.devs.get(g_select_device_ipc);
                    		old_progress=0;
                    		clearTimeout(l_download_progress_timeout);
                    		var progress_dom=obj.progress_dom?obj.progress_dom:mcloud_agent.devs.get(g_select_device_ipc).download_progress_dom;
                    		var file_list_img=jQuery(".download_img", progress_dom.parentNode)[0];
                    		if(g_is_play_back_download)
                        {
                              progress_dom.innerHTML=(g_is_play_back_download && obj.iscomplete)?"100%":"×";
                              delete_ipc({node_sn:sn,isDownload:0});
                              if(!obj.iscomplete) progress_dom.style.display="none";
                              file_list_img.style.backgroundImage="url('/imgs/download_ico.png')";
                              mcloud_agent.devs.get(g_select_device_ipc).download_progress_dom="";
                              g_is_play_back_download = 0;
                        }
                        else
                        {
                              if(navigator.platform.indexOf("Win") > -1)
                              {
                                  create_ipc({node_sn:sn,isDownload:1,localPath:"C:\/Downloads\/"+obj.path+".mp4"});
                              }
                        			else if(navigator.platform.indexOf("Mac") > -1)
                        			{
                        			    create_ipc({node_sn:sn,isDownload:1,localPath:"\/Users\/Shared\/"+obj.path+".mp4"});
                        			}
                        			mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName=obj.path;
                        			mcloud_agent.devs.get(g_select_device_ipc).download_progress_dom=progress_dom;
                        			progress_dom.innerHTML="0%";
                        			progress_dom.style.display="inline-block";
                        			file_list_img.style.backgroundImage="url('/imgs/download_stop_ico.png')";
                        }
                        break;
                    }
                case "adjust_playback_slider_position":
                    {
                        l_playback_control_box_obj.ctrl(obj);
                        break;
                    }
                case "time_control_position":
                    {
                        l_playback_control_box_obj.ctrl({type:"adjust_playback_slider_position", data:obj.data});
                        if(obj.data.inner_window_info)
                        {
                            var content;
                            l_passed_second = 1;
                            content = get_current_date({date:obj.data.date});
                            l_starting_line = content.offset_value;
                            l_view_page_obj.ctrl({type:"seek_ipc", data:{type:"time", date:content.offset_date, inner_window_info:obj.data.inner_window_info}});
                        }
                        break;
                    }
                case "playback_search_result":
                    {
                        var inner_window_info;
                        inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:obj.data.index}});
                        l_search_time = 0X7fffffff;
                        ccm_msg_get({inner_window_info:inner_window_info?inner_window_info:null, start_point:obj.data.start_point, end_point:obj.data.end_point});
                        break;
                    }
                case "play_playback_handle":
                    {
                        return play_playback_handle(obj.data);
                        break;
                    }
                case "playback_download_progress":
                    {
                        var download_progress_dom=mcloud_agent.devs.get(g_select_device_ipc).download_progress_dom;
                        if(download_progress_dom)
                        {
                        		var current_progress=(obj.current_progress*100).toFixed(2);
		                        download_progress_dom.innerHTML=current_progress+"%";
		                        l_download_progress_timeout=setTimeout(function(){
		                        		if(current_progress==old_progress)
				                        {
				                        		on_event({type:"playback_download",path:mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName,progress_dom:download_progress_dom,iscomplete:1});
				                        }
		                        },6000);

		                        old_progress=current_progress;
                        }
                        break;
                    }
                case "pause_playback_handle":
                    {
                        clearInterval(l_play_pause_timer);
                        return l_view_page_obj.ctrl({type:"pause_ipc", data:obj.data});
                        break;
                    }
                case "seek_ipc":
                    {
                        return l_view_page_obj.ctrl(obj);
                        break;
                    }
                case "get_inner_window_info":
                    {
                        return l_view_page_obj.ctrl(obj);
                    }
                case "operate_device_list_box":
                    {
                        operate_device_list(obj.data);
                        break;
                    }
                case "remove_playback_slider_block":
                    {
                        l_playback_control_box_obj.ctrl(obj);
                        break;
                    }
                case "RecordingToken":
                    {
                    	  l_RecordingToken = obj.data;
                    	  l_view_page_obj.ctrl(obj);
                    	  break;
                    }
                case "RecordingSize":
                		{
                				l_view_page_obj.ctrl(obj);
                				break;
                		}
                case "add_playback":
                case "remove_playback":
                case "playback_list":
                    {
                       l_view_page_obj.ctrl(obj);
                       break;
                    }
                case "playback_click":
                    {
                        l_playback_search_box_obj.ctrl(obj);
                        l_playback_control_box_obj.ctrl(obj);
                        break;
                    }
                case "playback_search_list_more"://Playback recording playback interface view more ten
                    {
                       l_search_time=obj.l_search_time;
                       ccm_msg_get(obj);
                       break;
                    }
                case "play_pause":
                    {
                        l_playback_search_box_obj.ctrl(obj);
                        break;
                    }
                case "add_playback_ipc":
                    {
                        l_view_page_obj.ctrl(obj);
                        break;
                    }
                case "adjust_play_button_state":
                    {
                        l_playback_control_box_obj.ctrl(obj);
                        break;
                    }
                case "create_playback_file_list":
                    {
                         l_playback_search_box_obj.ctrl(obj);
                         break;
                    }
                case "remove_ipc":
                    {
                        l_view_page_obj.ctrl(obj);
                        break;
                    }
                case "playback_slider_is_ok":
                    {
                       l_view_page_obj.ctrl(obj);
                       break;
                    }
                case "l_search_time":
                    {
                       l_search_time=obj.data;
                       break;
                    }
                case "ccm_msg_get_ack":
                    {
                        ccm_msg_get_ack(obj.data.type,obj.data.msg,obj.data.ref);
                        break;
                    }
                case "speed":
                    {
                        break;
                    }
                default:
                    log("error:on_event's" + obj.type + "is not exist in class_playback_cntr.");
            }
        }
        function add_event()
        {
            if(null == g_view_page_redraw)
            {
                g_view_page_redraw = function(obj) {
                    l_view_page_obj.ctrl({type:"destroy"});
                    l_view_page_obj = new class_view_page({parent:l_dom_view_page,type:"redraw"});
                };
            }
        }
        function remove_event()
        {
            g_playback_slider_callback = null;
            g_view_page_redraw = null;
        }
        l_dom_view_page.style[s_cssText] = "width:" + (l_me_parent.offsetWidth - g_panel_box_all_w * 2) + "px;"
            + "height:" + (l_me_parent.offsetHeight - g_control_box_h) + "px;left:" + g_panel_box_all_w + "px;";
        l_dom_playback_search_box[s_style][s_cssText] = "width:" + g_panel_box_all_w + "px;height:" + g_panel_box_all_h + "px;";
        l_dom_playback_control_box[s_style][s_cssText] = "width:" + l_me_parent.offsetWidth + "px;height:" + g_control_box_h + "px;";
        if(g_panel_box_all_w < g_panel_box_max_w)
        {
           l_dom_playback_search_box[s_style].opacity = "0.5";
        }
        add_event();
        l_view_page_obj = new class_view_page({parent:l_dom_view_page, type:"create", on_event:on_event});
        l_playback_search_box_obj = new class_playback_search_box({parent:l_dom_playback_search_box, on_event:on_event});
        l_playback_control_box_obj = new class_playback_control_box({parent:l_dom_playback_control_box, on_event:on_event});

        if(g_device_list_switch == "close")
        {
            g_device_list_switch = "waiting change";
            operate_device_list({state:"close"});
        }
        if(g_select_device_ipc)
           ccm_msg_get({start_point:"", end_point:"", inner_window_info:null});
        fdSliderController.create();
    }
    function class_view_page(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_inner_windows_cont,
            l_dom_bg_top, l_dom_bg_center, l_dom_bg_bottom,
            l_window_array_info = {},
            l_ipc_speed_time,
            l_replay_interval,
            l_plug_type = "",
            l_play_ico_onclick=0,
            l_play_ico_count_down,
            l_RecordingSize,
            l_mask_setup_click,
            l_RecordingToken="",
            l_vimtag_last_speed=0;
        //Processing Change Device
        function change_select_ipc(obj)
        {
            if(g_now_page == "home")
            {
                if(g_is_playing){
                   //Delete the old player
                   l_parent_callback({type:"delete_ipc", data:{node_sn:obj.old_sn, type:"refresh"}});
                   g_is_playing = 0;
                }
                if(mcloud_agent.devs.get(g_select_device_ipc).type != "BOX")
                    snapshot({data:1});
            }
            else if(g_now_page == "playback")
            {
                if(g_is_play_back){
                   //Delete the old player
                   l_parent_callback({type:"delete_ipc", data:{ node_sn:obj.old_sn, type:"refresh"}});
                }
                //Clear the old replay logo
                l_RecordingToken = "";
            }
        }
        function split_screen(obj)
        {
            var count = 0, old_count;
            if(g_now_page == "home" || g_now_page == "timeline"){
                old_count = g_view_split_count;
                count = g_view_split_count;
                if(obj.count){
                    count = g_view_split_count = obj.count;
                }
            }
            else if(g_now_page == "playback"){
                old_count = g_playback_split_count;
                count = g_playback_split_count;
                if(obj.count){
                    count = g_playback_split_count = obj.count;
                }
            }

            while(count--){
                inner_windows = dom_create_child(l_dom_inner_windows_cont, "div", "", "inner_windows");
            }
            adjust_screen(obj);
            if(obj.type && obj.type == "create"){
	     if(g_domain_oems_vimtag&&g_now_page=="playback"){
            	    fill_inner_ipc({count:obj.count,old_count:old_count,pic_token:obj.pic_token,type:"not_ipc"});
            	  }else{
            	    fill_inner_ipc({count:obj.count, old_count:old_count, type:"not_ipc"});	
            	  }
            }else{
                fill_inner_ipc({count:obj.count, old_count:old_count, type:"add_ipc"});
            }
        }
        function adjust_screen(obj)
        {
            var split_count,
                count,
                inner_window_w,
                inner_window_h;

            if(g_domain_oems_vimtag){
                mx("#inner_windows_cont").style.width = g_player_width + "px";
                mx("#inner_windows_cont").style.height = g_player_height + "px";
            }else{
            	  mx("#inner_windows_cont").style.width = g_main_window_w + "px";
                mx("#inner_windows_cont").style.height = g_main_window_h + "px";
            }
            if(g_now_page == "home" || g_now_page == "timeline"){
                split_count = count = g_view_split_count;
            }
            else if(g_now_page == "playback"){
                split_count = count = g_playback_split_count;
            }

            if(4 == split_count || 9 == split_count || 16 == split_count || 36 == split_count)
            {
                inner_window_w = Math.floor(g_main_window_w / Math.sqrt(split_count));
                inner_window_h = Math.floor(g_main_window_h / Math.sqrt(split_count));
                while(count--)
                    mx(".inner_windows")[count][s_style][s_cssText] = "float:left;width:" + inner_window_w + "px;height:" + inner_window_h + "px;";
            }
            else if(8 == split_count)
            {
                inner_window_w = Math.floor(g_main_window_w / 4);
                inner_window_h = Math.floor(g_main_window_h / 4);

                while(count--)
                    mx(".inner_windows")[count][s_style][s_cssText] = "float:left;width:" + inner_window_w + "px;height:" + inner_window_h + "px;";
                mx(".inner_windows")[0][s_style][s_cssText] = "float:left;width:" + (inner_window_w * 3) + "px;height:" + (inner_window_h * 3) + "px;";
            }
            //The wrong data also use 1 split_screen;
            else{
                if(g_domain_oems_vimtag){                    
                    inner_window_w = g_player_width;
                    inner_window_h = g_player_height;
                    mx(".inner_windows")[0].style.width = g_player_width + "px";
                    mx(".inner_windows")[0].style.height = g_player_height + "px";
                }else{
            	      inner_window_w = g_main_window_w;
                    inner_window_h = g_main_window_h;
                    mx(".inner_windows")[0].style.width = inner_window_w + "px";
                    mx(".inner_windows")[0].style.height = inner_window_h + "px";
                }
            }
        }
        function fill_inner_ipc(obj)
        {
            var i = 1, count, id_count,
                array_count = 0,
                list_length,
                list_obj,
                inner_windows = mx(".inner_windows"),
                inner_window_obj;

            if(g_now_page == "home" || g_now_page == "timeline")
            {
                count = obj.old_count;
                id_count = (g_now_view_page - 1) * count + 1;
                list_length = g_view_link.length;
                list_obj = g_view_link.get_first();
                if(obj.count)
                {
                    count = obj.count;
                    g_now_view_page = Math.ceil(id_count / obj.count);
                    id_count = (g_now_view_page - 1) * count + 1;
                }
            }
            else if(g_now_page == "playback")
            {
                count = obj.old_count;
                id_count = (g_now_playback_page - 1) * count + 1;
                list_length = g_playback_link.length;
                list_obj = g_playback_link.get_first();
                if(obj.count)
                {
                    count = obj.count;
                    g_now_playback_page = Math.ceil(id_count / obj.count);
                    id_count = (g_now_playback_page - 1) * count + 1;
                }
            }
            g_window_array = new Array(count);
            while(i++ < id_count)
                list_obj = list_obj.next;
            while(count--)
            {
                l_window_array_info["inner_window" + id_count] = {dom_id:("inner_window" + id_count), index:id_count, video_chls:null, audio_chls:null, mme:null, ipc_state:"", node_sn:""};
                inner_window_obj = new class_inner_window({parent:inner_windows[array_count], inner_window_info:l_window_array_info["inner_window" + id_count],
                    on_event:function(obj){on_event(obj);}});
                l_window_array_info["inner_window" + id_count].inner_obj = inner_window_obj;
                if(id_count <= list_length && obj.type == "add_ipc")
                {
                    if(g_now_page == "home" || g_now_page == "timeline")
                        add_home_ipc({inner_window_info:l_window_array_info["inner_window" + id_count], node_sn:list_obj.data});
                    else if(g_now_page == "playback")
                        add_playback_ipc({inner_window_info:l_window_array_info["inner_window" + id_count], node_sn:list_obj.data});
                    list_obj = list_obj.next;
                }
                if(g_now_page == "home"||(g_now_page=="playback"&&g_domain_oems_vimtag))
                {
                	 if(g_now_page=="playback"&&g_domain_oems_vimtag){
                	   l_me.ctrl({type:"snapshot",data:1,pic_token:obj.pic_token});
                	 }else {
                	 	 l_me.ctrl({type:"snapshot",data:1});
                	 }             
	        }
                ++id_count;
                ++array_count;
            }
            //g_window_array = l_window_array_info;
        }
        function create_view_page_bg()
        {
            var bg, bg_top_left, bg_top_right,
                bg_bottom_left, bg_bottom_right, ie7_help_div;

            bg = dom_create_child(l_me_parent, "div", "view_page_bg");
            bg_top_left = dom_create_child(bg, "div", "view_page_top_left");
            l_dom_bg_top = dom_create_child(bg, "div", "view_page_top");
            bg_top_right = dom_create_child(bg, "div", "view_page_top_right");
            l_dom_bg_center = dom_create_child(bg, "div", "view_page_center");
            bg_bottom_left = dom_create_child(bg, "div", "view_page_bottom_left");
            l_dom_bg_bottom = dom_create_child(bg, "div", "view_page_bottom");
            bg_bottom_right = dom_create_child(bg, "div", "view_page_bottom_right");

            background_img_set(bg_top_left, sub_img_view_bg0)
            l_dom_bg_top[s_style][s_cssText] = "width:" + (l_me_parent.offsetWidth - 25*2) + "px;height:21px;background-color:#141517;border-top:1px solid #0a0a0b;";
            background_img_set(bg_top_right, sub_img_view_bg1)
            l_dom_bg_center[s_style][s_cssText] = "width:" + l_me_parent.offsetWidth  + "px;height:" + (l_me_parent.offsetHeight - 22 - 10) + "px;background-color:#141517;";
            background_img_set(bg_bottom_left, sub_img_view_bg2)
            l_dom_bg_bottom[s_style][s_cssText] = "width:" + (l_me_parent.offsetWidth - 25*2) + "px; height:10px;background-color:#141517;";
            background_img_set(bg_bottom_right, sub_img_view_bg4)

            ie7_help_div = dom_create_child(l_me_parent, "div", "ie7_help_div");
            ie7_help_div[s_style][s_cssText] = "margin:0px;border:0px;padding:0px;clear:both;float:none;font-size:1px;height:0px";
        }
        //Create a snapshot div
        function create_snapshot_preview_div(obj)
        {
            var correct_width, correct_height, prop,
                snapshot_preview_div = mx("#snapshot_preview_div"),
                snapshot_preview_inner = mx("#snapshot_preview_inner"),
                snapshot_preview_content = mx("#snapshot_preview_content");

            correct_width = obj.resolution_w;
            correct_height = obj.resolution_h;
            if(correct_width > g_web.offsetWidth * 8 / 10)
            {
                correct_width = parseInt(g_web.offsetWidth * 8 / 10);
                correct_height = parseInt(correct_width * obj.resolution_h / obj.resolution_w);
            }
            if(correct_height > g_web.offsetHeight * 8 / 10)
            {
                correct_height = parseInt(g_web.offsetHeight * 8 / 10);
                correct_width = parseInt(correct_height * obj.resolution_w / obj.resolution_h);
            }
            if(snapshot_preview_content)
            {
                snapshot_preview_div.style.width = correct_width + 13*2 + "px";
                snapshot_preview_div.style.height = correct_height + 13*2 + "px";
                snapshot_preview_div.style.left = ((g_web.offsetWidth - correct_width) / 2) + "px";
                snapshot_preview_div.style.top = ((g_web.offsetHeight - correct_height) / 2)  + "px";
                snapshot_preview_content.src = obj.uri;
            }
            else
            {
                var snapshot_preview_close;
                snapshot_preview_div = dom_create_child(page, "div", "snapshot_preview_div");
                if(g_domain_oems_vimtag)
                {
                    correct_width = obj.resolution_w;
                    correct_height = obj.resolution_h;
                    snapshot_preview_div[s_style][s_cssText] = "width:" + (correct_width + 13*2) + "px;height:" + (correct_height + 13*2) + "px;"
                        + "left:" + ((g_web.offsetWidth - correct_width) / 2) + "px;"
                        + "top:" + ((g_web.offsetHeight - correct_height) / 2)  + "px;position:absolute;z-index:50";
                }
                else
                {
                    snapshot_preview_div[s_style][s_cssText] = "width:" + (correct_width + 13*2) + "px;height:" + (correct_height + 13*2) + "px;"
                        + "left:" + ((g_web.offsetWidth - correct_width) / 2) + "px;"
                        + "top:" + ((g_web.offsetHeight - correct_height) / 2)  + "px;position:absolute;z-index:50";
                }                
                snapshot_preview_inner = dom_create_child(snapshot_preview_div, "div", "snapshot_preview_inner");
                snapshot_preview_inner[s_style][s_cssText] = "width:" + (correct_width + 13) + "px;height:" + (correct_height + 13) + "px;"
                    + "left:6px;top:6px;position:relative;";

                snapshot_preview_content = dom_create_child(snapshot_preview_inner, "img", "snapshot_preview_content");
                snapshot_preview_content[s_style][s_cssText] = "width:" + correct_width + "px;height:" + correct_height + "px;"
                    + "left:7px;top:7px;position:relative;";
                snapshot_preview_content.src = obj.uri;

                snapshot_preview_close = dom_create_child(snapshot_preview_div, "div", "snapshot_preview_close");
                if(g_domain_oems_vimtag)
                {
                	  snapshot_preview_close[s_style][s_cssText] = "position:absolute;right:15px;top:15px;cursor:pointer;";
                }
                else
                {
                	  snapshot_preview_close[s_style][s_cssText] = "position:absolute;right:0;top:0;cursor:pointer;";
                    background_img_set(snapshot_preview_close, sub_img_close0);
                }                

                snapshot_preview_close.onclick = function() {
                    snapshot_preview_div[s_innerHTML] = "";
                    page[s_removeChild](snapshot_preview_div);
                    snapshot_preview_div = null;
                    snapshot_preview_close.onclick = "";
                    if(!g_domain_oems_vimtag)
                    {
		                    snapshot_preview_close.onmouseover = "";
		                    snapshot_preview_close.onmouseout = "";
                    }
                };
                if(!g_domain_oems_vimtag)
                {
		                snapshot_preview_close.onmouseover = function() {
		                    background_img_change_pos(this, sub_img_close1);
		                };
		                snapshot_preview_close.onmouseout = function() {
		                    background_img_change_pos(this, sub_img_close0);
		                };
                }
            }
        }
        //Get resolution size, etc.
        function get_profile_token_choice()
        {
            var profile_token_obj=new Object(),
                profile_token_choice = mlocal_storage.get("PlayProfile");
       	    if(profile_token_choice=="" || profile_token_choice==null)
       	    {
       	           if(g_network_environ=="private")
       	           {
       	               profile_token_obj.profile_token_choice_value="p0_xxxxxxxxxx";
       	               profile_token_obj.few_seconds=3000;
       	           }else
       	           {
       	               profile_token_obj.profile_token_choice_value="p1_xxxxxxxxxx";
       	               profile_token_obj.few_seconds=1000;
       	           }
       	    }
       	    else if(profile_token_choice=="p0")
       	    {
       	            profile_token_obj.profile_token_choice_value="p0_xxxxxxxxxx";
       	            profile_token_obj.few_seconds=3000;
       	    }
       	    else if(profile_token_choice=="p1")
       	    {
       	            profile_token_obj.profile_token_choice_value="p1_xxxxxxxxxx";
       	            profile_token_obj.few_seconds=1000;
       	    }
       	    else if(profile_token_choice=="p2")
       	    {
       	            profile_token_obj.profile_token_choice_value="p2_xxxxxxxxxx";
       	            profile_token_obj.few_seconds=500;
       	    }
       	    else if(profile_token_choice=="p3")
       	    {
       	            profile_token_obj.profile_token_choice_value="p3_xxxxxxxxxx";
       	            profile_token_obj.few_seconds=500;
       	    }
       	    return profile_token_obj;
        }
        //mme (widget) callback function
        function on_plug_event(obj)
        {
        	switch( obj.type )
        	{
        		  case "missing":
        		  {
        		      if( g_now_page == "home" )
       	        	{
       	  	    			g_plug_is_missing=1;
        	  	  			local_address(obj);
        	  	  	}
        	  	  	break;
        	  	}
            	case "close":
            	{
            	    if(obj.ref_obj.page == "playback" || obj.ref_obj.page == "timeline")
            	    {
            	  	  	var inner_window;
                	  	for(n in l_window_array_info)
            	      	{
            		      	inner_window = l_window_array_info[n];
            		      	break;
            	      	}
            	      	if(obj.chl!=inner_window.video_chls)
            	      	{
            	  	     	clearInterval(l_ipc_speed_time);
            	  	     	inner_window.mme.chl_destroy(inner_window.video_chls);
                        g_video_stream_uri = "";
            	  	  	}
        	  	    }
        	  	    else
        	  	    {
            	  	  	g_video_stream_uri = "";
            	  	  	if( obj.ref_obj.page == "home" )
            	  	  	{
            	  	  	 	var select_device = mcloud_agent.devs.get(g_select_device_ipc);
            	  	  	 	if( select_device )
            	  	  	 	{
            	  	  	 		var state = select_device.Status;
            	  	  	 		if( state == "Online" )
            	  	  	 		{
            	  	  	 			var proto = obj.ref_obj.protocol;
                    				if(obj.plug.type.name == "flash")
                    				{
                        			    l_plug_type = "flash";
                        			    proto = "rtmp";
                    				}
                    				else
                    				{
                        			    if(proto == "auto")
                           				   proto = "rtdp";
                    				}
                    				l_replay_interval = setInterval(function(){
                     	                var inner_window;
                     	                for(n in window_array_info)
                     	                {
                     	                    inner_window = window_array_info[n];
                                            break;
                     	                }
                     	                ms.send_msg("play",{sn:g_select_device_ipc,token:inner_window.profile_token, protocol:proto},inner_window,function(msg,ref){ msg.type = "play" ; play_ack(msg,ref);});
                            },parseInt(5000*Math.random()+5000));
            	  	  	 		}
            	  	  	 	}
            	  	    }
        	  	  	}
        	  	  	break;
        	  	}
              case "install_ui":
              {
              	var j_panel = jQuery(obj.panel);
              	j_panel.fadeOut();
              	obj.panel[s_innerHTML] = null;
              	obj.panel[s_style][s_cssText] = "cursor:default;position:relative;left:0px;top:0px;width:100%;height:100%;color:#fff;visibility:hidden;background-image:url('/imgs/media_install_bg.png')";
              	obj.panel[s_innerHTML] =
                      "<div id='install_the_video_plug' style='position:absolute;left:4%;width:92%;height:100%;overflow:none;text-align:center;'><br/><center style='padding-top:10%'><span style='font-size:30px;'><b>" + mcs_install_the_video_plug + "</b></span></center><br/>"
                      + "<li>" + mcs_for_more_clarity_smooth_video_experience + "</li><br/><br/>"
                      + "<div style='position:absolute;bottom:0px;height:35%;width:100%'>"
                      +"<a name='plug' href='" + obj.download + "' target='_blank'"
                      + " style='background:#333;font-size:15px;color:#fff;text-decoration:none;text-align:center;"
                      + "display:block;width:210px;height:32px;line-height:32px;margin:0 auto 30px;"
                      + "-moz-border-radius:5px;-webkit-border-radius:5px;border-radius:5Px;"
                      + mhack.css_box_shadow(1, "#505050") + "'"
                      + ">" + mcs_install_now + "</a>"
                      + "<a name='flash' href='javascript:void(0)'"
                      + " style='background:#333;font-size:15px;color:#fff;text-decoration:none;text-align:center;"
                      + "display:block;width:210px;height:32px;line-height:32px;margin:0 auto 30px;"
                      + "-moz-border-radius:5px;-webkit-border-radius:5px;border-radius:5Px;"
                      + mhack.css_box_shadow(1, "#505050") + "'"
                      + " >" + mcs_temporarily_installed_use_ordinary_video + "</a></div>"
                      + "<span name='plug_installing' style='display:none'></span>"
                      + "</div><div style='float:clear;'></div>";
              	if((navigator.userAgent.toLowerCase().match(/chrome\/[\d.]+/gi)+"").replace(/[^0-9.]/ig,"")>"42")
                {
                	 var isWin8=navigator.userAgent.indexOf("Windows NT 6.2") > -1 || navigator.userAgent.indexOf("Windows 8") > -1 || navigator.userAgent.indexOf("Windows NT 6.3") > -1 ,  //debug by summer
                   isServer_ip = g_server_device.substring(0,g_server_device.lastIndexOf(":")),isServer_ip_foreign;
                	
                   obj.panel[s_innerHTML] +=
                       "<div style='position:absolute;bottom:30px;margin: auto;width: 100%;'>"
                       + "<center>"+mcs_set_npapi+"</center>"
                       +"</div>";
                       
                   if(g_inland_server_ip_ok)
	                 {
	                  	isServer_ip_foreign = 0;
	                 }
	                 else
	                 {
	                  	isServer_ip_foreign = 1;
	                 }
	
	                 if(g_is_plug_load_refuse == 1 || (g_is_plug_load ==0 && isServer_ip_foreign ==1))
	                 {                                  
	                    g_play_flash_video = 1;
	                 }
                }
              	j_panel.hide();
              	j_panel.fadeIn();
              	
              	jQuery("#vimtag_ptz_control").hide();  //When in select Hide flash interface control interface
                  break;
              }
            	case "ready":
            	{
                    var proto = obj.ref_obj.protocol;
                    if(obj.plug.type.name == "flash")
                    {
                        l_plug_type = "flash";
                        proto = "rtmp";
                    }
                    else
                    {
                        if(proto == "auto")
                            proto = "rtdp";
                    }
                    if(obj.ref_obj.page == "home")
                    {
                       ms.send_msg("play",{sn:g_select_device_ipc,token:obj.ref_obj.inner_window_info.profile_token, protocol:proto,ref:obj.ref_obj},obj.ref_obj,function(msg,ref){ msg.type = "play" ; play_ack(msg,ref);});
                       if(g_domain_oems_vimtag)
                       { //Display Control Interface
                       	 jQuery("#vimtag_ptz_control").show();
                       }
                    }
                    else if(obj.ref_obj.page == "playback" || obj.ref_obj.page == "timeline")
                        ms.send_msg("playback",{sn:g_select_device_ipc,token:l_RecordingToken, protocol:proto,ref:obj.ref_obj},obj.ref_obj,function(msg,ref){ msg.type = "playback" ; play_ack(msg,ref);});
           	        break;
           	  }
            	case "license":
            	{
                    log("license is invalid");
              }
          }
        }
        function get_profiles_request(obj)
        {
            var node, node_sn;
            node_sn = obj.inner_window_info.node_sn;
            node = mcloud_agent.devs.get(node_sn);
            if(!node) return;
            ccm_profiles_get({ip:node.addr, to:"ccm", sn:node_sn, inner_window_info:obj.inner_window_info})
        }
        function ccm_profiles_get(obj)
        {
              var i, pos = -1;
              obj.inner_window_info.profile_token = mlocal_storage.get("PlayProfile");
              if(!obj.inner_window_info.profile_token)
              {
                 if(g_network_environ == "private")
                 {
                    obj.inner_window_info.profile_token="p0";
                    pos=0;
                 }
                 else if(g_network_environ == "public")
                 {
                    obj.inner_window_info.profile_token = "p1";
                    pos = 1;
                 }
              }
              else
              {
                for(i=0;i<4;++i)
                {
                   if(obj.inner_window_info.profile_token==("p"+i))
                   {
                        obj.inner_window_info.profile_token="p"+i;
                        pos = i;
                   }
                }
                if(pos < 0)
                {
                    if(g_network_environ == "private")
                    {
                       obj.inner_window_info.profile_token="p0";
                        pos=0;
                    }
                    else if(g_network_environ == "public")
                    {
                        obj.inner_window_info.profile_token = "p1";
                        pos = 1;
                    }
                }
              }
              ccm_media_get_request({type:"video", inner_window_info:obj.inner_window_info});
        }
        function ccm_media_get_request(obj)
        {
            var proto = "auto";
            if(obj.type == "video")
                create_mme({inner_window_info:obj.inner_window_info, protocol:"auto", page:g_now_page,localPath:obj.localPath,isDownload:obj.isDownload,l_mask_setup_click:obj.l_mask_setup_click});
            else if(obj.type == "audio")
            {
               if( l_plug_type == "flash")
               {
                    proto = "rtmp"
               }
               else
               {
                    if(proto == "auto")
                       proto = "rtdp";
               }
               ms.send_msg("pushtalk",{sn:g_select_device_ipc,protocol:proto,token:obj.inner_window_info.profile_token},null,function(msg,ref){
                    if(g_domain_oems_vimtag)
                    {
                    	if(msg.result=="")
	                    {
	                    	mx("#talkback_off_pic").className = "talkback_on_picture";
	                      g_audio_output_uri = msg.url;
	                      chl_audio_create({type:"publish", uri:msg.url, inner_window_info:obj.inner_window_info});
	                    }
	                    else if(msg.result == "permission.denied")
	                    {
	                    	msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
	                    }	                    		                    	
	                    else{
	                    	log("error:pushtalk return error in class_view_page.");
	                    }
                    }
                    else
                    {
	                    if(msg.result=="")
	                    {
	                    	l_parent_callback({type:"adjust_calling_button_state",data:{calling_state:"calling"}});
	                      g_audio_output_uri = msg.url;
	                      chl_audio_create({type:"publish", uri:msg.url, inner_window_info:obj.inner_window_info});
	                    }
	                    else if(msg.result == "permission.denied")
	                    {
	                    	g_system_prompt_box(mcs_permission_denied);
	                    }
	                    else
	                    {
	                    	log("error:pushtalk return error in class_view_page.");
	                    }
                    }
               });
            }
        }
        function play_ack(msg,ref)
        {
            if( msg.result == "")
            {
              if( g_video_stream_uri != "" )  return;
              if( l_replay_interval )    clearInterval( l_replay_interval );
              g_video_stream_uri = msg.url;
              chl_video_create({type:msg.type, uri:msg.url, inner_window_info:ref.inner_window_info,localPath:ref.localPath,isDownload:ref.isDownload,l_mask_setup_click:ref.l_mask_setup_click});
            }else{
            	g_domain_oems_vimtag?msg_tips({msg:"error:play return error in class_view_page.", type:"error", timeout:3000}):log("error:play return error in class_view_page.");
            }
        }
        function add_home_ipc(obj)
        {
            obj.inner_window_info.node_sn = obj.node_sn;
            var pos = mcloud_agent.devs.get_index(obj.node_sn);
            obj.inner_window_info.device_list_li_span = mx(".device_list_li_span")[pos];
            obj.inner_window_info.inner_ipc_dom = obj.inner_window_info.inner_obj.ctrl({type:"add_ipc_div"});
            get_profiles_request({inner_window_info:obj.inner_window_info});
            if(g_select_inner_window == obj.inner_window_info.dom_id)
                g_select_inner_ipc = obj.inner_window_info.node_sn;
        }
        function add_playback_ipc(obj)
        {
            obj.inner_window_info.node_sn = obj.node_sn;
            var pos = mcloud_agent.devs.get_index(obj.node_sn);
            obj.inner_window_info.device_list_li_span = mx(".device_list_li_span")[pos];
            obj.inner_window_info.inner_ipc_dom = obj.inner_window_info.inner_obj.ctrl({type:"add_ipc_div"});
            l_me.ctrl({type:"playback_slider_is_ok", inner_window_info:obj.inner_window_info,localPath:obj.localPath,isDownload:obj.isDownload});
            if(g_select_inner_window == obj.inner_window_info.dom_id)
                g_select_inner_ipc = obj.inner_window_info.node_sn;
        }
        //Remove video playback audio
        function remove_ipc(obj)
        {
            if(g_now_page == "home")
            {
                if(obj.inner_window_info.mme)
                {
                    if(obj.inner_window_info.video_chls)
                    {
                        obj.inner_window_info.mme.chl_destroy(obj.inner_window_info.video_chls);
                        g_video_stream_uri = "";
                    }
                    if(obj.inner_window_info.audio_chls)
                        obj.inner_window_info.mme.chl_destroy(obj.inner_window_info.audio_chls);
                }
//                obj.inner_window_info.inner_view_info = null;
                obj.inner_window_info.node_sn = "none";
                obj.inner_window_info.device_list_li_span = null;
                obj.inner_window_info.profile_token = "";
                obj.inner_window_info.ptz_token = "";
                obj.inner_window_info.video_encoding = "";
                obj.inner_window_info.video_resolution_w = 0;
                obj.inner_window_info.video_resolution_h = 0;
                obj.inner_window_info.video_frame_rate = 0;
                obj.inner_window_info.video_max_bit_rate = 0;
                obj.inner_window_info.video_min_bit_rate = 0;
            }
            else if(g_now_page == "playback" || g_now_page == "timeline")
            {
            	if(obj.inner_window_info.mme)
                {
                    if(obj.inner_window_info.video_chls)
                    {
                        obj.inner_window_info.mme.chl_destroy(obj.inner_window_info.video_chls);
                        g_video_stream_uri = "";
                    }
                    if(obj.inner_window_info.audio_chls)
                        obj.inner_window_info.mme.chl_destroy(obj.inner_window_info.audio_chls);
                }
                obj.inner_window_info.playback_state ="";
                obj.inner_window_info.video_chls = null;
                obj.inner_window_info.inner_view_info = null;
                obj.inner_window_info.node_sn = "none";
                obj.inner_window_info.device_list_li_span = null;
                obj.inner_window_info.profile_token = "";
                obj.inner_window_info.ptz_token = "";
                obj.inner_window_info.video_encoding = "";
                obj.inner_window_info.video_resolution_w = 0;
                obj.inner_window_info.video_resolution_h = 0;
                obj.inner_window_info.video_frame_rate = 0;
                obj.inner_window_info.video_max_bit_rate = 0;
                obj.inner_window_info.video_min_bit_rate = 0;
            }
            obj.inner_window_info.inner_obj.ctrl({type:"remove_ipc_div",isDownload:obj.isDownload});
        }
        function play_ipc(obj)
        {
            obj.inner_window_info.mme.ctrl(obj.inner_window_info.video_chls, "play", "");
            obj.inner_window_info.playback_state = "play";
            return 0;
        }
        function pause_ipc(obj)
        {
        	  if(obj.inner_window_info.mme){
               obj.inner_window_info.mme.ctrl(obj.inner_window_info.video_chls, "pause", "");
            }
            obj.inner_window_info.playback_state = "pause";
            return 0;
        }
        function seek_ipc(obj)
        {
            if(obj.inner_window_info && obj.inner_window_info.mme)
            {
                if(obj.type == "pos")
                    obj.inner_window_info.mme.ctrl(obj.inner_window_info.video_chls, "seek", "{pos:" + obj.pos + "}");
                else if(obj.type == "time")
                    obj.inner_window_info.mme.ctrl(obj.inner_window_info.video_chls, "seek", "{time:" + obj.date + "}");
                return 0;
            }else{
                return -1;
            }
        }
        //Creating inner window initial graph
        function snapshot(obj)
        {
        	if(g_select_device_ipc =="") return;
          	var profile_token_choice = get_profile_token_choice(),
        	    n, inner_window_obj = null,url;
        	//Get the picture url
                  if(g_now_page=="playback"&&g_domain_oems_vimtag&&obj.data){
    		    url = window.location.protocol+"//"+window.location.host+"/ccm/ccm_pic_get.js?dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+obj.pic_token.replace("_p3_","_p0_")+"&dflag=2"; 
    		  }else {
    		  url = window.location.protocol + "//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+profile_token_choice.profile_token_choice_value;
                  }
      	  if(obj.data){
      	     clearInterval(l_ipc_speed_time);
      	     l_play_ico_onclick=0;
      	  }
        	for(n in l_window_array_info){
        	   inner_window_obj = l_window_array_info[n].inner_obj;
        	   break;
        	}
        	inner_window_obj.ctrl({type:"set_img",url:obj.data?url:""});
        }
        function local_address(obj)
        {
              snapshot({type:"snapshot",data:0});
              if(l_play_ico_onclick)
              {
            	   is_snapshot=false;
            	   l_play_ico_onclick=0;
            	   snapshot({type:"snapshot",data:1});
            	   l_parent_callback({type:"adjust_play_button_state",data:{play_state:"stop"}});
              }
              else
              {
            	   l_play_ico_onclick=1;
            	   snapshot_broadcast();
            	   l_parent_callback({type:"adjust_play_button_state",data:{play_state:"play"}});
              }
        }
        function snapshot_broadcast()
        {
            var profile_token_choice = get_profile_token_choice();
            	if(l_play_ico_onclick){
            	   var urls,imgs_dom;
            	  	urls= window.location.protocol+"//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid="+acs.create_nid(acs.ctrl({type:"get_info"}))+"&dsess_sn="+g_select_device_ipc+"&dtoken="+profile_token_choice.profile_token_choice_value;
            	    if(mx("#snapshotImg")){
            	        mx("#snapshotImg").src=urls;
            	    }else{
            	     var  inner_window_obj = null;
            	        for(n in l_window_array_info)
        	            {
        		             inner_window_obj = l_window_array_info[n].inner_obj;
        	               break;
        	            }
        	            imgs_dom = inner_window_obj.ctrl({type:"add_ipc_div"});
            	        imgs_dom[s_innerHTML]=("<img style='width:100%;height:100%;' id='snapshotImg'   src='" + urls + "'/>");
            	    }
            	    if(g_network_environ=="private")
        	  	    {
        	  	        mx("#snapshotImg").onload=snapshot_broadcast;
            	         clearInterval(l_play_ico_count_down);
            	         l_play_ico_count_down=setTimeout(snapshot_broadcast,1000);
        	  	    }
        	  	    else
        	  	    {
        	  	        mx("#snapshotImg").onload=function(){
        	  	            l_play_ico_count_down=setTimeout(snapshot_broadcast,profile_token_choice.few_seconds);
        	  	        }
        	  	        mx("#snapshotImg").onerror=function(){
        	  	              l_play_ico_count_down=setTimeout(snapshot_broadcast,5000);
        	  	        }
        	  	    }
            	}
        }
        function update_sound_settings(obj)
        {
        	var window_info,video_chls;
            for(n in l_window_array_info)
        	{
        		window_info = l_window_array_info[n];
        		video_chls = window_info.video_chls;
        		break;
        	}
        	if(video_chls)
        	    window_info.mme.ctrl(video_chls,"speaker.mute",g_m_speaker_is_mute?"{value:1}":"{value:0}");
        }
        function create_mme(obj)
        {
            var panel,
                ua = navigator.userAgent.toLowerCase(),
                mme_params, url_params = (location.search || location.hash || ""), judge_enable_native_plug, judge_enable_flash_plug, server_ip_foreign;
            
            if((navigator.userAgent.toLowerCase().match(/chrome\/[\d.]+/gi)+"").replace(/[^0-9.]/ig,"")>"44"){
            	server_ip_foreign = 1;
            }else{
            	server_ip_foreign = 0;
            }
            if(mlocal_storage.get("remember_plug_info") == "2"){
            	 g_is_plug_load_refuse = 1;
               g_is_plug_load = 0;  
            } 
                     
            if((g_is_plug_load_refuse ==1 || g_play_flash_video == 1 || (g_is_plug_load == 0 && server_ip_foreign ==1)) && mlocal_storage.get("remember_plug_info") !== "1")
            {
            	 judge_enable_native_plug = false;
            	 judge_enable_flash_plug = true;
            }else{
            	 judge_enable_native_plug = true;
            	 judge_enable_flash_plug = false;
            }
            
            panel = obj.inner_window_info.inner_ipc_dom;
            panel.style.width = obj.inner_window_info.inner_ipc_dom.offsetWidth + "px";
            panel.style.height = obj.inner_window_info.inner_ipc_dom.offsetHeight + "px";

            if(g_inland_server_ip_ok){
                mme.prototype.types.install.codebase=navigator.platform == "MacIntel"?"http://61.147.109.92:7080/mme/npmme.pkg?0.140906.pkg":"http://61.147.109.92:7080/mme/mme.exe?0.140906.exe";
            }else{
                mme.prototype.types.install.codebase=navigator.platform == "MacIntel"?"http://209.133.212.170:7080/mme/npmme.pkg?0.140906.pkg":"http://209.133.212.170:7080/mme/mme.exe?0.140906.exe";
            }

            mme.prototype.types.flash.install_url="/mme/mme.swf?0.130715.swf";
            mme_params = {parent:panel, enable_native_plug:judge_enable_native_plug,enable_flash_plug:judge_enable_flash_plug, params:"{key:'data:application/octet-stream;base64,NGO/Mnqt7aXYO3hdsIe87bCTuqTRRSPMwJGuT26CuSedGTi2h7wroHY0IZObBPKYA/exp+e/efFj35sLiDKQpRfRFz8Th8zlYtrYki24JiN7vpGb2bUN9nY7quZ56SicUoqLd+KcCrvWheZ5NaE+slPpCg+F+hUdhNl4JXbVxzxY0uNV6ci7eEG44g4nf+TVB84SbVPllsSLhoQ4u6bGgiijR4s2A7HIDhEXTxEZIRjqSIH4QVUQUpkiIsQVwCm7gEXMGjvIhSv1CemWWX/C8HTPDxSWZgyVSXVVaPx/bEcSdcz/t6FKbx/crZ4xOry5PcdTd9zGMPxWo/2j2WrlWp9GEBP7LxJtzNjaJsiiJ+/Zk0N1B+jtt+LKsanue8D1gEC/fX9iBTO9yg2Mag9xi6Oa6IIi0uJJmpwFkWSNO3DLwBOS20l169dlCsZvpMOWVQUrz7rkm5MLntBoCaTZVB0JWLRJweq/oHr5BlhMjGXfreTc0+PNqclgby0WheG0x5icAcJlTrDa9lF5dg6ilyDFBbPSk5DGoztDPSgdfuquIJYmg9kflzcLfmpnrNN7TOeHsAL2+FcT+Gvq/sJSq8bH2Cifh8yokuLSpyz3+pDm2glZ9QCyRNed4bTaLkzJalUbjpz9c6ALLJxxAeADEq7agkVD9xcanDR0leLt1i8'}",
                on_event:function(e){on_plug_event(e)},
                ref_obj:obj,
                debug:(0 <= url_params.indexOf("debug=1"))};
            if(ua.match(/windows|win32/))
            {
                if(0 <= url_params.indexOf("windowless=0"))
                {
                    mme_params.windowless = false;
                }
                else if(0 <= url_params.indexOf("windowless=1"))
                {
                    mme_params.windowless = true;
                }
               /*else if(ua.match(/chrome\/([\d.]+)/))
                {
                    mme_params.windowless = false;
                }*/
            }
            obj.inner_window_info.mme = new mme(mme_params);
        }
        //Creating video
        function chl_video_create(obj)
        {
            var uri = obj.uri, chl_params = (obj.type == "publish")?"":",thread:\"istream\", jitter:{max:3000}"/* for old version's mme plugin */,
                trans_params = (obj.type == "play")?",trans:[{flow_ctrl:\"jitter\",thread:\"istream\"}]":
                                    ((obj.type == "playback")?",trans:[{flow_ctrl:\"delay\",thread:\"istream\"}]":"");
            obj.inner_window_info.video_chls = obj.inner_window_info.mme.chl_create({  
                params:(obj.type == "playback" && obj.isDownload)?
                	("{src:[{url:\"" + uri + "\"}], dst:[{url:\"file:\/\/"+obj.localPath+"\",thread:\"channel\"}],speaker:{mute:\"1\"},audio:{type:\"none\"},thread:\"channel\",canvas:\"none\"}}"):
                	("{" + ((obj.type == "publish")?"dst":"src") + ":[{url:\"" + uri + "\"}]" + trans_params + chl_params + "}")});
            if(obj.inner_window_info.video_chls !== null)
            {
                var inner_window_obj,string_speed,json_speed;
            	for(n in l_window_array_info)
        	    {
        		    inner_window_obj = l_window_array_info[n].inner_obj;
        		    l_window_array_info[n]=obj.inner_window_info;
        		    break;
        	    }
        	    var nini=obj.inner_window_info.mme.ctrl(obj.inner_window_info.video_chls,"speaker.mute",obj.type=="playback"?"{value:0}":g_m_speaker_is_mute?"{value:1}":"{value:0}");
                if((((obj.type=="play")||(obj.type=="playback"))&& obj.l_mask_setup_click != 1)&&(!g_domain_oems_vimtag || obj.type=="playback")) //Cancel baud rate display
                {
                	if(l_ipc_speed_time)
                	{
                		clearInterval(l_ipc_speed_time);
                	}
        	        l_ipc_speed_time = setInterval(function(){
        	          string_speed = obj.inner_window_info.mme.ctrl(obj.inner_window_info.video_chls,"query","{}");
        	          if(string_speed.length >= 150){
            	          json_speed=eval("(" + string_speed + ")");
            	          if(obj.isDownload&&json_speed.data.total_bytes)
                       	{
                       		 l_parent_callback({type:"playback_download_progress", current_progress:json_speed.data.played_duration/l_RecordingSize});
                       	}
            	          if(json_speed.data.total_bytes&&(!g_is_play_back_download)){
            	          	if(g_domain_oems_vimtag){
                              if(json_speed.data.buffering==0){
          	          		        l_parent_callback({type:"speed",speeds:json_speed.data.played_duration});
          	          		        /*Show the code stream when playing history video*/
          	          		        var kb=json_speed.data.p2ping?"kB":"KB";
          	          		        document.getElementById("show_video_buffer_rate").innerHTML = json_speed.data.total_bytes>l_vimtag_last_speed?parseInt((json_speed.data.total_bytes-l_vimtag_last_speed)/1000)+kb:l_vimtag_last_speed=0;
                                  l_vimtag_last_speed=json_speed.data.total_bytes;
                              }else{
                              	  /*Show the buffering percent when playing history video buffer*/
                                  document.getElementById("show_video_buffer_rate").innerHTML = json_speed.data.buffer_percent + "%"; 
                              } 
            	          	}else{
        	                   l_parent_callback({type:"speed",p2p:json_speed.data.p2ping,speeds:json_speed.data.total_bytes,speed:json_speed.data.played_duration});
        	                }
        	              }
        	          }
        	        },"1000");
                }

                if(g_now_page == "playback")
                {
                    obj.inner_window_info.playback_state = "play";
                    l_parent_callback({type:"play_playback_handle", data:{inner_window_info:obj.inner_window_info,isDownload:obj.isDownload}});
                }
                if(g_device_list_link.length == 1 || g_view_link.length == 1)
                    obj.inner_window_info.inner_obj.ctrl({type:"click_ex", data:{inner_window_info:obj.inner_window_info}});
            }
            if(obj.type=="playback")
            {
               setTimeout(function(){play_ipc(obj)},1000)
            }
        }
        //call
        function chl_audio_create(obj)
        {
            var uri = obj.uri, chl_params = "";
            obj.inner_window_info.audio_chls = obj.inner_window_info.mme.chl_create({
                params:("{src:[{url:'mic://0',type:'audio'}], dst:[{url:'" + uri + "'}]" + (("" != chl_params)?",":"") + chl_params + "}")});
        }
        function add_event()
        {
            var i, length, inner_windows;
            if(null == g_split_update)
            {
                g_split_update = function(obj)
                {
                    var count;
                    if(g_now_page == "home")
                    {
                        count = g_view_split_count;
                    }
                    else if(g_now_page == "playback")
                    {
                        count = g_playback_split_count;
                    }
                    while(count--)
                    {
                        l_window_array_info["inner_window" + count].inner_obj.ctrl({type:"destroy"});
                    }
                    l_me_parent[s_innerHTML] = "";
                    split_screen(obj);
                };
            }
            inner_windows = mx(".inner_windows");
            for(i = 0, length = inner_windows.length; i < length; ++i)
            {
                inner_windows[i].onclick = function()
				        {
                  if(g_now_page == "home")
                  {
                    if(!g_select_device_ipc)return;
                    if(g_is_playing)
                        return
                    else
                        l_parent_callback({type:"create_ipc", data:{node_sn:g_select_device_ipc}});
                  }
                }
            }
        }
        function remove_event()
        {
            var i, length, inner_windows = mx(".inner_windows");
            g_split_update = null;
            for(i = 0, length = inner_windows.length; i < length; ++i)
            {
                inner_windows[i].onmouseover = "";
                inner_windows[i].onmouseout = "";
                inner_windows[i].onclick = "";
            }
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "is_missing":
                	  {
                       on_plug_event({type:"missing"});
            	      	 break;
            	      }
            	  case "clearSpeed":
            	  	  {
            	  				if(l_ipc_speed_time)
			                	{
			                		clearInterval(l_ipc_speed_time);
			                	}
			                	break;
            	  	  }
                case "update_sound_settings":
           	        {
            	      	  update_sound_settings(obj);
            	      	  break;
            	      }
                case "snapshot":
            	      {
                        snapshot(obj);
            	  	      break;
            	  	  }
            	  case "showLargerImage":
            	  		{
            	  			  create_snapshot_preview_div({resolution_w:640, resolution_h:360, uri:obj.data});
            	  			  break;
            	  		}
                case "update":
                    {
                        var count;
                        //if(mx("#inner_windows_cont")) adjust_screen(obj);
                        adjust_screen(obj);
                        //According browser resizing player interface size
                        if(l_dom_bg_top) l_dom_bg_top.style.width = (l_me_parent.offsetWidth - 25*2) + "px";
                        if(l_dom_bg_center) l_dom_bg_center.style.width = l_me_parent.offsetWidth  + "px";
                        if(l_dom_bg_center) l_dom_bg_center.style.height = (l_me_parent.offsetHeight - 22 - 10) + "px";
                        if(l_dom_bg_bottom) l_dom_bg_bottom.style.width = (l_me_parent.offsetWidth - 25*2) + "px";
                        if(g_now_page == "home" || g_now_page == "timeline")
                        {
                            count = g_view_split_count;
                        }
                        else if(g_now_page == "playback")
                        {
                            count = g_playback_split_count;
                        }
                        while(count)
                        {
                            l_window_array_info["inner_window" + count--].inner_obj.ctrl(obj);
                        }
                        break;
                    }
                case "change_select_ipc"://Processing Change Device
                    {
                        change_select_ipc(obj.data);
                        break;
                    }
                case "add_home_ipc":
                    {
                        add_home_ipc(obj.data);
                        break;
                    }
                case "add_playback_ipc":
                    {
                        add_playback_ipc(obj.data);
                        break;
                    }
                case "remove_ipc":
                    {
                        remove_ipc(obj.data);
                        break;
                    }
                case "RecordingToken"://Playback item in the list to select Playback selected
                    {
                       l_RecordingToken = obj.data;
                       break;
                    }
                case "RecordingSize":
                    {
                    	l_RecordingSize = obj.data;
                    	break;
                    }
                case "add_playback":
                case "remove_playback":
                case "playback_list":
                    {
                    	  var n, inner_window_obj = null;
        	              for(n in l_window_array_info)
        	              {
        		               inner_window_obj = l_window_array_info[n].inner_obj;
        		               break;
        	              }
        	              inner_window_obj.ctrl(obj);
                    	  break;
                    }
                case "play_ipc":
                    {
                        return play_ipc(obj.data);
                        break;
                    }
                case "pause_ipc":
                    {
                        return pause_ipc(obj.data);
                        break;
                    }
                case "seek_ipc":
                    {
                        seek_ipc(obj.data);
                        break;
                    }
                case "relative_move"://Camera mobile
                    {
                       ms.send_msg("ptz_ctrl",{sn:g_select_device_ipc,x:obj.data.x,y:obj.data.y},obj.ref,function(msg,ref){
                       	 if(msg.result == ""){
                       	 	 if(ref.flag)
                       	     ref.flag = "ready";
                       	 }
                       });
                       break;
                    }
                case "playback_slider_is_ok":
                    {
                       ccm_media_get_request({type:"video", inner_window_info:obj.inner_window_info,localPath:obj.localPath,isDownload:obj.isDownload});
                       break;
                    }
                case "media_get":
                    {
                    	 ccm_media_get_request({type:"video",inner_window_info:obj.inner_window_info,l_mask_setup_click:obj.l_mask_setup_click});
                    	 break;
                    }
                case "get_snapshot_uri":
                    {
                        if(l_window_array_info["inner_window" + obj.data.inner_window_index])
                            create_snapshot_preview();
                        break;
                    }
                case "get_audio_output_stream_uri":
                    {
                        ccm_media_get_request({type:"audio", inner_window_info:obj.data.inner_window_info});
                        break;
                    }
                case "re_create_ipc":
                    {
                        remove_ipc({inner_window_info:obj.data.inner_window_info});
                        if(g_now_page == "home")
                        {
                            add_home_ipc({inner_window_info:obj.data.inner_window_info, node_sn:obj.data.node_sn});
                        }
                        else if(g_now_page == "playback")
                        {
                            add_playback_ipc({inner_window_info:obj.data.inner_window_info, node_sn:obj.data.node_sn});
                        }
                        break;
                    }
                case "get_inner_window_info":
                    {
                        return l_window_array_info["inner_window" + obj.data.index];
                    }
                case "destroy":
                    {
                        var count;
                        if(g_now_page == "home")
                        {
                            count = g_view_split_count;
                        }
                        else if(g_now_page == "playback")
                        {
                            count = g_playback_split_count;
                        }
                        while(count)
                        {
                            if(l_window_array_info["inner_window" + count].mme)
                                l_window_array_info["inner_window" + count].mme.destroy();
                            l_window_array_info["inner_window" + count].inner_obj.ctrl(obj);
                            --count;
                        }
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in view_page.");
            }
        }
        //Create Snapshot Preview
        function create_snapshot_preview()
        {
          if(!l_me_parent) return;
          //var url = window.location.protocol + "//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+get_profile_token_choice().profile_token_choice_value;
          ms.send_msg("pic_get", {sn:g_select_device_ipc, token:"p0"}, null, ccm_snapshot_pic);
          
          function ccm_snapshot_pic(msg, ref)
          {
              if(msg && msg.result == "")
              {
              	 if(mx("#snapshot_buffer")){
              	   jQuery("#snapshot_buffer").remove();
              	 }
                 create_snapshot_preview_div({resolution_w:640, resolution_h:360, uri:msg.url});  
              }else {
              	 if(mx("#snapshot_buffer")){
              	   jQuery("#snapshot_buffer").remove();
              	 }
              }
          }
          //create_snapshot_preview_div({resolution_w:640, resolution_h:360, uri:url});
        }
        function on_event(obj)
        {
            switch(obj.type)
            {
               case "play_button_onclick":
               case "playback_click":
                    {
                         l_parent_callback(obj);
                         break;
                    }
                case "chl_video_create":
                    {
                        chl_video_create(obj.data);
                        break;
                    }
                case "create_snapshot_preview_div":
                    {
                        create_snapshot_preview_div(obj.data);
                        break;
                    }
                case "create_mme":
                    {
                        create_mme(obj.data);
                        break;
                    }
                default:
                    log("error:on_event's obj.type is not exist in class_view_page.");
            }
        }
        if(!g_domain_oems_vimtag) create_view_page_bg();
        l_dom_inner_windows_cont = dom_create_child(l_me_parent, "div", "inner_windows_cont");
        split_screen(obj);
        add_event();
    }
    function class_inner_window(obj)
    {
        var l_me =  this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_info = obj.inner_window_info,
            l_dom_inner_window = dom_create_child(l_me_parent, "div", "inner_window" + l_info.index, "inner_window"),
            l_dom_inner_ipc,
            l_dom_broadcast,l_dom_playback,l_dom_playback_list_div, l_snapshot_image;

        l_dom_inner_window[s_style][s_cssText] = "width:" + l_me_parent.offsetWidth + "px;height:" + l_me_parent.offsetHeight + "px;";

        function add_ipc_div(obj)
        {
            if(l_dom_playback && l_dom_playback_list_div)
            {
               remove_playback_div();
            }
            l_dom_inner_ipc = dom_create_child(l_dom_inner_window, "div");
            l_dom_inner_ipc.style.width  = l_me_parent.offsetWidth + "px";
            l_dom_inner_ipc.style.height = l_me_parent.offsetHeight + "px";
            l_dom_inner_ipc.style.background = "black";
            return l_dom_inner_ipc;
        }
        function snapshot_renovate(obj)
        {
            l_dom_inner_window[s_innerHTML]="";
        	  snapshot_img_dom=dom_create_child(l_dom_inner_window, "div");
        	  snapshot_img_dom[s_style][s_cssText]="position: absolute;width:100%;height:100%;";
        	  snapshot_img_dom[s_innerHTML]="<img style='width:100%;height:100%;' id='imgs'  src='" + obj.url + "'/>"
        	  renovate_dom=dom_create_child(l_dom_inner_window, "div");
        	  renovate_dom[s_style][s_cssText]="position:absolute; width:20%;height:20%;   opacity:0.8;right:40%;top:40%;";
        	  background_img_set(renovate_dom, sub_img_renovate);
        	  renovate_dom.onclick=function()
        	  {
        	  	 this.style.opacity="0.3";
        	  	 renovate_dom.disabled=true;
        	     mx("#imgs").src=window.location.protocol+"//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid="+acs.create_nid(acs.ctrl({type:"get_info"}))+"&dsess_sn="+g_select_device_ipc+"&dtoken="+obj.profile_token_choice.profile_token_choice_value;

        	     setTimeout(function(){renovate_dom.disabled=false;renovate_dom[s_style].opacity=1},obj.profile_token_choice.few_seconds);
        	  }
        }
        //Create initial graph
        function snapshots(obj)
        {
       	   l_dom_inner_window[s_innerHTML]="";
           if(determine_the_version({type:"Basic",version:version_Category.Basic_version}))
           {
        	   return;
           }
           if(g_now_page=="playback"){
             var l_dom_download = dom_create_child(l_dom_inner_window,"div","video_download_buffer");
             l_dom_download[s_style][s_cssText]="cursor: pointer;position:absolute; left:0;top:0; width:100%;height:100%; background-color:#000000;opacity:0.5;filter:alpha(opacity=50);padding-top:23%;";
           }
           if(g_now_page!="playback"){
        	 l_dom_broadcast = dom_create_child(l_dom_inner_window, "div");
           l_dom_broadcast[s_style][s_cssText]="cursor: pointer;position:absolute; left:0;top:0; width:100%;height:100%; background-color:gray;opacity:0.5;filter:alpha(opacity=50);";
           if(g_domain_oems_vimtag){
           	   broadcast1 =dom_create_child(l_dom_inner_window, "div", "video_pause_pic");
        	     broadcast1[s_style][s_cssText]="cursor: pointer;position:absolute;  opacity:0.5; filter:alpha(opacity=50);  left:45%;top:40%;background:url(/oem/testvimtag/imgs/mipc_img.png) no-repeat -15px -273px;width:80px;height:80px;";
        	     broadcast2 =dom_create_child(l_dom_inner_window, "div", "play_pause_pic");
        	     broadcast2[s_style][s_cssText]="cursor: pointer;position:absolute;  opacity:0;filter:alpha(opacity=0);  text-align:center;  left:45%;top:40%;background:url(/oem/testvimtag/imgs/mipc_img.png) no-repeat -15px -273px;width:80px;height:80px;";
           }else{
           	   broadcast1 =dom_create_child(l_dom_inner_window, "div");
        	     broadcast1[s_style][s_cssText]="cursor: pointer;position:absolute;  opacity:0.5; filter:alpha(opacity=50);  left:45%;top:40%;";
        	     background_img_set(broadcast1, sub_img_broadcast2);
        	     broadcast2 =dom_create_child(l_dom_inner_window, "div");
        	     broadcast2[s_style][s_cssText]="cursor: pointer;position:absolute;  opacity:0;filter:alpha(opacity=0);  text-align:center;  left:45%;top:40%;";
               background_img_set(broadcast2, sub_img_broadcast1); 
             }
           }        	 
           if(obj.url){
               snapshot=dom_create_child(l_dom_inner_window,"div");
               l_snapshot_image= new Image();
               l_snapshot_image.src=obj.url;
               l_snapshot_image.style.width=l_me_parent.offsetWidth+"px";
               l_snapshot_image.style.height=l_me_parent.offsetHeight+"px";
               if(l_snapshot_image.complete){
                  snapshot.appendChild(l_snapshot_image);
               }else{
                  l_snapshot_image.onload = function(){
                     snapshot.appendChild(l_snapshot_image);
                  };
                  l_snapshot_image.onerror = function(){
                     snapshot[s_innerHTML]="";
                  };
               }
           }else{
             l_dom_inner_window[s_innerHTML] ="";
           }
           if(g_now_page!="playback"){
           broadcast2.onmouseover=function(){
             broadcast2[s_style].opacity=1;
             broadcast2.style.filter ="alpha(opacity='100')";
           }
           broadcast2.onmouseout=function(){
             broadcast2[s_style].opacity=0;
             broadcast2.style.filter ="alpha(opacity='0')";
           }
        }
        }
        function remove_ipc_div(obj)
        {
            if(!l_dom_playback && !l_dom_playback_list_div&&!obj.isDownload)
              l_dom_inner_window[s_innerHTML]="";
        }
        //Clear playback
        function remove_playback_div(obj)
        {
            if(l_dom_playback && l_dom_playback_list_div)
            {
               l_dom_inner_window[s_removeChild](l_dom_playback);
               l_dom_playback="";
            }
        }
        function add_playback_list(obj)
        {
            if(!l_dom_playback)
            {
               l_dom_inner_window[s_innerHTML]="";
        	   l_dom_playback = dom_create_child(l_dom_inner_window, "div","playback_list");
        	   playback_list[s_style][s_cssText]="width:100%;height:"+l_dom_inner_window.offsetHeight+"px;margin:0 auto;";
        	   l_dom_playback_list_div=dom_create_child(l_dom_playback, "div","playback_list_div");
        	   jQuery(playback_list).mCustomScrollbar();
        	}
             for(ptr=obj.data.get_first(); ptr; ptr = ptr.next)
             {
        	    	if(!ptr.data.params)
        	    	   continue;
        	    	 playback_list_li = dom_create_child(l_dom_playback_list_div, "div","playback_li"+ptr.data.msg_id,"playback_li");
        	    	 playback_list_li[s_style][s_cssText]="width:22.5%;height:"+(l_dom_inner_window.offsetHeight*0.295)+"px; margin:1%;float:left; border:1px solid white;";

        	    	 image = new Image();
        	    	 for(j=0;j<ptr.data.params.length;j++){
        	    	    if(ptr.data.params[j].name=="img_thumb_token" &&  ptr.data.params[j].value!="")
        	    	    {
        	    	        image.src=window.location.protocol+"//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid="+acs.create_nid(acs.ctrl({type:"get_info"}))+"&dsess_sn="+g_select_device_ipc+"&dtoken="+ptr.data.params[j].value;
        	    	    }
        	    	 }
        	    	 image[s_style][s_cssText]="width:100%;height:100%;";
        	    	 jQuery(playback_list_li).append(image);

             }
              playback_li=mx(".playback_li");
        	    for(i = 0;i < playback_li.length; ++i)
        	    {
        	        playback_li[i].onclick=function(){
        	            for(j = 0 ; j < playback_li.length; ++j)
                        {
                            playback_li[j][s_style].borderColor="#eaeaea";
                        }
                        this.style.borderColor="rgb(128, 165, 45)";
        	           l_parent_callback({type:"playback_click",id:this.id});
        	        }
        	    }
             jQuery(playback_list).mCustomScrollbar("update");
             return;
        }
        function add_event()
        {   //Player interface click event
            l_dom_inner_window.onclick = function() {
            	 //Home Click to play interface events will respond, playback interface also displays the corresponding interface does not know how
               if(g_select_device_ipc && g_now_page == "home" && l_info.dom_id){ 
               	   if(g_domain_oems_vimtag)
               	   {//When entering the playback screen display control interface
               	   	  jQuery("#vimtag_ptz_control").show();
               	   	  jQuery("#video_play_stop").attr("src","/imgs/pause.png")
               	   }  
                   g_select_inner_window = l_info.dom_id;
                   g_select_inner_ipc = l_info.node_sn;
               }
            }
            l_dom_inner_window.click_ex = function(obj) {
                if(g_select_inner_window != l_info.dom_id){
                    g_select_inner_window = l_info.dom_id;
                    g_select_inner_ipc = l_info.node_sn;
                }
            }
        }
        function remove_event()
        {
            l_dom_inner_window.onclick = "";
            l_dom_inner_window.click_ex = "";
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_dom_inner_window.style.width = g_main_window_w + "px";
                        l_dom_inner_window.style.height = g_main_window_h + "px";
                        if(l_snapshot_image)
                        {
                           l_snapshot_image.style.width=l_me_parent.offsetWidth+"px";
                           l_snapshot_image.style.height=l_me_parent.offsetHeight+"px";
                        }
                        if(l_dom_inner_ipc)
                        {
                            l_dom_inner_ipc.style.width = l_dom_inner_window.offsetWidth + "px";
                            l_dom_inner_ipc.style.height = l_dom_inner_window.offsetHeight + "px";
                        }
                        if(l_dom_playback)
                        {
                            l_dom_playback[s_style][s_cssText]="width:100%;height:"+l_dom_inner_window.offsetHeight+"px;margin:0 auto;";
                            jQuery(".playback_li").css({"width":"22.5%","height":""+(l_dom_inner_window.offsetHeight*0.295)+"px"});
                            jQuery(playback_list).mCustomScrollbar("update");
                        }
                        break;
                    }
                case "add_ipc_div":
                    {
                        return add_ipc_div();
                    }
                case "remove_ipc_div":
                    {
                        remove_ipc_div(obj);
                        break;
                    }
                case "set_img":
                    {
                         snapshots(obj);
                      	 break;
                    }
                case "playback_list":
                    {
                    	playback_lists(obj);
                        break;
                    }
                case "add_playback":
                    {
                        add_playback_list(obj);
                        break;
                    }
                case "remove_playback":
                    {
                        remove_playback_div(obj);
                        break;
                    }
                case "remove_playback_list":
                    {
                    	l_dom_inner_window[s_innerHTML]="";
                        break;
                    }
                case "click_ex":
                    {
                        l_dom_inner_window.click_ex(obj.data);
                        break;
                    }
                case "snapshot_renovate":
                    {
                    	 snapshot_renovate(obj);
                        break;
                    }
                case "RecordingSize":
                    {
                        RecordingSize=obj.data;
                           break;
                    }
                case "destroy":
                    {
                        if(l_dom_inner_ipc)
                            remove_ipc_div();
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_inner_window.");
            }
        }
        add_event();
    }
    function class_ptz_control_box(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_mark = {flag:"ready"},
            l_interval, l_flag = "stop",
            l_left_interval,
            l_up_interval,
            l_right_interval,
            l_down_interval,
            l_move_dist = 12,//Camera movement distance
            ptz_speed=30,
            l_recording = 0,//It indicates whether you are recording
            l_calling = 0,
            l_getsysteminfo=false,//Whether the device is to obtain information and change the display to control whether to set cam
            timer,//cam set timer
            time,//control_menu timer
            l_dom_ptz_control_panel,
            l_dom_ptz_control_arrow,
            l_dom_ptz_control_inner,
            l_dom_ptz_control_header,
            l_dom_ptz_control_body,
            l_dom_ptz_control_footer,
            l_dom_ptz_control,
            l_dom_select_mode,
            l_dom_select_power,
            l_dom_checkbox_equipment_flip,
            l_dom_recover_button,
            l_dom_store_point_button,
            l_dom_clear_point_button,
            l_points = new Array(8),
            l_point_now = 0,
            l_dom_vimtag_ptz_control,
            l_dom_ptz_control_left,
            l_dom_ptz_control_up,
            l_dom_ptz_control_right,
            l_dom_ptz_control_down,
            l_dom_ptz_click_left,
            l_dom_ptz_click_up,
            l_dom_ptz_click_right,
            l_dom_ptz_click_down,
            l_dom_ptz_control_center,
            l_dom_ptz_control_bottom,
            l_dom_ptz_control_bottom_center,
            l_dom_control_menu,
            l_dom_video_off_pic,
            l_dom_camera_off_pic,
            l_dom_talkback_off_pic,
            l_dom_adjust_off_pic,
            l_dom_turn_up,
			      l_dom_turn_right,
			      l_dom_turn_down,
			      l_dom_turn_left,
			      l_dom_mode_night,
			      l_dom_mode_daytime,
			      l_dom_mode_auto,
			      l_dom_adjust_mode_night,
			      l_dom_adjust_mode_daytime,
			      l_dom_adjust_mode_auto,
			      l_dom_adjust_reset,
			      l_cam_conf_reset = [6,70,60,50],
			      l_adjust = 0,
			      l_dom_delete_adjust_page,
			      l_dom_adjust_setting;

        if(g_domain_oems_vimtag)
        {
			      l_me_parent[s_innerHTML] =
			          "<div id='vimtag_ptz_control'>"
			          +       "<div id='ptz_control_left'>"
			          +          "<div id='turn_left' class='left_key'></div>"
			          +          "<div id='ptz_click_left'>" + mcs_top_left + "</div>"
			          +       "</div>"
			          +       "<div id='ptz_control_center'>"
			          +          "<div id='ptz_control_up'>"
			          +             "<div id='turn_up' class='up_key'></div>"
			          +             "<div id='ptz_click_up'>" + mcs_bottom_left + "</div>"
			          +          "</div>"
			          +          "<div id='ptz_control_bottom'>"
			          +             "<div id='ptz_control_bottom_center'>"
			          +             "</div>"
			          +             "<div id='control_menu'>"
			          +                "<div id='video_off_pic' class='video_off_picture' style='float:left;margin-left:44px;'></div>"
			          +                "<div id='camera_off_pic' class='camera_off_picture' style='float:left;margin-left:44px;'></div>"
			          +                "<div id='talkback_off_pic' class='talkback_off_picture' style='float:left;margin-left:44px;'></div>"
			          +                "<div id='adjust_off_pic' class='adjust_off_picture' style='float:left;margin-left:44px;'></div>"
			          +             "</div>"
			          +          "</div>"
			          +          "<div id='ptz_control_down'>"
			          +             "<div id='turn_down' class='down_key'></div>"
			          +             "<div id='ptz_click_down'>"+mcs_bottom_right+"</div>"
			          +          "</div>"
			          +       "</div>"
			          +       "<div id='ptz_control_right'>"
			          +          "<div id='turn_right' class='right_key'></div>"
			          +          "<div id='ptz_click_right'>"+mcs_top_right+"</div>"
			          +       "</div>"
			          +       "<div id='adjust_setting'>"
			          +          "<div class='adjust_line'>"
			          +             "<div id='delete_adjust_page' class='delete_adjust_page' style='float:right;margin-top:12px;'></div>"
			          +          "</div>"
			          +          "<div class='adjust_line'>"
			          +             "<div class='adjust_cha'>" + mcs_mode + "</div>"
                +             "<div style='width:70px;height:40px;float:right;'>"	
			          +                "<div id='adjust_mode_night' class='mode_cha'>"+ mcs_night +"</div>"	          
			          +                "<div id='mode_night' class='adjust_mode_circle'></div>"			          
			          +             "</div>"
			          +             "<div style='width:70px;height:40px;float:right;'>"
			          +                "<div id='adjust_mode_daytime' class='mode_cha'>"+ mcs_daytime +"</div>"
			          +                "<div id='mode_daytime' class='adjust_mode_circle'></div>"			          	
			          +             "</div>"			          
			          +             "<div style='width:70px;height:40px;float:right;'>"
			          +                "<div id='adjust_mode_auto' class='mode_cha'>"+ mcs_auto +"</div>"
			          +                "<div id='mode_auto' class='adjust_mode_circle'></div>"			          
			          +             "</div>"
			          +          "</div>"
			          +          "<div class='adjust_line'>"
			          +             "<div class='adjust_cha'>" + mcs_sharpness + "</div>"
			          +             "<div style='width:187px;float:right;'>"
			          +                "<div id='brightness_value' class='adjust_show_value'></div>"
			          +                "<div class = 'adjust_out_box'>"
                +                   "<div class = 'adjust_in_box'></div>"
                +                   "<div class = 'adjust_circle' style='margin-top:-5px;'></div>"
                +                "</div>"
                +             "</div>"
			          +          "</div>"
			          +          "<div class='adjust_line'>"
			          +             "<div class='adjust_cha'>" + mcs_contrast + "</div>"
			          +             "<div style='width:187px;float:right;'>"
			          +                "<div id='contrast_value' class='adjust_show_value'></div>"
			          +                "<div class = 'adjust_out_box'>"
                +                   "<div class = 'adjust_in_box'></div>"
                +                   "<div class = 'adjust_circle' style='margin-top:-5px;'></div>"
                +                "</div>"
                +             "</div>"
			          +          "</div>"
			          +          "<div class='adjust_line'>"
			          +             "<div class='adjust_cha'>" + mcs_color_saturation + "</div>"
			          +             "<div style='width:187px;float:right;'>"
			          +                "<div id='saturation_value' class='adjust_show_value'></div>"
			          +                "<div class = 'adjust_out_box'>"
                +                   "<div class = 'adjust_in_box'></div>"
                +                   "<div class = 'adjust_circle' style='margin-top:-5px;'></div>"
                +                "</div>"
                +             "</div>"
			          +          "</div>"
			          +          "<div class='adjust_line'>"
			          +             "<div class='adjust_cha'>" + mcs_brightness + "</div>"
			          +             "<div style='width:187px;float:right;'>"
			          +                "<div id='sharpness_value' class='adjust_show_value'></div>"
			          +                "<div class = 'adjust_out_box'>"
                +                   "<div class = 'adjust_in_box'></div>"
                +                   "<div class = 'adjust_circle' style='margin-top:-5px;'></div>"
                +                "</div>"
                +             "</div>"
			          +          "</div>"
			          +          "<div id='adjust_reset'>"+ mcs_reset +"</div>"
			          +       "</div>"
			          +"</div>";

			      l_dom_vimtag_ptz_control = mx("#vimtag_ptz_control");
			      l_dom_ptz_control_left = mx("#ptz_control_left");
			      l_dom_ptz_control_up = mx("#ptz_control_up");
			      l_dom_ptz_control_right = mx("#ptz_control_right");
			      l_dom_ptz_control_down = mx("#ptz_control_down");
			      l_dom_ptz_click_left = mx("#ptz_click_left");
			      l_dom_ptz_click_up = mx("#ptz_click_up");
			      l_dom_ptz_click_right = mx("#ptz_click_right");
			      l_dom_ptz_click_down = mx("#ptz_click_down");
			      l_dom_ptz_control_center = mx("#ptz_control_center");
			      l_dom_ptz_control_bottom = mx("#ptz_control_bottom");
			      l_dom_ptz_control_bottom_center = mx("#ptz_control_bottom_center");
			      l_dom_control_menu = mx("#control_menu");
			      l_dom_video_off_pic = mx("#video_off_pic");
			      l_dom_camera_off_pic = mx("#camera_off_pic");
			      l_dom_talkback_off_pic = mx("#talkback_off_pic");
			      l_dom_adjust_off_pic = mx("#adjust_off_pic");
			      l_dom_turn_up = mx("#turn_up");
			      l_dom_turn_right = mx("#turn_right");
			      l_dom_turn_down = mx("#turn_down");
			      l_dom_turn_left = mx("#turn_left");
			      l_dom_mode_night = mx("#mode_night");
			      l_dom_mode_daytime = mx("#mode_daytime");
			      l_dom_mode_auto = mx("#mode_auto");
			      l_dom_adjust_mode_night = mx("#adjust_mode_night");
			      l_dom_adjust_mode_daytime = mx("#adjust_mode_daytime");
			      l_dom_adjust_mode_auto = mx("#adjust_mode_auto");
			      l_dom_adjust_reset = mx("#adjust_reset");
			      l_dom_adjust_setting = mx("#adjust_setting");
			      l_dom_delete_adjust_page = mx("#delete_adjust_page");
            //隐藏亮度、对比度、锐度等的设置
            jQuery("#adjust_setting").hide();
            
			      var width = l_me_parent.offsetParent.clientWidth, height = l_me_parent.offsetParent.clientHeight;
			      l_dom_ptz_control_left[s_style][s_cssText] = "width:" + width*0.15 + "px;height:" + height + "px;float:left;text-align:center;line-height:" + height + "px;font-size:16px;color:#ffffff";
			      l_dom_ptz_control_center[s_style][s_cssText] = "width:" + width*0.7 + "px;height:" + height + "px;float:left;";
			      l_dom_ptz_control_up[s_style][s_cssText] = "width:" + width*0.7 + "px;height:" + height*0.15 + "px;text-align:center;line-height:" + height*0.15 + "px;font-size:16px;color:#ffffff";
			      l_dom_ptz_control_bottom[s_style][s_cssText] = "width:" + width*0.7 + "px;height:" + height*0.7 + "px;";
			      l_dom_ptz_control_bottom_center[s_style][s_cssText] = "width:" + width*0.7 + "px;height:" + (height*0.7-59) + "px;";
			      l_dom_ptz_control_down[s_style][s_cssText] = "width:" + width*0.7 + "px;height:" + height*0.15 + "px;text-align:center;line-height:" + height*0.15 + "px;font-size:16px;color:#ffffff";
            l_dom_ptz_control_right[s_style][s_cssText] = "width:" + width*0.15 + "px;height:" + height + "px;float:left;text-align:center;line-height:" + height + "px;font-size:16px;color:#ffffff";
            l_dom_control_menu[s_style][s_cssText] = "width:420px;height:59px;position:absolute;margin-left:" + ((width*0.7-420)/2-22) + "px;";
            l_dom_turn_up[s_style][s_cssText] = "margin-left:" + (width*0.7-65)/2 + "px;position:absolute;";
            l_dom_turn_right[s_style][s_cssText] = "margin-top:" + (height-65)/2 + "px;position:absolute;right:0px;";
            l_dom_turn_down[s_style][s_cssText] = "margin-left:" + (width*0.7-65)/2 + "px;position:absolute;bottom:0px;";
            l_dom_turn_left[s_style][s_cssText] = "margin-top:" + (height-65)/2 + "px;position:absolute;";

            jQuery("#turn_up").hide();
            jQuery("#turn_right").hide();
            jQuery("#turn_down").hide();
            jQuery("#turn_left").hide();
            jQuery("#ptz_click_left").hide();
            jQuery("#ptz_click_up").hide();
            jQuery("#ptz_click_down").hide();
            jQuery("#ptz_click_right").hide();
            l_dom_mode_night.onclick=function(){
                l_dom_adjust_mode_night.click();
            }
            l_dom_mode_auto.onclick=function(){
                l_dom_adjust_mode_auto.click();
            }
            l_dom_mode_daytime.onclick=function(){
                l_dom_adjust_mode_daytime.click();
            }
		        function adjust_recording_button_state(obj)
		        {
		            if(obj.recording_state == "recording")
		            {
		                l_dom_video_off_pic.className = "video_on_picture";
		            }
		            else if(obj.recording_state == "normal")
		            {
		                l_dom_video_off_pic.className = "video_off_picture";
		            }
		        }

		        function record_ack(msg,ref)
		        {
		           if(msg && msg.sd_ready == 0)
		           {
		               msg_tips({msg:mcs_sdcard_not_ready, type:"error", timeout:3000});
		           }else if(msg && msg.result==""){
		           	  if(l_recording == 0)
		               {
		                  l_recording = 1;
		                  adjust_recording_button_state({recording_state:"recording"});
		               }
		               else
		               {
		                  l_recording = 0;
		                  adjust_recording_button_state({recording_state:"normal"});
		               }
		           }
               else if(msg.result == "permission.denied")
               {
                   msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
               }
		        }

		        function ptz_turn_left()
		        {
		        	  if(l_flag == "stop")
	              {
		               	 l_parent_callback({type:"relative_move",data:{x:-1,y:0},ref:l_mark});
	              }
	              else
	              {
	                  if(l_left_interval)
	                  {
	                      clearInterval(l_left_interval);
	                      l_mark.flag = "ready";
	                  }
			              l_parent_callback({type:"relative_move",data:{x:-l_move_dist,y:0},ref:l_mark});
	                  l_left_interval = setInterval(function(){
	                    if(l_mark.flag == "ready")
	                    {
	                      l_mark.flag = "move";
				                l_parent_callback({type:"relative_move",data:{x:-l_move_dist,y:0},ref:l_mark});
	                    }
	                  }, 400);
	              }
		        }

		        function ptz_turn_up()
		        {
		        	  if(l_flag == "stop")
                {
		                l_parent_callback({type:"relative_move",data:{x:0,y:1},ref:l_mark});
                }
                else
                {
                    if(l_up_interval)
                    {
                        l_mark.flag = "ready";
                        clearInterval(l_up_interval);
                    }
			              l_parent_callback({type:"relative_move",data:{x:0,y:l_move_dist},ref:l_mark});
                    l_up_interval = setInterval(function(){
                      if(l_mark.flag == "ready")
                      {
                        l_mark.flag = "move";
                      }
                    }, 400);
                }
		        }

		        function ptz_turn_right()
		        {
		        	  if(l_flag == "stop")
                {
	    	           l_parent_callback({type:"relative_move",data:{x:1,y:0},ref:l_mark});
                }
                else
                {
                    if(l_right_interval)
                    {
                        l_mark.flag = "ready";
                        clearInterval(l_right_interval);
                    }
			              l_parent_callback({type:"relative_move",data:{x:l_move_dist,y:0},ref:l_mark});
                    l_right_interval = setInterval(function(){
                    if(l_mark.flag == "ready")
                    {
                        l_mark.flag = "move";
				                l_parent_callback({type:"relative_move",data:{x:l_move_dist,y:0},ref:l_mark});
                    }}, 400);
                }
		        }

		        function ptz_turn_down()
		        {
		        	  if(l_flag == "stop")
                {
		              l_parent_callback({type:"relative_move",data:{x:0,y:-1},ref:l_mark});
                }
                else
                {
                    if(l_down_interval)
                    {
                        l_mark.flag = "ready";
                        clearInterval(l_down_interval);
                    }
		                l_parent_callback({type:"relative_move",data:{x:0,y:-l_move_dist},ref:l_mark});
                    l_down_interval = setInterval(function(){
                      if(l_mark.flag == "ready")
                      {
                        l_mark.flag = "move";
		                    l_parent_callback({type:"relative_move",data:{x:0,y:-l_move_dist},ref:l_mark});
                    }}, 400);
                }
		        }
		        
		        function change_cam_mode(obj)
            {
                l_dom_mode_auto.style.background = "#ffffff";
                l_dom_mode_daytime.style.background = "#ffffff";
                l_dom_mode_night.style.background = "#ffffff";
								switch(obj)
								{
									 case "auto":
									   {
									      l_dom_mode_auto.style.background = "#00a6ba";
									      break;
									   }
									 case "day":
									   {
									   	  l_dom_mode_daytime.style.background = "#00a6ba";
									   	  break;
									   }
									 case "night":
									   {
									   	  l_dom_mode_night.style.background = "#00a6ba";
									   	  break;
									   }
									 default:
									   l_dom_mode_auto.style.background = "#00a6ba";
								}
            }
            
            l_dom_ptz_control_bottom_center.onclick = function(){
		            if(jQuery("#control_menu").is(":hidden"))
		            {
		               jQuery("#control_menu").show();
		               time = setTimeout(function(){jQuery("#control_menu").hide()},5000);
		            }
		            else
		            {
		            	 jQuery("#control_menu").hide();
		            }
            };
            //Video button click event
            l_dom_video_off_pic.onclick = function(){
            	  clearTimeout(time);
                if(g_select_device_ipc)
                {
                   if(l_recording == 0){
                     ms.send_msg("record",{sn:g_select_device_ipc,keep_time:60000},null,record_ack);
                   }else{
                   	 ms.send_msg("record",{sn:g_select_device_ipc,keep_time:-1},null,record_ack);
                   }
                }
            };
            //Camera button click event
            l_dom_camera_off_pic.onclick = function(){
                clearTimeout(time);
                if(g_select_device_ipc)
                {
                	 if(!mx("#snapshot_buffer")){
                	   jQuery("#ptz_control_bottom_center").append("<div id='snapshot_buffer'><img src='/imgs/snapshot.gif' style='margin-top:30%;'></div>");
                   }
                   l_parent_callback({type:"get_snapshot_uri", data:{inner_window_index:1}});
                }
            };
            //Intercom button click event
            l_dom_talkback_off_pic.onclick = function(){
                //l_dom_talkback_off_pic.className = "talkback_on_picture";
                clearTimeout(time);
                if(g_select_inner_ipc&&g_select_inner_window != "none")
                {
                    var inner_window_index = g_select_inner_window.substr(g_select_inner_window.length - 1, 1);
                    l_parent_callback({type:"call_button_clicked", data:{inner_window_index:inner_window_index}});
                }
            };
            //Brightness, contrast, sharpness, saturation adjustment
            var dom_left = jQuery(".left_button")[0],dom_center = jQuery(".center_button")[0],dom_right = jQuery(".right_button")[0],
                dom_out_box = jQuery(".adjust_out_box"),dom_in_box = jQuery(".adjust_in_box"),outX,values_flag = [false,false,false,false],
                dom_circle = jQuery(".adjust_circle"),left,top,mouseX,l_cam_conf, i,evt,dom_value = jQuery(".adjust_show_value");
            dom_out_box.mousedown(function(e)
            {
                for(i = 0;i<4;i++)
                {
                    if(this == dom_out_box[i])
                    {
                        values_flag[i] = true;
                        break;
                    }
                }
                evt = window.event || e;
                outX = this.offsetLeft;
                mouseX = evt.clientX-getLeft(jQuery("#adjust_setting")[0]);
                var value = mouseX-outX;
                if(value>160)
                {
                    dom_in_box[i].style.width = "160px";
                    dom_circle[i].style.left = outX+160+"px";
                }
                else if(value <= 0)
                {
                    dom_in_box[i].style.width = "0";
                    dom_circle[i].style.left = outX+"px";
                }
                else
                {
                    dom_in_box[i].style.width = value+"px";
                    dom_circle[i].style.left = mouseX+"px";
                }
                dom_value[i].style.display = "block";
                dom_value[i].innerHTML = parseInt(dom_in_box[i].offsetWidth/1.6);
            });

            document.onmousemove = (function(e)
            {
                evt = window.event||e;
                if(values_flag[0]||values_flag[1]||values_flag[2]||values_flag[3])
                {
                    mouseX = evt.clientX-getLeft(jQuery("#adjust_setting")[0]);
                    var value = mouseX-outX;
                    if(value>160)
                    {
                        dom_in_box[i].style.width = "160px";
                        dom_circle[i].style.left = outX+160+"px";
                    }
                    else if(value <= 0)
                    {
                        dom_in_box[i].style.width = "0";
                        dom_circle[i].style.left = outX+"px";
                    }
                    else
                    {
                        dom_in_box[i].style.width = value+"px";
                        dom_circle[i].style.left = mouseX+"px";
                    }
                    dom_value[i].innerHTML = parseInt(dom_in_box[i].offsetWidth/1.59);
                }
            });

            document.onmouseup = (function(e)
            {
                if(values_flag[0]||values_flag[1]||values_flag[2]||values_flag[3])
                {
                    l_cam_conf.sharpness = parseInt(dom_in_box[0].offsetWidth/1.59);                   
                    l_cam_conf.contrast = parseInt(dom_in_box[1].offsetWidth/1.59);
                    l_cam_conf.color_saturation = parseInt(dom_in_box[2].offsetWidth/1.59);
                    l_cam_conf.brightness = parseInt(dom_in_box[3].offsetWidth/1.59);
                    mcloud_agent.cam_set(l_cam_conf,null,function(msg,ref)
                    {
                    	  if(msg.result == "permission.denied")
					            	{
					            	 	  msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
					            	}
                        else if(msg.result!= "")
                        {
                        	  msg_tips({msg:msg.result, type:"error", timeout:3000});
                        }
                    });
                    values_flag = [false,false,false,false];
                }
            });
            
            l_dom_adjust_off_pic.onclick = function(){
            	  if(!l_adjust)
            	  {
            	  	  l_adjust = 1;
            	  	  l_dom_adjust_off_pic.className = "adjust_on_picture";
		            	  jQuery("#adjust_setting").show();
				            mcloud_agent.cam_get({sn:g_select_device_ipc},null,function(msg,ref)
				            {
				                if(msg.result == "")
				                {
				                    l_cam_conf = msg;
				                    l_cam_conf.sn = g_select_device_ipc;
				                    dom_in_box[0].style.width = parseInt(l_cam_conf.sharpness*1.59)+"px";
				                    dom_in_box[1].style.width = parseInt(l_cam_conf.color_saturation*1.59)+"px";
				                    dom_in_box[2].style.width = parseInt(l_cam_conf.contrast*1.59)+"px";
				                    dom_in_box[3].style.width = parseInt(l_cam_conf.brightness*1.59)+"px";
				                    
				                    dom_value[3].innerHTML = parseInt(l_cam_conf.brightness);
				                    dom_value[2].innerHTML = parseInt(l_cam_conf.contrast);
				                    dom_value[1].innerHTML = parseInt(l_cam_conf.color_saturation);
				                    dom_value[0].innerHTML = parseInt(l_cam_conf.sharpness);
				                    for(var j = 0;j<4;j++)
				                    {
				                        dom_circle[j].style.left = dom_out_box[j].offsetLeft+dom_in_box[j].offsetWidth+"px";
				                        dom_circle[j].style.top = dom_out_box[j].offsetTop+"px";
				                    }
				                    change_cam_mode(l_cam_conf.day_night);
				                }
						            else if(msg.result == "permission.denied")
					            	{
					            	 	  msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
					            	}
				                else
				                {   
				                	  msg_tips({msg:msg.result, type:"error", timeout:3000});
				                }
				            });
		            }
		            else
		            {
		            	  l_adjust = 0;
		            	  l_dom_adjust_off_pic.className = "adjust_off_picture";
		            	  jQuery("#adjust_setting").hide();
		            }
            }
            
            l_dom_delete_adjust_page.onclick = function()
            { 
            	  l_adjust = 0;
            	  jQuery("#adjust_setting").hide();
            	  l_dom_adjust_off_pic.className = "adjust_off_picture";
            }
            
            l_dom_adjust_mode_auto.onclick = function()
            {
                change_cam_mode("auto");
                l_cam_conf.day_night = "auto";
                l_cam_conf.sn = g_select_device_ipc;
                mcloud_agent.cam_set(l_cam_conf,null,function(msg,ref)
                {
                	  if(msg.result == "permission.denied")
			            	{
			            	 	  msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
			            	}
                    else if(msg.result!= "")
                    {
                    	  msg_tips({msg:msg.result, type:"error", timeout:3000});
                    }
                    else
                    {
                    	  msg_tips({msg:mcs_set_successfully, type:"success", timeout:3000});
                    }
                });
            };

            l_dom_adjust_mode_daytime.onclick = function()
            {
                change_cam_mode("day");
                l_cam_conf.day_night = "day";
                mcloud_agent.cam_set(l_cam_conf,null,function(msg,ref)
                {
                	  if(msg.result == "permission.denied")
			            	{
			            	 	  msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
			            	}
                    else if(msg.result!= "")
                    {
                    	  msg_tips({msg:msg.result, type:"error", timeout:3000});
                    }
                    else
                    {
                    	  msg_tips({msg:mcs_set_successfully, type:"success", timeout:3000});
                    }
                });
            };

            l_dom_adjust_mode_night.onclick = function()
            {
                change_cam_mode("night");
                l_cam_conf.day_night = "night";
                l_cam_conf.sn = g_select_device_ipc;
                mcloud_agent.cam_set(l_cam_conf,null,function(msg,ref)
                {
                	  if(msg.result == "permission.denied")
			            	{
			            	 	  msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
			            	}
                    else if(msg.result!= "")
                    {
                    	  msg_tips({msg:msg.result, type:"error", timeout:3000});
                    }
                    else
                    {
                    	  msg_tips({msg:mcs_set_successfully, type:"success", timeout:3000});
                    }
                });
            };
            //Click Reset after the event
            l_dom_adjust_reset.onclick = function(){
                for(var i = 0;i<4;i++)
                {
                    dom_in_box[i].style.width = l_cam_conf_reset[i]*1.6+"px";
                    dom_circle[i].style.left = dom_out_box[i].offsetLeft+dom_in_box[i].offsetWidth+"px";
                }
                change_cam_mode("auto");
                l_cam_conf.sharpness = l_cam_conf_reset[0];
                l_cam_conf.color_saturation = l_cam_conf_reset[1];
                l_cam_conf.contrast = l_cam_conf_reset[2];
                l_cam_conf.brightness = l_cam_conf_reset[3];
                dom_value[3].innerHTML = l_cam_conf_reset[3];
                dom_value[2].innerHTML = l_cam_conf_reset[2];
                dom_value[1].innerHTML = l_cam_conf_reset[1];
                dom_value[0].innerHTML = l_cam_conf_reset[0];
                l_cam_conf.day_night = "auto";
                mcloud_agent.cam_set(l_cam_conf,null,function(msg,ref)
                {
                	  if(msg.result == "permission.denied")
			            	{
			            	 	  msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
			            	}
                    else if(msg.result!= "")
                    {
                        msg_tips({msg:msg.result, type:"error", timeout:3000});
                    }
                });
            };            

            l_dom_ptz_control_left.onmouseover = function(){
                jQuery("#turn_left").show();
            };

            l_dom_ptz_control_left.onmouseout = function(){
                jQuery("#turn_left").hide();
            };

            l_dom_ptz_control_up.onmouseover = function(){
                jQuery("#turn_up").show();
            };

            l_dom_ptz_control_up.onmouseout = function(){
                jQuery("#turn_up").hide();
            };

            l_dom_ptz_control_right.onmouseover = function(){
                jQuery("#turn_right").show();
            };

            l_dom_ptz_control_right.onmouseout = function(){
                jQuery("#turn_right").hide();
            };

            l_dom_ptz_control_down.onmouseover = function(){
                jQuery("#turn_down").show();
            };

            l_dom_ptz_control_down.onmouseout = function(){
                jQuery("#turn_down").hide();
            };

            l_dom_turn_left.onmousedown = function(){
                l_flag = "move";
                setTimeout( ptz_turn_left(),300);
            };

            l_dom_turn_left.onmouseup = function(){
            	  l_flag = "stop";
                if(l_left_interval) clearInterval(l_left_interval);
            };

            l_dom_turn_up.onmousedown = function(){
                l_flag = "move";
                setTimeout( ptz_turn_up(),300);
            };

            l_dom_turn_up.onmouseup = function(){
                l_flag = "stop";
                if(l_up_interval) clearInterval(l_up_interval);
            };

            l_dom_turn_right.onmousedown = function(){
                l_flag = "move";
                setTimeout( ptz_turn_right(),300);
            };

            l_dom_turn_right.onmouseup = function(){
                l_flag = "stop";
                if(l_right_interval) clearInterval(l_right_interval);
            };

            l_dom_turn_down.onmousedown = function(){
                l_flag = "move";
                setTimeout( ptz_turn_down(),300);
            };

            l_dom_turn_down.onmouseup = function(){
                l_flag = "stop";
                if(l_down_interval) clearInterval(l_down_interval);
            };

        }
        else
        {
		        l_dom_ptz_control_panel = dom_create_child(l_me_parent, "div", "ptz_control_panel");
		        l_dom_ptz_control_arrow = dom_create_child(l_me_parent, "span", "ptz_control_arrow");
		        l_dom_ptz_control_inner = dom_create_child(l_dom_ptz_control_panel, "div", "ptz_control_inner", "standard_box_inner_style");
		        l_dom_ptz_control_header = dom_create_child(l_dom_ptz_control_inner, "div", "ptz_control_header");
		        l_dom_ptz_control_body = dom_create_child(l_dom_ptz_control_inner, "div", "ptz_control_body");
		        //l_dom_ptz_control_footer = dom_create_child(l_dom_ptz_control_inner, "div", "ptz_control_footer");
		        l_dom_ptz_control_header[s_innerHTML] = "<img class='ptz_box_split_bar' src='/imgs/split_bar.png'></img>";
		        l_dom_ptz_control_body[s_innerHTML] =
		            "<ul>"
		            +   "<li class='ptz_option_text'>" + mcs_brightness + "</li>"
		            +   "<li>"
		            +       "<label for='ptz_slider_Brightness'></label>"
		            +       "<input name='slider' id='ptz_slider_Brightness' "
		            +           "class='fd_tween fd_classname_extraclass fd_hide_input fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update "
		            +               "fd_slider_cb_update_g_video_sources_slider_callback' value='50%'>"
		            +       "</input>"
		            +   "</li>"
		            +   "<li class='ptz_option_text'>" + mcs_contrast + "</li>"
		            +   "<li>"
		            +       "<label for='ptz_slider_Contrast'></label>"
		            +       "<input name='slider' id='ptz_slider_Contrast' "
		            +           "class='fd_tween fd_classname_extraclass fd_hide_input fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update "
		            +               "fd_slider_cb_update_g_video_sources_slider_callback' value='50%'>"
		            +       "</input>"
		            +   "</li>"
		            +   "<li class='ptz_option_text'>" + mcs_color_saturation + "</li>"
		            +   "<li>"
		            +       "<label for='ptz_slider_ColorSaturation'></label>"
		            +       "<input name='slider' id='ptz_slider_ColorSaturation' "
		            +           "class='fd_tween fd_classname_extraclass fd_hide_input fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update "
		            +               "fd_slider_cb_update_g_video_sources_slider_callback' value='50%'>"
		            +       "</input>"
		            +   "</li>"
		            +   "<li class='ptz_option_text'>" + mcs_sharpness+ "</li>"
		            +   "<li>"
		            +       "<label for='ptz_slider_Sharpness'></label>"
		            +       "<input name='slider' id='ptz_slider_Sharpness' "
		            +           "class='fd_tween fd_classname_extraclass fd_hide_input fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update "
		            +               "fd_slider_cb_update_g_video_sources_slider_callback' value='50%'>"
		            +       "</input>"
		            +   "</li>"
		            +   "<li class='ptz_option_text' id='mode_left'>"+mcs_mode+"</li>"
		            +   "<li class='ptz_option_text' style='height:28px;'>"
		            +     "<div id='mode_div' class='select_block'>"
		            +           "<select id='select_mode'>"
		            +           "<option>"+mcs_auto+"</options>"
		            +           "<option>"+mcs_daytime+"</options>"
		            +           "<option>"+mcs_night+"</options>"
		            +       "</select>"
		            +     "</div>"
		            +   "</li>"
		            +   "<li class='ptz_option_text' style='margin-top:5px;'>"+mcs_equipment_flip+"</li>"
		            +   "<li class='ptz_option_text' style='height:25px;'>"
		            +   "<div id='ptz_flip_div' ><input type='checkbox' id='checkbox_equipment_flip' /></div>"
		            +   "</li>"
		            +   "<li class='ptz_option_text'>"+mcs_power_frequency+"</li>"
		            +   "<li class='ptz_option_text' >"
		            +     "<div id='power_div'>"
		            +       "<select id='select_power'>"
		            +           "<option>60hz</options>"
		            +           "<option>50hz</options>"
		            +       "</select>"
		            +     "</div>"
		            +   "</li>"
		            +   "<input type='button'  class='standard_buttons_white' style='margin-left:10px;margin-top:10px; ' value='" + mcs_reset + "' id='recover_button'>"
		            + "</ul>"
		        l_dom_ptz_control_body[s_innerHTML] += "<div id='ptz_control'></div>"


		        l_dom_ptz_control_body[s_innerHTML] +=
		             "<div id='curise_control' style='margin-top:5px;margin-left:5px;'>"
		             +   "<table>"
		             +      "<tr>"
		             +        "<td>"
		             +           "<div class='curise_image' id='curise1'></div>"
		             +           "<button class='curise_buttons_white' id='1'>1</button>"
		             +        "</td>"
		             +        "<td>"
		             +           "<div class='curise_image' id='curise2'></div>"
		             +           "<button class='curise_buttons_white' id='2'>2</button>"
		             +        "</td>"
		             +        "<td>"
		             +           "<div class='curise_image' id='curise3'></div>"
		             +           "<button class='curise_buttons_white' id='3'>3</button>"
		             +        "</td>"
		             +        "<td>"
		             +           "<div class='curise_image' id='curise4'></div>"
		             +           "<button class='curise_buttons_white' id='4'>4</button>"
		             +        "</td>"
		             +      "</tr>"
		             +      "<tr>"
		             +        "<td>"
		             +           "<div class='curise_image' id='curise5'></div>"
		             +           "<button class='curise_buttons_white' id='5'>5</button>"
		             +        "</td>"
		             +        "<td>"
		             +           "<div class='curise_image' id='curise6'></div>"
		             +           "<button class='curise_buttons_white' id='6'>6</button>"
		             +        "</td>"
		             +        "<td>"
		             +           "<div class='curise_image' id='curise7'></div>"
		             +           "<button class='curise_buttons_white' id='7'>7</button>"
		             +        "</td>"
		             +        "<td>"
		             +           "<div class='curise_image' id='curise8'></div>"
		             +           "<button class='curise_buttons_white' id='8'>8</button>"
		             +        "</td>"
		             +      "</tr>"
		             +      "<tr>"
		             +        "<td colspan=2>"
		             +           "<button class='curise_store_buttons' id='store_point_button'>"
		             +              "<div class='curise_store_image' id='curise_store_image'></div>"
		             +           "</button>"
		             +        "</td>"
		             +        "<td colspan=2>"
		             +           "<button class='curise_store_buttons' id='clear_point_button'>"
		             +              "<div class='curise_delete_image' id='curise_delete_image'></div>"
		             +           "</button>"
		             +        "</td>"
		             +      "</tr>"
		             +   "</table>"
		             + "</div>";
		        l_dom_ptz_control = mx("#ptz_control");
		        l_dom_recover_button = mx("#recover_button");
		        l_dom_select_mode = mx("#select_mode");
		        l_dom_select_power = mx("#select_power");
		        l_dom_checkbox_equipment_flip = mx("#checkbox_equipment_flip");
		        l_dom_store_point_button = mx("#store_point_button");
		        l_dom_clear_point_button = mx("#clear_point_button");
		        background_img_set(l_dom_ptz_control, sub_img_PTZ0);

		        l_dom_ptz_control_panel[s_style][s_cssText] = "width:" + g_panel_box_w + "px;height:" + g_panel_box_h + "px;right:" + g_panel_box_offset + "px;";
		        l_dom_ptz_control_inner[s_style][s_cssText] = "width:" + g_panel_box_w + "px;height:" + g_panel_box_inner_h + "px;";
		        l_dom_ptz_control_arrow[s_style].top = g_panel_box_h + 8 + "px";
		        jQuery(l_dom_ptz_control_body).mCustomScrollbar();

		        if(g_hostname != "www.luxcamapp.eu")
		        {
		        	 jQuery("#curise_control").hide();
		        }
		        else
		        {
		        	 jQuery("#curise_control").show();
		        }

		        for( i = 1 ; i <= 8 ; i++ )
		        {
		        	 l_points[i-1] = mx("#"+i);
		        }

		        jQuery(l_dom_select_mode).tzSelect();
		        jQuery(l_dom_select_power).tzSelect();
		        jQuery(l_dom_checkbox_equipment_flip).iButton({
		             labelOn:"On",
		             labelOff:"Off",
		             change:function(){
		             	  if(l_getsysteminfo)
		             	  {
		             	  	l_getsysteminfo = false;
		             	  }else{
		             	    cam_set();
		                }
		             }
		        });

		        function set_time_func(obj)
		        {
		            var l = obj.l, t = obj.t, p = obj.p;

		            while(p !== null)
		            {
		                l += p.offsetLeft;
		                t += p.offsetTop;
		                p = p.offsetParent;
		            }

		            var R = 62, r = 18;
		            var origin_x = l;
		            var origin_y = t;
		            var center_x = origin_x + 62;
		            var center_y = origin_y + 62;
		            var mou_x = obj.mou_x;
		            var mou_y = obj.mou_y;
		            var ox = mou_x - origin_x;
		            var oy = mou_y - origin_y;
		            var cx = mou_x - center_x;
		            var cy = mou_y - center_y;
		            var xie = Math.sqrt(Math.pow(cx, 2) + Math.pow(cy, 2));

		            if(xie > R)
		            {
		                return;
		            }
		            else if(xie < r)
		            {
		            }
		            else
		            {
		                if(cx < 0 && cy < 0)              //The second quadrant
		                {
		                    if(ox < oy)                   //left
		                    {
		                        if(l_flag == "stop")
		                        {
								               //l_parent_callback({type:"relative_move",data:{x:-l_move_dist,y:0},ref:l_mark});
								               	 l_parent_callback({type:"relative_move",data:{x:-1,y:0},ref:l_mark});
		                        }
		                        else
		                        {
		                            if(l_interval)
		                            {
		                                clearInterval(l_interval);
		                                l_mark.flag = "ready";
		                            }
									              l_parent_callback({type:"relative_move",data:{x:-l_move_dist,y:0},ref:l_mark});
		                            l_interval = setInterval(function(){
		                              if(l_mark.flag == "ready")
		                              {
		                                l_mark.flag = "move";
										                l_parent_callback({type:"relative_move",data:{x:-l_move_dist,y:0},ref:l_mark});
		                              }
		                            }, 400);
		                        }
		                    }
		                    else if(ox > oy)              //top
		                    {
		                        if(l_flag == "stop")
		                        {
								              //l_parent_callback({type:"relative_move",data:{x:0,y:l_move_dist},ref:l_mark});
								              l_parent_callback({type:"relative_move",data:{x:0,y:1},ref:l_mark});
		                        }
		                        else
		                        {
		                            if(l_interval)
		                            {
		                                l_mark.flag = "ready";
		                                clearInterval(l_interval);
		                            }
									              l_parent_callback({type:"relative_move",data:{x:0,y:l_move_dist},ref:l_mark});
		                            l_interval = setInterval(function(){
		                              if(l_mark.flag == "ready")
		                              {
		                                l_mark.flag = "move";
		                              }
		                            }, 400);
		                        }
		                    }
		                }
		                else if(cx < 0 && cy > 0)                 //The third quadrant
		                {
		                    if(Math.abs(cx) < Math.abs(cy))       //bottom
		                    {
		                        if(l_flag == "stop")
		                        {
								              //l_parent_callback({type:"relative_move",data:{x:0,y:-l_move_dist},ref:l_mark});
								              l_parent_callback({type:"relative_move",data:{x:0,y:-1},ref:l_mark});
		                        }
		                        else
		                        {
		                            if(l_interval)
		                            {
		                                l_mark.flag = "ready";
		                                clearInterval(l_interval);
		                            }
								                l_parent_callback({type:"relative_move",data:{x:0,y:-l_move_dist},ref:l_mark});
		                            l_interval = setInterval(function(){
		                              if(l_mark.flag == "ready")
		                              {
		                                l_mark.flag = "move";
								                    l_parent_callback({type:"relative_move",data:{x:0,y:-l_move_dist},ref:l_mark});
		                            }}, 400);
		                        }
		                    }
		                    else if(Math.abs(cx) > Math.abs(cy))  //left
		                    {
		                        if(l_flag == "stop")
		                        {
								                 //l_parent_callback({type:"relative_move",data:{x:-l_move_dist,y:0},ref:l_mark});
								                 l_parent_callback({type:"relative_move",data:{x:-1,y:0},ref:l_mark});
		                        }
		                        else
		                        {
		                            if(l_interval)
		                            {
		                                l_mark.flag = "ready";
		                                clearInterval(l_interval);
		                            }
								                l_parent_callback({type:"relative_move",data:{x:-l_move_dist,y:0},ref:l_mark});
		                            l_interval = setInterval(function(){
		                                if(l_mark.flag == "ready")
		                            {
		                                l_mark.flag = "move";
								                    l_parent_callback({type:"relative_move",data:{x:-l_move_dist,y:0},ref:l_mark});
		                            }}, 400);
		                        }
		                    }
		                }
		                else if(cx > 0 && cy < 0)                 //The first quadrant
		                {
		                    if(Math.abs(cx) < Math.abs(cy))       //top
		                    {
		                        if(l_flag == "stop")
		                        {
		                             //l_parent_callback({type:"relative_move",data:{x:0,y:l_move_dist},ref:l_mark});
		                             l_parent_callback({type:"relative_move",data:{x:0,y:1},ref:l_mark});
		                        }
		                        else
		                        {
		                            if(l_interval)
		                            {
		                                l_mark.flag = "ready";
		                                clearInterval(l_interval);
		                            }
									              l_parent_callback({type:"relative_move",data:{x:0,y:l_move_dist},ref:l_mark});
		                            l_interval = setInterval(function(){
		                            if(l_mark.flag == "ready")
		                            {
		                                l_mark.flag = "move";
										                l_parent_callback({type:"relative_move",data:{x:0,y:l_move_dist},ref:l_mark});
		                            }}, 400);
		                        }
		                    }
		                    else if(Math.abs(cx) > Math.abs(cy))  //right
		                    {
		                        if(l_flag == "stop")
		                        {
							     	           //l_parent_callback({type:"relative_move",data:{x:l_move_dist,y:0},ref:l_mark});
							     	           l_parent_callback({type:"relative_move",data:{x:1,y:0},ref:l_mark});
		                        }
		                        else
		                        {
		                            if(l_interval)
		                            {
		                                l_mark.flag = "ready";
		                                clearInterval(l_interval);
		                            }
							     	            l_parent_callback({type:"relative_move",data:{x:l_move_dist,y:0},ref:l_mark});
		                            l_interval = setInterval(function(){
		                            if(l_mark.flag == "ready")
		                            {
		                                l_mark.flag = "move";
							     	                l_parent_callback({type:"relative_move",data:{x:l_move_dist,y:0},ref:l_mark});
		                            }}, 400);
		                        }
		                    }
		                }
		                else if(cx > 0 && cy > 0)                 //The fourth quadrant
		                {
		                    if(ox < oy)                   //bottom
		                    {
		                        if(l_flag == "stop")
		                        {
							     	           //l_parent_callback({type:"relative_move",data:{x:0,y:-l_move_dist},ref:l_mark});
							     	           l_parent_callback({type:"relative_move",data:{x:0,y:-1},ref:l_mark});
		                        }
		                        else
		                        {
		                            if(l_interval)
		                            {
		                                l_mark.flag = "ready";
		                                clearInterval(l_interval);
		                            }
									              l_parent_callback({type:"relative_move",data:{x:0,y:-l_move_dist},ref:l_mark});
		                            l_interval = setInterval(function(){
		                            if(l_mark.flag == "ready")
		                            {
		                                l_mark.flag = "move";
										                l_parent_callback({type:"relative_move",data:{x:0,y:-l_move_dist},ref:l_mark});
		                            }}, 400);
		                        }
		                    }
		                    else if(ox > oy)              //right
		                    {
		                        if(l_flag == "stop")
		                        {
							    	           //l_parent_callback({type:"relative_move",data:{x:l_move_dist,y:0},ref:l_mark});
							    	           l_parent_callback({type:"relative_move",data:{x:1,y:0},ref:l_mark});
		                        }
		                        else
		                        {
		                            if(l_interval)
		                            {
		                                l_mark.flag = "ready";
		                                clearInterval(l_interval);
		                            }
									              l_parent_callback({type:"relative_move",data:{x:l_move_dist,y:0},ref:l_mark});
		                            l_interval = setInterval(function(){
		                            if(l_mark.flag == "ready")
		                            {
		                                l_mark.flag = "move";
										                l_parent_callback({type:"relative_move",data:{x:l_move_dist,y:0},ref:l_mark});
		                            }}, 400);
		                        }
		                    }
		                }
		            }
		        }
		        function add_event()
		        {
		            l_dom_ptz_control.onmousemove = function(event) {
		                var l = this.offsetLeft,
		                    t = this.offsetTop,
		                    p = this.offsetParent;
		                while(p !== null)
		                {
		                    l += p.offsetLeft;
		                    t += p.offsetTop;
		                    p = p.offsetParent;
		                }

		                var evt = event ? event : (window.event ? window.event : null),
		                    R = 62, r = 18, origin_x = l, origin_y = t, center_x = origin_x + 62;
		                var center_y = origin_y + 62;
		                var mou_x = evt.pageX || evt.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
		                var mou_y = evt.pageY || evt.clientY + document.body.scrollTop + document.documentElement.scrollTop;
		                var ox = mou_x - origin_x;
		                var oy = mou_y - origin_y;
		                var cx = mou_x - center_x;
		                var cy = mou_y - center_y;
		                var xie = Math.sqrt(Math.pow(cx, 2) + Math.pow(cy, 2));

		                if(xie > R)
		                {
		                   background_img_change_pos(this, sub_img_PTZ0);
		                }
		                else if(xie < r)
		                {
		                   background_img_change_pos(this, sub_img_PTZ1);
		                }
		                else
		                {
		                    if(cx < 0 && cy < 0)                      //The second quadrant
		                    {
		                        if(ox < oy)                   //left
		                        {
		                           background_img_change_pos(this, sub_img_PTZ5);
		                        }
		                        else if(ox > oy)              //top
		                        {
		                           background_img_change_pos(this, sub_img_PTZ2);
		                        }
		                    }
		                    else if(cx < 0 && cy > 0)                 //3rd quadrant
		                    {
		                        if(Math.abs(cx) < cy)       //bottom
		                        {
		                           background_img_change_pos(this, sub_img_PTZ4);
		                        }
		                        else if(Math.abs(cx) > cy)  //left
		                        {
		                           background_img_change_pos(this, sub_img_PTZ5);
		                        }
		                    }
		                    else if(cx > 0 && cy < 0)                 //The first quadrant
		                    {
		                        if(cx < Math.abs(cy))       //top
		                        {
		                           background_img_change_pos(this, sub_img_PTZ2);
		                        }
		                        else if(cx > Math.abs(cy))  //right
		                        {
		                           background_img_change_pos(this, sub_img_PTZ3);
		                        }
		                    }
		                    else if(cx > 0 && cy > 0)                 //The fourth quadrant
		                    {
		                        if(ox < oy)                   //bottom
		                        {
		                            background_img_change_pos(this, sub_img_PTZ4);
		                        }
		                        else if(ox > oy)              //right
		                        {
		                            background_img_change_pos(this, sub_img_PTZ3);
		                        }
		                    }
		                }
		            };
		            l_dom_ptz_control.onmouseout = function() {
		                background_img_change_pos(this, sub_img_PTZ0);
		            };
		            for( i = 0 ; i < 8 ; i++ ){
		              l_points[i].onclick = function(){
		              	if(g_select_inner_ipc){
		                	l_point_now = this.id;
		                  for( j = 0 ; j < 8 ; j++ )
		                	{
		                		//if(( l_points[j].className || l_points[j].class ) == "curise_buttons_white")
		                	  //{
		                	  	 l_points[j].style.backgroundPosition = "-85px -239px";
		                	  //}else{
		                	  //	 l_points[j].style.backgroundPosition = "-135px -266px";
		                	  //}
		                	}
		                	this.style.backgroundPosition = "-235px -266px";
		                	if( this.getAttribute( "enable" ) == 1 )
		                	{
		                	  ms.send_msg("curise_set",{sn:g_select_device_ipc,type:"move",index:l_point_now},null,function(msg,ref){});
		 					        }
		              	}
		              }
		            }
		            l_dom_store_point_button.onclick = function(){
		              if(l_point_now != 0)
		              {
		              	 ms.send_msg("curise_set",{sn:g_select_device_ipc,type:"store",index:l_point_now},null,function(msg,ref){
		              	   if(msg && msg.result == ""){
		              	   	 l_points[l_point_now-1].setAttribute("enable","1");
		              	     jQuery(l_points[l_point_now-1]).removeClass("curise_buttons_white");
		        		         jQuery(l_points[l_point_now-1]).addClass("curise_buttons_red");
		              	   }
		              	   else
		              	   {
		              	   	 g_system_prompt_box(mcs_failed_to_set_the, -10, -200);
		              	   }
		              	 });
		              }
		            }
		            l_dom_clear_point_button.onclick = function(){
		               if(l_point_now != 0)
		               {
		              	 ms.send_msg("curise_set",{sn:g_select_device_ipc,type:"delete",index:l_point_now},null,function(msg,ref){
		              	 		if(msg && msg.result == ""){
		        		          l_points[l_point_now-1].setAttribute("enable","0");
		        		          jQuery(l_points[l_point_now-1]).removeClass("curise_buttons_red");
		        		          jQuery(l_points[l_point_now-1]).addClass("curise_buttons_white");
		              	 		}
		              	 		else
		              	 		{
		              	 			g_system_prompt_box(mcs_failed_to_set_the, -10, -200);
		              	 		}
		              	 });
		               }
		            }
		            //Camera movement control key events
		            l_dom_ptz_control.onmousedown = function(event) {
		                if(!g_select_inner_ipc) return;
		                var evt = event || window.event;
		                if(evt.button == 0 || evt.button == 1)
		                {
		                    l_flag = "move";
		                    var l = this.offsetLeft,
		                        t = this.offsetTop,
		                        p = this.offsetParent,
		                        mou_x = evt.pageX || evt.clientX + document.body.scrollLeft + document.documentElement.scrollLeft,      //Calculated here for compatibility IE
		                        mou_y = evt.pageY || evt.clientY + document.body.scrollTop + document.documentElement.scrollTop;        //Calculated here for compatibility IE

		                    setTimeout(function(){ set_time_func({evt:evt, l:l, t:t, p:p, mou_x:mou_x, mou_y:mou_y});}, 300);
		                }
		            };
		            l_dom_ptz_control.onmouseup = function(event) {
		                var evt = event ? event : (window.event ? window.event : null);
		                if(evt.button == 0 || evt.button == 1)
		                {
		                    l_flag = "stop";
		                    if(l_interval)
		                      clearInterval(l_interval);
		                }
		            };
		            l_me_parent.onmouseover = function(obj) {
		                if(g_panel_box_all_w < g_panel_box_max_w)
		                {
		                    if(!g_old_browser_version)
		                    {
		                        jQuery(this).animate({opacity:"1"}, {queue:false, duration:400, easing:'easeOutQuint'});
		                    }
		                    jQuery(this).animate({width:g_panel_box_max_w}, {queue:false, duration:400, easing:'easeOutQuint'});
		                    jQuery(l_dom_ptz_control_panel).animate({right:"3"}, {queue:false, duration:400, easing:'linear'});

		                    var temp_func = function(evt) {
		                        var e = evt || window.event, target = e.target || e.srcElement;

		                        if(!target || is_ancestor(l_me_parent, target)) return;

		                        if(!g_old_browser_version)
		                        {
		                            jQuery(l_me_parent).animate({opacity:"0.5"}, {queue:false, duration:400, easing:'linear'});
		                        }
		                        jQuery(l_me_parent).animate({width:g_panel_box_all_w}, {queue:false, duration:400, easing:'linear'});
		                        jQuery(l_dom_ptz_control_panel).animate({right:g_panel_box_offset}, {queue:false, duration:400, easing:'linear'});

		                        g_j_page.unbind("mouseup", temp_func);
		                    };
		                    g_j_page.bind("mouseup", temp_func);
		                }
		            };
		            l_me_parent.onmouseout = function(obj) {
		                if(g_panel_box_all_w < g_panel_box_max_w)
		                {
		                    if(!g_old_browser_version)
		                    {
		                        jQuery(this).animate({opacity:"0.5"}, {queue:false, duration:400, easing:'linear'});
		                    }
		                    jQuery(this).animate({width:g_panel_box_all_w}, {queue:false, duration:400, easing:'linear'});
		                    jQuery(l_dom_ptz_control_panel).animate({right:g_panel_box_offset}, {queue:false, duration:400, easing:'linear'});
		                }
		            };
		            //Mode Change
		            l_dom_select_mode.change_value = function() {
		               cam_set();
		            };
		            l_dom_select_power.change_value = function() {
		            	 cam_set();
		            };
		            //Reset button click event
		            l_dom_recover_button.onclick = function(){

		                if(!g_select_device_ipc)return;
		                var day_night,flip,flicker_freq;
		                flip = Number(l_dom_checkbox_equipment_flip.checked);
							      flicker_freq = l_dom_select_power.selectedIndex;
		                if(mcloud_agent.devs.get(g_select_device_ipc).img_ver >= "v2.7.9")
		                {
		                	 ms.send_msg("cam_set",{sn:g_select_device_ipc,brightness:mx("#ptz_slider_Brightness").value,contrast:mx("#ptz_slider_Contrast").value,color_saturation:mx("#ptz_slider_ColorSaturation").value,
		                 	sharpness:mx("#ptz_slider_Sharpness").value,day_night:day_night,flip:flip,flicker_freq:flicker_freq,reset:1},null,function(msg,ref){

		                	  //get the device brightness/contrast/color_saturation/sharpness setting information
		             			  ms.send_msg("cam_get",{sn:g_select_device_ipc},null,function(msg,ref){
		               				if(msg && msg.result == ""){
		              	 				//l_getsysteminfo = true;
		                 				update_imagings(msg,false);
		                 				//update_dom(msg);
		                 				l_dom_select_mode[0].selected = true;
		                        jQuery(l_dom_select_mode).tzSelect();
		                        l_dom_select_power[0].selected = true;
		                        jQuery(l_dom_select_power).tzSelect();
		               				}
		             			  });
		             			});
		             		}
		             		else
		             		{  //when the device version is old, it can reset
		                  update_imagings({brightness:50,contrast:65,color_saturation:75,sharpness:20},true);
		                  l_dom_select_mode[0].selected = true;
		                  jQuery(l_dom_select_mode).tzSelect();
		                  l_dom_select_power[0].selected = true;
		                  jQuery(l_dom_select_power).tzSelect();
		                  jQuery(l_dom_checkbox_equipment_flip).iButton("toggle", false);
		               }
		            }
		            if(null == g_video_sources_slider_callback)
		            {   //     Storing the new value /stored the old value
		                var display_value, now_value = 0,temp_ipc=null;
		                //Move the slider callback set brightness, contrast, saturation, sharpness invoked
		                g_video_sources_slider_callback = function(obj) {
		                	  //Stores the current value of the slider
		                    display_value = parseInt(obj.value);
		                    // If the value is not changed then do not do anything
		                    if(now_value == display_value) return;
		                    now_value = display_value;
		                    //When replacing the device will set about the slider according to the device, then you need to perform the callback settings
		                    if(temp_ipc ==null || temp_ipc !=g_select_device_ipc)
		                    {
		                        temp_ipc = g_select_device_ipc;
		                        return;
		                    }
		                    cam_set();
		                };
		            }

		        }
		        //Processing Change Device
		        function change_select_ipc(obj)
		        {  //Reacquire the device parameters change the slider
		             var type= mcloud_agent.devs.get(g_select_device_ipc).type;
		             if(type == "BOX") return;
		           ms.send_msg("cam_get",{sn:g_select_device_ipc},null,function(msg,ref){
		              if(msg && msg.result == ""){
		              	l_getsysteminfo = true;
		                update_imagings(msg,false);
		                update_dom(msg);
		              }
		           });
		           ms.send_msg("curise_get",{sn:g_select_device_ipc},null,function(msg,ref){
		           	 if(msg && msg.result == ""){
		           	 	 l_curising_flag = msg.enable;
		           	 	 if(msg.points){
		           	   	update_curise_dom(msg.points);
		           	   }
		           	 }
		           });
		        }
		        //Change the slider position
		        function update_imagings(obj,from_user)
		        {
		        	  if(g_now_page != "home") return;
		            //increment function is a function of how much of an increase, so use obj.brightness minus the original data
		            fdSliderController.increment("ptz_slider_Brightness",obj.brightness - mx("#ptz_slider_Brightness").value,from_user);
		            fdSliderController.increment("ptz_slider_Contrast", obj.contrast- mx("#ptz_slider_Contrast").value,from_user);
		            fdSliderController.increment("ptz_slider_ColorSaturation",obj.color_saturation - mx("#ptz_slider_ColorSaturation").value,from_user);
		            fdSliderController.increment("ptz_slider_Sharpness", obj.sharpness - mx("#ptz_slider_Sharpness").value,from_user);

		        }
		        //Set cam information
		        function cam_set()
		        {
		            var day_night,flip,flicker_freq;
		        	 //When you change more frequently when doing so does not always need to set here will be cleared not set
		           if(timer)
		              clearTimeout(timer);
		           //When you change more frequently when doing so does not always need to set
		           timer = setTimeout(function(){
		        	    switch(l_dom_select_mode.selectedIndex){
						  	      case 0:
						   	        day_night = "auto";
						   	        break;
						          case 1:
						   			    day_night = "day";
						   			    break;
						   	      case 2:
						   			    day_night = "night";
						   			    break;
							    }
							    flip = Number(l_dom_checkbox_equipment_flip.checked);
							    flicker_freq = l_dom_select_power.selectedIndex;
	        	      ms.send_msg("cam_set",{sn:g_select_device_ipc,brightness:mx("#ptz_slider_Brightness").value,contrast:mx("#ptz_slider_Contrast").value,color_saturation:mx("#ptz_slider_ColorSaturation").value,
	                 	sharpness:mx("#ptz_slider_Sharpness").value,day_night:day_night,flip:flip,flicker_freq:flicker_freq},null,function(msg,ref){});
		              timer = null;
		           },600);
		        }
		        function update_dom(msg)
		        {
		          if(g_now_page == "home")
		          {
		                if(msg.day_night=="auto"|| msg.day_night=="")
		              {
		                 l_dom_select_mode[0].selected = true;
		              }
		              else if(msg.day_night=="day")
		              {
		                 l_dom_select_mode[1].selected = true;
		              }
		              else if(msg.day_night=="night")
		              {
		                 l_dom_select_mode[2].selected = true;
		              }
		              if(msg.flip)
		              {
		                 jQuery(l_dom_checkbox_equipment_flip).iButton("toggle", true);
		              }
		              else
		              {
		                 jQuery(l_dom_checkbox_equipment_flip).iButton("toggle", false);
		              }
		              if(msg.flicker_freq)
		              {
		                 l_dom_select_power[1].selected = true;
		              }
		              else
		              {
		                 l_dom_select_power[0].selected = true;
		              }
		          }
		          jQuery(l_dom_select_power).tzSelect();
		          jQuery(l_dom_select_mode).tzSelect();
		        }
		        function update_curise_dom(points)
		        {
		        	var len = points.length;
		        	for( j = 0 ; j < 8 ; j++ )
		        	{
		        		l_points[j].setAttribute("enable","0");
		        	}
		        	for( j = 0 ; j < len ; j++ )
		        	{
		        		jQuery(l_points[points[j].index-1]).removeClass("curise_buttons_white");
		        		jQuery(l_points[points[j].index-1]).addClass("curise_buttons_red");
		        		l_points[points[j].index-1].setAttribute("enable","1");
		        	}
		        }
		        function remove_event()
		        {
		            l_dom_ptz_control.onmousemove = "";
		            l_dom_ptz_control.onmouseout = "";
		            l_dom_ptz_control.onmousedown = "";
		            l_dom_ptz_control.onmouseup = "";
		            l_dom_recover_button.onclick=""
		            g_video_sources_slider_callback = null;
		        }
		        add_event();
		        fdSliderController.create();
		        if(g_select_device_ipc){
		           //Get control panel data
		           ms.send_msg("cam_get",{sn:g_select_device_ipc},null,function(msg,ref){
		             if(msg && msg.result == ""){
		             	  l_getsysteminfo = true;
		                update_imagings(msg,false);
		                update_dom(msg);
		             }
		           });
		           ms.send_msg("curise_get",{sn:g_select_device_ipc},null,function(msg,ref){
		           	 if(msg && msg.result == ""){
		           	 	 l_curising_flag = msg.enable;
		           	 	 if(msg.points){
		           	   	    update_curise_dom(msg.points);
		           	   }
		           	 }
		           });
		        }
        }
    		l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                    	  if(g_domain_oems_vimtag)
                    	  {
                    	  	  l_dom_ptz_control_left[s_style][s_width] = g_player_width*0.15 + "px";
                    	  	  l_dom_ptz_control_left[s_style][s_height] = g_player_height + "px";
                    	  	  l_dom_ptz_control_left.style.lineHeight = g_player_height + "px";
                    	  	  l_dom_ptz_control_center[s_style][s_width] = g_player_width*0.7 + "px";
                    	  	  l_dom_ptz_control_center[s_style][s_height] = g_player_height + "px";
                    	  	  l_dom_ptz_control_up[s_style][s_width] = g_player_width*0.7 + "px";
                    	  	  l_dom_ptz_control_up[s_style][s_height] = g_player_height*0.15 + "px";
                    	  	  l_dom_ptz_control_up.style.lineHeight = g_player_height*0.15 + "px";
                    	  	  l_dom_ptz_control_bottom[s_style][s_width] = g_player_width*0.7 + "px";
                    	  	  l_dom_ptz_control_bottom[s_style][s_height] = g_player_height*0.7 + "px";
                    	  	  l_dom_ptz_control_bottom_center[s_style][s_width] = g_player_width*0.7 + "px";
                    	  	  l_dom_ptz_control_bottom_center[s_style][s_height] = g_player_height*0.7 -59 + "px";
                    	  	  l_dom_ptz_control_down[s_style][s_width] = g_player_width*0.7 + "px";
                    	  	  l_dom_ptz_control_down[s_style][s_height] = g_player_height*0.15 + "px";
                    	  	  l_dom_ptz_control_down.style.lineHeight = g_player_height*0.15 + "px";
                    	  	  l_dom_ptz_control_right[s_style][s_width] = g_player_width*0.15 + "px";
                    	  	  l_dom_ptz_control_right[s_style][s_height] = g_player_height+ "px";
                    	  	  l_dom_ptz_control_right.style.lineHeight = g_player_height + "px";
                    	  	  l_dom_control_menu.style.marginLeft = (g_player_width*0.7 - 420)/2 -22 + "px";
                    	  	  l_dom_turn_up.style.marginLeft = (g_player_width*0.7 - 65)/2 + "px";
                    	  	  l_dom_turn_right.style.marginTop = (g_player_height - 65)/2 + "px";
                    	  	  l_dom_turn_down.style.marginLeft = (g_player_width*0.7 - 65)/2 + "px";
                    	  	  l_dom_turn_left.style.marginTop = (g_player_height - 65)/2 + "px";                    	  	  
                    	  }
                    	  else
                    	  {
		                        l_dom_ptz_control_panel[s_style][s_width]  = g_panel_box_w + "px";
		                        l_dom_ptz_control_panel[s_style][s_height] = g_panel_box_h + "px";
		                        l_dom_ptz_control_panel[s_style].right     = g_panel_box_offset + "px";
		                        l_dom_ptz_control_inner[s_style][s_width]  = g_panel_box_w + "px";
		                        l_dom_ptz_control_inner[s_style][s_height] = g_panel_box_inner_h + "px";
		                        l_dom_ptz_control_arrow[s_style].top       = g_panel_box_h + 8 + "px";
		                        //l_dom_ptz_control[s_style].marginTop           = (l_dom_ptz_control_footer.offsetHeight - l_dom_ptz_control.offsetHeight) / 2 + "px";
                        }
                        break;
                    }
                case "update_imaging":
                    {
                       update_imagings(obj,false);
                       break;
                    }
                case "change_select_ipc"://Processing Change Device
                    {
                       change_select_ipc(obj);
                       break;
                    }
                case "destroy":
                    {
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_ptz_control_box.");
            }
        }
    }
    function class_playback_search_box(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_playback_search_panel,
            l_dom_playback_search_inner,
            l_dom_playback_search_body,
            l_dom_playback_search_footer,
            l_dom_playback_search_list_more,
            l_dom_playback_file_list,//Playback list
            l_playback_device="",//Indicates the current device, you need to store some special value, because to see more ten will be used,
            l_playback_list={};//Storage playback list,
            l_playback_device_list=new Array();//Playback device list

        l_playback_list["list"] = createLinkList();
        l_dom_playback_search_panel = dom_create_child(l_me_parent, "div", "playback_search_panel");
        l_dom_playback_search_inner = dom_create_child(l_dom_playback_search_panel, "div", "playback_search_inner", "standard_box_inner_style");
        l_dom_playback_search_body = dom_create_child(l_dom_playback_search_inner, "div", "playback_search_body");
        l_dom_playback_search_footer = dom_create_child(l_dom_playback_search_footer, "div", "playback_search_footer");

        l_dom_playback_search_panel[s_style][s_cssText] = "width:" + g_panel_box_w + "px;height:" + g_panel_box_h + "px;right:" + g_panel_box_offset + "px;";
        l_dom_playback_search_inner[s_style][s_cssText] = "width:" + g_panel_box_w + "px;height:" + g_panel_box_inner_h + "px;";
        l_dom_playback_search_body[s_style][s_cssText]="height:"+(l_dom_playback_search_inner.offsetHeight-5)+"px;";
        l_dom_playback_search_body[s_innerHTML] = "<ul id='playback_file_list' ></ul>"
        l_dom_playback_file_list = mx("#playback_file_list");
        //Creating a playback Datasheets
        function create_playback_file_list(obj){
        	 var  i,device_change = 0,length, inner_html, file_list_li, file_list_span, file_list_img, duration, surplus_dur,
                begin_date = 0, end_date = 0, date = new Date(),
                begin_year, begin_month, begin_day, begin_hour, begin_minute, begin_second,
                end_year, end_month, end_day, end_hour, end_minute, end_second,download_location_tip,on_recording_timer,
                dur_year, dur_month, dur_day, dur_hour, dur_minute, dur_second,RecordingToken="",RecordingSize;

                var download_img_src='/imgs/download_ico.png';
            		var playback_ico = mx("#control_playback_ico");

            if(navigator.platform.indexOf("Win") > -1)
            {
                download_location_tip=mcs_download_location+": C:\/Downloads\/"; //IF it's windows system
            }
    			  else if(navigator.platform.indexOf("Mac") > -1)
    			  {
    			      download_location_tip=mcs_download_location+": \/Users\/Shared\/"; //IF it's MAC system
    			  }

        	 //If the information returned is empty exit
           if(!obj.messages){
            	 if(l_playback_list["list"].length == 0){
            	   //Clear the original data
            	   l_dom_playback_file_list[s_innerHTML] = "";
            	   l_playback_device = "";
            	   return;
            	 }else if(obj.bound == -1){
            	 	 l_dom_playback_search_list_more[s_innerHTML] = "";
            	 	 return;
            	 }
           }else{
           	  if(l_playback_list["list"].length == 0){
            	    l_playback_device = obj.messages[0];
            	    device_change = 1;
              }
           }
           inner_html="";
           for(i = 0,length = obj.messages.length;i<length;i++)
           {
           	   if(!obj.messages[i].p || !obj.messages[i].p[2].v) continue
               l_playback_list["list"].add(obj.messages[i]);
               date.setTime(obj.messages[i].date*1000);
               year = date.getFullYear();
               year = year.toString().length < 2 ? "0" + year : year;
               month= date.getMonth() + 1;
               month= month.toString().length < 2 ? "0" + month : month;
               day = date.getDate();
               day = day.toString().length < 2 ? "0" + day : day;
               hour = date.getHours();
               hour = hour.toString().length < 2 ? "0" + hour : hour;
               minute = date.getMinutes();
               minute = minute.toString().length < 2 ? "0" + minute : minute;
               second = date.getSeconds();
               second = second.toString().length < 2 ? "0" + second : second;

               duration = obj.messages[i].p[2].v - obj.messages[i].p[1].v;
               dur_day = Math.floor(duration / (24 * 3600 * 1000));
               surplus_dur = duration % (24 * 3600 * 1000);
               dur_hour = Math.floor(surplus_dur / (3600 * 1000));
               surplus_dur = surplus_dur % (3600 * 1000);
               dur_minute = Math.floor(surplus_dur / (60 * 1000));
               surplus_dur = surplus_dur % (60 * 1000);
               dur_second = Math.floor(surplus_dur / 1000);

               inner_html += "<li class='file_list_li' id='file_list_li"+obj.messages[i].msg_id+"' date=" + obj.messages[i].date + "><span>" + (year-2000) + "." + month + "." + day + " "
                          +hour + ":" + minute + ":" + second + "</span>"
                         //+"<span class='file_list_span'>" + year + "." + month + "." + day + " "+hour + ":" + minute + ":" + second + "</span>"
                          + "<img src='/imgs/dropdown_out_ico.png' style='margin-left:2px'></img>"
                          +   "<ul style='margin-left:10px;display:none'>"
                          +"<li class='file_list_li_span'>"
                          +(dur_day?dur_day:'') + (dur_hour?dur_hour:'00')+":"
                          +(dur_minute?dur_minute:'00')+":" + (dur_second?dur_second:'00')
                          +"<label id='download_progress' style='display:none;margin-left:15px;'>"
                          +"0%"
                          +"</label>"
                          +"<div class='download_img' title='"+download_location_tip+"' style='background-image: url("+download_img_src+");margin-right: 31px;float: right;height:16px;width:15px;display:inline-block;*display:inline;display:-moz-inline-box;'></div>"
                          +       "</li>"
                          +   "</ul>"
                          + "</li>";
           }
           if(device_change){
           	 mx("#playback_file_list")[s_innerHTML]= inner_html;
           }else{
             mx("#playback_file_list")[s_innerHTML]= mx("#playback_file_list")[s_innerHTML]+inner_html;
             jQuery(l_dom_playback_search_body).mCustomScrollbar("update");
           }

           if(obj.bound==0){
           	    if(device_change){
                		l_dom_playback_search_list_more = dom_create_child(l_dom_playback_search_body, "div", "playback_search_list_more", "standard_box_inner_style");
                		l_dom_playback_search_list_more[s_style][s_cssText]="width:130px; text-align:center;";
                		l_dom_playback_search_list_more[s_innerHTML] =mcs_more + 10 + mcs_bar;
                		jQuery(l_dom_playback_search_body).mCustomScrollbar();
                }
                //Read 10 key events
                l_dom_playback_search_list_more.onmouseover=function(){
                    l_dom_playback_search_list_more.style.fontSize="14px";
                    l_dom_playback_search_list_more.style.color="rgb(128, 165, 45)";
                }
                l_dom_playback_search_list_more.onmouseout=function(){
                     l_dom_playback_search_list_more.style.fontSize="12px";
                     l_dom_playback_search_list_more.style.color="#bbb";
                }
                l_dom_playback_search_list_more.onclick=function(){
                     l_parent_callback({type:"playback_search_list_more",l_search_time:obj.messages[obj.messages.length-1].msg_id});
                }
           }else{
           	 if(!device_change){
           	   l_dom_playback_search_list_more[s_innerHTML] = "";
           	 }
           }

           file_list_li = mx(".file_list_li", l_dom_playback_search_body);
           file_list_span = mx("/span", l_dom_playback_search_body);
           file_list_img = mx("/img", l_dom_playback_search_body);
           file_list_download_img = mx(".download_img", l_dom_playback_file_list);
           file_list_li_span = mx(".file_list_li_span", l_dom_playback_file_list);
           length = file_list_li.length;
           for(i = 0; i < length; ++i)
           {  //Click event playback interface Playback record list for each record
              file_list_li[i].onclick = function() {
               	  /*if(g_is_play_back){
               	  	l_parent_callback({type:"delete_ipc", data:{node_sn:g_select_device_ipc}});
               	  } */             //debug by summer, when download the recording, can't execute "delete_ipc"
                  //将所有记录颜色回复正常
                  for(j = 0 ; j < length; ++j)
                  {
                      file_list_span[j][s_style].color="#eaeaea";
                  }
                  //更改自己的颜色
                  if(g_hostname=="www.luxcamapp.eu")
                  {
                      this.firstChild.style.color="red";
                  }
                  else
                  {
                      this.firstChild.style.color="rgb(128, 165, 45)";
                  }
                  for(j = 0 ; j < length; ++j)
                  {
                     if(file_list_li[j]==this)
                     {
                  			//Recording playback of the selected item identification Token pass view_page
                  	    for(ptr=l_playback_list["list"].get_first(); ptr; ptr = ptr.next)
                        {
        	    	             if(this.id == "file_list_li"+ptr.data.msg_id)
        	    	             {
        	    	                 RecordingToken=ptr.data.p[0].v;
                    	  	       l_parent_callback({type:"RecordingToken",data:RecordingToken});
                    	  	       RecordingSize=ptr.data.p[3].v;
                                 l_parent_callback({type:"RecordingSize",data:RecordingSize});
                                 /*RecordingImg=ptr.data.p[4].v;
                                 l_parent_callback({type:"RecordingImg",data:RecordingImg});
                                 RecordingSaveName=jQuery("span:first", this)[0].innerHTML.replace(/:/g,".");
                                 l_parent_callback({type:"RecordingSaveName",data:RecordingSaveName});*/
        	    	             }
                        }
                  	 }
                  }
              };
              //Pull-down event playback recording each record
              file_list_img[i].onclick = function() {
                 jQuery("ul:first", this.parentNode).slideToggle();
                 jQuery(l_dom_playback_search_body).mCustomScrollbar("update");
              };
              if(file_list_li_span[i])
              {
               var text_content_tmp4=(g_old_browser_version)?(file_list_li_span[i].innerText.length>2 && file_list_li_span[i].innerText.substring(0,7) != "00:00:00"):(file_list_li_span[i].textContent.length>2 && file_list_li_span[i].textContent.substring(0,7) != "00:00:00");
                if(text_content_tmp4)
                {
                    file_list_download_img[i].onclick = function() {
                    	 list_img_click=1;
                    	 if(g_is_play_back)
                    	 {
                    	    l_parent_callback({type:"delete_ipc", data:{node_sn:g_select_device_ipc}});
                    	 }
                    	 else
                    	 {
                          var CurrentRecordingSaveName=jQuery("span:first", this.parentNode.parentNode.parentNode)[0].innerHTML.replace(/:/g,".");
                          var progress_dom=jQuery("label", this.parentNode.parentNode)[0];
                          if(g_is_play_back_download)
                          {
                        		if(CurrentRecordingSaveName==mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName)
                        				l_parent_callback({type:"playback_download",path:CurrentRecordingSaveName,progress_dom:progress_dom});
                          }
                          else
                      	  {
                        		l_parent_callback({type:"playback_download",path:CurrentRecordingSaveName,progress_dom:progress_dom});
                          }
                       }
                    };
                    file_list_download_img[i].onmouseover = function() {
                        var CurrentRecordingSaveName=jQuery("span:first", this.parentNode.parentNode.parentNode)[0].innerHTML.replace(/:/g,".");
                    		if(!g_is_play_back_download || (g_is_play_back_download && CurrentRecordingSaveName!=mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName))
                    	  {
                    		    this.style.backgroundImage="url('/imgs/download_over_ico.png')";
                        }
                    };
                    file_list_download_img[i].onmouseout = function() {
                      var CurrentRecordingSaveName=jQuery("span:first", this.parentNode.parentNode.parentNode)[0].innerHTML.replace(/:/g,".");
                    	if(!g_is_play_back_download || (g_is_play_back_download && CurrentRecordingSaveName!=mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName))
                    	{
                    	    this.style.backgroundImage="url('/imgs/download_ico.png')";
                      }
                    };
                }
                else
                {
                    file_list_li_span[i].innerHTML=
                        "<span class='recording_ico'  style='display:inline-block;width:16px;height:15px;'></span>"
                        +"<div class='download_img' style='background-image: url("+download_img_src+");margin-right: 40px;float: right;height:16px;width:15px;display:none;'></div>"
    		    						;

    		    				var recording_ico = mx(".recording_ico",file_list_li_span[i])[0];
                    background_img_set(recording_ico, sub_img_status2);
                    playback_ico.parentNode.onclick = null;
                    playback_ico.parentNode.onmouseout = null;
                    playback_ico.parentNode.onmouseover =  null;
                }
            }
           }
           if(device_change && l_playback_list["list"].get_first())
           {
                file_list_li[0].click();
           }
        }
        function add_event()
        {
            l_me_parent.onmouseover = function(obj) {
                if(g_panel_box_all_w < g_panel_box_max_w)
                {
                    if(!g_old_browser_version)
                    {
                        jQuery(this).animate({opacity:"1"}, {queue:false, duration:400, easing:'easeOutQuint'});
                    }
                    jQuery(this).animate({width:g_panel_box_max_w}, {queue:false, duration:400, easing:'easeOutQuint'});
                    jQuery(l_dom_playback_search_panel).animate({right:"3"}, {queue:false, duration:400, easing:'linear'});

                    var temp_func = function(evt) {
                        var e = evt || window.event, target = e.target || e.srcElement;

                        if(!target || is_ancestor(l_me_parent, target)) return;

                        if(!g_old_browser_version)
                        {
                            jQuery(l_me_parent).animate({opacity:"0.5"}, {queue:false, duration:400, easing:'linear'});
                        }
                        jQuery(l_me_parent).animate({width:g_panel_box_all_w}, {queue:false, duration:400, easing:'linear'});
                        jQuery(l_dom_playback_search_panel).animate({right:g_panel_box_offset}, {queue:false, duration:400, easing:'linear'});

                        g_j_page.unbind("mouseup", temp_func);
                    };
                    g_j_page.bind("mouseup", temp_func);
                }
            };
            l_me_parent.onmouseout = function(obj) {
                if(g_panel_box_all_w < g_panel_box_max_w)
                {
                    if(!g_old_browser_version)
                    {
                        jQuery(this).animate({opacity:"0.5"}, {queue:false, duration:400, easing:'linear'});
                    }
                    jQuery(this).animate({width:g_panel_box_all_w}, {queue:false, duration:400, easing:'linear'});
                    jQuery(l_dom_playback_search_panel).animate({right:g_panel_box_offset}, {queue:false, duration:400, easing:'linear'});
                }
            };
        }
        function remove_event()
        {
        	l_me_parent.onmouseover = "";
        	l_me_parent.onmouseout = "";
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_dom_playback_search_panel[s_style][s_width] = g_panel_box_w + "px";
                        l_dom_playback_search_panel[s_style][s_height] = g_panel_box_h + "px";
                        l_dom_playback_search_panel[s_style].right = g_panel_box_offset + "px";
                        l_dom_playback_search_inner[s_style][s_width] = g_panel_box_w + "px";
                        l_dom_playback_search_inner[s_style][s_height] = g_panel_box_inner_h + "px";
                        l_dom_playback_search_body[s_style][s_cssText]="height:"+(l_dom_playback_search_inner.offsetHeight-20)+"px;";
                        jQuery(l_dom_playback_search_body).mCustomScrollbar("update");
                        break;
                    }
                case "playback_click":
                    {
                        file_list_li = mx(".file_list_li", l_dom_playback_search_body);
                        for(ptr=l_playback_list["list"].get_first(); ptr; ptr = ptr.next)
                        {
        	    	       if(obj.id=="playback_li"+ptr.data.msg_id)
        	    	        {
        	    	            for(j = 0 ; j < file_list_li.length; ++j)
                                {
                                   file_list_span[j][s_style].color="#eaeaea";
                                   if(file_list_li[j].id=="file_list_li"+ptr.data.msg_id)
                                   {
                                      if(g_hostname=="www.luxcamapp.eu")
                                      {
                                          file_list_li[j].firstChild.style.color="red";
                                      }
                                      else
                                      {
                                          file_list_li[j].firstChild.style.color="rgb(128, 165, 45)";
                                      }
                                   }
                                }
        	    	           RecordingToken=ptr.data.params[0].value;
                    	  	   l_parent_callback({type:"RecordingToken",data:RecordingToken});
        	    	        }
                        }
                        break;
                    }
                case "change_select_ipc":
                    {   //Empty playback list
                        l_dom_playback_search_body[s_innerHTML] = "<ul id='playback_file_list' ></ul>"
                        //Empty the list of stored data playback
            	          l_playback_list["list"].empty();
                        l_parent_callback({type:"playback_search_result",data:{inner_window_info:""}});
                        break;
                    }
                case "create_playback_file_list":
                    {
                        create_playback_file_list(obj.data);
                        break;
                    }
                case "play_pause":
                    {
                       //l_parent_callback({type:"add_playback",data:l_playback_list["list"]});
                       break;
                    }
                case "destroy":
                    {
                    	  remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_playback_search_box.");
            }
        }
        add_event();
    }
    function class_home_control_box(obj)
    {
        var l_me = this,l_recording = 0,//It indicates whether you are recording
            l_calling = 0,//Indicate whether you are calling
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            on_recording_timer,
            l_dom_control_left = dom_create_child(l_me_parent, "div", "home_control_left"),
            l_dom_control_right = dom_create_child(l_me_parent, "div", "home_control_right"),
            l_dom_control_center = dom_create_child(l_me_parent, "div", "home_control_center"),
            l_dom_device_list_switch,
            l_dom_ptz_control_switch,
            l_Last_speed=0,
            l_dom_play_div, l_dom_play_ico,
            l_dom_recording_div, l_dom_on_recording, l_dom_recording_ico,
            l_dom_snapshot_div, l_dom_snapshot_ico,
            l_dom_call_ico, l_dom_drop_down_arrow,l_dom_control_call_div,
            l_dom_sound_ico,
            l_dom_ipc_speed,//inner_ipc_speed1,inner_ipc_speed2,inner_ipc_speed3,inner_ipc_speed4,inner_ipc_speed5,
            l_inner_ipc_speed;//=[inner_ipc_speed1,inner_ipc_speed2,inner_ipc_speed3,inner_ipc_speed4,inner_ipc_speed5];

        l_dom_device_list_switch = dom_create_child(l_dom_control_left, "div", "device_list_switch"),
        background_img_set(l_dom_device_list_switch, sub_img_device_switch);

        l_dom_control_center[s_innerHTML] =
            "<div id='now_page_state'>"
            +   "<div style='position:absolute;left:0px'>"              //left:0px for IE7
            +       "<div id='now_page_state_bg_left' style='float:left;'></div>"
            +       "<div id='now_page_state_bg' style='width:" + (l_me_parent.offsetWidth - g_panel_box_all_w * 2 - 25*2) + "px;height:11px;"
            +           "float:left;background-color:#141517;border-bottom:1px solid #434446;'></div>"
            +       "<div id='now_page_state_bg_right' style='float:left;'></div>"
            +   "</div>"
            +   "<table style='left:50%;top:1px;position:absolute' cellspacing='0'><tr></tr></table>"            
            +"</div>"
            +"<table id='home_control_table'>"
            +   "<tr>"
            +       "<td id='ipc_speed' style='table-cell'>"
            +       "</td>"
            +       "<td>"
            +           "<div id='control_play_div'>"
            +               "<div class='operate'>"
            +                   "<div id='control_play_ico' title=" + mcs_play + " mouse_over=out></div>"
            +               "</div>"
            +           "</div>"
            +       "</td>"
            +       "<td>"
            +           "<div id='control_recording_div'>"
            +               "<div id='control_on_recording' class='operate'>"
            +                   "<a class='thumb' href='javascript:void(0)'><span>"
            +                       "<div id='control_recording_ico' title=" + mcs_record + "></div>"
            +                   "</span></a>"
            +               "</div>"
            +           "</div>"
            +       "</td>"
            +       "<td>"
            +           "<div id='control_snapshot_div'>"
            +               "<div class='operate'>"
            +                   "<div id='control_snapshot_ico' title=" + mcs_snapshot + "></div>"
            +               "</div>"
            +           "</div>"
            +       "</td>"
            +       "<td>"
            +           "<div id='control_call_div'>"
            +               "<div class='operate'>"
            +                   "<div id='control_call_ico' title=" + mcs_call + " mouse_over=out calling_state=normal></div>"
            +               "</div>"
            +           "</div>"
            +       "</td>"
            +       "<td>"
            +           "<div id='control_sound_div'>"
            +               "<div class='operate'>"
            +                   "<div id='control_sound_ico' title=" + mcs_sound + " style='margin-top: 5px;'></div>"
            +               "</div>"
            +           "</div>"
            +       "</td>"
            +   "</tr>"
            +"</table>";
        l_dom_control_center[s_style][s_cssText] = "width:" + (l_me_parent.offsetWidth - g_panel_box_all_w * 2) + "px;left:" + g_panel_box_all_w + "px";

        l_dom_ipc_speed=mx("#ipc_speed");
        l_dom_play_div = mx("#control_play_div");
        l_dom_play_ico = mx("#control_play_ico");
        l_dom_recording_div = mx("#control_recording_div");
        l_dom_on_recording = mx("#control_on_recording");
        l_dom_recording_ico = mx("#control_recording_ico");
        l_dom_snapshot_div = mx("#control_snapshot_div");
        l_dom_snapshot_ico = mx("#control_snapshot_ico");
        l_dom_sound_ico = mx("#control_sound_ico");
        l_dom_call_ico = mx("#control_call_ico");
        l_dom_drop_down_arrow = mx(".drop_down_arrow");
        l_dom_control_call_div=mx("#control_call_div");

        background_img_set(mx("#now_page_state_bg_left"), sub_img_view_bg3);
        background_img_set(mx("#now_page_state_bg_right"), sub_img_view_bg5);
        background_img_set(l_dom_play_ico, sub_img_play0);
        background_img_set(l_dom_recording_ico, sub_img_recording0);
        background_img_set(l_dom_snapshot_ico, sub_img_snapshot0);

        if(determine_the_version({type:"Anti",version:version_Category.Snapshot_version}))
        {
        	jQuery(l_dom_recording_div).hide();
        	jQuery(l_dom_snapshot_div).hide();
        	jQuery(l_dom_control_call_div).hide();
        }else
        {
          jQuery(l_dom_recording_div).show();
        	jQuery(l_dom_snapshot_div).show();
        	jQuery(l_dom_control_call_div).show();
        }

        background_img_set(l_dom_call_ico, sub_img_call0);

        for(var i = 0, length = l_dom_drop_down_arrow.length; i < length; ++i)
        {
            background_img_set(l_dom_drop_down_arrow[i], sub_img_arrow);
        }

        l_dom_control_right[s_innerHTML] = "<div id='ptz_control_switch'></div>";
        l_dom_ptz_control_switch = mx("#ptz_control_switch");
        background_img_set(l_dom_ptz_control_switch, sub_img_ptz_switch);
        background_img_set(l_dom_sound_ico, g_m_speaker_is_mute?sub_img_sound_close:sub_img_sound_open);
        //Change event handling equipment
        function change_select_ipc(obj)
        {
        	  if(determine_the_version({type:"Anti",version:version_Category.Snapshot_version}))
            {
        	    jQuery(l_dom_recording_div).hide();
        	    jQuery(l_dom_snapshot_div).hide();
        	    jQuery(l_dom_control_call_div).hide();
            }else if(determine_the_version({type:"Basic",version:version_Category.Info_version}))
            {
              jQuery(l_dom_recording_div).show();
        	    jQuery(l_dom_snapshot_div).show();
        	    jQuery(l_dom_control_call_div).show();
        	    background_img_set(l_dom_snapshot_ico, sub_img_snapshot0);
        	    if(l_recording){
        	    	ms.send_msg("record",{sn:obj.old_sn,keep_time:-1},null,record_ack);
        	    }
        	    if(l_calling){
        	    	l_calling = 0;
        	      var inner_window_index = g_select_inner_window.substr(g_select_inner_window.length - 1, 1);
                l_parent_callback({type:"call_button_clicked", data:{inner_window_index:inner_window_index}});
              }
            }else if(determine_the_version({type:"Positive",version:version_Category.Version_recording}))
            {
              jQuery(l_dom_recording_div).show();
        	    jQuery(l_dom_snapshot_div).show();
        	    jQuery(l_dom_control_call_div).show();
        	     background_img_set(l_dom_snapshot_ico, sub_img_snapshot0);
        	     if(l_recording){
        	    	 ms.send_msg("record",{sn:obj.old_sn,keep_time:-1},null,record_ack);
        	     }
        	     if(l_calling){
        	     	l_calling = 0;
        	      var inner_window_index = g_select_inner_window.substr(g_select_inner_window.length - 1, 1);
                l_parent_callback({type:"call_button_clicked", data:{inner_window_index:inner_window_index}});
               }
            }
        }
        function add_ipc_speed()
        {
          l_inner_ipc_speed = dom_create_child(l_dom_ipc_speed, "div");
          l_inner_ipc_speed[s_style][s_cssText]="position: absolute;right: "+20+"px;top: "+5+"px;  color:" + "white" +  ";font-size:10px;";
        }
        function adjust_play_button_state(obj)
        {
            if(obj.play_state == "play")
            {
            	  jQuery(l_dom_ipc_speed).show();
                if(l_dom_play_ico.getAttribute("mouse_over") == "over")
                    background_img_change_pos(l_dom_play_ico, sub_img_stop1);
                else
                    background_img_change_pos(l_dom_play_ico, sub_img_stop0);
            }
            else if(obj.play_state == "stop")
            {
            	  jQuery(l_dom_ipc_speed).hide();
                if(l_dom_play_ico.getAttribute("mouse_over") == "over")
                    background_img_change_pos(l_dom_play_ico, sub_img_play0);
                else
                    background_img_change_pos(l_dom_play_ico, sub_img_play1);
            }
        }
        function adjust_recording_button_state(obj)
        {
            var j_on_recording = jQuery(l_dom_on_recording);

            if(obj.recording_state == "recording")
            {
                background_img_change_pos(l_dom_recording_ico, sub_img_on_recording0);
                background_img_set(mx(".thumb", l_dom_on_recording)[0], sub_img_on_recording1);
                j_on_recording.find("span").fadeTo(1, 0);       //The initial set state matt
                clearInterval(on_recording_timer);
                on_recording_timer = setInterval(function() {
                    j_on_recording.find("span").stop().fadeTo(1000, 1).fadeTo(1000, 0);
                }, 2500);
            }
            else if(obj.recording_state == "normal")
            {
                background_img_change_pos(l_dom_recording_ico, sub_img_recording0)
                j_on_recording.find("a.thumb").css({'background' : ''});
                j_on_recording.find("span").fadeTo(1, 1);
                clearInterval(on_recording_timer);
            }
        }
        function adjust_calling_button_state(obj)
        {
            if(obj.calling_state == "calling")
            {
                l_dom_call_ico.setAttribute("calling_state", "calling");
                background_img_change_pos(l_dom_call_ico, sub_img_call2);
            }
            else if(obj.calling_state == "normal")
            {
                l_dom_call_ico.setAttribute("calling_state", "normal");
                if(l_dom_call_ico.getAttribute("mouse_over") == "over")
                    background_img_change_pos(l_dom_call_ico, sub_img_call1);
                else
                    background_img_change_pos(l_dom_call_ico, sub_img_call0);
            }
        }
        //Recording event returns
        function record_ack(msg,ref)
        {
           if(msg && msg.sd_ready == 0)
           {
               g_system_prompt_box(mcs_sdcard_not_ready, -10, -200);
           }else if(msg && msg.result==""){
           	  if(l_recording == 0)
               {
                  l_recording = 1;
                  adjust_recording_button_state({recording_state:"recording"});
               }
               else
               {
                  l_recording = 0;
                  adjust_recording_button_state({recording_state:"normal"});
               }
           }
        }
        function close_name_pop_menu(obj)
        {
            var i , length,
                control_name_setup = mx("#control_" + obj.name + "_setup"),
                name_setup_li = mx("." + obj.name + "_setup_li");
                //little_arrow = mx(".little_arrow")[0];

            if(control_name_setup && name_setup_li)
            {
                length = name_setup_li.length;
                for(i = 0; i < length; ++i)
                {
                    name_setup_li[i].onclick = "";
                }
            }
            page.onmouseup = "";
        }
        function add_event()
        {
            var play_ico_parent = l_dom_play_ico.parentNode,
                recording_ico_parent = l_dom_on_recording,
                snapshot_ico_parent = l_dom_snapshot_ico.parentNode,
                call_ico_parent = l_dom_call_ico.parentNode,
                sound_ico_parent = l_dom_sound_ico.parentNode;
            if(l_dom_device_list_switch)
            {
                l_dom_device_list_switch.onclick = function() {
                    if(g_device_list_switch == "open")
                    {
                        l_parent_callback({type:"operate_device_list_box", data:{state:"close"}});
                    }
                    else if(g_device_list_switch == "close")
                    {
                        l_parent_callback({type:"operate_device_list_box", data:{state:"open"}});
                    }
                };
            }
            //Play key events
            play_ico_parent.onmouseover = function() {
                l_dom_play_ico.setAttribute("mouse_over", "over");
                if(g_select_device_ipc && g_is_playing )
                    background_img_change_pos(l_dom_play_ico, sub_img_stop1);
                else
                    background_img_change_pos(l_dom_play_ico, sub_img_play1);
            };
            play_ico_parent.onmouseout = function() {
                l_dom_play_ico.setAttribute("mouse_over", "out");
                if(g_select_device_ipc && g_is_playing )
                    background_img_change_pos(l_dom_play_ico, sub_img_stop0);
                else
                    background_img_change_pos(l_dom_play_ico, sub_img_play0);
            };
            play_ico_parent.onclick = function() {
                if(g_select_device_ipc)
                 l_parent_callback({type:"play_button_onclick"});
            };

            //Recording key events
            recording_ico_parent.onmouseover = function() {
                if(l_recording == 0)
                    background_img_change_pos(l_dom_recording_ico, sub_img_recording1);
            };
            recording_ico_parent.onmouseout = function() {
                if(l_recording == 0)
                    background_img_change_pos(l_dom_recording_ico, sub_img_recording0);
            };
            recording_ico_parent.onclick = function() {
                if(g_select_device_ipc)
                {
                   if(l_recording == 0){
                     ms.send_msg("record",{sn:g_select_device_ipc,keep_time:60000},null,record_ack);
                   }else{
                   	 ms.send_msg("record",{sn:g_select_device_ipc,keep_time:-1},null,record_ack);
                   }
                }
            };
            //Snapshot button event
            snapshot_ico_parent.onmouseover = function() {
                background_img_change_pos(l_dom_snapshot_ico, sub_img_snapshot1);
            };
            snapshot_ico_parent.onmouseout = function() {
                background_img_change_pos(l_dom_snapshot_ico, sub_img_snapshot0);
            };
            snapshot_ico_parent.onclick = function() {
                if(g_select_device_ipc&& g_select_inner_window != "none")
                {
                   l_parent_callback({type:"get_snapshot_uri", data:{inner_window_index:1}});
                }
            };
            //Call key events
            call_ico_parent.onmouseover = function() {
                if(l_dom_call_ico.getAttribute("calling_state") == "normal")
                {
                    l_dom_call_ico.setAttribute("mouse_over", "over");
                    background_img_change_pos(l_dom_call_ico, sub_img_call1);
                }
            };
            call_ico_parent.onmouseout = function() {
                if(l_dom_call_ico.getAttribute("calling_state") == "normal")
                {
                    l_dom_call_ico.setAttribute("mouse_over", "out");
                    background_img_change_pos(l_dom_call_ico, sub_img_call0);
                }
            };
            call_ico_parent.onclick = function() {
                if(g_select_inner_ipc&&g_select_inner_window != "none")
                {
                	  //l_calling = (l_calling == 0)?1:0;
                    var inner_window_index = g_select_inner_window.substr(g_select_inner_window.length - 1, 1);
                    l_parent_callback({type:"call_button_clicked", data:{inner_window_index:inner_window_index}});
                }
            };
            //Sound key events
            sound_ico_parent.onclick =function() {
                if(g_m_speaker_is_mute)
                {
                     g_m_speaker_is_mute=0;
                     background_img_set(l_dom_sound_ico, sub_img_sound_open);

                }else{
                     g_m_speaker_is_mute=1;
                     background_img_set(l_dom_sound_ico, sub_img_sound_close);
                }
                l_parent_callback({type:"update_sound_settings"});
            };
            sound_ico_parent.onmouseover = function() {
                background_img_change_pos(l_dom_sound_ico,g_m_speaker_is_mute==1?sub_img_sound_close_over:sub_img_sound_open_over);
            };
            sound_ico_parent.onmouseout = function() {
                background_img_change_pos(l_dom_sound_ico,g_m_speaker_is_mute==1?sub_img_sound_close:sub_img_sound_open);
            };
            if(l_dom_ptz_control_switch)
            {
                l_dom_ptz_control_switch.onclick = function() {
                    if(g_ptz_control_switch == "open")
                    {
                        l_parent_callback({type:"operate_ptz_control_box", data:{state:"close"}});
                    }
                    else if(g_ptz_control_switch == "close")
                    {
                        l_parent_callback({type:"operate_ptz_control_box", data:{state:"open"}});
                    }
                };
            }
            add_ipc_speed();
        }
        function remove_event()
        {
            var i, class_operate = mx(".operate");

            if(l_dom_device_list_switch)
            {
                l_dom_device_list_switch.onclick = "";
                l_dom_device_list_switch.onmouseover = "";
                l_dom_device_list_switch.onmouseout = "";
            }

            for(i = 0; i < 4; ++i)
            {
                class_operate[i].onmouseover = "";
                class_operate[i].onmouseout = "";
                class_operate[i].onclick = "";
            }

            l_dom_ptz_control_switch.onmouseover = "";
            l_dom_ptz_control_switch.onmouseout = "";
            l_dom_ptz_control_switch.onclick = "";
            l_dom_play_div.onmouseover = "";
            l_dom_play_div.onmouseout = "";
            l_dom_recording_div.onmouseover = "";
            l_dom_recording_div.onmouseout = "";
            l_dom_snapshot_div.onmouseover = "";
            l_dom_snapshot_div.onmouseout = "";
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_dom_control_center.style.width = l_me_parent.offsetWidth - g_panel_box_all_w * 2 + "px";
                        l_dom_control_center.style.left = g_panel_box_all_w + "px";
                        mx("#now_page_state_bg").style.width = l_dom_control_center.offsetWidth - 25 * 2 + "px";
                        break;
                    }
                case "change_select_ipc"://Change event handling equipment
                    {
                        change_select_ipc(obj.data);
                        break;
                    }
                case "adjust_play_button_state":
                    {
                        adjust_play_button_state(obj.data);
                        break;
                    }
                case "adjust_calling_button_state":
                    {
                        adjust_calling_button_state(obj.data);
                        break;
                    }
                case "speed":
                    {
                        var kb=obj.p2p?"kB":"KB";
                        //for(var i=0;i<5;i++)
                    	  l_inner_ipc_speed[s_innerHTML]=obj.speeds>l_Last_speed?parseInt((obj.speeds-l_Last_speed)/1000)+kb:l_Last_speed=0;
                        l_Last_speed=obj.speeds;
                        break;
                    }
                case "profiles_play":
                    {
                        var  home_window_info = l_parent_callback({type:"get_inner_window_info", data:{index:obj.pos}});
                           if(obj.profile_token !== home_window_info.profile_token)
                                 l_parent_callback({type:"re_create_ipc", data:{inner_window_info:home_window_info, node_sn:home_window_info.node_sn}});
                         break;
                    }
                case "destroy":
                    {
                        remove_event();
                        if(l_recording){
        	    	           ms.send_msg("record",{sn:g_select_device_ipc,keep_time:-1},null,record_ack);
        	              }
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_home_control_box.");
            }
        }
        add_event();
    }
    function class_playback_control_box(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_search_begin_date = null,
            l_search_end_date = null,
            l_event_array = null,
            l_play_pause_timer = null,
            l_playback_slider_max_range = 1000,
            l_dom_playback_control_left = dom_create_child(l_me_parent, "div", "playback_control_left"),
            l_dom_playback_control_center = dom_create_child(l_me_parent, "div", "playback_control_center"),
            l_dom_device_list_switch,
            l_dom_rewind_ico, l_dom_previous_ico,
            l_dom_playback_ico, l_dom_next_ico,
            l_dom_forward_ico,l_dom_playback_slider_div,
            l_dom_control_rewind_div,l_dom_control_previous_div,
            l_dom_control_next_div,l_dom_control_forward_div;
        l_dom_device_list_switch = dom_create_child(l_dom_playback_control_left, "div", "device_list_switch");
        background_img_set(l_dom_device_list_switch, sub_img_device_switch);
        l_dom_playback_control_center[s_innerHTML] =
            "<div id='now_page_state'>"
            +   "<div style='position:absolute;left:0px;'>"
            +       "<div id='now_page_state_bg_left' style='float:left;'></div>"
            +       "<div id='now_page_state_bg' style='width:" + (l_me_parent.offsetWidth - g_panel_box_all_w * 2 - 25*2) + "px;height:11px;"
            +           "float:left;background-color:#141517;border-bottom:1px solid #434446;'></div>"
            +       "<div id='now_page_state_bg_right' style='float:left;'></div>"
            +   "</div>"
            +   "<div id='playback_slider_div'>"
            +       "<input name='slider' id='playback_slider' type='text'"
            +           "class='fd_tween fd_range_0_" + l_playback_slider_max_range + " fd_classname_extraclass fd_hide_input' value='0%'>"
            +       "</input>"
            +   "</div>"
            +"</div>"
            +"<table id='playback_control_table'>"
            +    "<tr>"
            +        "<td>"
            +            "<div id='control_rewind_div' class='operate'><div id='control_rewind_ico' title=" + mcs_info_rewind + "></div>"
            +        "</td>"
            +        "<td>"
            +            "<div id='control_previous_div' class='operate'><div id='control_previous_ico' title=" + mcs_previous_frame + "></div>"
            +        "</td>"
            +        "<td>"
            +            "<div id='control_play_div' class='operate' mouse_over=out><div id='control_playback_ico' title=" +mcs_play + "></div>"
            +        "</td>"
            +        "<td>"
            +            "<div id='control_next_div' class='operate'><div id='control_next_ico' title=" + mcs_next_frame + "></div>"
            +        "</td>"
            +        "<td>"
            +            "<div id='control_forward_div' class='operate'><div id='control_forward_ico' title=" + mcs_fast_forward + "></div>"
            +        "</td>"
            +    "</tr>"
            +"</table>";
        l_dom_playback_control_center[s_style][s_cssText] = "width:" + (l_me_parent.offsetWidth - g_panel_box_all_w * 2) + "px;"
            + "left:" + g_panel_box_all_w + "px";
        l_dom_rewind_ico = mx("#control_rewind_ico");
        l_dom_previous_ico = mx("#control_previous_ico");
        l_dom_playback_ico = mx("#control_playback_ico");
        l_dom_next_ico = mx("#control_next_ico");
        l_dom_forward_ico = mx("#control_forward_ico");
        l_dom_playback_slider_div = mx("#playback_slider_div");
        l_dom_control_rewind_div  = mx("#control_rewind_div");
        l_dom_control_previous_div= mx("#control_previous_div");
        l_dom_control_next_div    = mx("#control_next_div");
        l_dom_control_forward_div = mx("#control_forward_div");
        jQuery(l_dom_playback_slider_div).hide();
        jQuery(l_dom_control_rewind_div).hide();
        jQuery(l_dom_control_previous_div).hide();
        jQuery(l_dom_control_next_div).hide();
        jQuery(l_dom_control_forward_div).hide();

        background_img_set(mx("#now_page_state_bg_left"), sub_img_view_bg3);
        background_img_set(mx("#now_page_state_bg_right"), sub_img_view_bg5);
        background_img_set(l_dom_rewind_ico, sub_img_rewind0);
        background_img_set(l_dom_previous_ico, sub_img_previous0);
        background_img_set(l_dom_playback_ico, sub_img_play0);
        background_img_set(l_dom_next_ico, sub_img_next0);
        background_img_set(l_dom_forward_ico, sub_img_forward0);
        l_dom_playback_slider_div.style.width = (l_me_parent.offsetWidth - g_panel_box_all_w * 2 - 20) + "px";
        //Device triggered change event
        function change_select_ipc(obj)
        {
           adjust_play_button_state({play_state:"pause"});
        }
        function adjust_play_button_state(obj)
        {
            if(obj.play_state == "play")
            {
                if(l_dom_playback_ico.getAttribute("mouse_over") == "over")
                    background_img_change_pos(l_dom_playback_ico, sub_img_stop1);
                else
                    background_img_change_pos(l_dom_playback_ico, sub_img_stop0);
            }
            else if(obj.play_state == "pause")
            {
                l_parent_callback({type:"play_pause"});
                if(l_dom_playback_ico.getAttribute("mouse_over") == "over")
                    background_img_change_pos(l_dom_playback_ico, sub_img_play1);
                else
                    background_img_change_pos(l_dom_playback_ico, sub_img_play0);
            }
        }
        function playback_slider_value2date(obj)
        {
            var i, length,
                playback_slider = mx("#playback_slider");

            length = playback_slider.length;
            for(i = 0; i < length; ++i)
            {
                if(obj.value  == playback_slider[i].value)
                {
                    return parseInt(playback_slider[i].getAttribute("date"), 10);
                }
            }
        }
        function playback_slider_date2value(obj)
        {
            var i, length,
                playback_slider = mx("#playback_slider");
            length = playback_slider.length;
            for(i = 0; i < length; ++i)
            {
                if(obj.date <= parseInt(playback_slider[i].getAttribute("date"), 10))
                {
                    if(i > 0)
                        return parseInt(playback_slider[i - 1].value, 10);
                    else
                        return parseInt(playback_slider[i].value, 10);
                }
            }
            return parseInt(playback_slider[length - 1].value, 10);
        }
        function add_playback_slider_block(obj)
        {
            var i = 0, length,
                between_seconds, exchange_rate,
                block_div, block_w, block_h,
                begin_date = 0, end_date = 0,
                playback_slider;

            adjust_playback_slider(obj);
            playback_slider = mx("#fd-slider-playback_slider");
            between_seconds = (obj.data.l_search_end_date - obj.data.search_begin_date) / 1000;
            exchange_rate = (playback_slider.offsetWidth - 20) / between_seconds;
            length = obj.data.l_event_array.length;
            if(length && obj.data.l_event_array[0].type == "end")
            {
                if(playback_slider)
                {
                    between_seconds = (obj.data.l_event_array[0].date - obj.data.search_begin_date) / 1000;
                    block_div = dom_create_child(playback_slider, "div", "", "playback_slider_block");
                    block_w = between_seconds * exchange_rate;
                    if(block_w < 1) block_w = 1;
                    block_div.style.width = block_w + "px";
                    block_div.style.left = 10 + "px";
                }
                ++i;
            }
            for(; i < length; ++i)
            {
                if(obj.data.l_event_array[i].type == "begin")
                {
                    begin_date = obj.data.l_event_array[i].date;
                }
                else if(obj.data.l_event_array[i].type == "end")
                {
                    end_date = obj.data.l_event_array[i].date;
                }
                if(begin_date && end_date)
                {
                    between_seconds = (end_date - begin_date) / 1000;
                    if(between_seconds < 0)
                    {
                        log("error:return to the event begin time and end time does not match in class_playback_control_box.");
                        return;
                    }
                    if(playback_slider)
                    {
                        block_div = dom_create_child(playback_slider, "div", "", "playback_slider_block");
                        block_w = between_seconds * exchange_rate;
                        if(block_w < 1) block_w = 1;
                        block_l = ((begin_date - obj.data.search_begin_date) / 1000) * exchange_rate;
                        block_div.style.width = block_w + "px";
                        block_div.style.left += (block_l + 10) + "px";
                    }
                    begin_date = 0, end_date = 0;
                }
            }
            if(length && obj.data.l_event_array[length - 1].type == "begin")
            {
                if(playback_slider)
                {
                    between_seconds = (obj.data.l_event_array[evt_now_len - 1].date - obj.data.l_search_end_date) / 1000;
                    block_div = dom_create_child(playback_slider, "div", "", "playback_slider_block");
                    block_w = between_seconds * exchange_rate;
                    if(block_w < 1) block_w = 1;
                    block_l = ((obj.data.l_event_array[evt_now_len - 1].date - obj.data.search_begin_date) / 1000) * exchange_rate;
                    block_div.style.width = block_w + "px";
                    block_div.style.left += (block_l + 10) + "px";
                }
            }
            return 0;
        }
        function remove_playback_slider_block(obj)
        {
            var i, length,
                playback_slider = mx("#fd-slider-playback_slider"),
                playback_slider_block = mx(".playback_slider_block");

            if(playback_slider_block[0])
            {
                length = playback_slider_block.length;
                for(i = 0; i < length; ++i)
                {
                    playback_slider[s_removeChild](playback_slider_block[0]);
                    playback_slider_block[0] = null;
                }
            }
            return 0;
        }
        function adjust_playback_slider(obj)
        {
            var offset_seconds, date = new Date(), between;
            between = obj.data.l_search_end_date - obj.data.search_begin_date;
            date.setTime(obj.data.l_search_end_date);
            var i,  year, month, day, hour, minute, second,
                inner_html = "<select name='slider' id='playback_slider' type='text'"
                    + "class='fd_tween fd_range_0_" + l_playback_slider_max_range + " fd_classname_extraclass fd_hide_input "
                    + "fd_slider_cb_handle_g_playback_slider_callback fd_slider_cb_create_ms.TT-init_ex' value='0%'>";
            for(i = 0; i < l_playback_slider_max_range; ++i)
            {
                offset_seconds = Math.round(obj.data.search_begin_date + (between * i / l_playback_slider_max_range));
                date.setTime(offset_seconds);
                year = date.getFullYear();
                month = date.getMonth() + 1;
                day = date.getDate();
                hour = date.getHours();
                minute = date.getMinutes();
                second = date.getSeconds();

                inner_html += "<option value=" + i + " date=" + offset_seconds + ">"+ year + "年" + month + "月" + day + "日" + hour + ":" + minute + ":" + second + "</option>";
            }
            inner_html += "</select>";
            jQuery(l_dom_playback_slider_div).html(inner_html);
            fdSliderController.create();
        }
        function add_event(obj)
        {
            var rewind_ico_parent = l_dom_rewind_ico.parentNode,
                previous_ico_parent = l_dom_previous_ico.parentNode,
                playback_ico_parent = l_dom_playback_ico.parentNode,
                next_ico_parent = l_dom_next_ico.parentNode,
                forward_ico_parent = l_dom_forward_ico.parentNode;

            if(l_dom_device_list_switch)
            {
                l_dom_device_list_switch.onclick = function() {
                    if(g_device_list_switch == "open")
                    {
                        l_parent_callback({type:"operate_device_list_box", data:{state:"close"}});
                    }
                    else if(g_device_list_switch == "close")
                    {
                        l_parent_callback({type:"operate_device_list_box", data:{state:"open"}});
                    }
                };
            }
            rewind_ico_parent.onmouseover = function() {
                background_img_change_pos(l_dom_rewind_ico, sub_img_rewind1);
            };
            rewind_ico_parent.onmouseout = function() {
                background_img_change_pos(l_dom_rewind_ico, sub_img_rewind0);
            };
            rewind_ico_parent.onclick = function() {
            };
            previous_ico_parent.onmouseover = function() {
                background_img_change_pos(l_dom_previous_ico, sub_img_previous1);
            };
            previous_ico_parent.onmouseout = function() {
                background_img_change_pos(l_dom_previous_ico, sub_img_previous0);
            };
            previous_ico_parent.onclick = function() {
            };
            //回放界面 播放按键
            playback_ico_parent.onmouseover = function() {
                if(g_select_device_ipc && g_is_play_back)
                    background_img_change_pos(l_dom_playback_ico, sub_img_pause1);
                else
                    background_img_change_pos(l_dom_playback_ico, sub_img_play1);
            };
            playback_ico_parent.onmouseout = function() {
                if(g_select_device_ipc && g_is_play_back)
                    background_img_change_pos(l_dom_playback_ico, sub_img_pause0);
                else
                    background_img_change_pos(l_dom_playback_ico, sub_img_play0);
            };
            playback_ico_parent.onclick = function() {
                l_parent_callback({type:"playback_button_onclick"});
            };
            next_ico_parent.onmouseover = function() {
                background_img_change_pos(l_dom_next_ico, sub_img_next1);
            };
            next_ico_parent.onmouseout = function() {
                background_img_change_pos(l_dom_next_ico, sub_img_next0);
            };
            next_ico_parent.onclick = function() {
            };
            forward_ico_parent.onmouseover = function() {
                background_img_change_pos(l_dom_forward_ico, sub_img_forward1);
            };
            forward_ico_parent.onmouseout = function() {
                background_img_change_pos(l_dom_forward_ico, sub_img_forward0);
            };
            forward_ico_parent.onclick = function() {
            };
        }
        function remove_event()
        {
            var i, class_operate = mx(".operate");
            if(l_dom_device_list_switch)
            {
                l_dom_device_list_switch.onclick = "";
                l_dom_device_list_switch.onmouseover = "";
                l_dom_device_list_switch.onmouseout = "";
            }
            for(i = 0; i < 5; ++i)
            {
                class_operate[i].onmouseover = "";
                class_operate[i].onmouseout = "";
                class_operate[i].onclick = "";
            }
            g_playback_slider_callback = null;
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_dom_playback_control_center.style.width = (l_me_parent.offsetWidth - g_panel_box_all_w * 2) + "px";
                        l_dom_playback_control_center.style.left = g_panel_box_all_w + "px";
                        l_dom_playback_slider_div.style.width = l_dom_playback_control_center.offsetWidth - 20 + "px";
                        mx("#now_page_state_bg").style.width = l_dom_playback_control_center.offsetWidth - 25*2 + "px";;
                        fdSliderController.redrawAll();
                        break;
                    }
                case "playback_click":
                    {
                       // playback_ico_parent = l_dom_playback_ico.parentNode,
                        //jQuery(playback_ico_parent).click();
                        break;
                    }
                case "change_select_ipc"://Device triggered change event
                    {
                        change_select_ipc(obj.data);
                        break;
                    }
                case "adjust_playback_slider_position":
                    {
                        var i, length, offset_value, offset_date,
                            playback_slider = mx("#playback_slider");

                        if(obj.data.type == "absolute")
                        {
                            if(obj.data.date !== undefined)
                            {
                                length = playback_slider.length;
                                for(i = 0; i < length; ++i)
                                {
                                    if(obj.data.date <= parseInt(playback_slider[i].getAttribute("date"), 10))
                                    {
                                        offset_value = playback_slider[i].value - parseInt(mx(".fd-slider-handle", mx("#fd-slider-playback_slider"))[0].getAttribute("aria-valuenow"), 10);
                                        fdSliderController.increment("playback_slider", offset_value);
                                        return 0;
                                    }
                                }
                                offset_value = playback_slider[length- 1].value - parseInt(mx(".fd-slider-handle", mx("#fd-slider-playback_slider"))[0].getAttribute("aria-valuenow"), 10);
                                fdSliderController.increment("playback_slider", offset_value);
                                return 0;
                            }
                            else if(obj.data.value !== undefined)
                            {

                               // offset_value = obj.data.value - parseInt(mx(".fd-slider-handle", mx("#fd-slider-playback_slider"))[0].getAttribute("aria-valuenow"), 10);
                               // fdSliderController.increment("playback_slider", offset_value);
                                return 0;
                            }
                            else
                            {
                                log("error");
                                return -1;
                            }
                        }
                        else if(obj.data.type == "relative")
                        {
                            if(obj.data.date !== undefined)
                            {
                                offset_value = parseInt(mx(".fd-slider-handle", mx("#fd-slider-playback_slider"))[0].getAttribute("aria-valuenow"), 10);
                                offset_date = parseInt(playback_slider[offset_value].getAttribute("date"), 10) + obj.data.date;
                                length = playback_slider.length;
                                for(i = 0; i < length; ++i)
                                {
                                    if(offset_date <= parseInt(playback_slider[i].getAttribute("date"), 10))
                                    {
                                        offset_value = playback_slider[i].value - parseInt(mx(".fd-slider-handle", mx("#fd-slider-playback_slider"))[0].getAttribute("aria-valuenow"), 10);
                                        fdSliderController.increment("playback_slider", offset_value);
                                        return 0;
                                    }
                                }
                                offset_value = playback_slider[length - 1].value - parseInt(mx(".fd-slider-handle", mx("#fd-slider-playback_slider"))[0].getAttribute("aria-valuenow"), 10);
                                fdSliderController.increment("playback_slider", offset_value);
                            }
                            else if(obj.data.value !== undefined)
                            {
                                fdSliderController.increment("playback_slider",
                                        parseInt(mx(".fd-slider-handle", mx("#fd-slider-playback_slider"))[0].getAttribute("aria-valuenow") + obj.data.value, 10));
                                return 0;
                            }
                            else
                            {
                                log("error");
                                return -1;
                            }
                        }
                        break;
                    }
                case "query_playback_slider_value2date":
                    {
                        return playback_slider_value2date(obj.data);
                    }
                case "query_playback_slider_date2value":
                    {
                        return playback_slider_date2value(obj.data);
                    }
                case "add_playback_slider_block":
                    {
                        return add_playback_slider_block(obj);
                    }
                case "remove_playback_slider_block":
                    {
                        return remove_playback_slider_block(obj);
                    }
                case "adjust_play_button_state":
                    {
                        return adjust_play_button_state(obj.data);
                    }
                case "destroy":
                    {
                        clearInterval(l_play_pause_timer);
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_playback_control_box.");
            }
        }
        add_event(obj);
    }
    function class_status_bar(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_dom_status_content, j_status_content,
            l_dom_log_detail,
            l_dom_log_detail_header, l_dom_log_detail_content,
            l_log_list, l_log_list_ptr,
            l_inner_html = "";

        l_dom_status_content = dom_create_child(l_me_parent, "div", "status_content");
        j_status_content = jQuery(l_dom_status_content);
        j_status_content.addClass("status_content");

        jQuery(document).bind("keydown", function(e) {
            if(e.ctrlKey && e.altKey && e.keyCode == 77)
            {
                l_dom_status_content[s_innerHTML] = g_video_stream_uri;
            }
        });
        function add_event()
        {   //Click on the event message buffer
            l_dom_status_content.onclick = function()
            {
                if(!l_dom_log_detail)
                {
                    l_dom_log_detail = dom_create_child(page, "div", "log_detail");
                    l_log_list = log();
                    l_dom_log_detail_header = dom_create_child(l_dom_log_detail, "div", "log_detail_header");
                    l_dom_log_detail_content = dom_create_child(l_dom_log_detail, "div", "log_detail_content");
                    l_dom_log_detail_header.innerHTML = mcs_message_buffering;
                    l_inner_html = "<ul>";
                    for(l_log_list_ptr = l_log_list.get_first(); l_log_list_ptr; l_log_list_ptr = l_log_list_ptr.next)
                    {
                        l_inner_html += "<li>" + l_log_list_ptr.data.date + "&nbsp;&nbsp;&nbsp;" + l_log_list_ptr.data.info + "</li>";
                    }
                    l_inner_html += "</ul>";
                    l_dom_log_detail_content.innerHTML = l_inner_html;
                    var detail_offset_height = l_dom_log_detail.offsetHeight;
                    l_dom_log_detail.style.cssText = "height:0px;top:" + l_me_parent.offsetTop + "px;"
                                                 + "right:" + ((l_me_parent.offsetWidth - l_dom_log_detail.offsetWidth)) / 2 + "px;";

                    jQuery(l_dom_log_detail).animate({top:"-=" + detail_offset_height, height:detail_offset_height},
                            {queue:false, duration:detail_offset_height * 2, easing:"linear"});

                    //l_dom_log_detail.onmousedown = function(e) {
                    //    drag(this, e || window.event, null, null);
                    //};

                    var temp_func = function(evt) {
                        var e = evt || window.event, target = e.target || e.srcElement;

                        if(!target || is_ancestor(l_dom_log_detail, target)) return;

                        if(l_dom_log_detail)
                        {
                            jQuery(l_dom_log_detail).fadeOut("normal", function(){
                                page[s_removeChild](l_dom_log_detail);
                                l_dom_log_detail = null;
                            });
                        }
                        g_j_page.unbind("mouseup", temp_func);
                    };
                    g_j_page.bind("mouseup", temp_func);
                }
            };
        }
        function remove_event()
        {
        	l_dom_status_content.onclick = "";
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_me_parent.style.position="relative";
                        l_me_parent.style.bottom="0px";

                        if(g_now_page == "home" || g_now_page == "playback")
                            j_status_content.addClass("status_content");
                        else if(g_now_page == "manager" || g_now_page == "alarm" || g_now_page == "timeline")
                            j_status_content.removeClass("status_content");
                        break;
                    }
                case "destroy"://删除该组件
                    {
                    	  remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_status_bar.");
            }
        }
        add_event();
    }
    function class_manager_cntr(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            // dom
            l_dom_manager_page = dom_create_child(l_me_parent, "div", "manager_page"),
            // dom obj
            l_manager_page_obj;

        l_dom_manager_page[s_style][s_cssText] = "width:" + (l_me_parent.offsetWidth - g_panel_box_all_w) + "px;height:" + l_me_parent.offsetHeight + "px;";
        l_manager_page_obj = new class_manager_page({parent:l_dom_manager_page, on_event:on_event});

        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_dom_manager_page.style.width = l_me_parent.offsetWidth - g_panel_box_all_w + "px";
                        l_dom_manager_page.style.height = l_me_parent.offsetHeight + "px";
                        l_manager_page_obj.ctrl(obj);
                        break;
                    }
                case "select_net":
                case "select_device":
                    {
                        l_manager_page_obj.ctrl(obj);
                        break;
                    }
                case "destroy":
                    {
                        l_manager_page_obj.ctrl(obj);
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_manager_cntr.");
            }
        }
        function on_event(obj)
        {
            switch(obj.type)
            {
                case "change_device_name":
                case "refresh_menu":
                case "Refresh_devs":
                    {
                       l_parent_callback(obj);
                       break;
                    }
                case "delete_ipc":
                    {
                    	 l_parent_callback(obj);
                    	 break;
                    }
                default:
                    log("error:on_event's obj.type is not exist in class_manager_cntr.");
            }
        }
    }
    function class_manager_page(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            // data
            l_select_manager_option = "none",//It indicates the currently selected settings
            // dom
            l_dom_device_manager_list,
            l_dom_device_manager_content,
            // dom obj
            l_device_manager_list_obj,
            l_device_manager_content_obj;

        l_me_parent[s_innerHTML] = "<div id='device_manager_list'></div><div id='device_manager_content'></div>";
        l_dom_device_manager_list = mx("#device_manager_list");
        l_dom_device_manager_content = mx("#device_manager_content");



        function change_manager_content(obj)
        {
            l_device_manager_content_obj.ctrl({type:"options_destroy", data:{option:l_select_manager_option}});
            l_select_manager_option = obj.option;
            l_device_manager_content_obj.ctrl({type:"change_manager_content", data:obj});
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_device_manager_list_obj.ctrl(obj);
                        l_device_manager_content_obj.ctrl(obj);
                        jQuery(l_me_parent).mCustomScrollbar("update");
                        break;
                    }
                case "select_net":
                case "select_device":
                    {
                        l_device_manager_list_obj.ctrl(obj);
                        break;
                    }
                case "destroy":
                    {
                        l_device_manager_list_obj.ctrl(obj);
                        l_device_manager_content_obj.ctrl({type:"destroy", data:{option:l_select_manager_option}});
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_manager_cntr.");
            }
        }
        function on_event(obj)
        {
            switch(obj.type)
            {
                case "change_manager_content":
                    {
                        change_manager_content(obj.data);
                        break;
                    }
                case "select_net":
                {
                	 l_device_manager_content_obj.ctrl(obj);
                   break;
                }
                case "change_device_name":
                case "Refresh_devs":
                    {
                        l_parent_callback(obj);
                        break;
                    }
                case "delete_ipc":
                    {
                    	  l_parent_callback(obj);
                    	  break;
                    }
                default:
                    log("error:on_event's obj.type is not exist in class_manager_cntr.");
            }
        }
        l_device_manager_list_obj = new class_device_manager_list({parent:l_dom_device_manager_list, on_event:on_event});
        l_device_manager_content_obj = new class_device_manager_content({parent:l_dom_device_manager_content, on_event:on_event});
        //All created after clicking on
        jQuery("#product_information").click();
        jQuery(l_me_parent).mCustomScrollbar();
    }
    function class_device_manager_list(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_device_manager_li;

        l_me_parent[s_innerHTML] =
            "<div>"
            +"<div class='vertical_split_bar_4px'></div>"
            +"<ul id='device_manager_tree'>"
            +   "<li id='product_information'>"
            +       "<span>" + mcs_about + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='device_nickname' >"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_nickname + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='password_page' >"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_admin_password + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='guest_password_page' >"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_guest_password + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='network'>"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_network + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='OSD'>"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_osd + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='SD_card'>"
            +       "<div class='manager_split_bar_2px'></div><span>" + ((mcloud_agent.devs.get(g_select_device_ipc)).type=="BOX"?mcs_hard_disk:mcs_sdcord) + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='storage_device'>"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_storage_device + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='alarm'>"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_alarm_device + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='alarm_linkage'>"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_alarm_action + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='record_setting'>"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_scheduled_recording + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='notification'>"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_notification_center + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='time_date'>"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_date_time + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='system_maintain'>"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_system + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +   "<li id='others'>"
            +       "<div class='manager_split_bar_2px'></div><span>" + mcs_others + "</span><div class='translucent_layer' style='display:none'></div></li>"
            +"</ul>"
            +"</div>";

        l_device_manager_li = mx("/li", mx("#device_manager_tree"));               
        function add_event()
        {
            var me = this, j, i, length,
                 page_name = new Array("product_information", "device_nickname","password_page","guest_password_page", "network",
                        "OSD", "SD_card","storage_device", "alarm", "alarm_linkage","record_setting","notification", "time_date", "system_maintain", "others");
            length = l_device_manager_li.length;
            for( i = 0 ; i < length ; ++i )
            {
                l_device_manager_li[i].pos = i;
                l_device_manager_li[i].onmouseover = function() {
                    var j_this = jQuery(this);
                    if(mx(".translucent_layer", this)[0].style.display == "none")
                    {
                        j_this.animate({fontSize:g_now_lang == "ch" ? "18" : "16"}, {queue:false, duration:100, easing:'linear'});
                        if(!g_old_browser_version) j_this.animate({fontWeight:"800"}, {queue:false, duration:100, easing:'linear'});
                    }
                };
                l_device_manager_li[i].onmouseout = function() {
                    if(mx(".translucent_layer", this)[0].style.display == "none")
                    {
                        var j_this = jQuery(this);
                        j_this.animate({fontSize:"15"}, {queue:false, duration:100, easing:'linear'});
                        if(!g_old_browser_version) j_this.animate({fontWeight:"400"}, {queue:false, duration:100, easing:'linear'});
                    }
                };
                l_device_manager_li[i].onclick = function() {
                    if( g_select_device_ipc )
                    {
	                    	l_device_manager_li = mx("/li", mx("#device_manager_tree"));
	                    	for(j = 0 ; j < length; ++j)
	                    	{
	                            mx(".translucent_layer", l_device_manager_li[j])[0][s_style].display = "none";
	                            l_device_manager_li[j][s_style].fontSize = "15px";
	                            l_device_manager_li[j][s_style].fontWeight = "400";
	                            l_device_manager_li[j][s_style].color = "#f9f9f9";
	                            l_device_manager_li[j][s_style].letterSpacing = "0px";
	                    	}
	                    	mx(".translucent_layer", this)[0][s_style].display = "block";
	        	            if(determine_the_version({type:"Anti",version:version_Category.Snapshot_version}))
		        	         	{
		        	          	 	for(j = 0 ; j < length; ++j)
		                        {
		        	          	      if(page_name[j]=="SD_card"||page_name[j]=="storage_device" ||page_name[j]=="alarm" ||page_name[j]=="alarm_linkage")
		        	          	      {
		        	          	          jQuery(l_device_manager_li[j]).hide();
		        	          	      }
		        	          		}
		        	         	}else
		        	         	{
		        	            	for(j = 0 ; j < length; ++j)
		                        {
		        	          	  		if(page_name[j]=="SD_card" ||page_name[j]=="storage_device" ||page_name[j]=="alarm" ||page_name[j]=="alarm_linkage")
		        	          	      {
		        	          	          jQuery(l_device_manager_li[j]).show();
		        	          	      }
		        	          	  }
		        	          }
		        	         	if(determine_the_version({type:"Anti",version:version_Category.Version_recording}))
		        	         	{
		        	           		for(j = 0 ; j < length; ++j)
		                        {
		        	          	   		if(page_name[j]=="record_setting" )
		        	          	   		{
		        	          	          jQuery(l_device_manager_li[j]).hide();
		        	          	   		}
		        	          		}
		        	         	}else
		        	         	{
		        	             	for(j = 0 ; j < length; ++j)
		                        {
		        	               		if(page_name[j]=="record_setting" )
		        	          	   		{
		        	          	      		jQuery(l_device_manager_li[j]).show();
		        	          	   		}
		        	          		}
		        	         	}
		        	         	if(determine_the_version({type:"Anti",version:version_Category.Schedule_recording})) ///????????????
		        	          {
		        	              for(j = 0 ; j < length; ++j)
		                        {
		        	          	      if(page_name[j]=="guest_password_page" )
		        	          	      {
		        	          	          jQuery(l_device_manager_li[j]).hide();
		        	          	      }
		        	          	  }
		        	          }
	        	        }
	        	        else
	        	        {
        	              for(j = 0 ; j < length; ++j)
                        {
        	                  if(page_name[j]=="guest_password_page" )
        	          	      {
        	          	          jQuery(l_device_manager_li[j]).show();
        	          	      }
        	          	  }
	        	        }
                    this[s_style].fontWeight = "800";
                    if(g_hostname=="www.luxcamapp.eu")
                    {
                        this[s_style].color = "red";
                    }
                    else
                    {
                         this[s_style].color = "#80a52d";
                    }
                    if(g_now_lang == "ch")
                    {
                        this[s_style].fontSize = "18px";
                        this[s_style].letterSpacing = "2px";
                    }
                    else
                    {
                        this[s_style].fontSize = "16px";
                    }

                    if((mcloud_agent.devs.get(g_select_device_ipc)).type=="BOX")
                    {
                    	jQuery(OSD).hide();
                      jQuery(alarm).hide();
                      jQuery(alarm_linkage).hide();
                      jQuery(record_setting).hide();
                      jQuery(others).hide();
                      jQuery(storage_device).hide();
                    }
                    if(!g_domain_oems_luxcamapp)
                    {
                        jQuery(notification).hide();
                    }
                    if((mcloud_agent.devs.get(g_select_device_ipc)).img_ver.substr(0,2) < "v2")
                    {
                        jQuery(storage_device).hide();
                    }
                    l_parent_callback({type:"change_manager_content", data:{option:page_name[this.pos]}});
                    jQuery("#manager_page").mCustomScrollbar("update");
                }
            };
        }
        function remove_event()
        {
            var i, length = l_device_manager_li.length;
            for(i = 0; i < length; ++i)
            {
                l_device_manager_li[i].onmouseover = "";
                l_device_manager_li[i].onmouseout = "";
                l_device_manager_li[i].onclick = "";
            }
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
            	  case "update":
            	  {
            	  	 break;
            	  }
                case "select_net":
                {
                	 if(mx("#options_media_network") && mx("#options_media_network").style.display=="block")
                   {
                      l_parent_callback({type:"select_net"});
                   }
                   break;
                }
                case "select_device":
                    {
                        jQuery("#password_page").click();
                        break;
                    }
                case "destroy":
                    {
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_device_manager_list.");
            }
        };
        add_event();
    }

    function class_device_manager_content(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
	    l_body = mx("#options_box"),
            // dom
            l_dom_options_product_info,
            l_dom_options_device_nickname,
            l_dom_options_network,
            l_dom_options_OSD,
            l_dom_options_SD_card,
            l_dom_options_storage_device,
	    l_dom_options_scene,
            l_dom_options_attachmen,
            l_dom_options_auto,
            l_dom_options_alarm,
            l_dom_options_alarm_linkage,
            l_dom_options_time_date,
            l_dom_options_record_setting,
            l_dom_options_system_maintenance,
            l_dom_options_others,
            l_dom_options_password_page,
            l_dom_options_guest_password_page,
            l_dom_options_notification,
            l_dom_options_del_devices,
            // dom obj
            l_options_product_info_obj,
            l_options_device_nickname_obj,
            l_options_network_obj,
            l_options_OSD_obj,
            l_options_SD_card_obj,
            l_options_storage_device_obj,
            l_options_scene_obj,
            l_options_attachmen_obj,
            l_options_auto_obj,
            l_options_alarm_obj,
            l_options_alarm_linkage_obj,
            l_options_time_date_obj,
            l_options_record_setting_obj,
            l_options_system_maintenance_obj,
            l_options_others_obj,
            l_options_password_obj,
            l_options_guest_password_obj,
            l_options_notification_obj,
            l_options_delete_device_obj;

        function change_manager_content(obj)
        {
            switch(obj.option)
            {
               case "product_information":
                  {
                     l_dom_options_product_info = dom_create_child(l_me_parent, "div", "options_product_info");
                     l_options_product_info_obj = new class_options_product_info({parent:l_dom_options_product_info});
                     break;
                  }
               case "device_nickname":
                  {
                     l_dom_options_device_nickname = dom_create_child(l_me_parent, "div", "options_device_nickname");
                     l_options_device_nickname_obj = new class_options_device_nickname({parent:l_dom_options_device_nickname, on_event:on_event});
                     break;
                  }
               case "password_page":
                  {
                      l_dom_options_password_page = dom_create_child(l_me_parent, "div", "options_password_page");
                      l_options_password_obj  = new class_options_password_page({parent:l_dom_options_password_page, on_event:function(obj){return on_event(obj);}});
                     break;
                  }
               case "guest_password_page":
                  {
                     l_dom_options_guest_password_page = dom_create_child(l_me_parent, "div", "options_guest_password_page");
                       l_options_guest_password_obj =new class_options_guest_password({parent:l_dom_options_guest_password_page, on_event:function(obj){return on_event(obj);}});
                        break;
                  }
               case "network":
                  {
                      l_dom_options_network = dom_create_child(l_me_parent, "div", "options_media_network");
                      l_options_network_obj = new class_options_network({parent:l_dom_options_network});
                      break;
                  }
               case "OSD":
                  {
                       l_dom_options_OSD = dom_create_child(l_me_parent, "div", "options_OSD");
                       l_options_OSD_obj = new class_options_OSD({parent:l_dom_options_OSD});
                       break;
                  }
               case "notification":
                  {
                       l_dom_options_notification = dom_create_child(l_me_parent,"div","options_notification");
                       l_options_notification_obj = new class_options_notification({parent:l_dom_options_notification});
                       break;
                  }
               case "SD_card":
                  {
                       l_dom_options_SD_card = dom_create_child(l_me_parent, "div", "options_SD_card");
                       l_options_SD_card_obj = new class_options_SD_card({parent:l_dom_options_SD_card});
                       break;
                  }
               case "storage_device":
                  {
                       l_dom_options_storage_device = dom_create_child(l_me_parent, "div", "options_storage_device");
                        l_options_storage_device_obj = new class_options_storage_device({parent:l_dom_options_storage_device});
                       break;
                  }
               case "scene":
                  {
                       l_dom_options_scene = dom_create_child(l_body, "div", "options_scene");
                       l_options_scene_obj = new class_options_scene({parent:l_dom_options_scene});
                       break;
                  }
               case "attachmen":
                  {
                       l_dom_options_attachmen = dom_create_child(l_body, "div", "options_attachmen");
                       l_options_attachmen_obj = new class_options_attachmen({parent:l_dom_options_attachmen});
                       break;
                  }
               case "auto":
                  {
                       l_dom_options_auto = dom_create_child(l_body, "div", "options_auto");
                       l_options_auto_obj = new class_options_auto({parent:l_dom_options_auto});
                       break;
                  }
               case "alarm":
                  {
                        l_dom_options_alarm = dom_create_child(l_me_parent, "div", "options_alarm");
                        l_options_alarm_obj = new class_options_alarm({parent:l_dom_options_alarm,on_event:function(obj){return on_event(obj);}});
                        break;
                  }
               case "alarm_linkage":
                  {
                        l_dom_options_alarm_linkage = dom_create_child(l_me_parent, "div", "options_alarm_linkage");
                        l_options_alarm_linkage_obj=new class_options_alarm_linkage({parent:l_dom_options_alarm_linkage});
                        break;
                  }
               case "record_setting":
                  {
                        l_dom_options_record_setting = dom_create_child(l_me_parent, "div", "options_record_setting");
                        l_options_record_setting_obj =new class_options_record_setting({parent:l_dom_options_record_setting});
                        break;
                  }
               case "time_date":
                  {
                         l_dom_options_time_date = dom_create_child(l_me_parent, "div", "options_time_date");
                         l_options_time_date_obj = new class_options_time_date({parent:l_dom_options_time_date});
                        break;
                  }
               case "system_maintain":
                  {
                        l_dom_options_system_maintenance = dom_create_child(l_me_parent, "div", "options_system_maintenance");
                        l_options_system_maintenance_obj = new class_options_system_maintenance({parent:l_dom_options_system_maintenance});
                        break;
                  }
               case "others":
                  {
                        l_dom_options_others = dom_create_child(l_me_parent, "div", "options_others");
                        l_options_others_obj = new class_options_others({parent:l_dom_options_others});
                        break;
                  }
               case "del_dev":
                  {
                        l_dom_options_del_devices = dom_create_child(l_me_parent, "div", "delete_device");
                        l_options_delete_device_obj =new class_options_delete_device({parent:l_dom_options_del_devices});
                        break;
                  }
            }
        }
        function options_destroy(obj)                   //g_select_device_ipc == "none" did not create but select_device_ipc may change
        {
            if(obj.option == "product_information" && l_options_product_info_obj)
            {
                l_options_product_info_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_product_info);
                l_dom_options_product_info = null;
                l_options_product_info_obj = null;
            }
            else if(obj.option == "device_nickname" && l_options_device_nickname_obj)
            {
                l_options_device_nickname_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_device_nickname);
                l_dom_options_device_nickname = null;
                l_options_device_nickname_obj = null;
            }
            else if(obj.option=="password_page" && l_options_password_obj)
            {
                l_options_password_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_password_page);
                l_dom_options_password_page=null;
                l_options_password_obj =null;
            }
            else if(obj.option=="guest_password_page" && l_options_guest_password_obj)
            {
                l_options_guest_password_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_guest_password_page);
                l_dom_options_guest_password_page = null;
                l_options_guest_password_obj  = null;
            }
            else if(obj.option == "notification" && l_options_notification_obj)
            {
                l_options_notification_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_notification);
                l_dom_options_notification = null;
                l_options_notification_obj = null;
            }
            else if(obj.option == "network" && l_options_network_obj)
            {
                l_options_network_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_network);
                l_dom_options_network = null;
                l_options_network_obj = null;
            }
            else if(obj.option == "OSD" && l_options_OSD_obj)
            {
                l_options_OSD_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_OSD);
                l_dom_options_OSD = null;
                l_options_OSD_obj = null;
            }
            else if(obj.option == "SD_card" && l_options_SD_card_obj)
            {
                l_options_SD_card_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_SD_card);
                l_dom_options_SD_card = null;
                l_options_SD_card_obj = null;
            }
            else if(obj.option == "storage_device" && l_options_storage_device_obj)
            {
                l_options_storage_device_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_storage_device);
                l_dom_options_storage_device = null;
                l_options_storage_device_obj = null;
            }
            else if(obj.option == "alarm" && l_options_alarm_obj)
            {
                l_options_alarm_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_alarm);
                l_dom_options_alarm = null;
                l_options_alarm_obj = null;
            }
            else if(obj.option == "alarm_linkage" && l_options_alarm_linkage_obj)
            {
                l_options_alarm_linkage_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_alarm_linkage);
                l_dom_options_alarm_linkage = null;
                l_options_alarm_linkage_obj = null;
            }
            else if(obj.option == "record_setting" && l_options_record_setting_obj)
            {
                l_options_record_setting_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_record_setting);
                l_dom_options_record_setting = null;
                l_options_record_setting_obj = null;
            }
            else if(obj.option == "time_date" && l_options_time_date_obj)
            {
                l_options_time_date_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_time_date);
                l_dom_options_time_date = null;
                l_options_time_date_obj = null;
            }
            else if(obj.option == "system_maintain" && l_options_system_maintenance_obj)
            {
                l_options_system_maintenance_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_system_maintenance);
                l_dom_options_system_maintenance = null;
                l_options_system_maintenance_obj = null;
            }
            else if(obj.option == "others" && l_options_others_obj)
            {
                l_options_others_obj.ctrl({type:"destroy"});
                l_me_parent[s_removeChild](l_dom_options_others);
                l_dom_options_others = null;
                l_options_others_obj = null;
            }
            else if(obj.option == "del_dev" && l_options_delete_device_obj)
            {
            	  l_options_delete_device_obj.ctrl({type:"destory"});
            	  l_me_parent[s_removeChild](l_dom_options_del_devices);
            	  l_dom_options_del_devices = null;
            	  l_options_delete_devices_obj = null;
            }
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        if(l_options_product_info_obj)
                            l_options_product_info_obj.ctrl(obj);
                        else if(l_options_device_nickname_obj)
                            l_options_device_nickname_obj.ctrl(obj);
                        else if(l_options_network_obj)
                            l_options_network_obj.ctrl(obj);
                        else if(l_options_OSD_obj)
                            l_options_OSD_obj.ctrl(obj);
                        else if(l_options_SD_card_obj)
                            l_options_SD_card_obj.ctrl(obj);
                        else if(l_options_storage_device_obj)
                        		l_options_storage_device_obj.ctrl(obj);
                        else if(l_options_alarm_obj)
                            l_options_alarm_obj.ctrl(obj);
                        else if(l_options_alarm_linkage_obj)
                            l_options_alarm_linkage_obj.ctrl(obj);
                        else if(l_options_record_setting_obj)
                            l_options_record_setting_obj.ctrl(obj);
                        else if(l_options_time_date_obj)
                            l_options_time_date_obj.ctrl(obj);
                        else if(l_options_system_maintenance_obj)
                            l_options_system_maintenance_obj.ctrl(obj);
                        else if(l_options_others_obj)
                            l_options_others_obj.ctrl(obj);
                        break;
                    }
                case "options_destroy":
                    {
                        options_destroy(obj.data);
                        break;
                    }
                case "change_manager_content":
                    {
                        change_manager_content(obj.data);
                        break;
                    }
                case "select_net":
                    {
                        if(l_options_network_obj)
                            l_options_network_obj.ctrl(obj);
                        break;
                    }
                case "destroy":
                    {
                        options_destroy(obj.data);
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_device_manager_content.");
            }
        }
        function on_event(obj)
        {
            switch(obj.type)
            {
                case "change_device_name":
                case "Refresh_devs":
                    {
                        l_parent_callback(obj);
                        break;
                    }
                case "delete_ipc":
                    {
                    	  l_parent_callback(obj);
                    	  break;
                    }
                default:
                    log("error:on_event's obj.type is not exist in class_device_manager_content.");
            }
        }
    }
    function class_alarm_cntr(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_alarm_page_obj,
            l_dom_alarm_page = dom_create_child(l_me_parent, "div", "alarm_page");
            l_dom_alarm_page[s_style][s_cssText] = "width:" + (l_me_parent.offsetWidth - g_panel_box_all_w) + "px;height:" + (l_me_parent.offsetHeight * 0.9) + "px;"
            + "padding-top:" + (l_me_parent.offsetHeight * 0.05) + "px;padding-bottom:" + (l_me_parent.offsetHeight * 0.05) + "px";

        l_alarm_page_obj = new class_alarm_page({parent:l_dom_alarm_page, on_event:on_event});

        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_dom_alarm_page.style.width = l_me_parent.offsetWidth - g_panel_box_all_w + "px";
                        l_dom_alarm_page.style.height = (l_me_parent.offsetHeight*0.9) + "px";
                        l_dom_alarm_page.style.paddingTop = (l_me_parent.offsetHeight * 0.05) + "px";
                        l_dom_alarm_page.style.paddingBottom = (l_me_parent.offsetHeight * 0.05) + "px";
                        l_alarm_page_obj.ctrl(obj);
                        break;
                    }
                case "change_select_ipc":
                    {
                        l_alarm_page_obj.ctrl(obj);
                        break;
                    }
                case "refresh_alarm":
                    {
                        l_alarm_page_obj.ctrl(obj);
                        break;
                    }
                case "destroy":
                    {
                        l_alarm_page_obj.ctrl(obj);
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_alarm_cntr.");
            }
        }
        function on_event(obj)
        {
            switch(obj.type)
            {
                case "delete_notif_info":
                    {
                        l_parent_callback(obj);
                        break;
                    }
                case "change_select_ipc":
                    {
                        l_alarm_page_obj.ctrl(obj);
                        break;
                    }
                case "refresh_menu":
                    {
                       l_parent_callback(obj);
                       break;
                    }
                case "Refresh_devs":
                    {
                       l_parent_callback(obj);
                       break;
                    }
                default:
                    log("error:on_event's obj.type is not exist in class_alarm_cntr.");
            }
        }
    }
    function class_alarm_page(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_notif_info,
            l_trol, l_tcell,
            l_get_event_count = -30,//Information indicating each query interface 30 records
            l_search_time = 0X7fffffff,
            l_dom_log_search_list_content,
            l_dom_log_search_list_more,l_dom_log_search_list,
            l_dom_table_content,l_dom_alarm_list_content,
            l_big_image_items={},l_dom_log_search_option;

            l_me_parent[s_innerHTML]=
            "<div id='alarm_list_content' margin:0 auto;'>"
            +"<div id='table_content'>"
            + "<table id='alarm_search_content_tb' border='none'  cellspacing='0px' style='border-collapse:collapse'>"
            +  "<tr style='font-weight:700;border-top: 3px solid #444;'>"
            +      "<td style='width:75px;text-align:center'>"+mcs_index+"</td>"
            +      "<td style='width:170px;text-align:center'>" + mcs_image +"</td>"
            +      "<td style='width:220px;text-align:center'>" + mcs_time + "</td>"
            +      "<td style='width:220px;text-align:center'>" + mcs_messages + "</td>"
            +      "<td style='width:100px;text-align:center'>" + mcs_remark + "</td>"
            +  "</tr>"
            + "</table>"
            +"</div>"
            +"</div>";
            l_dom_table_content      = mx("#table_content");
            l_dom_alarm_list_content = mx("#alarm_list_content");
            l_dom_log_search_option  = dom_create_child(l_dom_alarm_list_content, "div", "log_search_option");
            l_dom_log_search_list    = dom_create_child(l_dom_alarm_list_content, "div", "log_search_list");

        l_dom_log_search_list_content = dom_create_child(l_dom_log_search_list, "div", "log_search_list_content");
        l_dom_log_search_list_more    = dom_create_child(l_dom_log_search_list, "div", "log_search_list_more", "standard_box_inner_style");
        l_dom_log_search_list_more[s_style][s_cssText]="width:790px;";
        l_dom_log_search_list_more[s_innerHTML] = mcs_more + 30 + mcs_bar;
        l_dom_alarm_list_content[s_style][s_cssText]="margin:0 auto;Height:"+(l_me_parent.offsetHeight-40)+"px;";
        //Get Info
        function ccm_message_search(){
           ms.send_msg("msgs_get",{sn:g_select_device_ipc,filter:"",start:l_search_time,counts:l_get_event_count},null,ccm_msg_get_ack);
        }
        //Return information
        function ccm_msg_get_ack(msg,ref)
        {
            if(!l_me_parent) return;
            counts=0;
            if(msg && msg.result == ""){
                var i, j, l_trol, l_tcell, ilength, jlength, str = "", now_params,sn = g_select_device_ipc;
                if(!msg.messages){
                	l_dom_table_content[s_innerHTML] =
                             "<table id='alarm_search_content_tb' border='none'  cellspacing='0px' style='border-collapse:collapse'>"
                             +  "<tr style='font-weight:700;border-top: 3px solid #444;'>"
                             +      "<td style='width:75px;text-align:cente'>"+mcs_index+"</td>"
                             +      "<td style='width:170px;text-align:cente'>" + mcs_image +"</td>"
                             +      "<td style='width:220px;text-align:center'>" + mcs_time + "</td>"
                             +      "<td style='width:220px;text-align:center'>" + mcs_messages + "</td>"
                             +      "<td style='width:100px;text-align:center'>" + mcs_remark + "</td>"
                             +  "</tr>"
                             +"</table>";
                  return;
                }
                if(msg.messages){
                    if(l_search_time==0X7fffffff || sn != msg.messages[0].sn){
                       l_dom_table_content[s_innerHTML] =
                             "<table id='alarm_search_content_tb' border='none'  cellspacing='0px' style='border-collapse:collapse'>"
                             +  "<tr style='font-weight:700;border-top: 3px solid #444;'>"
                             +      "<td style='width:75px;text-align:cente'>"+mcs_index+"</td>"
                             +      "<td style='width:170px;text-align:cente'>" + mcs_image +"</td>"
                             +      "<td style='width:220px;text-align:center'>" + mcs_time + "</td>"
                             +      "<td style='width:220px;text-align:center'>" + mcs_messages + "</td>"
                             +      "<td style='width:100px;text-align:center'>" + mcs_remark + "</td>"
                             +  "</tr>"
                             +"</table>";
                    }
                    ilength = msg.messages.length;
                    for(i = 0; i <ilength; i++){
                         if(mx("#alarm_search_content_tb"+msg.messages[i].msg_id))continue;
                         l_trol = mx("#alarm_search_content_tb").insertRow(-1);
                         l_tcell = l_trol.insertCell(-1);
                         l_tcell.innerHTML = "<td>"+msg.messages[i].msg_id+"</td>";
                         l_tcell = l_trol.insertCell(-1);
                         if(msg.messages[i].p){
                             now_params=msg.messages[i].p;
                             if(mx("#alarm_search_content_tb"+msg.messages[i].msg_id)){
                        	      continue;
                        	   }
                        	   for(j=0;j<now_params.length;j++){
                        		    if(now_params[j].n=="img_thumb_token"){
                        			     if(now_params[j].v!=0){
                        			        l_tcell.innerHTML = "<td><div class='alarm_search_content_tb_class'  id='alarm_search_content_tb"+msg.messages[i].msg_id+"' style='width:100%;height:40px;text-align:center;' ></div></td>";
                        			     }
                        		    }
                        	      else if(now_params[j].n=="img_token" ){
                        	         l_big_image_items["alarm_search_content_tb"+msg.messages[i].msg_id]={data:now_params[j].v};
                                }
                             }
                             if(l_tcell.innerHTML=="" || l_tcell.innerHTML==null)
                               l_tcell.innerHTML = "<td><div style='width:100%;height:40px;text-align:center;' id='alarm_search_content_tb"+msg.messages[i].msg_id+"'></div></td>";
                         }else{
                        	 l_tcell.innerHTML = "<td><div style='width:100%;height:40px;text-align:center;' id='alarm_search_content_tb"+msg.messages[i].msg_id+"'></div></td>";
                         }

                         l_tcell = l_trol.insertCell(-1);
                         l_tcell.innerHTML = "<td>" + (new Date(msg.messages[i].date * 1000).format("yyyy-MM-dd hh:mm:ss")) + "</td>";
                         l_tcell = l_trol.insertCell(-1);
                         l_tcell.innerHTML = "<td>" + log_comparison_table[msg.messages[i].type] + " " + (msg.messages[i].code!=""?log_comparison_table[msg.messages[i].code]:"") + "</td>"
                         l_tcell = l_trol.insertCell(-1);
                         l_tcell.innerHTML = "<td>&nbsp;</td>";
                    }
                    if(30<counts && l_search_time==0X7fffffff)
                    {
                        l_notif_info = g_notif_info["sn_" + g_select_device_ipc.toLowerCase()];
                        if(!l_notif_info)
                           l_notif_info = g_notif_info["sn_" + g_select_device_ipc.toUpperCase()];
                           l_search_time=l_notif_info.get_first().data.items.msg_id;
                    }else{
                        l_search_time=msg.messages[msg.messages.length-1].msg_id;
                    }

                    function getImage(array_i)
                    {
                        if(!msg.messages[array_i])return;
                        if(msg.messages[array_i].p){
                          if(mx("#alarm_search_content_tb"+msg.messages[array_i].msg_id)){
                             now_params=msg.messages[array_i].p;
                             var  image_mark=1;
                             for(j=0;j<now_params.length;j++){
                        	     if(now_params[j].n=="img_thumb_token" && now_params[j].v!=0 &&now_params[j].v!=""){
                        	         image_mark=0;
                        	         if(mx("#alarm_search_content_tb"+msg.messages[array_i].msg_id)[s_innerHTML]){
                        	              array_i++;
                        	              getImage(array_i);
                        	              break;
                        	         }
                        	         var Images = new Image();
                        	         Images.src= window.location.protocol+"//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid="+mcloud_account.create_nid()+"&dsess_sn="+sn+"&dtoken="+now_params[j].v;
                        	         Images.width="80";
                        	         Images.height="40";

                        	         jQuery("#alarm_search_content_tb"+msg.messages[array_i].msg_id).append(Images);
                        	         Images.onload=function(){
                        	            array_i++;
                        	            getImage(array_i);
                        	         }
                        	         Images.onerror=function(){
                        	            array_i++;
                        	            getImage(array_i);
                        	         }
                        	         break;
                        	     }
                        	   }
	                        	 if(image_mark)
	                        	 {
	                        	    array_i++;
	                        	    getImage(array_i);
	                        	 }
                          }
                        }
                    }
                    getImage(0);
                }
                if(msg.bound==0){
                    l_dom_log_search_list_more.style.display = "block";
                    l_dom_log_search_list_more.onclick = function() {
                        ccm_message_search();
                        l_dom_log_search_list_more.onclick = "";
                    };
                }else{
                    l_dom_log_search_list_more.style.display = "none";
                }
                var td_class= mx(".alarm_search_content_tb_class")
                for(i=0;i<td_class.length;i++){
                    //Image information interface information for each click event
                    td_class[i].onclick=function(){
                       if(l_big_image_items[this.id] &&  l_big_image_items[this.id].data !=""){
                           var urls= window.location.protocol+"//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+sn+"&dtoken="+l_big_image_items[this.id].data;
                           //Creating large preview
                           create_big_image_preview_div({resolution_w:640, resolution_h:360, uri:urls});
                       }
                    }
                }
                jQuery(l_dom_alarm_list_content).mCustomScrollbar("update");
            }else{
                log("error:ccm_message_search_ack return Result error in class_options_log.");
            }
        }
        function add_event()
        {
        	  jQuery(l_dom_alarm_list_content).mCustomScrollbar();
            jQuery(l_dom_alarm_list_content).mCustomScrollbar("scrollTo","bottom");
            l_dom_log_search_list_more.onmouseover=function(){
               l_dom_log_search_list_more.style.fontSize="16px";
               if(g_hostname=="www.luxcamapp.eu"){
                   l_dom_log_search_list_more.style.color="red";
               }else{
                   l_dom_log_search_list_more.style.color="rgb(128, 165, 45)";
               }
            }
            l_dom_log_search_list_more.onmouseout=function(){
               l_dom_log_search_list_more.style.fontSize="14px";
               l_dom_log_search_list_more.style.color="#bbb";
            }
        }
        function remove_event()
        {
            l_dom_log_search_list_more.onclick = "";
        }
        //Create information interface preview
        function create_big_image_preview_div(obj)
        {
            var correct_width, correct_height, prop,
                snapshot_preview_div = mx("#snapshot_preview_div"),
                snapshot_preview_inner = mx("#snapshot_preview_inner"),
                snapshot_preview_content = mx("#snapshot_preview_content");

            correct_width = obj.resolution_w;
            correct_height = obj.resolution_h;
            if(correct_width > g_web.offsetWidth * 8 / 10)
            {
                correct_width = parseInt(g_web.offsetWidth * 8 / 10);
                correct_height = parseInt(correct_width * obj.resolution_h / obj.resolution_w);
            }
            if(correct_height > g_web.offsetHeight * 8 / 10)
            {
                correct_height = parseInt(g_web.offsetHeight * 8 / 10);
                correct_width = parseInt(correct_height * obj.resolution_w / obj.resolution_h);
            }
            if(snapshot_preview_content)
            {
                snapshot_preview_div.style.width = correct_width + 13*2 + "px";
                snapshot_preview_div.style.height = correct_height + 13*2 + "px";
                snapshot_preview_div.style.left = ((g_web.offsetWidth - correct_width) / 2) + "px";
                snapshot_preview_div.style.top = ((g_web.offsetHeight - correct_height) / 2)  + "px";
                snapshot_preview_content.src = obj.uri;
            }else{
                var snapshot_preview_close;

                snapshot_preview_div = dom_create_child(page, "div", "snapshot_preview_div");
                snapshot_preview_div[s_style][s_cssText] = "width:" + (correct_width + 13*2) + "px;height:" + (correct_height + 13*2) + "px;"
                    + "left:" + ((g_web.offsetWidth - correct_width) / 2) + "px;"
                    + "top:" + ((g_web.offsetHeight - correct_height) / 2)  + "px;position:absolute;z-index:50";

                snapshot_preview_inner = dom_create_child(snapshot_preview_div, "div", "snapshot_preview_inner");
                snapshot_preview_inner[s_style][s_cssText] = "width:" + (correct_width + 13) + "px;height:" + (correct_height + 13) + "px;"
                    + "left:6px;top:6px;position:relative;";

                snapshot_preview_content = dom_create_child(snapshot_preview_inner, "img", "snapshot_preview_content");
                snapshot_preview_content[s_style][s_cssText] = "width:" + correct_width + "px;height:" + correct_height + "px;"
                    + "left:7px;top:7px;position:relative;";
                snapshot_preview_content.src = obj.uri;

                snapshot_preview_close = dom_create_child(snapshot_preview_div, "div", "snapshot_preview_close");
                snapshot_preview_close[s_style][s_cssText] = "position:absolute;right:0;top:0;cursor:pointer;";
                background_img_set(snapshot_preview_close, sub_img_close0);
                //Close preview key events
                snapshot_preview_close.onclick = function() {
                    snapshot_preview_close.onclick = "";
                    snapshot_preview_close.onmouseover = "";
                    snapshot_preview_close.onmouseout = "";
                    snapshot_preview_div[s_innerHTML] = "";
                    page[s_removeChild](snapshot_preview_div);
                    snapshot_preview_div = null;
                };
                snapshot_preview_close.onmouseover = function() {
                    background_img_change_pos(this, sub_img_close1);
                };
                snapshot_preview_close.onmouseout = function() {
                    background_img_change_pos(this, sub_img_close0);
                };
            }
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        l_dom_alarm_list_content[s_style][s_cssText]="margin:0 auto;Height:"+(l_me_parent.offsetHeight-40)+"px;";
                        jQuery(l_dom_alarm_list_content).mCustomScrollbar("update");
                        break;
                    }
                case "refresh_alarm"://mmq Refresh alarm
                    {
                    	  //The data interface information already exists
                        if(mx("#alarm_search_content_tb"+obj.data.item.items.msg_id)){
                             mx("#alarm_search_content_tb"+obj.data.item.items.msg_id)[s_innerHTML]="";
                             if(obj.data.item.items!=""){
                                if(obj.data.item.items.p){
                                   var Images =new Image();
                                    for(j=0;j<obj.data.item.items.p.length;j++){
                        	            if(obj.data.item.items.p[j].n=="img_thumb_token" &&  obj.data.item.items.p[j].v != "" && obj.data.item.items.p[j].v != 0){
                        	              Images.src=window.location.protocol+"//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+obj.data.item.items.sn+"&dtoken="+obj.data.item.items.p[j].v;
                                        Images.width=80;
                                        Images.height=40;
                                        break;
                                      }
                                    }
                                  jQuery("#alarm_search_content_tb"+obj.data.item.items.msg_id).append(Images);
                                }
                                //Remove all the binding events
                               jQuery("#alarm_search_content_tb"+obj.data.item.items.msg_id).unbind();
                               //Adding to the click event
                               mx("#alarm_search_content_tb"+obj.data.item.items.msg_id).onclick=function(){
                                   if(!obj.data.item.items.p){
				          return;
                                   }else{
                                      for(i=0;i<obj.data.item.items.p.length;i++){
                                         if(obj.data.item.items.p[i].n == "img_token"){
                                            var urls= window.location.protocol+"//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid="+mcloud_account.create_nid()+"&dsess_sn="+obj.data.item.items.sn+"&dtoken="+obj.data.item.items.p[i].v;
                                            create_big_image_preview_div({resolution_w:640, resolution_h:360, uri:urls});
                                         }
                                      }
                                  }
                               }
                             }
                            return;
                        }
                        //List Insert a row
                        l_trol = mx("#alarm_search_content_tb").insertRow(1);
                        //The newly inserted rows into a
                        l_tcell = l_trol.insertCell(-1);
                        l_tcell.innerHTML = "<td>"+obj.data.item.items.msg_id+"</td>";
                        l_tcell = l_trol.insertCell(-1);
                        l_tcell.innerHTML = "<td><div id='alarm_search_content_tb"+obj.data.item.items.msg_id+"'style='height:40px;'></div></td>";
                        if(obj.data.item.items.p){
                           var Images =new Image();
                           for(j=0;j<obj.data.item.items.p.length;j++){
                        	   if(obj.data.item.items.p[j].n=="img_thumb_token" &&  obj.data.item.items.p[j].v!="" && obj.data.item.items.p[j].v != 0){
                               Images.src = window.location.protocol+"//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+obj.data.item.items.sn+"&dtoken="+obj.data.item.items.p[j].v;
                               Images.width=80;
                               Images.height=40;
                             }
                           }
                           jQuery("#alarm_search_content_tb"+obj.data.item.items.msg_id).append(Images);
                        }
                        l_tcell = l_trol.insertCell(-1);
                        l_tcell.innerHTML = "<td>" + (new Date(obj.data.item.items.date * 1000).format("yyyy-MM-dd hh:mm:ss")) + "</td>";
                        l_tcell = l_trol.insertCell(-1);
                        l_tcell.innerHTML = "<td>" + log_comparison_table[obj.data.item.items.type] + " " + log_comparison_table[obj.data.item.items.code] + "</td>";
                        l_tcell = l_trol.insertCell(-1);
                        l_tcell.innerHTML = "<td>&nbsp;</td>";
                        if(obj.data.item.display)
                            l_trol.style.color = "#868686";
                        else
                            obj.data.item.display = 1;

                        mx("#alarm_search_content_tb"+obj.data.item.items.msg_id).onclick=function(){
                             if(!obj.data.item.items.p)return;
                             else{
                                for(i=0;i<obj.data.item.items.p.length;i++)
                                {
                                   if(obj.data.item.items.p[i].n=="img_token"){
                                       var urls= window.location.protocol+"//" + g_server_device + "/ccm/ccm_pic_get.jpg?hfrom_handle=887330&dsess=1&dsess_nid="+mcloud_account.create_nid()+"&dsess_sn="+obj.data.item.items.sn+"&dtoken="+obj.data.item.items.p[i].v;
                                       create_big_image_preview_div({resolution_w:640, resolution_h:360, uri:urls});
                                   }
                                }
                             }
                        };
                        jQuery(l_dom_alarm_list_content).mCustomScrollbar("update");
                        break;
                    }
                case "change_select_ipc":
                    {
                        //Empty original information
                        l_dom_table_content[s_innerHTML] =
                        "<table id='alarm_search_content_tb' border='none'  cellspacing='0px' style='border-collapse:collapse'>"
                        +  "<tr style='font-weight:700;border-top: 3px solid #444;'>"
                        +      "<td style='width:75px;text-align:cente'>"+mcs_index+"</td>"
                        +      "<td style='width:170px;text-align:cente'>" + mcs_image +"</td>"
                        +      "<td style='width:220px;text-align:center'>" + mcs_time + "</td>"
                        +      "<td style='width:220px;text-align:center'>" + mcs_messages + "</td>"
                        +      "<td style='width:100px;text-align:center'>" + mcs_remark + "</td>"
                        +  "</tr>"
                        +"</table>";
                        l_search_time = 0X7fffffff;
                        l_dom_log_search_list_more.style.display = "none";
                        ccm_message_search();
                        break;
                    }
                case "destroy":
                    {
                    	  l_dom_log_search_list.style.height = l_me_parent.parentNode.offsetHeight - l_dom_log_search_option.offsetHeight + "px";
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_alarm_page.");
            }
        }
        add_event();
        if(g_select_device_ipc){
          ccm_message_search();
        }
    }
    function class_timeline_bottom(obj)
    {
    		var l_me = this,
    				l_me_parent = obj.parent,
    				l_parent_callback = obj.on_event,
    				l_dom_timeline_bottom_center,
    				l_dom_timeline_calendar_input,
    				l_dom_timeline_return,
    				handle_val,
    				l_playback_token = "",
    	      l_playback_end_token = "",
    	      l_playback_ture = 0,
    	      l_video_token = "",
    	      l_video_end_token = "",
    	      l_video_start_token = "",
    	      l_sub_video_start_token = "",
    	      l_dom_playback_progressbar,
    	      l_playback_video_token,
    	      l_video_total_time,
    	      l_slider_start_time,
    	      l_slider_end_time,
    	      l_dom_video_pause_btn,
    	      l_dom_video_play_btn,
    	      l_dom_video_download;
    				
    		l_dom_timeline_bottom_center = dom_create_child(l_me_parent, "div", "timeline_bottom_center");    		
    		l_dom_timeline_bottom_center[s_style][s_cssText]="width:" + (l_me_parent.offsetWidth - g_panel_box_all_w * 2) + "px;left:" + g_panel_box_all_w*(g_browser_IE67_version?1:1.5) + "px;position:absolute;";
    		
    		l_dom_timeline_bottom_center[s_innerHTML]=
    		"<div id='timeline_page_state'>"
        +   "<div style='position:absolute;left:0px'>"              //left:0px for IE7
        +       "<div id='timeline_page_state_bg_left' style='float:left;'></div>"
        +       "<div id='timeline_page_state_bg' style='width:" + (l_me_parent.offsetWidth - g_panel_box_all_w * 2 - 25*2) + "px;height:11px;"
        +           "float:left;background-color:#141517;border-bottom:1px solid #434446;'></div>"
        +       "<div id='timeline_page_state_bg_right' style='float:left;'></div>"
        +   "</div>"
        +   "<table style='left:50%;top:1px;position:absolute' cellspacing='0'><tr></tr></table>"
        +   "<div id='video_slider'>"
        +       "<label for='video_progressbar'></label>"
        +       "<input name='slider' type='text' id='video_progressbar' class='fd_tween fd_classname_extraclass fd_hide_input "
        +           "fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update' value='0%'</input>"
        +   "</div>"
        +"</div>"
        +"<div id='timeline_control_page'>"
        +   "<div style='position:absolute;float:left;'>"
        +   		"<div id='timeline_return'>< "+ mcs_back +"</div>"
        +		"</div>"
        +   "<div id='video_control' style='margin-top:-5px;'>"
        +       "<div id='return_video_list' class='return_video_list0' style='float:left;margin-right:15px;'></div>"
        +       "<div id='video_pause_btn' class='pause_video0' style='float:left;'></div>"
        +       "<div id='video_play_btn' class='play_video0' style='float:left;'></div>"
        +       "<div id='download_btn' class='video_download' style='float:left;'></div>"
        +       "<div id='download_pro' class='video_pro'></div>"
	      +       "<div id='vs_time' style='float:left;font-size:14px;margin-left:24px;color:#ffffff;'></div>"
	      +       "<div id='ve_time' style='float:left;font-size:14px;color:#ffffff;'></div>"
	      +   "</div>"
        +   "<div id='timeline_calendar_div' style='position:absolute;right:0;display:none;'>"
        +				"<div id='timeline_calendar'>" + mcs_date + "</div>"
        +       "<input id='timeline_calendar_input' type='text'>" 
        +   "</div>"
        +"</div>";
        
        l_dom_timeline_calendar_input = mx("#timeline_calendar_input");
        l_dom_timeline_return = mx("#timeline_return");
        l_dom_return_video_list = mx("#return_video_list");
        l_dom_video_pause_btn = mx("#video_pause_btn");
        l_dom_video_play_btn = mx("#video_play_btn");
        l_dom_video_download = mx("#download_btn");
                
        background_img_set(mx("#timeline_page_state_bg_left"), sub_img_view_bg3);
        background_img_set(mx("#timeline_page_state_bg_right"), sub_img_view_bg5);
        
        fdSliderController.create();
        jQuery("#timeline_calendar_input").hide();
        jQuery("#video_slider").hide();
        jQuery("#video_control").hide();
        l_dom_timeline_return.style.display = "none";        

        function progress_bar(obj)
        {
        		if(g_slider_data){
          			l_parent_callback({type:"clearSpeed"});
          			moveProgressBar();
          			g_slider_data=0;      	
			}else{
        				var l_video_total_time = g_slider_end - g_slider_start;
            		var play_pro = obj.speed/l_video_total_time;
            		var playback_data = Number(parseInt(play_pro*100)) + Number(handle_val?handle_val:0);
            		fdSliderController.increment("video_progressbar",playback_data-mx("#video_progressbar").value);
            		if(playback_data >= 100){
            			  l_parent_callback({type:"delete_ipc",dev_sn:g_select_box_ipc});
            			  l_dom_video_pause_btn.style.display = "none";
        				    l_dom_video_play_btn.style.display = "block";
            		}
        		}
        }            
        function moveProgressBar(){
        		handle_val = mx("#video_progressbar").value;
						var video_token_add = parseInt((handle_val*l_video_token)/100);
						l_playback_video_token = l_sub_video_start_token +"_" + (Number(video_token_add)+Number(l_video_start_token))							
						if(g_is_play_back){
	        			l_parent_callback({type:"delete_ipc",dev_sn:g_select_box_ipc});
	        			l_parent_callback({type:"RecordingToken", data:l_playback_video_token});
	              l_parent_callback({type:"create_ipc",dev_sn:g_select_box_ipc});       	  
		  }else{
	        	  	l_parent_callback({type:"RecordingToken", data:l_playback_video_token});
	              l_parent_callback({type:"create_ipc",dev_sn:g_select_box_ipc});
        	  }
        }
        function video_download (obj) {
                var CurrentRecordingSaveName=document.getElementById("vs_time").innerHTML;
                if(g_is_play_back_download){
                	 if(CurrentRecordingSaveName==mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName)
                	 l_parent_callback({type:"playback_download"});
                }else{
                   l_parent_callback({type:"RecordingToken", data:l_playback_token});
                   l_parent_callback({type:"RecordingSize",data:(g_slider_end-g_slider_start)*1000});
                	 l_parent_callback({type:"playback_download",path:CurrentRecordingSaveName,way:obj.data});
                	 jQuery("#vs_time").hide();
                   jQuery("#ve_time").hide();
                   jQuery("#video_slider").hide();
                   jQuery("#video_pause_btn").hide();
                   jQuery("#video_play_btn").hide();
                   jQuery("#download_pro").show();
                }
        }
        function add_event()
        {
        		l_dom_timeline_return.onclick = function(){
    		        mx("#box_dev_history_cont").style.display="none";
                mx("box_dev_history_page")[s_innerHTML]="";
                mx("#box_dev_cont").style.display="block";
                mx("#timeline_calendar_div").style.display = "none";
                this.style.display = "none";      			
        		};
        		l_dom_return_video_list.onmouseover = function(){
        				l_dom_return_video_list.className = "return_video_list1";
        		};
        		l_dom_return_video_list.onmouseout = function(){
        				l_dom_return_video_list.className = "return_video_list0";
        		};
        		l_dom_return_video_list.onclick = function(){
        				l_parent_callback({type:"delete_ipc",dev_sn:g_select_box_ipc});
        				fdSliderController.increment("video_progressbar",-100);
        				handle_val = 0;
        				mx("#box_dev_history_cont").style.display = "block";
        				mx("#timeline_calendar_div").style.display = "block";
        				l_dom_timeline_return.style.display = "block";
        				var dev_type=mcloud_agent.devs.get(g_select_device_ipc).type;
                if(dev_type != "BOX"){
                    this.style.display = "none";
                }
                jQuery("#video_slider").hide();
                jQuery("#video_control").hide();
        		};
        		l_dom_video_play_btn.onmouseover = function(){
        				l_dom_video_play_btn.className = "play_video1";
        		};
        		l_dom_video_play_btn.onmouseout = function(){
        				l_dom_video_play_btn.className = "play_video0";
        		};
        		l_dom_video_play_btn.onclick = function(){
        				l_dom_video_play_btn.style.display = "none";
        				l_dom_video_pause_btn.style.display = "block";
        				l_parent_callback({type:"RecordingToken", data:(l_playback_video_token?l_playback_video_token:l_playback_token)});
                l_parent_callback({type:"create_ipc",dev_sn:g_select_box_ipc});
        		};
        		l_dom_video_pause_btn.onmouseover = function(){
        				l_dom_video_play_btn.className = "pause_video1";
        		};
        		l_dom_video_pause_btn.onmouseout = function(){
        				l_dom_video_play_btn.className = "pause_video0";
        		};
        		l_dom_video_pause_btn.onclick = function(){
        				l_dom_video_pause_btn.style.display = "none";
        				l_dom_video_play_btn.style.display = "block";
        				l_parent_callback({type:"delete_ipc",dev_sn:g_select_box_ipc});        				
        		};
        		l_dom_video_download.onclick = function(){
        			  if(g_is_play_back){
	            	   l_parent_callback({type:"delete_ipc",dev_sn:g_select_device_ipc});
	            	}
                if(g_is_play_back_download){
                	 video_download();
                }else{
                   if(mlocal_storage.get("download_path")){
                	   video_download({data:mlocal_storage.get("download_path")});
                	 }else {
                	 	 l_parent_callback({type:"download_path"});
                	 }
                }
        		};
        }
        
        l_me.ctrl = function(obj)
        {
        		switch(obj.type)
        		{
        				case "update":
        						{
        								l_dom_timeline_bottom_center.style.width = l_me_parent.offsetWidth - g_panel_box_all_w * 2 + "px";
        								l_dom_timeline_bottom_center.style.left = g_panel_box_all_w*(g_browser_IE67_version?1:1.5) + "px";
        								mx("#timeline_page_state_bg").style.width = l_me_parent.offsetWidth - g_panel_box_all_w * 2 - 25*2 + "px";
        								break;
        						}
        				case "speed":
        						{
        								progress_bar(obj);
        								break;
        						}
        				case "playbackSlider":
        						{
  	          	 				l_playback_token = obj.data.token;
  	          	 				l_playback_end_token = obj.data.end_token;
  	          	 				l_video_end_token = l_playback_end_token.substring(l_playback_end_token.indexOf("_")+1);
  	          	 				l_video_end_token = l_video_end_token.substring(l_video_end_token.indexOf("_")+1);
  	          	 				l_sub_video_start_token = l_playback_token.substring(0, l_playback_token.lastIndexOf("_"));
  	          	 				l_video_start_token = l_playback_token.substring(l_playback_token.indexOf("_")+1);
  	          	 				l_video_start_token = l_video_start_token.substring(l_video_start_token.indexOf("_")+1);
  	          	 				l_playback_node_sn = obj.data.node_sn;
  	          	 				l_video_token = l_video_end_token - l_video_start_token;
  	          	 				document.getElementById("vs_time").innerHTML = obj.data.s_time;
  	          	 				document.getElementById("ve_time").innerHTML = "/" + obj.data.e_time;
  	          	 				break;
        						}
        				case "destroy":
        						{
        								l_me_parent[s_innerHTML]="";
        								l_me_parent=null;
        								break;
        						}
        				case "download_save_path":
        				    {
        				    	  video_download(obj);
        				    	  break;
        				    }
        		}
        }
        add_event();
    }
    function class_timeline_cntr(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_timeline_box_obj,
            l_b64_str_array=[],
            l_canvas_dom_array=[],
            l_canvas_index=0,
            l_ctx, l_img_data,
            l_timer = l_init_timer = null,
            l_u8_data,l_last_buffer,
            l_nal, l_nal_len,
            l_start, l_frame,
            l_loop_num=0,
            l_download_progress_timeout, 
            l_old_progress,         
            l_pos = g_view_link.pos(g_select_device_ipc) + 1,
            l_dom_timeline_page = dom_create_child(l_me_parent, "div", "timeline_page"),
            l_dom_timeline_bottom = dom_create_child(l_me_parent, "div", "timeline_bottom"),
            l_dom_view_page = dom_create_child(l_dom_timeline_page, "div", "view_page"),
            l_view_page_obj,l_dom_box_dev_list,l_box_dev_list_obj,l_timeline_bottom_obj,
            l_dom_box_dev_history_cont,l_dom_box_dev_history_list,l_dom_box_dev_cont,
            l_dom_box_dev_cont=dom_create_child(l_dom_timeline_page, "div", "box_dev_cont");
            l_dom_box_dev_list=dom_create_child(l_dom_box_dev_cont, "div", "box_dev_list");
            l_dom_box_dev_page = dom_create_child(l_dom_box_dev_list, "div", "box_dev_page");
            l_dom_box_dev_history_cont=dom_create_child(l_dom_timeline_page, "div", "box_dev_history_cont");
            
        l_dom_box_dev_list_temp = l_dom_box_dev_list;
        jQuery(l_dom_box_dev_cont).mCustomScrollbar();
        
        l_dom_box_dev_history_list=dom_create_child(l_dom_box_dev_history_cont, "div", "box_dev_history_list");
		    l_dom_timeline_bottom[s_style][s_cssText] = "width:" + g_cntr_content_w + "px;height:" + g_control_box_h + "px;";
		    l_timeline_bottom_obj= new class_timeline_bottom({parent:l_dom_timeline_bottom, on_event:function(obj){return on_event(obj);}});
		            		
        l_dom_timeline_page.style[s_cssText]  = "width:" + (l_me_parent.offsetWidth - g_panel_box_all_w) + "px;height:" + l_me_parent.offsetHeight + "px;";
        l_dom_view_page.style[s_cssText] = "width:" + (l_me_parent.offsetWidth-g_panel_box_all_w*2) + "px;position: relative;"
            + "height:" + (l_me_parent.offsetHeight - g_control_box_h) + "px;left:" + g_panel_box_all_w*(g_browser_IE67_version?0:0.5) + "px;";

        l_view_page_obj = new class_view_page({parent:l_dom_view_page, type:"create", on_event:function(obj){return on_event(obj);}});
        adjust_screen();
				
				l_box_dev_list_obj = new class_box_dev_list({parent:l_dom_box_dev_history_list, on_event:function(obj){return on_event(obj);}});
        
        function playback_download (obj) {
	        	var sn=g_select_device_ipc;
	      		var node = mcloud_agent.devs.get(g_select_device_ipc);
	      		l_old_progress = 0;
	      		clearTimeout(l_download_progress_timeout);
	      		if(g_is_play_back_download){
	                document.getElementById("download_pro").innerHTML=(g_is_play_back_download && obj.iscomplete)?"100%":"×";
	                delete_ipc({node_sn:sn,isDownload:0});
	                jQuery("#download_pro").hide();
	                jQuery("#vs_time").show();
	                jQuery("#ve_time").show();
	                jQuery("#video_slider").show();
	                jQuery("#video_pause_btn").hide();
	                jQuery("#video_play_btn").show();
	                g_is_play_back_download = 0;	         
		  }else{
	                if(navigator.platform.indexOf("Win") > -1)
	                {
	                    create_ipc({node_sn:sn,isDownload:1,localPath:obj.way.replace(/[/]/g,'\\/')+obj.path.replace(/:/g,".")+".mp4"});
	                }
	          			else if(navigator.platform.indexOf("Mac") > -1){
	          			    create_ipc({node_sn:sn,isDownload:1,localPath:obj.way.replace(/[/]/g,'\\/')+obj.path.replace(/:/g,".")+".mp4"});
	          			}
	          			mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName=obj.path;
	          }
        }
        function adjust_screen()
        {
            setTimeout(function(){
                mx("#view_page_bg").style.top=(g_browser_IE67_version?0:-12)+"px";
            },100);
            l_dom_box_dev_cont[s_style][s_cssText] ="left:"+(g_panel_box_all_w*(g_browser_IE6_version?0:1.5)+(g_browser_IE7_version?30:0))+"px;width:"+l_dom_view_page.clientWidth+"px;height:"+(l_dom_view_page.clientHeight-5)+"px;";
            l_dom_box_dev_history_cont[s_style][s_cssText] ="left:"+(g_panel_box_all_w*(g_browser_IE6_version?0:1.5)+(g_browser_IE7_version?30:0))+"px;width:"+l_dom_view_page.clientWidth+"px;height:"+(l_dom_view_page.clientHeight-5)+"px;";
        }
        function create_ipc(obj)
        {
	          if(!g_playback_link.add(obj.node_sn)){
	             if(!obj.isDownload)g_is_play_back = 1; 
	             if(obj.isDownload)g_is_play_back_download = 1; 
	             var inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:1}});
	             l_view_page_obj.ctrl({type:"add_playback_ipc", data:{inner_window_info:inner_window_info, node_sn:obj.node_sn,isDownload:obj.isDownload?obj.isDownload:0,localPath:obj.localPath?obj.localPath:""}});
	          }
        }
        function delete_ipc(obj)
        {
            g_playback_link.del(obj.node_sn);
            g_is_play_back = 0;
            var inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:1}});
            l_view_page_obj.ctrl({type:"remove_ipc", data:{inner_window_info:inner_window_info}});
        }
        function refresh_box_device_list(obj)
        {
            l_dom_box_dev_cont.style.display="block";
            for(var i=0;i<obj.ipcs.length;i++){
            		mx("#box_dev_page")[s_innerHTML]+=
                    "<div class='dev_list_img' >"
                        +"<img class='device_pic' style='display:"+((g_old_browser_version||(navigator.appName == "Microsoft Internet Explorer" && navigator.appVersion.match(/9./i)=="9."))?'none':'block')+"'></img>"
                        +"<div class='dev_nick'>"
                            +"<div class='dev_state "+(obj.ipcs[i].online?"online":"offline")+"'></div>"
                            +"<span>"+obj.ipcs[i].sn+"</span>"
                        +"</div>"
                    +"</div>";
            }
            for(var i=0;i<obj.ipcs.length;i++){
                mx(".dev_list_img",l_dom_box_dev_list)[i].onclick=function(){
                    l_dom_box_dev_cont.style.display="none";
                    on_event({type:"device_list_click",dev_sn:mx("/span", this)[0].innerHTML});
                    g_select_box_ipc = mx("/span", this)[0].innerHTML;
                }
            }
            jQuery(l_dom_box_dev_cont).mCustomScrollbar("update");
            pic_base64_get(obj.ipcs);
        }
        function pic_base64_get(obj)
        {
            l_b64_str_array=[];
            l_canvas_dom_array=[];
            l_canvas_index=0;
            var c_index=0;
            for(var i=0;i<obj.length;i++){
                var token=obj[i].sn+"_p3_"+Math.pow(2,31) +"_"+Math.pow(2,31);
                var url = window.location.protocol + "//"+window.location.host+"/ccm/ccm_pic_get.js?dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+token+"&dflag=2";
                l_canvas_dom_array=mx("/img",mx("#box_dev_page"));
                l_canvas_dom_array[i].src = url;
            }
        } 
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":  //Screen adaptation
                    {
                        l_dom_timeline_page.style[s_cssText]  = "width:" + (l_me_parent.offsetWidth - g_panel_box_all_w) + "px;height:" + l_me_parent.offsetHeight + "px;";
                        l_dom_view_page.style.width = l_me_parent.offsetWidth-g_panel_box_all_w*2 + "px";
                        l_dom_view_page.style.height = l_me_parent.offsetHeight - g_control_box_h + "px";
                        l_dom_view_page.style.left = g_panel_box_all_w*(g_browser_IE67_version?0:0.5) + "px";
                        if(l_dom_box_dev_cont)l_dom_box_dev_cont[s_style][s_cssText] ="left:"+(g_panel_box_all_w*(g_browser_IE6_version?0:1.5)+(g_browser_IE7_version?30:0))+"px;width:"+l_dom_view_page.clientWidth+"px;height:"+(l_dom_view_page.clientHeight-5)+"px;";
                        l_box_dev_list_obj.ctrl({type:"update",width:l_dom_view_page.clientWidth,height:l_dom_view_page.clientHeight-5});
                        l_view_page_obj.ctrl(obj);
                        mx("#view_page_bg").style.top=(g_browser_IE67_version?0:-12)+"px";
                        l_dom_timeline_bottom.style.width = g_cntr_content_w + "px";
                        l_dom_timeline_bottom.style.height = g_control_box_h + "px";
                        if(l_timeline_bottom_obj)l_timeline_bottom_obj.ctrl(obj);
                        break;
                    }
                case "change_select_ipc":
                    {
                        l_box_dev_list_obj.ctrl(obj);
                        break;
                    }                
                case "RecordingToken":
                    {
                        l_view_page_obj.ctrl(obj);
                        break;
                    }
                case "destroy":
                    {
                        delete_ipc({node_sn:g_select_device_ipc});
                        l_box_dev_list_obj.ctrl(obj);
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        g_select_box_ipc="";
                        break;
                    }
                case "download_save_path":
                    {
                    	  l_timeline_bottom_obj.ctrl(obj);
                    	  break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_timeline_cntr.");
            }
        };
        function on_event(obj)
        {
            switch(obj.type)
            {
            		case "delete_ipc":
                    {		
                    		var playback_ipc_sn = (!obj.dev_sn)?g_select_device_ipc:obj.dev_sn;
                        delete_ipc({node_sn:playback_ipc_sn});
                        break;
                    }
                case "create_ipc":
                    {
                    		var tplayback_ipc_sn = (!obj.dev_sn)?g_select_device_ipc:obj.dev_sn;
                        create_ipc({node_sn:tplayback_ipc_sn});
                        break;
                    }
                case "RecordingToken":
                    {
                        l_view_page_obj.ctrl(obj);
                        break;
                    }
                case "RecordingSize":
                    {
                    	  l_view_page_obj.ctrl(obj);
                    	  break;
                    }
                case "showLargerImage":
                		{
                			  l_view_page_obj.ctrl(obj);
                			  break;
                		}
                case "refresh_box_device_list":
                    {
                        return refresh_box_device_list(obj.data);
                        break;
                    }
                case "device_list_click":
                    {
												return l_box_dev_list_obj.ctrl(obj);
                        break;
                    }
	              case "timeline_select_date":
	              		{
	              				var play_ipc_sn = (!obj.dev_sn)?g_select_device_ipc:obj.dev_sn;
	              				l_box_dev_list_obj.ctrl({type:"timeline_select_date", date:obj.date, dev_sn:play_ipc_sn});
	              				break;
	              		}
                case "speed":
                		{
                			  l_timeline_bottom_obj.ctrl(obj);
                				break;
                		}
                case "clearSpeed":
                		{
                			  l_view_page_obj.ctrl(obj);
                			  break;
                		}
                case "playbackSlider":
                		{
                			  l_timeline_bottom_obj.ctrl(obj);
                			  break;
                		}
                case "playback_download":
                    {
                    	  playback_download(obj);
                    	  break;
                    }
                case "download_path":
                    {
                    	  l_parent_callback(obj);
                    	  break;
                    }
                case "playback_download_progress":
                		{
                			  var download_progress_dom=document.getElementById("download_pro");
                        var current_progress=(obj.current_progress*100).toFixed(2);
		                    download_progress_dom.innerHTML=current_progress+"%";
		                    l_download_progress_timeout=setTimeout(function(){
		                      if(current_progress==l_old_progress){
				                     on_event({type:"playback_download",path:mcloud_agent.devs.get(g_select_device_ipc).RecordingSaveName,iscomplete:1});
				                  }
		                    },6000);

		                    l_old_progress=current_progress;
                			  break;
                		}
                default:
                    log("error:on_event's obj.type is not exist in class_timeline_cntr.");
            }
        }
        l_box_dev_list_obj.ctrl({type:"change_select_ipc"});                        
    }
    function class_box_dev_list(obj)
    {
    		var l_me = this,
    				l_me_parent = obj.parent,
    				l_parent_callback = obj.on_event,
    				l_currentDate = new Date(),
            l_current_year=l_currentDate.getFullYear(),
            l_current_month= l_currentDate.getMonth() + 1,
            l_current_day = l_currentDate.getDate(),
            l_hour = l_currentDate.getHours(),
            l_minute = l_currentDate.getMinutes(),
            l_second = l_currentDate.getSeconds(),
            l_base_start_time,
            l_base_end_time,
            l_select_dev_sn,l_dom_box_dev_history_list,
            l_dom_timeline_dev_box,l_dom_box_dev_history_page,
            video_list_len,video_list_info,video_num_len,
            l_storage_dom_info=[];
    		
    		l_dom_box_dev_history_list=mx("#box_dev_history_list");
    		jQuery("#box_dev_history_cont").mCustomScrollbar();
        
    		l_base_start_time=((new Date(l_current_year+"/"+l_current_month+"/"+l_current_day+" 00:00:00")).getTime());
        l_base_end_time=l_base_start_time+60*60*24*1000;
    		
    		function ccm_segs_get(obj)
        {
            var end_time=obj.start_time+60*60*24*1000;
            var flag=8;
            ms.send_msg("box_get",{box_sn:obj.box_sn,dev_sn:obj.dev_sn,flag:flag,start_time:obj.start_time,end_time:end_time},{box_sn:obj.box_sn,dev_sn:obj.dev_sn,flag:flag,base_start_time:obj.start_time},ccm_segs_get_ack);
        }
        function ccm_segs_get_ack(msg,ref)
        {
            if( msg && !msg.result && (msg.segs_sdc||msg.segs)){
            	  var videosegs = cutVideo({msg:msg,base_start_time:ref.base_start_time,dev_sn:ref.dev_sn});
                var videoData = draw_data_rect({videosegs:videosegs});
                if(!videoData.local_cut_video_data.length){
                	  noHistoryVideoData({type:"mipcHistoryList"});
                }else {
                	  create_video_list({videodata:videoData});
                }
            }else {
            	  noHistoryVideoData({type:"mipcHistoryList"});
            }           
        }
        function create_video_list(obj){
            video_list_len = obj.videodata.local_cut_video_data.length;
		        video_list_info = obj.videodata;
                
            if(video_list_len>=30){
              get_video_list({num:0,counts:30});
            }else {
              get_video_list({num:0,counts:video_list_len});
            }
        }
        function get_video_list(data){
            video_num_len = obj.counts;
            if(mx("#box_dev_history_page"))
        	    mx("#box_dev_history_page")[s_innerHTML]="";
        	  else
        	    l_dom_box_dev_history_page = dom_create_child(l_dom_box_dev_history_list, "div", "box_dev_history_page");
        	      
        	  for(var i=data.num;i<data.counts;i++){
        	    var dev_info=video_list_info.local_cut_video_data[i],devs_info=video_list_info.local_video_time_duration[i],len=dev_info.cut_video_data.length,
		        	  	pic_token=dev_info.cut_video_data[0].pic_token,t_duration=devs_info.time_duration,v_time=new Date(dev_info.cut_video_data[0].pos_start).format("yyyy-MM-dd hh:mm:ss");
		        	l_storage_dom_info[i]={
		        	  token:dev_info.cut_video_data[0].token,
		        	  end_token:dev_info.cut_video_data[len-1].token,
		        	  s_time:devs_info.time_start,
		        	  e_time:devs_info.time_end
		        	};
		        	if((dev_info.cut_video_data.length==1)&&(dev_info.cut_video_data[0].pos_end-dev_info.cut_video_data[0].pos_start <= 20000)){
                l_dom_box_dev_history_page[s_innerHTML]+=
                "<div class='dev_history_list_img' num="+i+" img='true'>"
		        	  +  "<img class='device_pic' data-original='"+window.location.protocol+"//"+window.location.host+"/ccm/ccm_pic_get.js?dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+pic_token+"&dflag=2"+"' style='width:176px;height:96px;'>"
		        	  +  "<div class='dev_nick'>"
		        	  +    "<span>"+ v_time +"</span>"
		        	  +  "</div>"
		        	  +"</div>";
		        	}else {
		        	  l_dom_box_dev_history_page[s_innerHTML]+= 
		        	  "<div class='dev_history_list_img' num="+i+" img='false'>"
		        	  +    "<div class='history_list_ico'></div>"
	              +    "<div class='history_list_duration'>"+t_duration+"</div>"
	              +    "<img class='device_pic' data-original='"+window.location.protocol+"//"+window.location.host+"/ccm/ccm_pic_get.js?dsess=1&dsess_nid="+mcloud_agent.create_nid()+"&dsess_sn="+g_select_device_ipc+"&dtoken="+pic_token+"&dflag=2"+"' style='width:176px;height:96px;'></img>"
	              +    "<div class='dev_nick'>"
	              +      "<span>"+v_time+"</span>"
	              +    "</div>"
		        	  +"</div>";
		        	}
        	  }
        	  for(var m=0;m<data.counts;m++){
        	    mx(".dev_history_list_img")[m].onclick = function(){
        	      var num = this.getAttribute("num");
        	      if(this.getAttribute("img")=="false"){
        	        var len1=video_list_info.local_cut_video_data[num].cut_video_data.length;
		              mx("#box_dev_history_cont").style.display="none";
		              mx("#timeline_return").style.display="block";
		              mx("#timeline_calendar_div").style.display = "none";
		              l_parent_callback({type:"RecordingToken", data:this.getAttribute("token")});
		              l_parent_callback({type:"create_ipc",dev_sn:g_select_box_ipc});
		              l_parent_callback({type:"playbackSlider",data:{token:l_storage_dom_info[num].token,video_data:video_list_info.local_cut_video_data[num],end_token:l_storage_dom_info[num].end_token,s_time:l_storage_dom_info[num].s_time,e_time:l_storage_dom_info[num].e_time,node_sn:g_select_box_ipc, playback:1}});
		              g_slider_start=video_list_info.local_cut_video_data[num].cut_video_data[0].pos_start;
		              g_slider_end=video_list_info.local_cut_video_data[num].cut_video_data[len1-1].pos_end;
		              jQuery("#video_slider").show();
		        			jQuery("#video_control").show();
		        			jQuery("#return_video_list").show();
		        			jQuery("#video_play_btn").hide();
		        			jQuery("#timeline_return").hide();
		        			if(mx("#video_pause_btn").style.display = "none")	mx("#video_pause_btn").style.display = "block";
		        			if(mx("#download_pro").style.display="block"){
		        				mx("#download_pro").style.display="none";
		        				mx("#vs_time").style.display="block";
		        				mx("#ve_time").style.display="block";
		        			}
        	      }else {
        	      	var uri=(!!window.ActiveXObject||"ActiveXObject" in window)?mx(".device_pic")[num].href.replace("_p3_","_p0_"):mx(".device_pic")[num].currentSrc.replace("_p3_","_p0_");
        	        l_parent_callback({type:"showLargerImage",data:uri});	
        	      }  
        	    };
        	  }
        	  jQuery("img.device_pic").lazyload({event:"scrollstop"});
        	  jQuery(window).scroll(video_list_scroll);
        }
        var video_list_scroll = function(){
		        var scrollTop = jQuery(this).scrollTop();
		        var scrollHeight = jQuery(document).height();
		        var windowHeight = jQuery(this).height();
		        if(scrollTop + windowHeight == scrollHeight){
		        	var len0 = video_list_len - video_num_len;
		        	if(len0==0) return;
		        	if(len0>=5){
		        	  get_video_list({num:video_num_len,counts:5+video_num_len});
		        	}else {
		        	  get_video_list({num:video_num_len,counts:len0+video_num_len});
		        	} 	
		        }    
		    }
        /*to solve the IE and firefox can't support new Date()*/
	      function getDateForStringDate(strDate)
	      {
	      		var s = strDate.split(".");
	      		return new Date(s[0],s[1]-1,s[2],s[3],s[4],s[5]);
	      }
        function ccm_calendar_data_ack(msg,ref)
        {
            if( msg && !msg.result&&msg.date_infos)
            {
                var l_date_infos=[];
                var l_local_date_infos=[];
                var date_infos_time=[];
                var l_date_infos=msg.date_infos;
                for(var i=0;i<l_date_infos.length;i++)
                {
                    var date_mis = new Date(l_date_infos[i].date * 1000).format("yyyy.MM.dd.00.00.00");
                    if(i>0&& date_mis != l_local_date_infos[l_local_date_infos.length-1] && (l_date_infos[i].date*1000) >date_infos_time[date_infos_time.length-1]){
                        l_local_date_infos[l_local_date_infos.length]= date_mis;
                        date_infos_time[date_infos_time.length]= (getDateForStringDate(l_local_date_infos[l_local_date_infos.length-1])).getTime();
                    }
                    else if (i==0){
                        l_local_date_infos[i]= date_mis;
                        date_infos_time[i]= (getDateForStringDate(l_local_date_infos[i])).getTime();
                    }                    
                }
                jQuery("#timeline_calendar_input").datepicker({showOn:'button', buttonImageOnly:true,date_infos:date_infos_time, onSelect:function(dateText, inst){l_me.ctrl({type:"timeline_select_date", date:mx("#timeline_calendar_input").value, dev_sn:g_select_box_ipc})}});
                start_time = (getDateForStringDate(l_local_date_infos[l_local_date_infos.length-1])).getTime();

                end_time = start_time+60*60*24*1000;
            		ms.send_msg("box_get",{box_sn:ref.box_sn,dev_sn:ref.dev_sn,flag:8,start_time:start_time,end_time:end_time},{box_sn:ref.box_sn,dev_sn:ref.dev_sn,flag:8,base_start_time:start_time},ccm_segs_get_ack);
            }
            else {
            	  noHistoryVideoData({type:"mipcHistoryList"});
            }                
        }
        /*get the ipc of box*/
        function ccm_ipcs_get()
        {
            ms.send_msg("box_get",{box_sn:g_select_device_ipc,flag:1},{flag:1},ccm_ipcs_get_ack);  
        }
        function ccm_ipcs_get_ack(msg,ref)
        {
            if(!l_me_parent) return;
            if( msg && !msg.result && msg.ipcs){
                l_parent_callback({type:"refresh_box_device_list",data:{ipcs:msg.ipcs}});
            }
        }
        l_me.ctrl = function(obj)
        {
        		switch(obj.type)
        		{
		        		case "change_select_ipc":
		        			{
			        				var dev_img_ver=mcloud_agent.devs.get(g_select_device_ipc).img_ver;
	                    if(dev_img_ver.substring(0,2)>="v2")
	                    {
	                        var dev_type=mcloud_agent.devs.get(g_select_device_ipc).type;
	                        if(g_select_device_ipc && dev_type != "BOX"){
        	                    l_dom_box_dev_history_list[s_innerHTML]="";
                            	mx("#box_dev_history_cont").style.display="block";
                            	mx("#timeline_calendar_div").style.display = "block";
                            		
        			        	  		ms.send_msg("box_get",{box_sn:g_select_device_ipc, dev_sn:g_select_device_ipc, flag:2,start_time:0, end_time:0},{box_sn:g_select_device_ipc,dev_sn:g_select_device_ipc,flag:2,base_start_time:0},ccm_calendar_data_ack); 
	                        }
	                        else if(g_select_device_ipc && dev_type == "BOX"){
	                            ccm_ipcs_get();
	                        }
	                    }
			        				break;
		        	  	}
		        	  case "device_list_click":
		        	  	{
		        	  	    l_dom_box_dev_history_list[s_innerHTML]="";
                    	mx("#box_dev_history_cont").style.display="block";
                    	mx("#timeline_calendar_div").style.display = "block";
                    	mx("#timeline_return").style.display="block";
			        	  		ms.send_msg("box_get",{box_sn:g_select_device_ipc, dev_sn:obj.dev_sn, flag:2,start_time:0, end_time:0},{box_sn:g_select_device_ipc,dev_sn:obj.dev_sn,flag:2,base_start_time:0},ccm_calendar_data_ack); 
			        	  		break;
		        	  	}
		        	  case "timeline_select_date":
		        	  	{
                    	var start_time0 = (new Date(obj.date)).getTime();
                    	ccm_segs_get({start_time:start_time0,dev_sn:obj.dev_sn,box_sn:g_select_device_ipc});
		        	  			break;
		        	  	}	
		        	  case "update":
		        	  	{	
		        	  			mx("#box_dev_history_cont").style.width = obj.width + "px";
		        	  			mx("#box_dev_history_cont").style.height = obj.height + "px";
		        	  			mx("#box_dev_history_cont").style.left = g_panel_box_all_w*(g_browser_IE6_version?0:1.5)+(g_browser_IE7_version?30:0) + "px";
		        	  			jQuery("#box_dev_history_cont").mCustomScrollbar("update");
		        	  			break;
		        	  	}
		        	  case "destroy":
			        	  {
			        	  		if(l_me_parent)
			        	  		{
			        	  			l_me_parent[s_innerHTML] = "";
	                      l_me_parent = null;
			        	  		}
			        	  		break;
			        	  }
        	  }
        }    
    }
/*-----------------Setting options pages--------------------*/
    //About settings
    function class_options_product_info(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_input_manufacturer,
            l_dom_input_model,
            l_dom_input_firmware_version,
            l_dom_input_plugin_version,
            l_dom_input_device_serial_number,
            l_dom_input_device_name,
            l_dom_input_mfc,
            l_dom_logo_content,
            l_dom_mfc_content,
            l_dom_device_status_content,l_dom_device_status;
        if(g_domain_oems_vimtag)
        {
	        	l_me_parent[s_innerHTML] =
	        	"<div id = 'about_info' class = 'list_right_box'>"
	          //+"<div id = 'logo_box'>"
	          //+"<img id = 'logo_img'>"
	          //+"</div>"
	          +     "<div class = 'list_right_item'>"
	          +        "<span class = 'attribute_key_text'>"+mcs_model+"</span>"
	          +        "<span class = 'attribute_value_text'></span>"
	          +     "</div>"
	          +     "<div class = 'list_right_item' style='display:none;'>"
	          +        "<span class = 'attribute_key_text'>"+mcs_manufacturer+"</span>"
	          +        "<span class = 'attribute_value_text'></span>"
	          +     "</div>"
	          +     "<div class = 'list_right_item'>"
	          +        "<span class = 'attribute_key_text'>"+mcs_software_version+"</span>"
	          +        "<span class = 'attribute_value_text'></span>"
	          +     "</div>"
	          +     "<div class = 'list_right_item'>"
	          +        "<span class = 'attribute_key_text'>"+mcs_plugin_version+"</span>"
	          +        "<span class = 'attribute_value_text'></span>"
	          +     "</div>"
	          +     "<div class = 'list_right_item'>"
	          +        "<span class = 'attribute_key_text'>"+mcs_device_id+"</span>"
	          +        "<span class = 'attribute_value_text'></span>"
	          +     "</div>"
	          +"</div>";

          var dom_text = jQuery(".attribute_value_text");
        }
        else
        {
         l_me_parent[s_innerHTML] =
            "<div id='logo_content'>"
            +   "<div  id='log_id'></div>"
            +"</div>"
            +"<div>"
            +   "<div class='options_float_left' style='display:none'>" + mcs_manufacturer + "</div>"
            +   "<div class='options_float_right' style='display:none'>"
            +       "<input type='text' id='input_manufacturer' class='input_read_only' " + g_input_read_only + "></input>"
            +   "</div>"
            +"</div>"
            +"<div class='manager_split_bar_2px_2' style='display:none'></div>"
            +"<div>"
            +   "<div class='options_float_left'>" + mcs_model + "</div>"
            +   "<div class='options_float_right'><input type='text' id='input_model' class='input_read_only' " + g_input_read_only + "></input></div>"
            +"</div>"
            +"<div id='mfc_content'>"
            +   "<div class='manager_split_bar_2px_2'></div>"
            +   "<div class='options_float_left'>"+mcs_manufacturer+"</div>"
            +   "<div class='options_float_right'><input type='text' id='input_mfc' class='input_read_only' ></input></div>"
            +"</div>"
            +"<div class='manager_split_bar_2px_2'></div>"
            +"<div id='device_status_content'>"
            +   "<div class='options_float_left'>" + mcs_status + "</div>"
            +   "<div class='options_float_right'><input type='text' id='device_status' class='input_read_only' value='" + mcs_fault + "'></input></div>"
            +"<div class='manager_split_bar_2px_2'></div>"
            +"</div>"
            +"<div>"
            +   "<div class='options_float_left'>" + mcs_software_version + "</div>"
            +   "<div class='options_float_right'><input type='text' id='input_firmware_version' class='input_read_only' " + g_input_read_only + "></input></div>"
            +"</div>"
            +"<div class='manager_split_bar_2px_2'></div>"
            +"<div>"
            +   "<div class='options_float_left'>" + mcs_plugin_version+ "</div>"
            +   "<div class='options_float_right'><input type='text' id='input_plugin_version' class='input_read_only' " + g_input_read_only + "></input></div>"
            +"</div>"
            +"<div class='manager_split_bar_2px_2'></div>"
            +"<div>"
            +   "<div class='options_float_left' style='padding-bottom:20px'>" + mcs_device_id + "</div>"
            +   "<div class='options_float_right'><input type='text' id='input_device_serial_number' class='input_read_only' " + g_input_read_only + "></input></div>"
            +"</div>";

		        jQuery(l_me_parent).hide().fadeIn(500);

		        l_dom_input_manufacturer         = mx("#input_manufacturer");
		        l_dom_input_model                = mx("#input_model");
		        l_dom_input_firmware_version     = mx("#input_firmware_version");
		        l_dom_input_plugin_version       = mx("#input_plugin_version");
		        l_dom_input_device_serial_number = mx("#input_device_serial_number");
		        l_dom_device_status              = mx("#device_status");
		        l_dom_device_status_content      = mx("#device_status_content");
		        l_dom_input_mfc                  = mx("#input_mfc");
		        l_dom_logo_content               = mx("#logo_content");
		        l_dom_mfc_content                = mx("#mfc_content");

		        jQuery(l_dom_device_status_content).hide();
		        jQuery(l_dom_mfc_content).hide();
		        jQuery(l_dom_logo_content).hide();
        }
        //Get plugin version
        function check_plug_install_ack(ref, version)
        {
            var ver = version? version : mcs_not_installed;
            if(g_domain_oems_vimtag){
            	 dom_text[3].innerHTML = ver;		 
            }else{
	                   l_dom_input_plugin_version.value = ver;
            }
        }
        //Get device information
        function ccm_dev_info_get_ack(msg,ref)
        {
            if(!l_me_parent || msg.result != "") return;
            if(msg && msg.result == "")
            {
            	  if(g_domain_oems_vimtag)
            	  {
            	  	  dom_text[0].innerHTML = msg.model;
                    dom_text[1].innerHTML = msg.mfc;
                    dom_text[2].innerHTML = msg.ver;
                    dom_text[4].innerHTML = msg.sn;
            	  }
            	  else
            	  {
		                l_dom_input_model.value                = msg.model;
		                l_dom_input_firmware_version.value     = msg.ver;
		                l_dom_input_device_serial_number.value = msg.sn;
		                if(msg.mfc && msg.mfc != ""){
		                	 l_dom_input_mfc.value =msg.mfc;
		                   jQuery(l_dom_mfc_content).show();
		                }
		                if(msg.logo && msg.logo != ""){
		                	 jQuery(l_dom_logo_content).show();
		                   var Images =new Image();
		                   Images.src=msg.logo;
		                   Images.width="80";
		                   Images.height="80";
		                   jQuery("#log_id").append(Images);
		                }
                }
            }
            else
            {
                log("error:GetDeviceInformationResponse return Result error in class_options_product_info.");
            }
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "destroy":
                    {
                        l_me_parent.innerHTML = "";
                        l_me_parent = null;
                        break;
                    }
            }
        }
        var get_device_info = mcloud_agent.devs.get(g_select_device_ipc);        
        //Get device information
        if((get_device_info.stat=="Offline")&&g_domain_oems_vimtag){
          dom_text[0].innerHTML = get_device_info.model;
          dom_text[2].innerHTML = get_device_info.img_ver;
          dom_text[3].innerHTML = get_device_info.ver;
          dom_text[4].innerHTML = get_device_info.sn;
        }else {
          ms.send_msg("dev_info_get",{sn:g_select_device_ipc},null,ccm_dev_info_get_ack);	
        }
        //Get plugin version
        mme.prototype.check_plug_install("", check_plug_install_ack);
    }
    //Settings nickname
    function class_options_device_nickname(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_input_device_name,
            l_dom_button_setup;
        if(g_domain_oems_vimtag)
        {
        	  l_me_parent[s_innerHTML] =
        	      "<div id = 'dev_name_info' class = 'list_right_box'>"
                +     "<div class = 'list_right_item_ex'>"
                +        "<span class = 'attribute_key_text'>"+mcs_nickname+":</span>"
                +        "<input type = 'text' id = 'dev_name_input' class = 'list_right_input' value='" + (mcloud_agent.devs.get(g_select_device_ipc).nick?mcloud_agent.devs.get(g_select_device_ipc).nick:g_select_device_ipc)+ "'>"
                +     "</div>"
                +     "<input id = 'set_dev_name' value = "+mcs_action_apply+" class = 'list_right_button' type = 'button'>"
                +"</div>";

            l_dom_input_device_name = mx("#dev_name_input");
            l_dom_button_setup = mx("#set_dev_name");
        }
        else
        {
		        l_me_parent[s_innerHTML] =
		            "<div>"
		            +   "<div class='options_float_left'><label for='input_device_name'>" + mcs_nickname + ":</label></div>"
		            +   "<div class='options_float_right'>"
		            +       "<input type='text' name='input_device_name' id='input_device_name' "
		            +           "class='standard_inputs manager_standard_inputs' value='" + (mcloud_agent.devs.get(g_select_device_ipc).nick?mcloud_agent.devs.get(g_select_device_ipc).nick:g_select_device_ipc)+ "'></input>"
		            +   "</div>"
		            +"</div>"
		            +"<div class='options_float_right' style='clear:both'>"
		            +   "<button id='button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>"
		            +"</div>";
		        jQuery(l_me_parent).hide().fadeIn(500);

		        l_dom_input_device_name = mx("#input_device_name");
		        l_dom_button_setup = mx("#button_setup");
        }

        function ccm_nick_set_ack(msg,ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.result == "")
            {  //The success of pop-up settings
            	 if(g_domain_oems_vimtag)
            	 {
            	 	  msg_tips({msg:mcs_set_successfully, type:"warning", timeout:3000});
            	 }
            	 else
            	 {
                  g_system_prompt_box(mcs_set_successfully, 240, -200);
               }
               if(l_dom_input_device_name.value && (l_dom_input_device_name.value != mcs_input_nick))
               {
               	  mcloud_agent.devs.get(g_select_device_ipc).nick = l_dom_input_device_name.value;
               	  l_parent_callback({type:"change_device_name",sn:g_select_device_ipc});
               }
               else
               {
               	  mcloud_agent.devs.get(g_select_device_ipc).nick = g_select_device_ipc;
               	  l_parent_callback({type:"change_device_name",sn:g_select_device_ipc});
               }
            }
            else
            {
                log("error:CcmSetDeviceNickResponse return Result error in class_options_device.");
            }
        }
        function add_event()
        {
            l_dom_button_setup.onclick = function() {
                 ms.send_msg("nick_set",{sn:g_select_device_ipc,name:l_dom_input_device_name.value},null,ccm_nick_set_ack);
            };
            l_dom_input_device_name.onfocus = function() {
               if(this.value == g_select_device_ipc)
               {
                    this.value = "";
               }
               if(g_standard_input_box_onfocus)
                  g_standard_input_box_onfocus(this);
            };
            l_dom_input_device_name.onblur = function() {
            	 if(this.value == "")
               {
                    this.value = g_select_device_ipc;
               }
               if(g_standard_input_box_onblur)
                  g_standard_input_box_onblur(this);
            };
        }
        function remove_event()
        {
            l_dom_button_setup.onclick = "";
            l_dom_input_device_name.onfocus = "";
            l_dom_input_device_name.onblur = "";
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "destroy":
                {
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                }
            }
        }
        add_event();
    }
    //Set the administrative password
    function class_options_password_page(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_input_current_password,
            l_dom_input_new_password,
            l_dom_input_confirm_password,
            l_dom_button_setup;

         if(g_domain_oems_vimtag)
         {
         	  l_me_parent[s_innerHTML] =
         	        "<div id = 'admin_pwd_info' class = 'list_right_box'>"
                  +     "<div class = 'list_right_item'>"
                  +        "<span class = 'attribute_key_text'>"+mcs_admin_password+":</span>"
                  +        "<input type = 'password' id = 'admin_pwd_input' class = 'list_right_input' value='@M!N*T'>"
                  +     "</div>"
                  +     "<div class = 'list_right_item_ex'>"
                  +        "<span class = 'attribute_key_text'>"+mcs_new_password+":</span>"
                  +        "<input type = 'password' id = 'new_admin_pwd_input' class = 'list_right_input' value='@M!N*T'>"
                  +     "</div>"
                  +     "<div class = 'list_right_item_ex'>"
                  +        "<span class = 'attribute_key_text'>"+mcs_confirm_new_password+":</span>"
                  +        "<input type = 'password' id = 'new_admin_pwd_input_re' class = 'list_right_input' value='@M!N*T'>"
                  +     "</div>"
                  +     "<input id='admin_pwd_button_setup' type = 'button' value = "+mcs_action_apply+" class = 'list_right_button'>"
                  +"</div>";

             l_dom_input_current_password = mx("#admin_pwd_input");
		         l_dom_input_new_password = mx("#new_admin_pwd_input");
		         l_dom_input_confirm_password = mx("#new_admin_pwd_input_re");
		         l_dom_button_setup = mx("#admin_pwd_button_setup");
         }
         else
         {
			      l_me_parent[s_innerHTML]=
			            "<div>"
			            +   "<div class='options_float_left'><label for='input_current_password'>" + mcs_admin_password + ":</label></div>"
			            +   "<div class='options_float_right'>"
			            +       "<input type='password' name='input_current_password' id='input_current_password'"
			            +           "class='standard_inputs manager_standard_inputs' value='@M!N*T'></input>"
			            +   "</div>"
			            +"</div>"
			            +"<div class='manager_split_bar_2px_2' ></div>"
			            +"<div>"
			            +   "<div class='options_float_left'><label for='input_new_password'>" + mcs_new_password + ":</label></div>"
			            +   "<div class='options_float_right'>"
			            +       "<input type='password' name='input_new_password' id='input_new_password'"
			            +           "class='standard_inputs manager_standard_inputs' value='@M!N*T'></input>"
			            +   "</div>"
			            +"</div>"
			            +"<div>"
			            +   "<div class='options_float_left'><label for='input_confirm_password'>" + mcs_confirm_new_password + ":</label></div>"
			            +   "<div class='options_float_right'>"
			            +       "<input type='password' name='input_confirm_password' id='input_confirm_password' "
			            +           "class='standard_inputs manager_standard_inputs' value='@M!N*T'></input>"
			            +   "</div>"
			            +"</div>"
			            +"<div class='options_float_right' style='clear:both'>"
			            +   "<button id='button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>"
			            +"</div>";
			        jQuery(l_me_parent).hide().fadeIn(500);
			        l_dom_input_current_password = mx("#input_current_password");
			        l_dom_input_new_password = mx("#input_new_password");
			        l_dom_input_confirm_password = mx("#input_confirm_password");
			        l_dom_button_setup = mx("#button_setup");
         }

        function add_event()
        {  //Application of key events
           l_dom_button_setup.onclick=function()
           {
           	  if(l_dom_input_current_password.value == "amdin")
           	  {
           	  	  l_dom_input_current_password.value = "admin";
           	  }
              if(l_dom_input_current_password.value == "@M!N*T")
              {
              	  if(g_domain_oems_vimtag)
              	  {
              	  	 msg_tips({msg:mcs_the_password_is_empty + ".", type:"error", timeout:3000});
              	  }
              	  else
              	  {
                     system_tooltip({parent:l_dom_input_current_password, color:"red", position:"left", disappear_way:"time", str:mcs_the_password_is_empty + "."});
                  }
                  return;
              }
              if(l_dom_input_new_password.value == "@M!N*T")
              {
              	  if(g_domain_oems_vimtag)
              	  {
              	  	 msg_tips({msg:mcs_the_password_is_empty + ".", type:"error", timeout:3000});
              	  }
              	  else
              	  {
                     system_tooltip({parent:l_dom_input_new_password, color:"red", position:"left", disappear_way:"time", str:mcs_the_password_is_empty + "."});
                  }
                  return;
              }
              if(l_dom_input_new_password.value != l_dom_input_confirm_password.value)
              {
              	  if(g_domain_oems_vimtag)
              	  {
              	  	 msg_tips({msg:mcs_two_password_input_inconsistent + ".", type:"error", timeout:3000});
              	  }
              	  else
              	  {
                     system_tooltip({parent:l_dom_input_confirm_password, color:"red", position:"left", disappear_way:"time", str:mcs_two_password_input_inconsistent + "."});
                  }
                  return;
              }
              else
              {
                  reg = /^\S{6,20}$/;
                  if(!reg.exec(l_dom_input_new_password.value))
                  {
		                  if(g_domain_oems_vimtag)
		              	  {
		              	  	 msg_tips({msg:mcs_password_demand + ".", type:"error", timeout:3000});
		              	  }
		              	  else
		              	  {
                         system_tooltip({parent:l_dom_input_new_password, color:"red", position:"left", disappear_way:"time", str:mcs_password_demand + "."});
                      }
                      return;
                  }
              }
              ms.send_msg("dev_passwd_set",{sn:g_select_device_ipc,old_pass:l_dom_input_current_password.value,new_pass:l_dom_input_new_password.value,is_guest:0},null,dev_passwd_set_ack);
           }
           l_dom_input_current_password.onfocus = function() {
                if(this.value == "@M!N*T")
                {
                    this.value = "";
                }
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
           };
           l_dom_input_current_password.onblur = function() {
                if(this.value == "")
                {
                    this.value = "@M!N*T";
                }
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
           };
           l_dom_input_new_password.onfocus = function() {
                if(this.value == "@M!N*T")
                {
                    this.value = "";
                }
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
           };
           l_dom_input_new_password.onblur = function() {
                if(this.value == "")
                {
                    this.value = "@M!N*T";
                }
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
           };
           l_dom_input_confirm_password.onfocus = function() {
                if(this.value == "@M!N*T")
                {
                    this.value = "";
                }
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
           };
           l_dom_input_confirm_password.onblur = function() {
                if(this.value == "")
                {
                    this.value = "@M!N*T";
                }
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
           };
        }
        //Setting Device Management passwords
        function dev_passwd_set_ack(msg,ref)
        {
            if(!msg) return;
            if(msg.result == "")
            {   //If a user logs on to change the password needed to re-add the device management device
                if(g_login_status == "register_user")
                {
                   ms.send_msg("dev_add",{sn:g_select_device_ipc ,pass:l_dom_input_new_password.value},null,function(msg,ref){
                   		if(msg && msg.result=="")
                      {
                      	 if(g_domain_oems_vimtag)
                      	 {
                      	 	   msg_tips({msg:mcs_set_successfully, type:"warning", timeout:3000});
                      	 }
                      	 else
                      	 {
                             g_system_prompt_box(mcs_set_successfully, 240, -200);
                         }
                         mcloud_agent.devs.get(msg.info.sn).stat = msg.info.stat;
                      }
                   });
                }
                else//If ipc logged in, Log
                {
                   if(g_domain_oems_vimtag)
                	 {
                	 	   msg_tips({msg:mcs_set_successfully, type:"warning", timeout:3000});
                	 }
                	 else
                	 {
                       g_system_prompt_box(mcs_set_successfully, 240, -200);
                   }
                   jQuery("#system_logout").click();
                }
            }
            else if(msg.result =="accounts.pass.invalid")
            {
            	  if(g_domain_oems_vimtag)
            	  {
            	 	    msg_tips({msg:mcs_invalid_password + ".", type:"warning", timeout:3000});
            	  }
            	  else
            	  {
                    system_tooltip({parent:l_dom_input_current_password, color:"red", position:"left", disappear_way:"time", str:mcs_invalid_password + "."});
                }
            }
        }
        function remove_event()
        {
            l_dom_button_setup.onclick = "";
            l_dom_input_current_password.onfocus = "";
            l_dom_input_current_password.onblur = "";
            l_dom_input_new_password.onfocus = "";
            l_dom_input_new_password.onblur = "";
            l_dom_input_confirm_password.onfocus = "";
            l_dom_input_confirm_password.onblur = "";
        }
        l_me.ctrl=function(obj)
        {
           switch(obj.type)
           {
             case "destroy":
                {
                    remove_event();
                    l_me_parent[s_innerHTML] = "";
                    l_me_parent = null;
                }
           }
        }
        add_event();
    }
    function class_options_guest_password(obj)
    {
         var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_input_current_password,
            l_dom_input_new_password,
            l_dom_input_confirm_password,
            l_dom_button_setup;

        if(g_domain_oems_vimtag)
        {
        	  l_me_parent[s_innerHTML] =
        	      "<div id = 'visitor_pwd_info' class = 'list_right_box'>"
                +      "<div class = 'list_right_item'>"
                +         "<span class = 'attribute_key_text'>"+mcs_admin_password+":</span>"
                +         "<input type = 'password' id = 'visitor_pwd_input' class = 'list_right_input' value='@M!N*T'>"
                +      "</div>"
                +      "<div class = 'list_right_item_ex'>"
                +         "<span class = 'attribute_key_text'>"+mcs_guest_password+":</span>"
                +         "<input type = 'password' id = 'new_visitor_pwd_input' class = 'list_right_input' value='@M!N*T'>"
                +      "</div>"
                +      "<div class = 'list_right_item_ex'>"
                +         "<span class = 'attribute_key_text'>"+mcs_confirm_new_password+":</span>"
                +         "<input type = 'password' id = 'new_visitor_pwd_input_re' class = 'list_right_input' value='@M!N*T'>"
                +      "</div>"
                +      "<input id='visitor_pwd_button_setup' type = 'button' value = "+mcs_action_apply+" class = 'list_right_button'>"
                +"</div>";

            l_dom_input_current_password = mx("#visitor_pwd_input");
		        l_dom_input_new_password = mx("#new_visitor_pwd_input");
		        l_dom_input_confirm_password = mx("#new_visitor_pwd_input_re");
		        l_dom_button_setup = mx("#visitor_pwd_button_setup");
        }
        else
        {
		        l_me_parent[s_innerHTML]=
		            "<div>"
		            +   "<div class='options_float_left'><label for='input_current_password'>" + mcs_admin_password + ":</label></div>"
		            +   "<div class='options_float_right'>"
		            +       "<input type='password' name='input_current_password' id='input_current_password'"
		            +           "class='standard_inputs manager_standard_inputs' value='@M!N*T'></input>"
		            +   "</div>"
		            +"</div>"
		            +"<div class='manager_split_bar_2px_2' ></div>"
		            +"<div>"
		            +   "<div class='options_float_left'><label for='input_new_password'>" + mcs_guest_password + ":</label></div>"
		            +   "<div class='options_float_right'>"
		            +       "<input type='password' name='input_new_password' id='input_new_password'"
		            +           "class='standard_inputs manager_standard_inputs' value='@M!N*T'></input>"
		            +   "</div>"
		            +"</div>"
		            +"<div>"
		            +   "<div class='options_float_left'><label for='input_confirm_password'>" + mcs_confirm_new_password + ":</label></div>"
		            +   "<div class='options_float_right'>"
		            +       "<input type='password' name='input_confirm_password' id='input_confirm_password' "
		            +           "class='standard_inputs manager_standard_inputs' value='@M!N*T'></input>"
		            +   "</div>"
		            +"</div>"
		            +"<div class='options_float_right' style='clear:both'>"
		            +   "<button id='button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>"
		            +"</div>";
		        jQuery(l_me_parent).hide().fadeIn(500);
		        l_dom_input_current_password = mx("#input_current_password");
		        l_dom_input_new_password = mx("#input_new_password");
		        l_dom_input_confirm_password = mx("#input_confirm_password");
		        l_dom_button_setup = mx("#button_setup");
        }

        function add_event()
        {
            l_dom_button_setup.onclick=function()
            {
            	 if(l_dom_input_current_password.value == "amdin")
            	 {
            	 	  l_dom_input_current_password.value = "admin";
            	 }
               if(l_dom_input_current_password.value == "@M!N*T")
               {
	               	if(g_domain_oems_vimtag)
	            	  {
	            	 	    msg_tips({msg:mcs_the_password_is_empty + ".", type:"error", timeout:3000});
	            	  }
	            	  else
	            	  {
                      system_tooltip({parent:l_dom_input_current_password, color:"red", position:"left", disappear_way:"time", str:mcs_the_password_is_empty + "."});
                  }
                  return;
               }
               if(l_dom_input_new_password.value == "@M!N*T")
               {
	               	if(g_domain_oems_vimtag)
	            	  {
	            	 	    msg_tips({msg:mcs_the_password_is_empty + ".", type:"error", timeout:3000});
	            	  }
	            	  else
	            	  {
                      system_tooltip({parent:l_dom_input_new_password, color:"red", position:"left", disappear_way:"time", str:mcs_the_password_is_empty + "."});
                  }
                  return;
               }
               if(l_dom_input_new_password.value != l_dom_input_confirm_password.value)
               {
	               	if(g_domain_oems_vimtag)
	            	  {
	            	 	    msg_tips({msg:mcs_two_password_input_inconsistent + ".", type:"error", timeout:3000});
	            	  }
	            	  else
	            	  {
                      system_tooltip({parent:l_dom_input_confirm_password, color:"red", position:"left", disappear_way:"time", str:mcs_two_password_input_inconsistent + "."});
                  }
                  return;
               }
               else
               {
                  reg = /^\S{6,20}$/;
                  if(!reg.exec(l_dom_input_new_password.value))
                  {
			                if(g_domain_oems_vimtag)
			            	  {
			            	 	    msg_tips({msg:mcs_password_demand + ".", type:"error", timeout:3000});
			            	  }
			            	  else
			            	  {
                          system_tooltip({parent:l_dom_input_new_password, color:"red", position:"left", disappear_way:"time", str:mcs_password_demand + "."});
                      }
                      return;
                  }
               }
               ms.send_msg("dev_passwd_set",{sn:g_select_device_ipc,old_pass:l_dom_input_current_password.value,new_pass:l_dom_input_new_password.value,is_guest:1},null,dev_guest_passwd_set_ack);
            }
            l_dom_input_current_password.onfocus = function() {
                if(this.value == "@M!N*T")
                {
                    this.value = "";
                }
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_current_password.onblur = function() {
                if(this.value == "")
                {
                    this.value = "@M!N*T";
                }
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_input_new_password.onfocus = function() {
                if(this.value == "@M!N*T")
                {
                    this.value = "";
                }
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_new_password.onblur = function() {
                if(this.value == "")
                {
                    this.value = "@M!N*T";
                }
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_input_confirm_password.onfocus = function() {
                if(this.value == "@M!N*T")
                {
                    this.value = "";
                }
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_confirm_password.onblur = function() {
                if(this.value == "")
                {
                    this.value = "@M!N*T";
                }
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
        }
        //Visitors password
        function dev_guest_passwd_set_ack(msg)
        {
            if(!msg) return;
            if(msg.result=="")
            {
            	  if(g_domain_oems_vimtag)
            	  {
            	 	    msg_tips({msg:mcs_set_successfully + ".", type:"warning", timeout:3000});
            	  }
            	  else
            	  {
                    g_system_prompt_box(mcs_set_successfully, 240, -200);
                }
            }
            else if(msg.result == "accounts.pass.invalid")
            {
            	  if(g_domain_oems_vimtag)
            	  {
            	 	    msg_tips({msg:mcs_invalid_password + ".", type:"error", timeout:3000});
            	  }
            	  else
            	  {
                    system_tooltip({parent:l_dom_input_current_password, color:"red", position:"left", disappear_way:"time", str:mcs_invalid_password + "."});
                }
            }
        }
        function remove_event()
        {
            l_dom_button_setup.onclick = "";
            l_dom_input_current_password.onfocus = "";
            l_dom_input_current_password.onblur = "";
            l_dom_input_new_password.onfocus = "";
            l_dom_input_new_password.onblur = "";
            l_dom_input_confirm_password.onfocus = "";
            l_dom_input_confirm_password.onblur = "";
        }
        l_me.ctrl=function(obj)
        {
           switch(obj.type)
           {
             case "destroy":
                {
                    remove_event();
                    l_me_parent[s_innerHTML] = "";
                    l_me_parent = null;
                }
           }
        }
        add_event();
    }
    //Network Settings Setting interface
    function class_options_network(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_sni_bind_func = null,
            l_ndg_bind_func = null,
            l_dns_bind_func = null,
            l_swc_bind_func = null,
            l_network_token = "",
            l_set_network_interfaces_response_ok = 1,
            l_set_network_default_gateway_response_ok = 1,
            l_set_dns_response_ok = 1,
            l_set_wifi_config_response_ok = 1,
            l_ip_is_DHCP = 0,
            l_dns_is_DHCP = 0,
            l_origin_ethernet_addr = "",
            l_origin_wireless_addr = "",
            l_timeout_count = 0,
            l_refresh_timer,
            l_nic_enabled_status_flag = 0,
            l_nic_conn_status_flag = 0,
            l_old_version = 0,
            l_dom_select_nic,
            l_dom_input_mac_address,
            l_dom_input_ap_start_address,
            l_dom_input_ap_end_address,
            l_dom_input_ap_gateway,
            l_dom_select_network_li,
            l_dom_select_network,
            l_dom_button_refresh,
            l_dom_select_network_password_li,
            l_dom_select_network_password,
            l_dom_button_connect,
            l_dom_radio_auto_obtain_ip,
            l_dom_auto_obtain_ip_content,
            l_dom_input_auto_ip_address,
            l_dom_input_auto_gateway,
            l_dom_input_auto_subnet_mask,
            l_dom_radio_use_following_ip,
            l_dom_use_following_ip_content,
            l_dom_input_following_ip_address,
            l_dom_input_following_gateway,
            l_dom_input_following_subnet_mask,
            l_dom_radio_auto_obtain_dns,
            l_dom_auto_obtain_dns_content,
            l_dom_input_auto_dns,
            l_dom_input_auto_alternate_dns,
            l_dom_radio_use_following_dns,
            l_dom_use_following_dns_content,
            l_dom_input_following_dns,
            l_dom_input_following_alternate_dns,
            l_dom_button_setup,l_dom_input_status,
			      l_select_net;
        if(g_domain_oems_vimtag)
        {
        	l_me_parent[s_innerHTML] =
        	    "<div id='network_info' class='list_right_box'>"
	            +"<div id='nic_select_div' class = 'list_right_item'>"
	            +   "<div class='attribute_key_text'>" + mcs_network_interface + "</div>"
	            +   "<div class='options_float_right select_block' style='margin-top:0px;'><select id='select_nic'></select></div>"
	            +"</div>"
	            +"<div class='list_right_item_ex'>"
	            +   "<div class='attribute_key_text'>" + mcs_enabled + "</div>"
	            +   "<div id='nic_enabled_switch' class='options_float_right' style='margin-top:0px;'>"
	            +       "<input id='nic_switch_checkbox' type='checkbox' checked/>"
	            +   "</div>"
	            +"</div>"
	            +"<div id='nic_enabled_content'>"
	            +   "<div id='mac_address' class='list_right_item'>"
	            +       "<div class='attribute_key_text'>" + mcs_mac_address + "</div>"
	            +       "<div class='options_float_right'><input type='text' id='input_mac_address' class='input_read_only' disabled></input></div>"
	            +   "</div>"
	            +   "<div id='nic_mode_select' class='list_right_item_ex' style='clear:both'>"
	            +       "<div class='attribute_key_text'>" + mcs_wifi_mode + "</div>"
	            +       "<div class='options_float_right'>"
	            +            "<select id='select_wifi_mode'>"
	            +               "<option value='1'>" + mcs_client + "</option>"
	            +               "<option value='2'>" + mcs_ap + "</option>"
	            +            "</select>"
	            +       "</div>"
	            +   "</div>"
	            +   "<div id='nic_not_conn_content' class='list_right_item' style='display:none'>"
	            +       "<div class='attribute_key_text'>" + mcs_network_status + "</div>"
	            +       "<div class='options_float_right'><input type='text' id='input_status' value='" + mcs_not_connected + "' class='input_read_only' disabled></input></div>"
	            +   "</div>"
	            +   "<div id='nic_ap_mode_content' style='display:none'>"
	            +       "<div class='list_right_item_ex'>"
	            +          "<div class='attribute_key_text'>" + mcs_dhcp + "</div>"
	            +       "</div>"
	            +       "<div class='list_right_item'>"
	            +          "<div class='attribute_key_text'>- " + mcs_start_address + "</div>"
	            +          "<div class='options_float_right'><input id='input_ap_start_address' type='text' class='input_read_only' disabled></input></div>"
	            +       "</div>"
	            +       "<div class='list_right_item'>"
	            +          "<div class='attribute_key_text'>- " + mcs_end_address + "</div>"
	            +          "<div class='options_float_right'><input id='input_ap_end_address' type='text' class='input_read_only' disabled></input></div>"
	            +       "</div>"
	            +       "<div class='list_right_item'>"
	            +          "<div class='attribute_key_text'>- " + mcs_gateway + "</div>"
	            +          "<div class='options_float_right'><input id='input_ap_gateway' type='text' class='input_read_only' disabled></input></div>"
	            +       "</div>"
	            +   "</div>"
	            +   "<div id='select_network_li' style='display:none'>"
	            +       "<div class='list_right_item_ex'>"
	            +          "<div class='attribute_key_text'>" + mcs_select_network+ " :</div><div id='ssid_status' class='options_float_right options_status'></div>"
	            +       "</div>"
	            +       "<div class='list_right_item_ex'>"
	            +          "<div class='attribute_key_text'>- " + mcs_wifi_list + "</div>"
	            +          "<div class='options_float_right'>"
	            +             "<select id='select_network' style='float:none;'></select>"
	            +             "<button id='button_refresh' class='list_right_button' style='margin-top:0px;'>" + mcs_refresh + "</button>"
	            +          "</div>"
	            +       "</div>"
	            +       "<div id='select_network_password_li' style='display:none' class = 'list_right_item'>"
	            +           "<div class='attribute_key_text'>- " + mcs_password + "</div>"
	            +           "<div class='options_float_right'>"
	            +               "<input type='password' id='select_network_password' class='normal_input_right' style='width:155px;color:#000'></input><span style='font-size:12px;color:#E5393F;line-height:30px;'></span>"
	            +               "<button id='button_connect' class='standard_buttons_white'>" + mcs_connect + "</button>"
	            +           "</div>"
	            +       "</div>"
	            +   "</div>"
	            +   "<div id='nic_conn_content' style='display:none;clear:both'>"
	            +       "<div id='ip_address_content'>"
	            +           "<div class='list_right_item_ex'>"
	            +               "<div class='options_left_title'>IP :</div><div id='ip_status' class='options_float_right options_status'></div>"
	            +           "</div>"
	            +           "<div class='list_right_item_ex'>"
	            +               "<div class='attribute_key_text'>- " + mcs_auto_obtain + "</div>"
	            +               "<div class='options_float_right'><input type='radio' id='radio_auto_obtain_ip' name='ip'/></div>"
	            +           "</div>"
	            +           "<div id='auto_obtain_ip_content' style='display:none'>"
	            +               "<div class='list_right_item'>"
	            +                   "<div class='attribute_key_text'>&nbsp;&nbsp;- " + mcs_ip_address+ "</div>"
	            +                   "<div class='options_float_right'><input id='input_auto_ip_address' type='text' class='input_read_only' disabled=true></input></div>"
	            +               "</div>"
	            +               "<div class='list_right_item'>"
	            +                   "<div class='attribute_key_text'>&nbsp;&nbsp;- " + mcs_gateway +"</div>"
	            +                   "<div class='options_float_right'><input id='input_auto_gateway' type='text' class='input_read_only' disabled=true></input></div>"
	            +               "</div>"
	            +               "<div class='list_right_item'>"
	            +                   "<div class='attribute_key_text'>&nbsp;&nbsp;- " + mcs_network_mask + "</div>"
	            +                   "<div class='options_float_right'><input id='input_auto_subnet_mask' type= 'text' class='input_read_only' disabled=true></input></div>"
	            +               "</div>"
	            +           "</div>"
	            +           "<div class='list_right_item_ex'>"
	            +               "<div class='attribute_key_text'>- " + mcs_manually_set + "</div>"
	            +               "<div class='options_float_right'><input type='radio' id='radio_use_following_ip' name='ip'/></div>"
	            +           "</div>"
	            +           "<div id='use_following_ip_content' style='display:none' class = 'list_right_item'>"
	            +               "<div class='list_right_item'>"
	            +                   "<div class='attribute_key_text'>&nbsp;&nbsp;- " + mcs_ip_address + "</div>"
	            +                   "<div class='options_float_right'><input id='input_following_ip_address' type='text' class='normal_input_right'></input></div>"
	            +               "</div>"
	            +               "<div class='list_right_item'>"
	            +                   "<div class='attribute_key_text'>&nbsp;&nbsp;- " + mcs_gateway + "</div>"
	            +                   "<div class='options_float_right'><input id='input_following_gateway' type='text' class='normal_input_right'></input></div>"
	            +               "</div>"
	            +               "<div class='list_right_item'>"
	            +                   "<div class='attribute_key_text'>&nbsp;&nbsp;- " + mcs_network_mask + "</div>"
	            +                   "<div class='options_float_right'><input id='input_following_subnet_mask' type='text' class='normal_input_right'></input></div>"
	            +               "</div>"
	            +           "</div>"
	            +       "</div>"
	            +       "<div id='dns_content'>"
	            +           "<div class='list_right_item_ex'>"
	            +               "<div class='options_left_title'>DNS :</div><div id='dns_status' class='options_float_right options_status'></div>"
	            +           "</div>"
	            +           "<div class='list_right_item_ex'>"
	            +               "<div class='attribute_key_text'>- " + mcs_auto_obtain + "</div>"
	            +               "<div class='options_float_right'><input type='radio' id='radio_auto_obtain_dns' name='dns'/></div>"
	            +           "</div>"
	            +           "<div id='auto_obtain_dns_content' style='display:none'>"
	            +               "<div class='list_right_item'>"
	            +                   "<div class='attribute_key_text'>&nbsp;&nbsp;- " + mcs_dns + "</div>"
	            +                   "<div class='options_float_right'><input id='input_auto_dns' type='text' class='input_read_only' disabled=true></input></div>"
	            +               "</div>"
	            +               "<div class='list_right_item'>"
	            +                   "<div class='attribute_key_text'>&nbsp;&nbsp;- " + mcs_secondary_dns + "</div>"
	            +                   "<div class='options_float_right'><input id='input_auto_alternate_dns' type='text' class='input_read_only' disabled=true></input></div>"
	            +               "</div>"
	            +           "</div>"
	            +           "<div class='list_right_item_ex'>"
	            +               "<div class='attribute_key_text'>- " + mcs_manually_set + "</div>"
	            +               "<div class='options_float_right'><input type='radio' id='radio_use_following_dns' name='dns'/></div>"
	            +           "</div>"
	            +           "<div id='use_following_dns_content' style='display:none' class='list_right_item'>"
	            +               "<div class='list_right_item'>"
	            +                   "<div class='attribute_key_text'>&nbsp;&nbsp;- " + mcs_dns + "</div>"
	            +                   "<div class='options_float_right'><input id='input_following_dns' type='text' class='normal_input_right'></input></div>"
	            +               "</div>"
	            +               "<div class='list_right_item'>"
	            +                   "<div class='attribute_key_text'>&nbsp;&nbsp;- " + mcs_secondary_dns + "</div>"
	            +                   "<div class='options_float_right'><input id='input_following_alternate_dns' type='text' class='normal_input_right'></input></div>"
	            +               "</div>"
	            +           "</div>"
	            +       "</div>"
	            +   "</div>"
	            +"</div>"
	            +"<div>"
	            +   "<div class='options_float_right' style='clear:both'>"
	            +       "<button id='button_setup' class='list_right_button' >" + mcs_apply + "</button>"
	            +   "</div>"
	            +"</div>"
	            +"</div>";
        }
        else
        {
	        l_me_parent[s_innerHTML] =
	             "<div id='nic_select_div'>"
	            +   "<div class='options_float_left'>" + mcs_network_interface + "</div>"
	            +   "<div class='options_float_right select_block'><select id='select_nic'></select></div>"
	            +   "<div class='manager_split_bar_3px'></div>"
	            +"</div>"
	            +"<div>"
	            +   "<div class='options_float_left'>" + mcs_enabled + "</div>"
	            +   "<div id='nic_enabled_switch' class='options_float_right'>"
	            +       "<input id='nic_switch_checkbox' type='checkbox' checked/>"
	            +   "</div>"
	            +"</div>"
	            +"<div id='nic_enabled_content'>"
	            +   "<div id='mac_address' style='padding-top:10px'>"
	            +       "<div class='options_float_left'>" + mcs_mac_address + "</div>"
	            +       "<div class='options_float_right'><input type='text' id='input_mac_address' class='input_read_only' disabled></input></div>"
	            +       "<div class='manager_split_bar_2px_2'></div>"
	            +   "</div>"
	            +   "<div id='nic_mode_select' style='clear:both'>"
	            +       "<div class='options_float_left'>" + mcs_wifi_mode + "</div>"
	            +       "<div class='options_float_right'>"
	            +            "<select id='select_wifi_mode'>"
	            +               "<option value='1'>" + mcs_client + "</option>"
	            +               "<option value='2'>" + mcs_ap + "</option>"
	            +            "</select>"
	            +       "</div>"
	            +   "</div>"
	            +   "<div id='nic_not_conn_content' style='display:none'>"
	            +       "<div class='options_float_left'>" + mcs_network_status + "</div>"
	            +       "<div class='options_float_right'><input type='text' id='input_status' value='" + mcs_not_connected + "' class='input_read_only' disabled></input></div>"
	            +   "</div>"
	            +   "<div id='nic_ap_mode_content' style='display:none'>"
	            +       "<div class='options_left_title'>" + mcs_dhcp + "</div>"
	            +       "<div class='options_float_left'>- " + mcs_start_address + "</div>"
	            +       "<div class='options_float_right'><input id='input_ap_start_address' type='text' class='input_read_only' disabled></input></div>"
	            +       "<div class='options_float_left'>- " + mcs_end_address + "</div>"
	            +       "<div class='options_float_right'><input id='input_ap_end_address' type='text' class='input_read_only' disabled></input></div>"
	            +       "<div class='options_float_left'>- " + mcs_gateway + "</div>"
	            +       "<div class='options_float_right'><input id='input_ap_gateway' type='text' class='input_read_only' disabled></input></div>"
	            +   "</div>"
	            +   "<div id='select_network_li' style='display:none'>"
	            +       "<div class='options_float_left'>" + mcs_select_network+ " :</div><div id='ssid_status' class='options_float_right options_status'></div>"
	            +       "<div class='options_float_left'>- " + mcs_wifi_list + "</div>"
	            +       "<div class='options_float_right'>"
	            +           "<select id='select_network'></select>"
	            +           "<button id='button_refresh' class='standard_buttons_white' style='margin-left:3px'>" + mcs_refresh + "</button>"
	            +       "</div>"
	            +       "<div id='select_network_password_li' style='display:none'>"
	            +           "<div class='options_float_left'>- " + mcs_password + "</div>"
	            +           "<div class='options_float_right'>"
	            +               "<input type='password' id='select_network_password' class='standard_inputs manager_standard_input' style='width:155px;color:#EEE'></input><span style='font-size:12px;color:#E5393F;'></span>"
	            +               "<button id='button_connect' class='standard_buttons_white'>" + mcs_connect + "</button>"
	            +           "</div>"
	            +           "<div class='manager_split_bar_2px_2'></div>"
	            +       "</div>"
	            +   "</div>"
	            +   "<div class='manager_split_bar_2px_2'></div>"
	            +   "<div id='nic_conn_content' style='display:none;clear:both'>"
	            +       "<div id='ip_address_content'>"
	            +           "<div>"
	            +               "<div class='options_left_title'>IP :</div><div id='ip_status' class='options_float_right options_status'></div>"
	            +           "</div>"
	            +           "<div>"
	            +               "<div class='options_float_left'>- " + mcs_auto_obtain + "</div>"
	            +               "<div class='options_float_right'><input type='radio' id='radio_auto_obtain_ip' name='ip'/></div>"
	            +           "</div>"
	            +           "<div id='auto_obtain_ip_content' style='display:none'>"
	            +               "<div>"
	            +                   "<div class='options_float_left'>&nbsp;&nbsp;- " + mcs_ip_address+ "</div>"
	            +                   "<div class='options_float_right'><input id='input_auto_ip_address' type='text' class='input_read_only' disabled=true></input></div>"
	            +               "</div>"
	            +               "<div>"
	            +                   "<div class='options_float_left'>&nbsp;&nbsp;- " + mcs_gateway +"</div>"
	            +                   "<div class='options_float_right'><input id='input_auto_gateway' type='text' class='input_read_only' disabled=true></input></div>"
	            +               "</div>"
	            +               "<div>"
	            +                   "<div class='options_float_left'>&nbsp;&nbsp;- " + mcs_network_mask + "</div>"
	            +                   "<div class='options_float_right'><input id='input_auto_subnet_mask' type= 'text' class='input_read_only' disabled=true></input></div>"
	            +               "</div>"
	            +           "</div>"
	            +           "<div>"
	            +               "<div class='options_float_left'>- " + mcs_manually_set + "</div>"
	            +               "<div class='options_float_right'><input type='radio' id='radio_use_following_ip' name='ip'/></div>"
	            +           "</div>"
	            +           "<div id='use_following_ip_content' style='display:none'>"
	            +               "<div>"
	            +                   "<div class='options_float_left'>&nbsp;&nbsp;- " + mcs_ip_address + "</div>"
	            +                   "<div class='options_float_right'><input id='input_following_ip_address' type='text' class='standard_inputs manager_standard_inputs'></input></div>"
	            +               "</div>"
	            +               "<div>"
	            +                   "<div class='options_float_left'>&nbsp;&nbsp;- " + mcs_gateway + "</div>"
	            +                   "<div class='options_float_right'><input id='input_following_gateway' type='text' class='standard_inputs manager_standard_inputs'></input></div>"
	            +               "</div>"
	            +               "<div>"
	            +                   "<div class='options_float_left'>&nbsp;&nbsp;- " + mcs_network_mask + "</div>"
	            +                   "<div class='options_float_right'><input id='input_following_subnet_mask' type='text' class='standard_inputs manager_standard_inputs'></input></div>"
	            +               "</div>"
	            +           "</div>"
	            +           "<div class='manager_split_bar_2px_2'></div>"
	            +       "</div>"
	            +       "<div id='dns_content'>"
	            +           "<div>"
	            +               "<div class='options_left_title'>DNS :</div><div id='dns_status' class='options_float_right options_status'></div>"
	            +           "</div>"
	            +           "<div>"
	            +               "<div class='options_float_left'>- " + mcs_auto_obtain + "</div>"
	            +               "<div class='options_float_right'><input type='radio' id='radio_auto_obtain_dns' name='dns'/></div>"
	            +           "</div>"
	            +           "<div id='auto_obtain_dns_content' style='display:none'>"
	            +               "<div>"
	            +                   "<div class='options_float_left'>&nbsp;&nbsp;- " + mcs_dns + "</div>"
	            +                   "<div class='options_float_right'><input id='input_auto_dns' type='text' class='input_read_only' disabled=true></input></div>"
	            +               "</div>"
	            +               "<div>"
	            +                   "<div class='options_float_left'>&nbsp;&nbsp;- " + mcs_secondary_dns + "</div>"
	            +                   "<div class='options_float_right'><input id='input_auto_alternate_dns' type='text' class='input_read_only' disabled=true></input></div>"
	            +               "</div>"
	            +           "</div>"
	            +           "<div>"
	            +               "<div class='options_float_left'>- " + mcs_manually_set + "</div>"
	            +               "<div class='options_float_right'><input type='radio' id='radio_use_following_dns' name='dns'/></div>"
	            +           "</div>"
	            +           "<div id='use_following_dns_content' style='display:none'>"
	            +               "<div>"
	            +                   "<div class='options_float_left'>&nbsp;&nbsp;- " + mcs_dns + "</div>"
	            +                   "<div class='options_float_right'><input id='input_following_dns' type='text' class='standard_inputs manager_standard_inputs'></input></div>"
	            +               "</div>"
	            +               "<div>"
	            +                   "<div class='options_float_left'>&nbsp;&nbsp;- " + mcs_secondary_dns + "</div>"
	            +                   "<div class='options_float_right'><input id='input_following_alternate_dns' type='text' class='standard_inputs manager_standard_inputs'></input></div>"
	            +               "</div>"
	            +           "</div>"
	            +           "<div class='manager_split_bar_2px_2'></div>"
	            +       "</div>"
	            +   "</div>"
	            +"</div>"
	            +"<div>"
	            +   "<div class='options_float_right' style='clear:both'>"
	            +       "<button id='button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>"
	            +   "</div>"
	            +"</div>";
        }
        jQuery(l_me_parent).hide().fadeIn(500);

        l_dom_select_nic = mx("#select_nic");
        l_dom_select_wifi_mode = mx("#select_wifi_mode");
        l_dom_input_mac_address = mx("#input_mac_address");
        l_dom_input_ap_start_address = mx("#input_ap_start_address");
        l_dom_input_ap_end_address = mx("#input_ap_end_address");
        l_dom_input_ap_gateway = mx("#input_ap_gateway");
        l_dom_select_network_li = mx("#select_network_li");
        l_dom_select_network = mx("#select_network");
        l_dom_button_refresh = mx("#button_refresh");
        l_dom_select_network_password_li = mx("#select_network_password_li");
        l_dom_select_network_password = mx("#select_network_password");
        l_dom_button_connect = mx("#button_connect");
        l_dom_radio_auto_obtain_ip = mx("#radio_auto_obtain_ip");
        l_dom_auto_obtain_ip_content = mx("#auto_obtain_ip_content");
        l_dom_input_auto_ip_address = mx("#input_auto_ip_address");
        l_dom_input_auto_gateway = mx("#input_auto_gateway");
        l_dom_input_auto_subnet_mask = mx("#input_auto_subnet_mask");
        l_dom_radio_use_following_ip = mx("#radio_use_following_ip");
        l_dom_use_following_ip_content = mx("#use_following_ip_content");
        l_dom_input_following_ip_address = mx("#input_following_ip_address");
        l_dom_input_following_gateway = mx("#input_following_gateway");
        l_dom_input_following_subnet_mask = mx("#input_following_subnet_mask");
        l_dom_radio_auto_obtain_dns = mx("#radio_auto_obtain_dns");
        l_dom_auto_obtain_dns_content = mx("#auto_obtain_dns_content");
        l_dom_input_auto_dns = mx("#input_auto_dns");
        l_dom_input_auto_alternate_dns = mx("#input_auto_alternate_dns");
        l_dom_radio_use_following_dns = mx("#radio_use_following_dns");
        l_dom_use_following_dns_content = mx("#use_following_dns_content");
        l_dom_input_following_dns = mx("#input_following_dns");
        l_dom_input_following_alternate_dns = mx("#input_following_alternate_dns");
        l_dom_button_setup = mx("#button_setup");
        l_dom_input_status=mx("#input_status");
        jQuery(l_dom_select_nic).tzSelect();
        jQuery(l_dom_select_wifi_mode).tzSelect();
        //Enabled switch
       jQuery("#nic_switch_checkbox").iButton({
            labelOn:"On",
            labelOff:"Off",
            change:function(){
                if(!l_nic_enabled_status_flag)
                {
                    jQuery("#nic_enabled_content").fadeOut();
                    return;
                }
                if(mx("#nic_switch_checkbox").checked)
                {
                    jQuery("#nic_enabled_content").fadeIn();
                    if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_ethernet)
                    {
                        jQuery("#mac_address").fadeIn(450);
                        jQuery("#nic_mode_select").fadeOut();
                        if(l_nic_conn_status_flag)
                        {
                            jQuery("#nic_not_conn_content").fadeIn(450);
                            l_dom_input_status.value=mcs_connnected;
                            jQuery("#nic_conn_content").fadeIn(450, function(){
                                jQuery("#manager_page").mCustomScrollbar("update");
                            });
                        }
                        else
                        {
                            jQuery("#nic_not_conn_content").fadeIn(450);
                            l_dom_input_status.value= mcs_not_connected;
                            jQuery("#nic_conn_content").fadeIn(450, function(){
                                jQuery("#manager_page").mCustomScrollbar("update");
                            });
                        }
                    }
                    else if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_wifi)
                    {
                        if(!l_nic_conn_status_flag)
                        {
                           l_nic_conn_status_flag = 0;
                           trigger_click(l_dom_radio_auto_obtain_ip);
                           jQuery("#nic_mode_select").fadeOut();
                           jQuery("#nic_ap_mode_content").fadeOut();
                           jQuery(l_dom_select_network_li).fadeOut();
                           jQuery("#nic_conn_content").fadeOut(300);
                           l_dom_input_status.value=mcs_fault;
                           jQuery("#mac_address").fadeOut();
                           jQuery("#nic_not_conn_content").fadeIn(450);
                           return;
                        }
                        jQuery("#nic_mode_select").fadeIn()
                        l_dom_select_wifi_mode.change_value();
                    }
                }
                else
                {
                    jQuery("#nic_enabled_content").fadeOut();
                    if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_wifi)
                    {
                        jQuery(l_dom_select_network_li).fadeOut();
                        jQuery("#nic_mode_select").fadeOut();
                    }
                    jQuery("#nic_not_conn_content").fadeOut(300);
                    jQuery("#nic_conn_content").fadeOut(350, function() {
                        jQuery("#manager_page").mCustomScrollbar("update");
                    });
                }
            }
        });
        //Wireless mode switch
        l_dom_select_wifi_mode.change_value = function(){
            if(l_dom_select_wifi_mode[l_dom_select_wifi_mode.selectedIndex].text == mcs_client)
            {
            	 jQuery("#nic_ap_mode_content").fadeOut(300);
                    if(l_nic_conn_status_flag)
                    {
                        jQuery("#nic_not_conn_content").fadeIn(450);
                        l_dom_input_status.value=mcs_connnected;
                        jQuery("#nic_conn_content").fadeIn(450, function(){
                            jQuery("#manager_page").mCustomScrollbar("update");
                        });
                    }
                    else
                    {
                        jQuery("#nic_conn_content").fadeIn(450);
                        l_dom_input_status.value= mcs_not_connected;
                        jQuery("#nic_not_conn_content").fadeIn(450, function() {
                            jQuery("#manager_page").mCustomScrollbar("update");
                        });
                    }
                    if(l_old_version)
                    {
                        network_Business.ctrl({type:"ccm_get_wifi_list_request"});
                        jQuery(l_dom_button_setup).unbind();
                        jQuery(l_dom_button_setup).bind("click", l_swc_bind_func);
                    }
                    else
                    {
                        jQuery(l_dom_select_network_li).fadeIn();
                        jQuery("#nic_not_conn_content").fadeIn(450);
                        jQuery("#nic_conn_content").fadeIn(450, function(){
                            jQuery("#manager_page").mCustomScrollbar("update");
                        });
                    }
                    l_dom_button_refresh.onclick();
            }
            else if(l_dom_select_wifi_mode[l_dom_select_wifi_mode.selectedIndex].text == mcs_ap)
            {
            	 jQuery("#mac_address").fadeIn(450);
                    jQuery(l_dom_select_network_li).fadeOut();
                    jQuery("#nic_conn_content").fadeOut(300);
                    jQuery("#nic_not_conn_content").fadeIn(450);
                    jQuery("#nic_ap_mode_content").fadeIn(450, function() {
                        jQuery("#manager_page").mCustomScrollbar("update");
                    });

                    if(l_old_version)
                    {
                        jQuery(l_dom_button_setup).unbind();
                        jQuery(l_dom_button_setup).bind("click", l_swc_bind_func);
                    }
            }
        }

        function subnet_mask_available_and_trans(obj)
        {
            var ip_pattern = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;
            if(!ip_pattern.test(obj.data)) return -1;

            var ip_array = obj.data.split("."),
                i, length, value, ip, ip_binary="";
            length = ip_array.length;
            for(i = 0; i < length; ++i)
            {
                value = parseInt(ip_array[i]);
                if(value < 0 || value > 255)
                {
                    return -1;
                }
                ip_binary += (value + 256).toString(2).substring(1);
            }
            if(-1 != ip_binary.indexOf("01"))
                return -1;
            return ip_binary.replace(/0/g, '').length;
        }
        function generate_subnet_mask(length)
        {
            var i, prefixed_IPv4_addr = "", ip_binary = "";
            for(i = 0; i < 32; ++i)
            {
                if(i < length)
                    ip_binary += '1';
                else
                    ip_binary += '0';
                if( (i + 1) % 8 == 0)
                {
                    prefixed_IPv4_addr += parseInt(ip_binary, 2).toString(10);
                    if(i != 31)
                        prefixed_IPv4_addr += ".";
                    ip_binary = "";
                }
            }
            return prefixed_IPv4_addr;
        }
        function generate_eth_setup(net_itfs)
        {
            jQuery(l_dom_select_network_li).fadeOut();
            jQuery("#nic_ap_mode_content").fadeOut();
            if(net_itfs.enable)
            {
                l_nic_enabled_status_flag = 1;
                l_network_token = net_itfs.token;
              //  get_network_default_gateway_request();
                network_Business.ctrl({type:"get_network_default_gateway_request"});
               // get_dns_request();
               network_Business.ctrl({type:"get_dns_request"});
                if(net_itfs.IPv4)
                {
                    if(net_itfs.IPv4.ConnStatus)
                    {
                        l_nic_conn_status_flag = 1;
                        if(net_itfs.Info)
                        {
                            l_dom_input_mac_address.value = net_itfs.Info.HwAddress;
                        }
                        else
                        {
                            log("info:GetNetworkInterfacesResponse return NetworkInterfaces.Info is null in class_options_network.");
                        }

                        if(net_itfs.IPv4.Config.DHCP)
                        {
                            if(net_itfs.IPv4.Config.FromDHCP)
                            {
                                l_ip_is_DHCP = 1;
                                l_dom_input_auto_ip_address.value = net_itfs.IPv4.Config.FromDHCP.Address;
                                l_dom_input_auto_subnet_mask.value = generate_subnet_mask(net_itfs.IPv4.Config.FromDHCP.PrefixedIPv4Address);
                                trigger_click(l_dom_radio_auto_obtain_ip);
                            }
                            else
                            {
                                log("info:GetNetworkInterfacesResponse return NetworkInterfaces.IPv4.Config.FromDHCP is null in class_options_network.");
                            }
                        }
                        else
                        {
                            if(net_itfs.IPv4.Config.Manual)
                            {
                                l_ip_is_DHCP = 0;
                                l_dom_input_following_ip_address.value = net_itfs.IPv4.Config.Manual[0].Address;
                                l_dom_input_following_subnet_mask.value = generate_subnet_mask(net_itfs.IPv4.Config.Manual[0].PrefixedIPv4Address);
                                trigger_click(l_dom_radio_use_following_ip);
                            }
                            else
                            {
                                log("info:GetNetworkInterfacesResponse return NetworkInterfaces.IPv4.Config.Manual is null in class_options_network.");
                            }
                        }
                        l_origin_ethernet_addr = l_ip_is_DHCP ? net_itfs.IPv4.Config.FromDHCP.Address : net_itfs.IPv4.Config.Manual[0].Address;
                    }
                }
                else
                {
                    log("info:GetNetworkInterfacesResponse return msg.NetworkInterfaces.IPv4 is null in class_options_network.");
                }
                jQuery("#nic_switch_checkbox").iButton("toggle", true);
            }
            else
            {
                jQuery("#nic_switch_checkbox").iButton("toggle", false);
            }
        }
        //Load Ethernet interface
        function generate_eth_setup_ex(now_ifs)
        {
            jQuery(l_dom_select_network_li).fadeOut();
            jQuery("#nic_ap_mode_content").fadeOut();
            if(now_ifs.enabled)
            {
                l_nic_enabled_status_flag = 1;
                if(now_ifs.phy)
                {
                    l_dom_input_mac_address.value = now_ifs.phy.info.mac;
                    if(now_ifs.phy.info.stat == "ok")
                    {
                        l_nic_conn_status_flag = 1;
                        if(now_ifs.ipv4)
                        {
                            if(now_ifs.ipv4.info.stat == "ok")
                            {
                                if(!g_domain_oems_vimtag) background_img_set(mx("#ip_status"), sub_img_status0);
                                mx("#ip_status").setAttribute("title", mcs_connnected);
                            }
                            else if(now_ifs.ipv4.info.stat == "err")
                            {
                                if(!g_domain_oems_vimtag) background_img_set(mx("#ip_status"), sub_img_status1);
                            }
                            if(now_ifs.ipv4.conf.mode == "dhcp")
                            {
                                l_ip_is_DHCP = 1;
                                l_dom_input_auto_ip_address.value = now_ifs.ipv4.info.ip.addr || "0.0.0.0";
                                l_dom_input_auto_subnet_mask.value = now_ifs.ipv4.info.ip.mask || "0.0.0.0";
                                l_dom_input_auto_gateway.value = now_ifs.ipv4.info.ip.gw || "0.0.0.0";
                                trigger_click(l_dom_radio_auto_obtain_ip);
                            }
                            else if(now_ifs.ipv4.conf.mode == "static")
                            {
                                l_ip_is_DHCP = 0;
                                l_dom_input_following_ip_address.value = now_ifs.ipv4.conf.static_ip.addr || "0.0.0.0";
                                l_dom_input_following_subnet_mask.value = now_ifs.ipv4.conf.static_ip.mask || "0.0.0.0";
                                l_dom_input_following_gateway.value = now_ifs.ipv4.conf.static_ip.gw || "0.0.0.0";
                                trigger_click(l_dom_radio_use_following_ip);
                            }
                            l_origin_ethernet_addr = l_ip_is_DHCP ? now_ifs.ipv4.info.ip.addr:now_ifs.ipv4.conf.static_ip.addr;
                        }
                        else
                        {
                            log("info:GetDeviceInformationResponse return net_info.ifs.ipv4 || ipv4.conf || ipv4.info is null in class_options_network.");
                        }
                    }
                    else if(now_ifs.internet.info.stat == "err")
                    {
                        l_nic_conn_status_flag = 0;
                        if(now_ifs.ipv4)
                        {
                            if(now_ifs.ipv4.info.stat == "ok")
                            {
                                if(!g_domain_oems_vimtag) background_img_set(mx("#ip_status"), sub_img_status0);
                                mx("#ip_status").setAttribute("title", mcs_connnected);
                            }
                            else if(now_ifs.ipv4.info.stat  == "err")
                            {
                                if(!g_domain_oems_vimtag) background_img_set(mx("#ip_status"), sub_img_status1);
                            }
                            if(now_ifs.ipv4.conf.mode == "dhcp")
                            {
                                l_ip_is_DHCP = 1;
                                l_dom_input_auto_ip_address.value = now_ifs.ipv4.info.ip.addr || "0.0.0.0";
                                l_dom_input_auto_subnet_mask.value = now_ifs.ipv4.info.ip.mask || "0.0.0.0";
                                l_dom_input_auto_gateway.value = now_ifs.ipv4.info.ip.gw || "0.0.0.0";
                                trigger_click(l_dom_radio_auto_obtain_ip);
                            }
                            else if(now_ifs.ipv4.conf.mode == "static")
                            {
                                l_ip_is_DHCP = 0;
                                l_dom_input_following_ip_address.value = "0.0.0.0";
                                l_dom_input_following_subnet_mask.value = "0.0.0.0";
                                l_dom_input_following_gateway.value = "0.0.0.0";
                                trigger_click(l_dom_radio_use_following_ip);
                            }
                            l_origin_ethernet_addr = l_ip_is_DHCP ? now_ifs.ipv4.info.ip.addr : now_ifs.ipv4.conf.static_ip.addr;
                        }
                    }
                }
                else
                {
                    log("info:GetDeviceInformationResponse return net_info.ifs.phy || ifs.phy.conf || ifs.phy.info is null in class_options_network.");
                }
                jQuery("#nic_switch_checkbox").iButton("toggle", true);
            }
            else
            {
                jQuery("#nic_switch_checkbox").iButton("toggle", false);
            }
        }
        function generate_wireless_setup(net_itfs)
        {
            if(net_itfs.Enabled)
            {
                l_nic_enabled_status_flag = 1;
             //   ccm_get_wifi_configuration_request({net_itfs:net_itfs});

                 network_Business.ctrl({type:"ccm_get_wifi_configuration_request",data:{net_itfs:net_itfs}});
                jQuery("#nic_switch_checkbox").iButton("toggle", true);
            }
            else
            {
                jQuery("#nic_switch_checkbox").iButton("toggle", false);
            }
        }
        //Wireless web page loading surface
        function generate_wireless_setup_ex(now_ifs)
        {
            if(now_ifs.enabled)
            {
                l_nic_enabled_status_flag = 1;
                l_network_token = now_ifs.token;
                if(now_ifs.phy && now_ifs.phy.conf && now_ifs.phy.info)
                {
                    if(now_ifs.phy.info.stat == "ok")
                    {
                        l_nic_conn_status_flag = 1;
                        if(now_ifs.phy.conf.mode == "wificlient")
                        {
                        	  l_dom_select_wifi_mode[0].selected = true;
                        	  jQuery(l_dom_select_wifi_mode).tzSelect();
                            l_dom_input_mac_address.value = now_ifs.phy.info.mac;
                            if(now_ifs.ipv4)
                            {
                                if(now_ifs.ipv4.info.stat == "ok")
                                {
                                    if(!g_domain_oems_vimtag) background_img_set(mx("#ip_status"), sub_img_status0);
                                    mx("#ip_status").setAttribute("title", mcs_connnected);
                                }
                                else if(now_ifs.ipv4.info.stat == "err")
                                {
                                    if(!g_domain_oems_vimtag) background_img_set(mx("#ip_status"), sub_img_status1);
                                }
                                if(now_ifs.ipv4.conf.mode == "dhcp")
                                {
                                    l_ip_is_DHCP = 1;
                                    l_dom_input_auto_ip_address.value = now_ifs.ipv4.info.ip.addr|| "0.0.0.0";
                                    l_dom_input_auto_subnet_mask.value = now_ifs.ipv4.info.ip.mask || "0.0.0.0";
                                    l_dom_input_auto_gateway.value = now_ifs.ipv4.info.ip.gw || "0.0.0.0";
                                    trigger_click(l_dom_radio_auto_obtain_ip);
                                }
                                else if(now_ifs.ipv4.conf.mode == "static")
                                {
                                    l_ip_is_DHCP = 0;
                                    l_dom_input_following_ip_address.value = now_ifs.ipv4.conf.static_ip.addr || "0.0.0.0";
                                    l_dom_input_following_subnet_mask.value = now_ifs.ipv4.conf.static_ip.mask || "0.0.0.0";
                                    l_dom_input_following_gateway.value = now_ifs.ipv4.conf.static_ip.gw || "0.0.0.0";
                                    trigger_click(l_dom_radio_use_following_ip);
                                }
                                l_origin_wireless_addr = l_ip_is_DHCP ? now_ifs.ipv4.info.ip.addr : now_ifs.ipv4.conf.static_ip.addr;
                            }
                            else
                            {
                                log("info:GetDeviceInformationResponse return msg.ifs.ipv4 || ipv4.conf || ipv4.info is null in class_options_network.");
                            }
                            l_dom_input_ap_start_address.value = "192.168.188.100";
                            l_dom_input_ap_end_address.value = "192.168.188.253";
                            l_dom_input_ap_gateway.value = "192.168.188.254";

                            l_dom_select_wifi_mode.change_value();
                        }
                        else if(now_ifs.phy.conf.mode == "adhoc")
                        {
                        	  l_dom_select_wifi_mode[1].selected = true;
                        	  jQuery(l_dom_select_wifi_mode).tzSelect();
                            if(now_ifs.dhcp_srv)
                            {
                                l_dom_input_ap_start_address.value = now_ifs.dhcp_srv.conf.ip_start;
                                l_dom_input_ap_end_address.value = now_ifs.dhcp_srv.conf.ip_end;
                                l_dom_input_ap_gateway.value = now_ifs.dhcp_srv.conf.gw;

                                mx("#ip_status").style.cssText = "";
                                l_dom_input_following_ip_address.value = "";
                                l_dom_input_following_subnet_mask.value = "";
                                l_dom_input_following_gateway.value = "";

                                if(now_ifs.ipv4.conf.mode == "dhcp")
                                {
                                    trigger_click(l_dom_radio_auto_obtain_ip);
                                }
                                else if(now_ifs.ipv4.conf.mode == "static")
                                {
                                    l_dom_input_following_ip_address.value = now_ifs.ipv4.conf.static_ip.addr || "0.0.0.0";
                                    l_dom_input_following_subnet_mask.value = now_ifs.ipv4.conf.static_ip.mask || "0.0.0.0";
                                    l_dom_input_following_gateway.value = now_ifs.ipv4.conf.static_ip.gw || "0.0.0.0";
                                    trigger_click(l_dom_radio_use_following_ip);
                                }
                            }
                            else
                            {
                                log("info:GetDeviceInformationResponse return ifs.dhcp_srv || ifs.dhcp_srv.conf || ifs.dhcp_srv.info is null in class_options_network.");
                            }
                            l_dom_select_wifi_mode.change_value();
                        }
                        else if(now_ifs.phy.conf.mode == "monitor")
                        {
                        	  l_dom_select_wifi_mode[0].selected = true;
                        	  jQuery(l_dom_select_wifi_mode).tzSelect();
                        	  //When in WiFi intelligent configuration mode, hide options
                        	  l_dom_select_wifi_mode.change_value();
                        }

                        if(now_ifs.wifi_client.ap_list)
                        {
                              var i, length, signal_level = 0, inner_html = "",
                                   wifi_list = now_ifs.wifi_client.ap_list;

                              inner_html += "<option>" + mcs_not_select + "</option>";
                              length = wifi_list.length;

                              if(now_ifs.wifi_client.info.stat == "ok")
                              {
                                  if(!g_domain_oems_vimtag) background_img_set(mx("#ssid_status"), sub_img_status0);
                                  mx("#ssid_status").setAttribute("title", mcs_connnected);
                                  mx("/span", l_dom_select_network_password_li)[0].innerHTML = "";
                                  for(i = 0; i < length; ++i)
                                  {
                                  	    if(wifi_list[i].ssid == "") continue;
                                        if(wifi_list[i].quality >= 0 && wifi_list[i].quality <= 100)
                                        {
                                            signal_level = Math.floor(wifi_list[i].quality / 20);
                                            signal_level = (signal_level >= 5 ? 4 : signal_level);
                                        }
                                        else
                                        {
                                            log("info:GetDeviceInformationResponse return signal_level is illegal in class_options_network.");
                                        }
                                        if(wifi_list[i].connect)
                                        {
                                            inner_html += "<option value='" + wifi_list[i].ssid + "' selected='selected' front_img='/imgs/device_status_green.png' rear_img='/imgs/wifi_signal"+ signal_level + ".png'>" + wifi_list[i].ssid + "</option>";
                                        }
                                        else
                                        {
                                            inner_html += "<option value='" + wifi_list[i].ssid + "' rear_img='/imgs/wifi_signal"+ signal_level + ".png'>" + wifi_list[i].ssid + "</option>";
                                        }
                                  }
                                  l_dom_select_network_password.value = now_ifs.wifi_client.conf.key;
                              }
                              else
                              {
                                    jQuery(l_dom_select_network_password_li).fadeIn("normal", function() {
                                        jQuery("#manager_page").mCustomScrollbar("update");
                                    });
                                    if(now_ifs.wifi_client.info.stat== "err")
                                    {
                                        if(!g_domain_oems_vimtag) background_img_set(mx("#ssid_status"), sub_img_status2);
                                        mx("#ssid_status").setAttribute("title", mcs_connect_fail);
                                        mx("/span", l_dom_select_network_password_li)[0].innerHTML = "&nbsp;&nbsp;&nbsp; " + mcs_connect_fail;
                                    }
                                    else if(now_ifs.wifi_client.info.stat == "info.connecting")
                                    {
                                        if(!g_domain_oems_vimtag) background_img_set(mx("#ssid_status"), sub_img_status1);
                                        mx("#ssid_status").setAttribute("title", mcs_connecting);
                                        mx("/span", l_dom_select_network_password_li)[0].innerHTML = "&nbsp;&nbsp;&nbsp; " + mcs_connecting;
                                    }
                                    else
                                        mx("/span", l_dom_select_network_password_li)[0].innerHTML = "";
                                    for(i = 0; i < length; ++i)
                                    {
                                    	  if(wifi_list[i].ssid == "") continue;
                                        if(wifi_list[i].quality >= 0 && wifi_list[i].quality <= 100)
                                        {
                                            signal_level = Math.floor(wifi_list[i].quality / 20);
                                            signal_level = (signal_level >= 5 ? 4 : signal_level);
                                        }
                                        else
                                        {
                                            log("info:GetDeviceInformationResponse return signal_level is illegal in class_options_network.");
                                        }
                                        if(wifi_list[i].ssid == now_ifs.wifi_client.conf.ssid)
                                        {
                                            inner_html += "<option value='" + wifi_list[i].ssid + "' selected='selected' front_img='/imgs/device_status_yellow.png' rear_img='/imgs/wifi_signal"+ signal_level + ".png'>" + wifi_list[i].ssid + "</option>";
                                        }
                                        else
                                        {
                                            inner_html += "<option value='" + wifi_list[i].ssid + "' rear_img='/imgs/wifi_signal"+ signal_level + ".png'><pre>" + wifi_list[i].ssid + "</pre></option>";
                                        }
                                    }
                              }
                              jQuery(l_dom_select_network).html(inner_html);
                        }
                        else
                        {
                            log("info:GetDeviceInformationResponse return msg.ifs.wifi_client || wifi_client.conf || wifi_client.info is null in class_options_network.");
                        }
                        jQuery(l_dom_select_network).tzSelect(null,1);
                    }
                    else if(now_ifs.phy.info.stat == "err")
                    {
                       l_nic_conn_status_flag = 0;
                       trigger_click(l_dom_radio_auto_obtain_ip);
                       jQuery("#nic_mode_select").fadeOut();
                       jQuery("#nic_ap_mode_content").fadeOut();
                       jQuery(l_dom_select_network_li).fadeOut();
                       jQuery("#nic_conn_content").fadeOut(300);
                       l_dom_input_status.value=mcs_fault;
                       jQuery("#mac_address").fadeOut();
                       return;
                    }
                }
                else
                {
                    log("info:GetDeviceInformationResponse return ifs.phy || ifs.phy.conf || ifs.phy.info is null in class_options_network.");
                }
                jQuery("#nic_switch_checkbox").iButton("toggle", true);
            }
            else
            {
                jQuery("#nic_switch_checkbox").iButton("toggle", false);
            }
        }

        function on_cacs_check_nid_ack(type, msg, ref)
        {
            if(!l_me_parent) return;
            g_system_stop_wait();
            if(!msg.result)
            {
                clearInterval(l_refresh_timer);
            }
            else
            {
                log("error:on_cacs_check_nid_ack return result error in class_options_network.");
                return -1;
            }
            location = window.location.protocol+"//" + ref.ip;
        }
        function get_network_default_gateway_response(type, msg, ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.ret&&msg.ret.code == "")
            {
                if(msg.NetworkGateway.IPv4Address)
                {
                    l_dom_input_auto_gateway.value = msg.NetworkGateway.IPv4Address[0];
                    l_dom_input_following_gateway.value = msg.NetworkGateway.IPv4Address[0];

                    if(l_ndg_bind_func)
                    {
                        jQuery(l_dom_button_setup).unbind("click", l_ndg_bind_func);
                        l_ndg_bind_func = null;
                    }

                    l_ndg_bind_func = function(obj) {
                        l_set_network_default_gateway_response_ok = 0;
                        network_Business.ctrl({type:"set_network_default_gateway_request",data:{token:l_network_token, NetworkGateway:[{IPv4Address:l_dom_input_following_gateway.value}]}})
                     //   set_network_default_gateway_request({IPv4Address:l_dom_input_following_gateway.value});
                    };

                    jQuery(l_dom_button_setup).bind("click", l_ndg_bind_func);
                }
                else
                {
                    log("info:GetNetworkDefaultGatewayResponse return NetworkGateway.IPv4Address is null in class_options_network.");
                }
            }
            else
            {
                log("error:GetNetworkDefaultGatewayResponse return Result error in class_options_network.");
                return -1;
            }
        }
        function set_network_default_gateway_response(type, msg, ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.ret&&msg.ret.code == "")
            {
                l_set_network_default_gateway_response_ok = 1;
                if(l_set_network_interfaces_response_ok && l_set_dns_response_ok && l_set_wifi_config_response_ok)
                {
                    l_set_network_interfaces_response_ok = 0;
                    l_set_dns_response_ok = 0;
                    l_set_wifi_config_response_ok = 0;
                    l_set_network_default_gateway_response_ok = 0;

                    g_system_prompt_box(mcs_set_successfully, 240, -200);
                }
            }
            else
            {
                log("error:SetNetworkDefaultGatewayResponse return Result error in class_options_network.");
                return -1;
            }
        }
        function get_dns_response(type, msg, ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.ret&&msg.ret.code == "")
            {
                if(msg.DNSInformation.FromDHCP)
                {
                    if(msg.DNSInformation.DNSFromDHCP)
                    {
                        l_dom_input_auto_dns.value = msg.DNSInformation.DNSFromDHCP[0];
                        if(msg.DNSInformation.DNSFromDHCP.length > 1)
                            l_dom_input_auto_alternate_dns.value = msg.DNSInformation.DNSFromDHCP[1];
                    }
                    else
                    {
                        log("info:GetDNSResponse return DNSInformation.DNSFromDHCP is null in class_options_network.");
                    }
                    l_dns_is_DHCP = 1;
                    trigger_click(l_dom_radio_auto_obtain_dns);
                }
                else
                {
                    if(msg.DNSInformation.DNSManual)
                    {
                        l_dom_input_following_dns.value = msg.DNSInformation.DNSManual[0];
                        if(msg.DNSInformation.DNSManual.length > 1)
                            l_dom_input_following_alternate_dns.value = msg.DNSInformation.DNSManual[1];
                    }
                    else
                    {
                        log("info:GetDNSResponse return DNSInformation.DNSManual is null in class_options_network.");
                    }
                    l_dns_is_DHCP = 0;
                    trigger_click(l_dom_radio_use_following_dns);
                }
                if(l_dns_bind_func)
                {
                    jQuery(l_dom_button_setup).unbind("click", l_dns_bind_func);
                    l_dns_bind_func = null;
                }

                l_dns_bind_func = function(obj) {
                    var DHCP_flag, input_dns, input_alternate_dns;

                    if(l_dom_radio_auto_obtain_dns.checked)
                    {
                        DHCP_flag = 1;
                        input_dns = l_dom_input_auto_dns.value;
                        input_alternate_dns = l_dom_input_auto_alternate_dns.value;
                    }
                    else if(l_dom_radio_use_following_dns.checked)
                    {
                        DHCP_flag = 0;
                        input_dns = l_dom_input_following_dns.value;
                        input_alternate_dns = l_dom_input_following_alternate_dns.value;
                    }
                   // set_dns_request({FromDHCP:DHCP_flag, DNS:input_dns, Alternate_DNS:input_alternate_dns})
                  //  FramDHCP:obj.FromDHCP, DNSManual:[obj.DNS, obj.Alternate_NDS]
                    network_Business.ctrl({type:"set_dns_request",data:{FramDHCP:FramDHCP,DNSManual:[input_dns,input_alternate_dns]}});
                };
                jQuery(l_dom_button_setup).bind("click", l_dns_bind_func);
            }
            else
            {
                log("error:GetDNSResponse return Result error in class_options_network.");
                return -1;
            }
        }
        function set_dns_response(type, msg, ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.ret&&msg.ret.code == "")
            {
                l_set_dns_response_ok = 1;
                if(l_set_network_interfaces_response_ok && l_set_network_default_gateway_response_ok && l_set_wifi_config_response_ok)
                {
                    l_set_network_interfaces_response_ok = 0;
                    l_set_network_default_gateway_response_ok = 0;
                    l_set_dns_response_ok = 0;
                    l_set_wifi_config_response_ok = 0;

                    g_system_prompt_box(mcs_set_successfully, 240, -200);
                }
            }
            else
            {
                log("error:SetDNSResponse return Result error in class_options_network.");
                return -1;
            }
        }
        //Back to the list wifi Refresh
        function ccm_get_wifi_list_response(msg,ref)
        {
            if(g_hostname=="www.vimtag.com"){
                l_dom_button_refresh.style.color = "#ffffff";
                l_dom_button_refresh.style.cursor = "pointer";
            }
            if(!l_me_parent) return;
            var i, length, inner_html = "";
            if(msg && msg.result=="")
            {
                if(msg.networks && msg.networks[1].token=="ra0" &&  msg.networks[1].wifi_client.ap_list)
                {
				    var msg_wifi_list=msg.networks[1].wifi_client.ap_list;
                    inner_html += "<option>" + mcs_not_select + "</option>";
                    length = msg_wifi_list.length;
                    for(i = 0; i < length; ++i)
                    {
                    	  if(msg_wifi_list[i].ssid == "") continue;

                        signal_level = Math.floor(msg_wifi_list[i].quality / 20);
                        signal_level = (signal_level >= 4 ? 4 : signal_level);
  
                        if(msg_wifi_list[i].connect)
                        {
                            inner_html += "<option value='"+ msg_wifi_list[i].ssid  +"' selected='selected' front_img='/imgs/device_status_green.png' rear_img='/imgs/wifi_signal"+ signal_level + ".png'>" + msg_wifi_list[i].ssid + "</option>";
                        }
                        else
                        {
                            inner_html += "<option value='" + msg_wifi_list[i].ssid + "' rear_img='/imgs/wifi_signal"+ signal_level + ".png'>" + msg_wifi_list[i].ssid + "</option>";
                        }
                    }
                    jQuery(l_dom_select_network).html(inner_html);
                    l_dom_select_network.change_value();
                }
                else
                {
                    log("info:CcmGetWifiListResponse return WifiList is null in class_options_network.");
                }
                jQuery(l_dom_select_network).tzSelect(null,1);
                jQuery(l_dom_select_network_li).fadeIn();
                //jQuery("#nic_not_conn_content").fadeOut(450);
                jQuery("#nic_conn_content").fadeIn(450, function(){
                    jQuery("#manager_page").mCustomScrollbar("update");
                });
            }
        }

        function ccm_dev_info_get_ack(msg , ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.result == "")
            {   //The beginning of a new version of the old version is no v v v string comparison there is not necessarily greater than v.
                if(msg.ver < "12.10.17.23.45")
                {
                   l_old_version = 1;
                   ms.send_msg("net_get",{sn:g_select_device_ipc,force_scan:0},{select:mcs_ethernet},dev_net_get_ack);
                }
                else
                {
                    l_old_version = 0;
                    ms.send_msg("net_get",{sn:g_select_device_ipc,force_scan:0,filter:"all"},{ip:g_server_device,select:(ref ==null?null:ref.select)},dev_net_get_ack);
                    l_dom_button_connect.style.display = "none";
                }
            }
            else
            {
                log("error:GetDeviceInformationResponse return Result error in class_options_network.");
            }
        }
        //Device Network Gets
        function dev_net_get_ack(msg,ref)
        {
            if(!l_me_parent) return;
            g_system_stop_wait();
            clearInterval(l_refresh_timer);
            if(msg && msg.result=="")
            {
                var net_info;
                net_info = msg.networks;
                if(net_info)
                {
                    var i, length = net_info.length, inner_html = "";
                    for(i = 0; i < length; ++i)
                    {
                        if(net_info[i].token == "eth0")
                            if(ref && ref.select == mcs_ethernet)
                                inner_html += "<option value ='" + i + "' selected='selected'>" + mcs_ethernet + "</option>";
                            else
                                inner_html += "<option value ='" + i + "'>" + mcs_ethernet + "</option>";
                        else if(net_info[i].token == "ra0")
                            if(ref && ref.select == mcs_wifi)
                                inner_html += "<option value ='" + i + "' selected='selected'>" +mcs_wifi + "</option>";
                            else
                                inner_html += "<option value ='" + i + "'>" + mcs_wifi + "</option>";
                    }
                    jQuery(l_dom_select_nic).html(inner_html);
                    //Ethernet and wireless network selection
                    l_dom_select_nic.change_value = function(obj){
                    	  if(l_select_net==mcs_wifi)
                        {
                            l_dom_select_nic[1].selected=true;
                            l_select_net="";
                        }
                        else if (l_select_net==mcs_connnected)
                        {
                            l_dom_select_nic[0].selected=true;
                            l_select_net="";
                        }
                        jQuery(l_dom_select_nic).tzSelect();
                        l_nic_enabled_status_flag = 0;
                        l_nic_conn_status_flag = 0;
                        l_ip_is_DHCP = 0;
                        //Select the Ethernet
                        if(this[this.selectedIndex].text == mcs_ethernet)
                        {
                            jQuery(l_dom_button_setup).unbind();
                            generate_eth_setup_ex(net_info[this.selectedIndex]);
                        }
                        //Select a wireless network
                        else if(this[this.selectedIndex].text == mcs_wifi)
                        {
                            jQuery(l_dom_button_setup).unbind();
                            generate_wireless_setup_ex(net_info[this.selectedIndex]);
                        }
                        if(msg.dns)
                        {
                            if(msg.dns.info.stat == "ok")
                            {
                                if(!g_domain_oems_vimtag) background_img_set(mx("#dns_status"), sub_img_status0);
                                mx("#dns_status").setAttribute("title", mcs_connnected);
                            }
                            else if(msg.dns.info.stat == "err")
                            {
                                if(!g_domain_oems_vimtag) background_img_set(mx("#dns_status"), sub_img_status1);
                            }
                            if(msg.dns.conf.mode == "dhcp")
                            {
							                  //net_dns=msg.dns;
                                l_dom_input_auto_dns.value = msg.dns.info.dns[0] || "0.0.0.0";
                                if(msg.dns.info.dns.length > 1)
                                    l_dom_input_auto_alternate_dns.value = msg.dns.info.dns[1] || "0.0.0.0";
                                l_dns_is_DHCP = 1;
                                trigger_click(l_dom_radio_auto_obtain_dns);
                            }
                            else if(msg.dns.conf.mode == "static")
                            {
                                l_dom_input_following_dns.value = msg.dns.conf.static_dns[0] || "0.0.0.0";
                                if(msg.dns.conf.static_dns.length > 1)
                                    l_dom_input_following_alternate_dns.value = msg.dns.conf.static_dns[1] || "0.0.0.0";
                                l_dns_is_DHCP = 0;
                                trigger_click(l_dom_radio_use_following_dns);
                            }
                        }
                        else
                        {
                            log("info:GetDeviceInformationResponse return net_info.dns || dns.conf || dns.info is null in class_options_network.");
                        }
                        //Apply Click event
                        jQuery(l_dom_button_setup).bind("click", function() {
                            var ip_address, ip_refresh = "", origin_connected = "";
                            if(g_select_device_ipc && g_network_environ == "private")          //Direct Connect
                            {
                                if(l_origin_ethernet_addr == window.location.host)
                                {
                                    origin_connected = l_origin_ethernet_addr;
                                    if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_ethernet && l_dom_radio_auto_obtain_ip.checked && !l_ip_is_DHCP)
                                    {
                                        ip_refresh = origin_connected;
                                    }
                                }
                                else if(l_origin_wireless_addr == window.location.host)
                                {
                                    origin_connected = l_origin_wireless_addr;
                                    if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_wifi && l_dom_radio_auto_obtain_ip.checked && !l_ip_is_DHCP)
                                    {
                                        ip_refresh = origin_connected;
                                    }
                                }
                                if(l_dom_radio_use_following_ip.checked)
                                {
                                    ip_address = l_dom_input_following_ip_address.value;
                                    if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_ethernet)
                                    {
                                        if((ip_address != l_origin_ethernet_addr) && (origin_connected == l_origin_ethernet_addr))
                                            ip_refresh = ip_address;
                                    }
                                    else if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_wifi)
                                    {
                                        if((ip_address != l_origin_wireless_addr) && (origin_connected == l_origin_wireless_addr))
                                            ip_refresh = ip_address;
                                    }
                                }
                            }
                            else
                            {
                                if(l_dom_radio_auto_obtain_ip.checked)
                                {
                                    if(!l_ip_is_DHCP)
                                    {
                                        if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_wifi)
                                        {
                                            ip_refresh = l_origin_wireless_addr;
                                        }
                                        else if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_ethernet)
                                        {
                                            ip_refresh = l_origin_ethernet_addr;
                                        }
                                    }
                                }
                                else if(l_dom_radio_use_following_ip.checked)
                                {
                                    ip_address = l_dom_input_following_ip_address.value;
                                    if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_wifi)
                                    {
                                        if(ip_address != l_origin_wireless_addr)
                                            ip_refresh = ip_address;
                                    }
                                    else if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_ethernet)
                                    {
                                        if(ip_address != l_origin_ethernet_addr)
                                            ip_refresh = ip_address;
                                    }
                                }
                            }
                            if(ip_refresh)
                            {
                                var type = mcloud_agent.devs.get(g_select_device_ipc).type;
                                if(type == "IPC" && g_network_environ == "private" || type == "BOX")                //Direct Connect
                                {
                                    system_pop_confirm_box({str:mcs_modify_network_prompt, callback_func:function(){
                                        ccm_set_network_info_request({type:l_dom_select_nic[l_dom_select_nic.selectedIndex].text,
                                            ori_net_info:msg, to:ip_refresh + ":" + location.port, select:l_dom_select_nic[l_dom_select_nic.selectedIndex].text});
                                    }});
                                }
                                else                                                                                                //Through the server
                                {
                                    system_pop_confirm_box({str:mcs_modify_network_prompt, callback_func:function(){
                                        ccm_set_network_info_request({type:l_dom_select_nic[l_dom_select_nic.selectedIndex].text,
                                            ori_net_info:msg, to:ref.ip, select:l_dom_select_nic[l_dom_select_nic.selectedIndex].text});
                                    }});
                                }
                            }
                            else
                            {
                                system_pop_confirm_box({str:mcs_modify_network_prompt, callback_func:function(){
                                    ccm_set_network_info_request({type:l_dom_select_nic[l_dom_select_nic.selectedIndex].text,
                                        ori_net_info:msg, to:ip_refresh, select:l_dom_select_nic[l_dom_select_nic.selectedIndex].text});
                                }});
                            }
                        });
                    };
                    l_dom_select_nic.change_value();
                }
                else
                {
                    log("error:CcmGetNetworkInfoResponse return ifaces is null in class_options_network.");
                    return -1;
                }
            }
            else
            {
                log("eror:CcmGetNetworkInfoResponse return Result error in class_options_network.");
            }
        }
        //Set network parameters
        function ccm_set_network_info_request(obj)
        {
            var node, node_sn,
                i, length, count = 0, net_info = {}, now_ifs, now_net_info = {},dns={};

            node_sn = g_select_device_ipc;
            node = mcloud_agent.devs.get(node_sn);
            if(!node)  return;
            //obj_merge(net_info, obj.ori_net_info);
            net_info = obj.ori_net_info.networks;
            //Determine how many network connection is available
            for(i = 0; i < net_info.length; ++i)
            {
                if(net_info[i].enabled)
                    ++ count;
            }
            now_ifs = net_info[l_dom_select_nic.selectedIndex];
            if(obj.type == mcs_ethernet)
            {
                if(nic_switch_checkbox.checked)
                {
                    if(l_nic_enabled_status_flag)
                    {
                        now_net_info["ifs"] = {token:now_ifs.token, enabled:1};
                        //Automatically obtain ip
                        if(l_dom_radio_auto_obtain_ip.checked)
                        {
                            now_net_info.ifs["ipv4"] = {conf:{enabled:now_ifs.ipv4.conf.enabled, mode:"dhcp", static_ip:"" ,debug_ip:""}};
                        }
                        else if(l_dom_radio_use_following_ip.checked)//Manually set ip
                        {
                            now_net_info.ifs["ipv4"] = {conf:{enabled:now_ifs.ipv4.conf.enabled, mode:"static",
                                static_ip:{addr:l_dom_input_following_ip_address.value, gw:l_dom_input_following_gateway.value,
                                    mask:now_ifs.ipv4.conf.static_ip ? now_ifs.ipv4.conf.static_ip.mask : ""},
                                    debug_ip:now_ifs.ipv4.conf.debug_ip
                            }};
                            if(subnet_mask_available_and_trans({data:l_dom_input_following_subnet_mask.value}) >= 0)
                                now_net_info.ifs.ipv4.conf.static_ip.mask = l_dom_input_following_subnet_mask.value;
                            else
                            {
                                system_pop_confirm_box({alert:true, str:mcs_subnet_mask_wrong_format});
                                return;
                            }
                        }
                    }
                    else
                    {
                        now_net_info["ifs"] = {token:now_ifs.token, enabled:1};
                    }
                }
                else//Close Ethernet connection
                {
                    if(count < 1)
                    {
                        system_pop_confirm_box({alert:true, str:mcs_not_allowed_close_two_network_cards});
                        return;
                    }
                    else
                        now_net_info["ifs"] = {token:now_ifs.token, enabled:0};
                }
            }
            else if(obj.type == mcs_wifi)
            {
                if(nic_switch_checkbox.checked)
                {
                    if(l_nic_enabled_status_flag)
                    {
                        now_net_info["ifs"] = {token:now_ifs.token, enabled:1};
                        //if(mx("#nic_mode_switch_checkbox").checked)             //client
                        if(l_dom_select_wifi_mode[l_dom_select_wifi_mode.selectedIndex].text == mcs_client)
                        {
                            now_net_info.ifs["phy"] = {conf:{mode:"wificlient", mtu:now_ifs.phy.conf.mtu}};
                            if(l_dom_radio_auto_obtain_ip.checked)
                            {
                                now_net_info.ifs["ipv4"] = {conf:{enabled:now_ifs.ipv4.conf.enabled, mode:"dhcp", static_ip:"", debug_ip:""}};
                            }
                            else if(l_dom_radio_use_following_ip.checked)
                            {
                                now_net_info.ifs["ipv4"] = {conf:{enabled:now_ifs.ipv4.conf.enabled, mode:"static",
                                    static_ip:{addr:l_dom_input_following_ip_address.value, gw:l_dom_input_following_gateway.value,
                                        mask:now_ifs.ipv4.conf.static_ip ? now_ifs.ipv4.conf.static_ip.mask : ""},
                                    debug_ip:now_ifs.ipv4.conf.debug_ip}};
                                if(subnet_mask_available_and_trans({data:l_dom_input_following_subnet_mask.value}) >= 0)
                                    now_net_info.ifs.ipv4.conf.static_ip.mask = l_dom_input_following_subnet_mask.value;
                                else
                                {
                                    system_pop_confirm_box({alert:true, str:mcs_subnet_mask_wrong_format});
                                    return;
                                }
                            }

                            now_net_info.ifs["wifi_client"] = {conf:{enabled:1, ssid:l_dom_select_network[l_dom_select_network.selectedIndex].value,
                                usr:l_dom_select_network[l_dom_select_network.selectedIndex].value,
                                key:l_dom_select_network_password.value}};
                        }
                        else if(l_dom_select_wifi_mode[l_dom_select_wifi_mode.selectedIndex].text == mcs_ap)                                                   //adhoc
                        {
                            now_net_info.ifs["phy"] = {conf:{mode:"adhoc", mtu:now_ifs.phy.conf.mtu}};
                            now_net_info.ifs["dhcp_srv"] = {conf:{enabled:now_ifs.dhcp_srv.conf.enabled, gw:l_dom_input_ap_gateway.value,
                                ip_start:l_dom_input_ap_start_address.value, ip_end:l_dom_input_ap_end_address.value}}
                        }
                    }
                    else
                    {
                        now_net_info["ifs"] = {token:now_ifs.token, enabled:1};
                    }
                }
                else
                {
                    if(count < 1)
                    {
                        system_pop_confirm_box({alert:true, str:mcs_not_allowed_close_two_network_cards});
                        return;
                    }
                    else
                        now_net_info["ifs"] = {token:now_ifs.token, enabled:0};
                }
            }
            if(l_nic_enabled_status_flag)
            {
                if(l_dom_radio_auto_obtain_dns.checked)
                {
                    now_net_info["dns"] = {conf:{enalbed:obj.ori_net_info.dns.conf.enabled, mode:"dhcp", static_dns:obj.ori_net_info.dns.conf.static_dns}};
                }
                else if(l_dom_radio_use_following_dns.checked)
                {
                    now_net_info["dns"] = {conf:{enalbed:obj.ori_net_info.dns.conf.enabled, mode:"static",
                        static_dns:[l_dom_input_following_dns.value, l_dom_input_following_alternate_dns.value]}};
                }
            }
            ms.send_msg("net_set",{sn:g_select_device_ipc,networks:now_net_info.ifs,dns:now_net_info.dns},{sn:node_sn, ip_refresh:obj.to, select:obj.select,ip:obj.to},ccm_net_set_ack);
        }
        function ccm_net_set_ack(msg,ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.result == "")
            {
                g_system_prompt_box(mcs_set_successfully, 240, -200);

                l_refresh_timer = setInterval(function() {
                   ms.send_msg("dev_info_get",{sn:g_select_device_ipc},ref,ccm_dev_info_get_ack);
                }, 3500);
            }
            else
            {
                log("eror:CcmSetNetworkInfoResponse return Result error in class_options_network.");
            }
        }
        function add_event()
        {
            //wifi select
            l_dom_select_network.change_value = function() {
                //if(this[this.selectedIndex].text == mcs_not_select)
                //   jQuery(l_dom_select_network_password_li).fadeOut();
                //else
                   jQuery(l_dom_select_network_password_li).fadeIn("normal", function() {
                       jQuery("#manager_page").mCustomScrollbar("update");
                   });
                jQuery(l_dom_select_network).tzSelect(null,1);
            };
            //wifi Refresh button
            l_dom_button_refresh.onclick = function(){
                if(g_hostname=="www.vimtag.com"){
                    this.style.color = "#ccc";
                    this.style.cursor = "wait";
                }
                ms.send_msg("net_get",{sn:g_select_device_ipc,force_scan:0,filter:"wifi_client"},null,ccm_get_wifi_list_response);
            };
            //wifi Connect button
            l_dom_button_connect.onclick = function() {
                //Role confirm function is to ask whether the connection to the network returns
                if(confirm(mcs_continue_switch_wireless_network))
                {
                    //network_Business.ctrl({type:"ccm_connect_wifi_request",data:{info:{ssid:l_dom_select_network[l_dom_select_network.selectedIndex].value, psk:l_dom_select_network_password.value}}});
                    //ccm_connect_wifi_request({ssid:l_dom_select_network[l_dom_select_network.selectedIndex].value, psk:l_dom_select_network_password.value});
                }
            };
            l_dom_radio_auto_obtain_ip.onclick = function() {
                if(this.checked)
                {
                    jQuery(l_dom_use_following_ip_content).fadeOut("normal", function() {
                        if(l_ip_is_DHCP)
                            jQuery(l_dom_auto_obtain_ip_content).slideDown("normal", function() {
                                jQuery("#manager_page").mCustomScrollbar("update");
                            });
                        else
                            jQuery(l_dom_auto_obtain_ip_content).slideUp("normal", function() {
                                jQuery("#manager_page").mCustomScrollbar("update");
                            });
                    });
                }
            };
            l_dom_radio_use_following_ip.onclick = function() {
                if(this.checked)
                {
                    jQuery(l_dom_auto_obtain_ip_content).fadeOut("normal", function() {
                        jQuery(l_dom_use_following_ip_content).slideDown("normal", function() {
                            jQuery("#manager_page").mCustomScrollbar("update");
                        });
                    });
                }
            };
            l_dom_input_ap_start_address.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_ap_start_address.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_input_ap_end_address.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_ap_end_address.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_input_ap_gateway.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_ap_gateway.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_select_network_password.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_select_network_password.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_input_following_ip_address.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_following_ip_address.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_input_following_gateway.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_following_gateway.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_input_following_subnet_mask.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_following_subnet_mask.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_radio_auto_obtain_dns.onclick = function() {
                if(this.checked)
                {
                    jQuery(l_dom_use_following_dns_content).slideUp("normal", function() {
                        if(l_dns_is_DHCP)
                            jQuery(l_dom_auto_obtain_dns_content).slideDown("normal", function() {
                                jQuery("#manager_page").mCustomScrollbar("update");
                            });
                        else
                            jQuery(l_dom_auto_obtain_dns_content).slideUp("normal", function() {
                                jQuery("#manager_page").mCustomScrollbar("update");
                            });
                    });
                }
            };
            l_dom_radio_use_following_dns.onclick = function() {
                if(this.checked)
                {
                    jQuery(l_dom_use_following_dns_content).slideDown("normal", function() {
                        jQuery(l_dom_auto_obtain_dns_content).slideUp("normal", function() {
                            jQuery("#manager_page").mCustomScrollbar("update");
                        });
                    });
                }
            };
            l_dom_input_following_dns.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_following_dns.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_input_following_alternate_dns.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_following_alternate_dns.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
        }
        function remove_event()
        {
            l_dom_select_network.change_value = "";
            l_dom_button_refresh.onclick = "";
            l_dom_button_connect.onclick = "";
            l_dom_radio_auto_obtain_ip.onclick = "";
            l_dom_radio_use_following_ip.onclick = "";
            l_dom_input_ap_start_address.onfocus = "";
            l_dom_input_ap_start_address.onblur = "";
            l_dom_input_ap_end_address.onfocus = "";
            l_dom_input_ap_end_address.onblur = "";
            l_dom_input_ap_gateway.onfocus = "";
            l_dom_input_ap_gateway.onblur = "";
            l_dom_select_network_password.onfocus = "";
            l_dom_select_network_password.onblur = "";
            l_dom_input_following_ip_address.onfocus = "";
            l_dom_input_following_ip_address.onblur = "";
            l_dom_input_following_gateway.onfocus = "";
            l_dom_input_following_gateway.onblur = "";
            l_dom_input_following_subnet_mask.onfocus = "";
            l_dom_input_following_subnet_mask.onblur = "";
            l_dom_radio_auto_obtain_dns.onclick = "";
            l_dom_radio_use_following_dns.onclick = "";
            l_dom_input_following_dns.onfocus = "";
            l_dom_input_following_dns.onblur = "";
            l_dom_input_following_alternate_dns.onfocus = "";
            l_dom_input_following_alternate_dns.onblur = "";
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
            	  case "select_net":
                    {
                        if(l_dom_select_nic[l_dom_select_nic.selectedIndex].text == mcs_ethernet )
                        {
                              l_select_net = mcs_ethernet;
                        }
                        else
                        {
                              l_select_net= mcs_wifi;
                        }
                        ms.send_msg("net_get",{sn:g_select_device_ipc,force_scan:0,filter:"all"},{ip:g_server_device},dev_net_get_ack);
                        break;
                    }
                case "destroy":
                    {
                        clearInterval(l_refresh_timer);
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                    }
            }
        }
        add_event();
        //First obtain the device basic information
        ms.send_msg("dev_info_get",{sn:g_select_device_ipc},null,ccm_dev_info_get_ack);
    }

    function class_options_notification(obj)
    {
    	 var l_me = this,
    		 l_me_parent = obj.parent,
    	     j_me_parent = jQuery(obj.parent),
    	     //dom
    	     l_dom_alert_enable,
    	     l_dom_record_enable,
    	     l_dom_button_setup;

    	 l_me_parent[s_innerHTML] =
    	 	"<div>"
            +   "<div class='options_float_left'>" + mcs_alert + "</div>"
            +   "<div  class='options_float_right'>"
            +       "<input id='alert_switch_checkbox' type='checkbox' />"
            +   "</div>"
            + "</div>"
            + "<div class='manager_split_bar_2px_2'></div>"
            + "<div>"
            +   "<div class='options_float_left'>" + mcs_record + "</div>"
            +   "<div  class='options_float_right'>"
            +       "<input id='record_switch_checkbox' type='checkbox' />"
            +   "</div>"
            + "</div>"
            +"<div class='options_float_right' style='clear:both'><button id='button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>";

         l_dom_alert_enable = mx("#alert_switch_checkbox");
         l_dom_record_enable = mx("#record_switch_checkbox");
         l_dom_button_setup = mx("#button_setup");

         function ccm_notification_get( msg, ref)
         {
            if( msg && msg.result == "" )
            {
               if( msg.alert_enable )
               {
                 jQuery(l_dom_alert_enable).iButton("toggle",true);
               }
               else
               {
                 jQuery(l_dom_alert_enable).iButton("toggle",false);
               }

               if( msg.record_enable )
               {
                 jQuery(l_dom_record_enable).iButton("toggle",true);
               }
               else
               {
                 jQuery(l_dom_record_enable).iButton("toggle",false);
               }
            }
         }

         function add_event()
         {
            jQuery(l_dom_alert_enable).iButton({
                labelOn:"On",
                labelOff:"Off"
            });
            jQuery(l_dom_record_enable).iButton({
                labelOn:"On",
                labelOff:"Off"
            });
            l_dom_button_setup.onclick = function(){
                ms.send_msg("msg_filter_set",{sn:g_select_device_ipc,alert_enable:l_dom_alert_enable.checked,record_enable:l_dom_record_enable.checked},null,function(msg,ref){
                    if( msg.result == "" )
                    {
                        g_system_prompt_box(mcs_set_successfully, 240, -200);
                    }
                });
            }
         }

         function remove_event()
         {
            l_dom_button_setup.onclick = "";
         }

         l_me.ctrl = function(obj)
         {
            switch(obj.type)
            {
                case "destroy":
                {
                    remove_event();
                    l_me_parent.innerHTMl = "";
                    l_me_parent = null;
                    break;
                }
            }
         }
    	 add_event();
    	 ms.send_msg("msg_filter_get",{sn:g_select_device_ipc},null,ccm_notification_get);
    }

    function class_options_OSD(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_dom_checkbox_display_name,
            l_dom_input_display_name,
            l_dom_checkbox_display_date,
            l_dom_select_date,
            l_dom_checkbox_display_time,
            l_dom_select_hour,
            l_dom_checkbox_display_weeks,
            l_dom_button_setup,
            l_dom_input_display_name_content,
            l_dom_display_date_content,
            l_dom_time_format_content,
            g_switch_flag = new Array();

        if(g_domain_oems_vimtag)
        {
                l_me_parent[s_innerHTML] =
		            "<div class='list_right_item_ex'>"
		            +   "<div class='attribute_key_text'>" + mcs_display_text + "</div>"
		            +   "<div id='checkbox_display_name_div' class='options_float_right' style='margin-top:0px;'><input type='checkbox'  id='checkbox_display_name'/></div>"
		            +"</div>"
		            +"<div id='input_display_name_content' class='list_right_item'>"
		            +   "<div class='attribute_key_text'>" + mcs_name + "</div>"
		            +   "<div class='options_float_right' style='margin-top:0px;'><input type='text' id='input_display_name' onkeyup=\"value=value.replace(/[^\a-\z\A-\Z]/g,'')\"onpaste=\"value=value.replace(/[^\a-\z\A-\Z]/g,'')\" oncontextmenu = \"value=value.replace(/[^\a-\z\A-\Z]/g,'')\" maxlength='16' class='normal_input_right'></input></div>"
		            +"</div>"
		            +"<div class='list_right_item_ex'>"
		            +   "<div class='attribute_key_text'>" + mcs_display_date + "</div>"
		            +   "<div id='checkbox_display_date_div' class='options_float_right' style='margin-top:0px;'><input type='checkbox' id='checkbox_display_date'/></div>"
		            +"</div>"
		            +"<div id='display_date_content' class='list_right_item'>"
		            +   "<div class='attribute_key_text'>" + mcs_date_format + "</div>"
		            +   "<div class='options_float_right' style='margin-top:0px;'>"
		            +       "<select id='select_date' style='margin-top:0px;'>"
		            +           "<option>MM-DD-YYYY</option>"
		            +           "<option>YYYY-MM-DD</option>"
		            +       "</select>"
		            +   "</div>"
		            +"</div>"
		            +"<div class = 'list_right_item_ex'>"
		            +   "<div class='attribute_key_text'>" + mcs_display_time + "</div>"
		            +   "<div id='checkbox_display_time_div' class='options_float_right' style='margin-top:0px;'><input type='checkbox' id='checkbox_display_time'/></div>"
		            +"</div>"
		            +"<div id='time_format_content' class='list_right_item'>"
		            +   "<div class='attribute_key_text'>" + mcs_time_format + "</div>"
		            +   "<div class='options_float_right' style='margin-top:0px;'>"
		            +       "<select id='select_hour' style='width:300px;'><option value='12h'>" + mcs_12_hour + "</option><option value='24h'>" + mcs_24_hour + "</option></select>"
		            +   "</div>"
		            +"</div>"
		            +"<div class='list_right_item_ex'>"
		            +   "<div class='attribute_key_text'>" + mcs_display_weeks + "</div>"
		            +   "<div id='checkbox_display_weeks_div' class='options_float_right' style='margin-top:0px;'><input type='checkbox' id='checkbox_display_weeks'/></div>"
		            +"</div>"
		            +"<div class='options_float_right' style='clear:both'><button id='button_setup' class='list_right_button' >" + mcs_apply + "</button>"
		            +"</div>";
        }
        else
        {
		        l_me_parent[s_innerHTML] =
		            "<div>"
		            +   "<div class='options_float_left'>" + mcs_display_text + "</div>"
		            +   "<div id='checkbox_display_name_div' class='options_float_right'><input type='checkbox'  id='checkbox_display_name'/></div>"
		            +"</div>"
		            +"<div id='input_display_name_content' class='clear'>"
		            +   "<div class='options_float_left'>" + mcs_name + "</div>"
		            +   "<div class='options_float_right'><input type='text' id='input_display_name' onkeyup=\"value=value.replace(/[^\a-\z\A-\Z]/g,'')\"onpaste=\"value=value.replace(/[^\a-\z\A-\Z]/g,'')\" oncontextmenu = \"value=value.replace(/[^\a-\z\A-\Z]/g,'')\" maxlength='16' class='standard_inputs manager_standard_inputs'></input></div>"
		            +"</div>"
		            +"<div class='manager_split_bar_2px_2'></div>"
		            +"<div  >"
		            +   "<div class='options_float_left'>" + mcs_display_date + "</div>"
		            +   "<div id='checkbox_display_date_div' class='options_float_right'><input type='checkbox' id='checkbox_display_date'/></div>"
		            +"</div>"
		            +"<div id='display_date_content' class='clear'>"
		            +   "<div class='options_float_left'>" + mcs_date_format + "</div>"
		            +   "<div class='options_float_right select_block'>"
		            +       "<select id='select_date'>"
		            +           "<option>MM-DD-YYYY</option>"
		            +           "<option>YYYY-MM-DD</option>"
		            +       "</select>"
		            +   "</div>"
		            +"</div>"
		            +"<div class='manager_split_bar_2px_2'></div>"
		            +"<div>"
		            +   "<div class='options_float_left'>" + mcs_display_time + "</div>"
		            +   "<div id='checkbox_display_time_div' class='options_float_right'><input type='checkbox' id='checkbox_display_time'/></div>"
		            +"</div>"
		            +"<div id='time_format_content' class='clear'>"
		            +   "<div class='options_float_left'>" + mcs_time_format + "</div>"
		            +   "<div class='options_float_right select_block'>"
		            +       "<select id='select_hour' style='width:300px;'><option value='12h'>" + mcs_12_hour + "</option><option value='24h'>" + mcs_24_hour + "</option></select>"
		            +   "</div>"
		            +"</div>"
		            +"<div class='manager_split_bar_2px_2'></div>"
		            +"<div>"
		            +   "<div class='options_float_left'>" + mcs_display_weeks + "</div>"
		            +   "<div id='checkbox_display_weeks_div' class='options_float_right'><input type='checkbox' id='checkbox_display_weeks'/></div>"
		            +"</div>"
		            +"<div class='options_float_right' style='clear:both'><button id='button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>"
		            +"</div>";        
        }		    
                jQuery(l_me_parent).hide().fadeIn(500);

		        l_dom_checkbox_display_name      = mx("#checkbox_display_name");
		        l_dom_input_display_name         = mx("#input_display_name");
		        l_dom_checkbox_display_date      = mx("#checkbox_display_date");
		        l_dom_select_date                = mx("#select_date");
		        l_dom_checkbox_display_time      = mx("#checkbox_display_time");
		        l_dom_checkbox_display_weeks     = mx("#checkbox_display_weeks");
		        l_dom_select_hour                = mx("#select_hour");
		        l_dom_button_setup               = mx("#button_setup");
		        l_dom_input_display_name_content = mx("#input_display_name_content");
		        l_dom_display_date_content       = mx("#display_date_content");
		        l_dom_time_format_content        = mx("#time_format_content");
		        jQuery(l_dom_select_date).tzSelect();
		        jQuery(l_dom_select_hour).tzSelect();

        // Get device osd
        function dev_osd_get_ack(msg,ref)
        {
            if(!l_me_parent) return;
            if(msg&&msg.result=="")
            {            	  
                if(msg.text_enable)
                {
                    jQuery(l_dom_checkbox_display_name).iButton("toggle", true);
                }
                else
                {
                	jQuery(l_dom_checkbox_display_name).iButton("toggle", false);
                }
                l_dom_input_display_name.value = msg.text;
                if(msg.date_enable)
                {
                    jQuery(l_dom_checkbox_display_date).iButton("toggle", true);
                    var i,length = l_dom_select_date.length;
                    for(i = 0; i < length; ++i)
                    {
                        if(l_dom_select_date[i].text == msg.date_format)
                        {
                            l_dom_select_date[i].selected = true;
                        }
                    }
                }
                else
                {
                    jQuery(l_dom_checkbox_display_date).iButton("toggle", false);
                }
                if(msg.time_enable)
                {
                    jQuery(l_dom_checkbox_display_time).iButton("toggle", true);
                    if(msg.time_12h)
                        l_dom_select_hour[0].selected = true;
                     else
                        l_dom_select_hour[1].selected = true;
                }
                else
                {
                    jQuery(l_dom_checkbox_display_time).iButton("toggle", false);
                }
                if(msg.week_enable)
                {
                    jQuery(l_dom_checkbox_display_weeks).iButton("toggle", true);
                }else
                {
                	jQuery(l_dom_checkbox_display_weeks).iButton("toggle", false);
                }
                jQuery(l_dom_select_date).tzSelect();
                jQuery(l_dom_select_hour).tzSelect();
            }
        }
        function add_event(obj)
        {
            l_dom_input_display_name.onfocus = function() {
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_display_name.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_button_setup.onclick = function() {
                 ms.send_msg("osd_set",{sn:g_select_device_ipc,text:l_dom_input_display_name.value,text_enable:Number(l_dom_checkbox_display_name.checked),week_enable:Number(l_dom_checkbox_display_weeks.checked),
                  date_format:l_dom_select_date[l_dom_select_date.selectedIndex].text,date_enable:Number(l_dom_checkbox_display_date.checked),
                  time_12h:Number(!l_dom_select_hour.selectedIndex),time_enable:Number(l_dom_checkbox_display_time.checked)},null,function(msg,ref){
                       if(msg.result=="")
                       {
                               if(g_domain_oems_vimtag)
                               {
                                   msg_tips({msg:mcs_set_successfully, type:"success", timeout:3000});
                               }
                               else
                               {
                               g_system_prompt_box(mcs_set_successfully, 240, -200);
                               }
                       }
                           else if(msg.result == "permission.denied" && g_domain_oems_vimtag)
                       {
                          msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
                       }
                 });
            };
            jQuery(l_dom_checkbox_display_name).iButton({
               labelOn:"On",
               labelOff:"Off",
               change:function(){
	               	if(l_dom_checkbox_display_name.checked)
	                {
	                   //l_dom_input_display_name_content.style.display="inline";
	                       jQuery(l_dom_input_display_name_content).fadeIn();
	                }else
	                {
	                   jQuery(l_dom_input_display_name_content).fadeOut();
	                }
               }
            });
            jQuery(l_dom_checkbox_display_date).iButton({
               labelOn:"On",
               labelOff:"Off",
               change:function(){
	               	if(l_dom_checkbox_display_date.checked)
	                {
	                   //l_dom_display_date_content.style.display="inline";
	                       jQuery(l_dom_display_date_content).fadeIn();
	                }else
	                {
	                   jQuery(l_dom_display_date_content).fadeOut();
	                }
               }
            });
            jQuery(l_dom_checkbox_display_time).iButton({
               labelOn:"On",
               labelOff:"Off",
               change:function(){
	               	if(l_dom_checkbox_display_time.checked)
	                {
	                   //l_dom_time_format_content.style.display="inline";
	                       jQuery(l_dom_time_format_content).fadeIn();
	                }else
	                {
	                   jQuery(l_dom_time_format_content).fadeOut();
	                }
               }
            });
            jQuery(l_dom_checkbox_display_weeks).iButton({
               labelOn:"On",
               labelOff:"Off"
            });
        }
        function remove_event(obj)
        {
            l_dom_input_display_name.onfocus = "";
            l_dom_input_display_name.onblur = "";
            l_dom_button_setup.onclick = "";
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "destroy":
                    {
                        remove_event(obj);
                        l_me_parent.innerHTML = "";
                        l_me_parent = null;
                    }
            }
        };
        add_event();
        ms.send_msg("osd_get",{sn:g_select_device_ipc},null,dev_osd_get_ack);
    }

    function class_options_SD_card(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_dom_input_status,
            l_dom_input_capacity,
            l_dom_input_usage,
            l_dom_format_content,
            l_dom_umount_content,
            l_dom_mount_content,
            l_dom_repair_content,
            l_dom_button_format,
            l_dom_button_umount,
            l_dom_button_mount,
            l_dom_button_repair,
            l_dom_disk_button_setup,
            g_switch_flag,
            l_dom_input_usage_content,l_dom_input_capacity_content,l_dom_input_available_content,l_dom_input_available;

        if(g_domain_oems_vimtag)
        {
        	  l_me_parent[s_innerHTML] =
        	      "<div id = 'sd_info' class = 'list_right_box'>"
                +       "<div class = 'list_right_item'>"
                +          "<span class = 'attribute_key_text'>"+mcs_enabled+"</span>"
                +          "<div class = 'label_sd' >"
                +             "<span id = 'label_text_left_sd' class = 'label_text_left'>ON</span>"
                +             "<div id = 'label_img_sd' class = 'label_img'></div>"
                +             "<span id = 'label_text_right_sd' class = 'label_text_right'>OFF</span>"
                +          "</div>"
                +       "</div>"
                +       "<div id = 'open_switch'>"
                +          "<div class = 'list_right_item'>"
                +             "<span class = 'attribute_key_text'>"+mcs_status+"</span>"
                +             "<div class='options_float_right'><input type='text' id='input_status' class='input_read_only'  disabled></input></div>"
                +          "</div>"
                +          "<div class = 'list_right_item_ex'>"
                +             "<span class = 'attribute_key_text'>"+mcs_capacity+"</span>"
                +             "<div class='options_float_right'><input type='text' id='input_capacity' class='input_read_only' disabled></input></div>"
                +          "</div>"
                +          "<div class = 'list_right_item_ex'>"
                +             "<span class = 'attribute_key_text'>"+mcs_usage+"</span>"
                +             "<div class='options_float_right'><input type='text' id='input_usage' class='input_read_only' disabled></input></div>"
                +          "</div>"
                +          "<div class = 'list_right_item'>"
                +             "<span class = 'attribute_key_text'>"+mcs_valid+"</span>"
                +             "<div class='options_float_right'><input type='text' id='input_available' class='input_read_only' disabled></input></div>"
                +          "</div>"
                +          "<div class = 'list_right_item_ex'>"
                +             "<span class = 'attribute_key_text'>-"+mcs_format+"</span>"
                +             "<input id='format_btn' type = 'button' class = 'list_right_button_ex' style='margin-top:5px;' value = "+mcs_format+">"
                +          "</div>"
                +          "<div class = 'list_right_item_ex'>"
                +             "<span class = 'attribute_key_text'>-"+mcs_unmount+"</span>"
                +             "<input id='unmount_btn' type = 'button' class = 'list_right_button_ex' style='margin-top:5px;' value = "+mcs_unmount+">"
                +          "</div>"
                +       "</div>"
                +       "<input id='sd_apply' type = 'button' class = 'list_right_button' value = "+mcs_action_apply+">"
                +"</div>";

                l_dom_input_status     = mx("#input_status");
		            l_dom_input_capacity   = mx("#input_capacity");
		            l_dom_input_usage      = mx("#input_usage");
                l_dom_button_format   = mx("#format_btn");
                l_dom_button_umount    = mx("#unmount_btn");
                l_dom_disk_button_setup= mx("#sd_apply");
                l_dom_input_available  = mx("#input_available");

                var dom_labels = jQuery(".label_sd"),
                    dom_text=jQuery(".attribute_value_text");
        }
        else
        {
		        l_me_parent[s_innerHTML] =
		            "<div>"
		            +   "<div class='options_float_left'>" + mcs_enabled + "</div>"
		            +   "<div class='options_float_right'><input id='disk_switch_checkbox' type='checkbox' checked/></div>" //<input type='text' id='input_status' class='input_read_only' disabled></input>
		            +"</div>"
		            +"<div id='disk_content'>"
		            +"<div class='manager_split_bar_2px_2'></div>"
		            +"<div>"
		            +   "<div class='options_float_left'>" + mcs_status + "</div>"
		            +   "<div class='options_float_right'><input type='text' id='input_status' class='input_read_only'  disabled></input></div>" //<input type='text' id='input_status' class='input_read_only' disabled></input>
		            +"</div>"
		            +"<div id='input_capacity_content'>"
		            +"<div class='manager_split_bar_2px_2'></div>"
		            +   "<div class='options_float_left'>" + mcs_capacity + "</div>"
		            +   "<div class='options_float_right'><input type='text' id='input_capacity' class='input_read_only' disabled></input></div>"
		            +"</div>"
		            +"<div id='input_usage_content'>"
		            +   "<div class='options_float_left'>" + mcs_usage + "</div>"
		            +   "<div class='options_float_right'><input type='text' id='input_usage' class='input_read_only' disabled></input></div>"
		            +"</div>"
		            +"<div id='input_available_content'>"
		            +   "<div class='options_float_left'>" + mcs_valid + "</div>"
		            +   "<div class='options_float_right'><input type='text' id='input_available' class='input_read_only' disabled></input></div>"
		            +"</div>"
		            +"<div class='manager_split_bar_2px_2'></div>"
		            +"<div id='format_content'>"
		            +   "<div class='options_float_left'>- " + mcs_format + "</div>"
		            +   "<div class='options_float_right'><button id='button_format' class='standard_buttons_white' >" + mcs_format + "</button></div>"
		            +"</div>"
		            +"<div id='umount_content'>"
		            +   "<div class='options_float_left'>- " + mcs_unmount + "</div>"
		            +   "<div class='options_float_right'><button id='button_umount' class='standard_buttons_white' >" + mcs_unmount + "</button></div>"
		            +"</div>"
		            +"<div id='mount_content'>"
		            +   "<div class='options_float_left'>- " + mcs_mount + "</div>"
		            +   "<div class='options_float_right'><button id='button_mount' class='standard_buttons_white' >" + mcs_mount + "</button></div>"
		            +"</div>"
		            +"<div id='repair_content'>"
		            +   "<div class='options_float_left'>- " + mcs_repair + "</div>"
		            +   "<div class='options_float_right'><button id='button_repair' class='standard_buttons_white' >" + mcs_repair + "</button></div>"
		            +"</div>"
		            +"</div>"
		            +"<div class='manager_split_bar_2px_2'></div>"
		            +"<div class='options_float_right'><button id='disk_button_setup' class='standard_buttons_white' >" + mcs_apply + "</button></div>"
		            ;
		        jQuery(l_me_parent).hide().fadeIn(500);

		        l_dom_input_status     = mx("#input_status");
		        l_dom_input_capacity   = mx("#input_capacity");
		        l_dom_input_usage      = mx("#input_usage");
		        l_dom_format_content   = mx("#format_content");
		        l_dom_umount_content   = mx("#umount_content");
		        l_dom_mount_content    = mx("#mount_content");
		        l_dom_repair_content   = mx("#repair_content");
		        l_dom_button_format    = mx("#button_format");
		        l_dom_button_umount    = mx("#button_umount");
		        l_dom_button_mount     = mx("#button_mount");
		        l_dom_button_repair    = mx("#button_repair");
		        l_dom_disk_button_setup= mx("#disk_button_setup");
		        l_dom_input_capacity_content = mx("#input_capacity_content");
		        l_dom_input_usage_content    = mx("#input_usage_content");
		        l_dom_input_available  = mx("#input_available");
		        l_dom_input_available_content= mx("#input_available_content");
		        jQuery(l_dom_input_available_content).hide();
		        jQuery(l_dom_mount_content).hide();
		        jQuery(l_dom_umount_content).hide();
		        jQuery(l_dom_format_content).hide();
		        jQuery(l_dom_repair_content).hide();
		        jQuery(l_dom_input_capacity_content).hide();
		        jQuery(l_dom_input_usage_content).hide();

		        jQuery("#disk_switch_checkbox").iButton({
		            labelOn:"On",
		            labelOff:"Off",
		            change:function(){
		                if(mx("#disk_switch_checkbox").checked)
		                {
		                    jQuery("#disk_content").fadeIn();
		                }
		                else
		                {
		                    jQuery("#disk_content").fadeOut();
		                }
		            }
		        });
        }

        function dev_sd_get_ack(msg,ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.result=="")
            {
               jQuery(l_dom_mount_content).hide();
               jQuery(l_dom_umount_content).hide();
               jQuery(l_dom_format_content).hide();
               jQuery(l_dom_repair_content).hide();
               jQuery(l_dom_input_available_content).hide();
               jQuery(l_dom_input_capacity_content).hide();
               jQuery(l_dom_input_usage_content).hide();
                if(msg)
                {
                   l_dom_input_capacity.value  =  msg.capacity +"MB";
                   l_dom_input_usage.value     =  msg.usage +"MB";
                   l_dom_input_available.value =  msg.availableSize +"MB";
                   //According to sd card status display button
                    switch(msg.status)
                    {
                         case "empty":
                         {
                             (mcloud_agent.devs.get(g_select_device_ipc)).type=="BOX"?l_dom_input_status.value=mcs_no_hard_disk:l_dom_input_status.value=mcs_no_sdcard;
                             break;
                         }
                         case "ro":
                         case "readonly":
                         {
                         	  l_dom_input_status.value=mcs_fault;
                         	  jQuery(l_dom_repair_content).show();
                         	  jQuery(l_dom_format_content).show();
                         	  break;
                         }
                         case "mount":
                         {
                         	  l_dom_input_status.value=mcs_connnected;
                         	  jQuery(l_dom_input_capacity_content).show();
                              jQuery(l_dom_input_usage_content).show();
                              jQuery(l_dom_input_available_content).show();
                         	  jQuery(l_dom_umount_content).show();
                              jQuery(l_dom_format_content).show();
                         	  break;
                         }
                         case "repairing":
                         {
                         	  l_dom_input_status.value=mcs_repairing;
                         	  break;
                         }
                         case "formating":
                         {
                         	  l_dom_input_status.value=mcs_formating;
                         	  break;
                         }
                         case "umount":
                         {
                         	  l_dom_input_status.value=mcs_unmounted;
                         	  jQuery(l_dom_mount_content).show();
                         	  break;
                         }
                         default:
                            log("error:ctrl's obj.type is not exist in class_options_SD_card.");
                    }
                    if(msg.enable)
                    {
                    	  if(g_domain_oems_vimtag)
                    	  {
                    	  	 g_switch_flag = 1;
	                	       jQuery("#label_text_right_sd").fadeOut("fast");
	                         jQuery("#label_img_sd").animate({ marginRight: "0px"});
	                         jQuery("#label_text_left_sd").fadeIn("fast");
	                         jQuery("#open_switch").fadeIn("slow");
                    	  }
                    	  else
                    	  {
                           jQuery("#disk_switch_checkbox").iButton("toggle",true);
                        }
                    }else
                    {
                    	  if(g_domain_oems_vimtag)
                    	  {
                    	  	 g_switch_flag = 0;
                	         jQuery("#label_text_right_sd").fadeIn("fast");
                           jQuery("#label_img_sd").animate({ marginRight: "40px"});
                           jQuery("#label_text_left_sd").fadeOut("fast");
                           jQuery("#open_switch").fadeOut("slow");
                    	  }
                    	  else
                    	  {
	                         jQuery("#disk_switch_checkbox").iButton("toggle",false);
	                         jQuery(l_dom_mount_content).hide();
	                         jQuery(l_dom_umount_content).hide();
	                         jQuery(l_dom_format_content).hide();
	                         jQuery(l_dom_repair_content).hide();
                        }
                    }
                }
                else
                {
                    l_dom_input_status.value = mcs_not_connected;
                    jQuery(l_dom_mount_content).hide();
                    jQuery(l_dom_umount_content).hide();
                    jQuery(l_dom_format_content).hide();
                    jQuery(l_dom_repair_content).hide();
                }
            }
            else
            {
                log("error:ccm_get_DisksResponse return Result error in class_options_SD_card.");
            }
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "destroy":
                    {
                    	  remove_event();
                        l_me_parent.innerHTML = "";
                        l_me_parent = null;
                        break;
                    }
            }
        }
        function ccm_disk_ctl_ack(msg,ref)
        {
        	 if(msg && msg.result=="")
        	 {
        	       //"format" and "repair" Restart the device
        	     if(determine_the_version({type:"Anti",version:version_Category.curise_motion_version})&&(mcloud_agent.devs.get(g_select_device_ipc).img_ver < "v2"))//If the camera is larger than V2 version does not need to restart
        	     {
        	       if(ref.ctrl_type=="format" || ref.ctrl_type=="repair")
        	       {
                		system_pop_confirm_box({str:mcs_need_to_restart_the_camera_to_take_effect, button_left:mcs_reset_now, button_right:mcs_reset_later,
                       callback_func:function(obj){
            							ms.send_msg("reboot",{sn:g_select_device_ipc},null,function(msg,ref){
                							if(msg.result==""){
                                  if(g_domain_oems_vimtag){
                                      msg_tips({msg:mcs_set_successfully, type:"success", timeout:3000});
                                 
				  }else{
     								                  g_system_prompt_box(mcs_set_successfully, 240, -200);
                                  }
                							}
            							});
                       }
                    });
                 }
               }
               else
               {
                  if(g_domain_oems_vimtag)
                  {
                      msg_tips({msg:mcs_set_successfully, type:"success", timeout:3000});
                  }
                  else
                  {
      	              g_system_prompt_box(mcs_set_successfully, 240, -200);
                  }
      	          //Wait 5 seconds to go to get the SD card information
      	          setTimeout(function(){
      	             ms.send_msg("sd_get",{sn:g_select_device_ipc},null,dev_sd_get_ack);
      	          },5000)
      	       }
        	 }
        }
        function remove_event()
        {
        	 l_dom_button_format.onclick = "";
        	 l_dom_button_umount.onclick = "";
        	 if(!g_domain_oems_vimtag) l_dom_button_mount.onclick = "";
        	 if(!g_domain_oems_vimtag) l_dom_button_repair.onclick = "";
        	 l_dom_disk_button_setup.onclick = "";
        }
        function add_event(obj)
        {
        	   if(g_domain_oems_vimtag)
        	   {
		        	   dom_labels[0].onclick = function(){
		        	      if(g_switch_flag == 0)
		        	      {
		        	      	 g_switch_flag = 1;
		        	      	 jQuery("#label_text_right_sd").fadeOut("fast");
		                   jQuery("#label_img_sd").animate({ marginRight: "0px"});
		                   jQuery("#label_text_left_sd").fadeIn("fast");
		                   jQuery("#open_switch").fadeIn("slow");
		        	      }
		        	      else
		        	      {
		        	      	 g_switch_flag = 0;
		        	      	 jQuery("#label_text_right_sd").fadeIn("fast");
		                   jQuery("#label_img_sd").animate({ marginRight: "40px"});
		                   jQuery("#label_text_left_sd").fadeOut("fast");
		                   jQuery("#open_switch").fadeOut("slow");
		        	      }
		        	   };
        	   }
             //sd card format button
             l_dom_button_format.onclick=function()
             {
             	 if(g_domain_oems_vimtag)
             	 {
             	 	   system_pop_confirm_box({str:((mcloud_agent.devs.get(g_select_device_ipc)).type=="BOX"?mcs_format_disk_prompt:mcs_format_prompt), callback_func:function(){
                     ms.send_msg("sd_set",{sn:g_select_device_ipc,ctrl_type:"format",enable:(g_switch_flag == 1)?1:0},{ctrl_type:"format"},ccm_disk_ctl_ack);
                   }});
             	 }
             	 else
             	 {
                  system_pop_confirm_box({str:((mcloud_agent.devs.get(g_select_device_ipc)).type=="BOX"?mcs_format_disk_prompt:mcs_format_prompt), callback_func:function(){
                    ms.send_msg("sd_set",{sn:g_select_device_ipc,ctrl_type:"format",enable:mx("#disk_switch_checkbox").checked?1:0},{ctrl_type:"format"},ccm_disk_ctl_ack);
                  }});
               }
             }
             //sd card unload button
             l_dom_button_umount.onclick=function()
             {
             	 if(g_domain_oems_vimtag)
             	 {
             	 	   system_pop_confirm_box({str:((mcloud_agent.devs.get(g_select_device_ipc)).type=="BOX"?mcs_umount_disk_prompt:mcs_umount_prompt), callback_func:function(){
	                    ms.send_msg("sd_set",{sn:g_select_device_ipc,ctrl_type:"umount",enable:(g_switch_flag == 1)?1:0},{ctrl_type:"umount"},ccm_disk_ctl_ack);
	                 }});
             	 }
             	 else
             	 {
	                 system_pop_confirm_box({str:((mcloud_agent.devs.get(g_select_device_ipc)).type=="BOX"?mcs_umount_disk_prompt:mcs_umount_prompt), callback_func:function(){
	                    ms.send_msg("sd_set",{sn:g_select_device_ipc,ctrl_type:"umount",enable:mx("#disk_switch_checkbox").checked?1:0},{ctrl_type:"umount"},ccm_disk_ctl_ack);
	                 }});
               }
             }
             if(!g_domain_oems_vimtag)
             {
		             //sd card loading key events
		             l_dom_button_mount.onclick=function()
		             {
		                ms.send_msg("sd_set",{sn:g_select_device_ipc,ctrl_type:"mount",enable:mx("#disk_switch_checkbox").checked?1:0},{ctrl_type:"mount"},ccm_disk_ctl_ack);
		             }
		             //Repair key events
		             l_dom_button_repair.onclick=function()
		             {
		                system_pop_confirm_box({str:((mcloud_agent.devs.get(g_select_device_ipc)).type=="BOX"?mcs_repair_disk_prompt:mcs_repair_prompt), callback_func:function(){
		                  ms.send_msg("sd_set",{sn:g_select_device_ipc,ctrl_type:"repair",enable:mx("#disk_switch_checkbox").checked?1:0},{ctrl_type:"repair"},ccm_disk_ctl_ack);
		                }});
		             }
             }
             //Application of key events
             l_dom_disk_button_setup.onclick=function()
             {
             	 if(g_domain_oems_vimtag)
             	 {
             	 	   ms.send_msg("sd_set",{sn:g_select_device_ipc,enable:(g_switch_flag == 1)?1:0},{ctrl_type:"conf"},ccm_disk_ctl_ack);
             	 }
               else
               {
                   ms.send_msg("sd_set",{sn:g_select_device_ipc,enable:mx("#disk_switch_checkbox").checked?1:0},{ctrl_type:"conf"},ccm_disk_ctl_ack);
               }
             }
        }
        add_event();
        ms.send_msg("sd_get",{sn:g_select_device_ipc},null,dev_sd_get_ack);
    }
    //Set storage devices
     function class_options_storage_device(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_j_me_parent = jQuery(obj.parent),
            l_dom_input_device_id,l_dom_input_password,
            l_dom_storage_device_button_setup,l_dom_input_status;

        if(g_domain_oems_vimtag)
        {
            l_me_parent[s_innerHTML] =
                "<div id = 'storage_device_info' class = 'list_right_box'>"
                +       "<div class = 'list_right_item'>"
                +          "<div class='options_float_left'>" + mcs_enabled + "</div>"
		            +          "<div class='options_float_right' style='margin-top:0px;'><input id='storage_device_switch_checkbox' type='checkbox' checked/></div>"
                +       "</div>"
                +       "<div id = 'storage_device_content'>"
                +          "<div class = 'list_right_item_ex'>"
                +             "<div class='options_float_left'>" + mcs_device_id + "</div>"
		            +             "<div class='options_float_right'><input type='text' id='input_device_id' class='list_right_input'></input></div>"
                +          "</div>"
                +          "<div class = 'list_right_item_ex'>"
                +             "<div class='options_float_left'><label for='input_password'>" + mcs_password + "</label></div>"
		            +             "<div class='options_float_right'>"
		            +                "<input type='password' name='input_password' id='input_password' class='list_right_input'></input>"
		            +             "</div>"
                +          "</div>"
                +          "<div class = 'list_right_item_ex'>"
             		+             "<div class='options_float_left'>" + mcs_network_status + "</div>"
		            +             "<div class='options_float_right'><input type='text' id='input_status' value='" + mcs_not_connected + "' class='input_read_only' disabled></input></div>"
                +          "</div>"
                +       "</div>"
                +       "<button id='storage_device_button_setup' class='list_right_button' >" + mcs_apply + "</button>"
                +"</div>";
        }
        else
        {
		        l_me_parent[s_innerHTML] =
		            "<div>"
		            +   "<div class='options_float_left'>" + mcs_enabled + "</div>"
		            +   "<div class='options_float_right'><input id='storage_device_switch_checkbox' type='checkbox' checked/></div>" //<input type='text' id='input_status' class='input_read_only' disabled></input>
		            +"</div>"
		            +"<div id='storage_device_content'>"
		            +"<div>"
		            +   "<div class='options_float_left'>" + mcs_device_id + "</div>"
		            +   "<div class='options_float_right'><input type='text' id='input_device_id' class='standard_inputs manager_standard_inputs'></input></div>"
		            +"</div>"
		            +"<div>"
		            +   "<div class='options_float_left'><label for='input_password'>" + mcs_password + "</label></div>"
		            +   "<div class='options_float_right'>"
		            +       "<input type='password' name='input_password' id='input_password' "
		            +           "class='standard_inputs manager_standard_inputs'></input>"
		            +   "</div>"
		            +"</div>"
		            + "<div>"
		            +       "<div class='options_float_left'>" + mcs_network_status + "</div>"
		            +       "<div class='options_float_right'><input type='text' id='input_status' value='" + mcs_not_connected + "' class='input_read_only' disabled></input></div>"
		            + "</div>"
		            +"</div>"
		            +"<div class='options_float_right' style='clear:both'>"
		            +   "<button id='storage_device_button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>"
		            +"</div>";
		        jQuery(l_me_parent).hide().fadeIn(500);
		    }
        l_dom_input_device_id=mx("#input_device_id");
        l_dom_input_password=mx("#input_password");
        l_dom_storage_device_button_setup= mx("#storage_device_button_setup");
        l_dom_storage_device_content= mx("#storage_device_content");
        l_dom_input_status = mx("#input_status");

        jQuery("#storage_device_switch_checkbox").iButton({
            labelOn:"On",
            labelOff:"Off",
            change:function(){
                if(mx("#storage_device_switch_checkbox").checked)
                {
                    jQuery("#storage_device_content")[0].style.display="inline";
                }
                else
                {
                    jQuery("#storage_device_content").fadeOut();
                }
            }
        });

        function box_login_ack(msg, ref)
        {
            if(!l_me_parent) return;

            if(msg.result == "")
            {
                g_system_prompt_box(mcs_set_successfully, 240, -200);
            }
            else if(msg.result == "accounts.pass.invalid")
            {
            	  system_tooltip({parent:l_dom_input_password, color:"red", position:"left", disappear_way:"time", str:mcs_invalid_password});
            }
            else if(msg.result == "accounts.user.offline")
            {
            	  system_tooltip({parent:l_dom_input_device_id, color:"red", position:"left", disappear_way:"time", str:mcs_offline});
            }
            else if(msg.result == "accounts.user.unknown")
            {
            	  system_tooltip({parent:l_dom_input_device_id, color:"red", position:"left", disappear_way:"time", str:mcs_invalid_dev});
            }

            else
            {
              	log("error:box_login_ack return Result error in class_options_storage_device.");
              	return -1;
            }
        }

        function box_conf_get_ack(msg, ref)
        {
            if(!l_me_parent) return;
            if(msg.result == "")
            {
                l_dom_input_device_id.value=msg.conf.conf.username;  //show the BOX ID 
                l_dom_input_password.value=msg.conf.conf.password; //show the BOX  password
            }
            else
            {
              	log("error:box_login_ack return Result error in class_options_storage_device.");
              	return -1;
            }

            if(msg.conf.connect == 1)
            {
            	  l_dom_input_status.value = mcs_connnected;
            }
            if(msg.conf.conf.enable == 0)
            {
            	 jQuery("#storage_device_switch_checkbox").iButton("toggle", false);
            }
        }

        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                    {
                        break;
                    }
                case "destroy":
                    {
                        l_me_parent.innerHTMl = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_options_storage_device.");
            }
        };
        function add_event()
        {
           l_dom_storage_device_button_setup.onclick=function()
           {
           	   if(!l_dom_input_device_id.value)
           	    {
           	    	  system_tooltip({parent:l_dom_input_device_id, color:"red", position:"left", disappear_way:"time", str:mcs_blank_device_id + "."});
           	    }
               if(!l_dom_input_password.value)
                {
                    system_tooltip({parent:l_dom_input_password, color:"red", position:"left", disappear_way:"time", str:mcs_the_password_is_empty + "."});
                    return;
                }
                else
                {
                    reg = /^\S{6,20}$/;
                    if(!reg.exec(l_dom_input_password.value))
                    {
                        system_tooltip({parent:l_dom_input_password, color:"red", position:"left", disappear_way:"time", str:mcs_password_demand + "."});
                        return;
                    }
                }

                ms.send_msg( "box_login", {box_sn:g_select_device_ipc,enable:mx("#storage_device_switch_checkbox").checked?1:0,username:l_dom_input_device_id.value,password:l_dom_input_password.value},null,box_login_ack);
           };
        }
        add_event();
        ms.send_msg( "box_conf_get",{box_sn:g_select_device_ipc},null,box_conf_get_ack);
    }

    // set the scene
    function class_options_scene(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            attachmen_list = "",
            attachmen_total = 0,
            devs,
            l_recording = 0,
            attachmen_id = [];
        if(g_domain_oems_vimtag)
        {
            jQuery("#options_box").show();
            
            l_me_parent[s_innerHTML] =
            "<div id='option_scene_box'>"
                +"<div id='option_scene_box_top'>"
                    +"<div id='option_scene_box_close'>&times;</div>"
                    +"<div id='option_scene_pattern'>"
                        +"<div id='option_scene_pattern_quiet'>"+mcs_quiet_mode+"</div>"
                        +"<div id='option_scene_pattern_activity'>"+mcs_active_mode+"</div>"
                        +"<div id='option_scene_pattern_level'>"+mcs_out_mode+"</div>"
                    +"</div>"
                +"</div>"
                +"<div id='option_scene_box_main'>"
                    +"<div id='option_scene_box_main_content'>"
                        +"<div id='video_switch'>"
                            +"<div id='video_switch_img'>"+mcs_record+"</div>"
                            +"<div id='video_switch_button' status = 'off'>"
                            +   "<div id='video_switch_button_turn'></div><span class='text'>ON</span>"
                            +"</div>"
                        +"</div>"
                        +"<div id='scene_quiet_box' class='tab' style='display:none'></div>"
                        +"<div id='scene_activity_box' class='tab'></div>"
                        +"<div id='scene_level_box' class='tab' style='display:none'></div>"
                    +"</div>"
                +"</div>"
            +"</div>";
            var l_height = mx("#options_box").offsetHeight - 120;
            mx("#option_scene_box_main").style.height = l_height + "px";
            mx("#option_scene_box_main").style.overflow = "auto";
        }

        function add_event(obj){
            mx("#option_scene_box_close").onclick = function()
            {
                jQuery("#options_box").hide();
                mx("#options_box")[s_innerHTML] = "";
            }

            mx("#video_switch_button").onclick = function(){
                if(g_select_device_ipc)
                {
                   if(l_recording == 0){
                     ms.send_msg("record",{sn:g_select_device_ipc,keep_time:60000},null,record_ack);
                   }else{
                     ms.send_msg("record",{sn:g_select_device_ipc,keep_time:-1},null,record_ack);
                   }
                }          
                
            };

            var scene_list = jQuery("#option_scene_pattern").find("div");
            for(var i = 0;i<scene_list.length;i++){
                scene_list[i].onclick = function(){
                    jQuery(this).siblings().css({"background":"url()","color":"#fff"});
                    jQuery(this).css({"background":"url(../imgs/scene_bg.png)","color":"#00a6ba"});
                    jQuery("#option_scene_box_main_content").find(".tab").hide();
                    jQuery("#option_scene_box_main_content").find(".tab").eq(jQuery(this).index()).show();
                }
            }

        };
        add_event();

        function exdev_get_ack(msg,ref){
            if(msg && msg.data)
            {
                attachmen_total = msg.data.total;
                devs = msg.data.devs;
                scene_content_get(devs,attachmen_total);
            }    
        }


        function scene_content_get(devs,attachmen_total){
            ms.send_msg( "scene_get",{},null,function(msg,ref){
                if(msg && msg.result == ""){
                    var activity_alarm_url = "",
                        activity_video_url = "",
                        activity_photo_url = "",
                        quiet_alarm_url = "",
                        quiet_video_url = "",
                        quiet_photo_url = "",

                        out_alarm_url = "",
                        out_video_url = "",
                        out_photo_url = "",
                        info = msg.data.info;
                        
                    if(attachmen_total>0){
                        activity_dev_flag=info.scene[3].dev[0].flag,
                        quiet_dev_flag = info.scene[1].dev[0].flag,
                        out_dev_flag = info.scene[2].dev[0].flag;
                        if(activity_dev_flag == 0){
                            activity_alarm_url = "url(imgs/button_alarm2.png)";
                            activity_photo_url = "url(imgs/button_photo2.png)";
                            activity_video_url = "url(imgs/button_video2.png)";
                        }else if(activity_dev_flag == 1){
                            activity_alarm_url = "url(imgs/button_alarm2.png)";
                            activity_photo_url = "url(imgs/button_photo.png)";
                            activity_video_url = "url(imgs/button_video2.png)";
                        }else if(activity_dev_flag == 2){
                            activity_alarm_url = "url(imgs/button_alarm2.png)";
                            activity_photo_url = "url(imgs/button_photo2.png)";
                            activity_video_url = "url(imgs/button_video.png)";
                        }else if(activity_dev_flag == 3){
                            activity_alarm_url = "url(imgs/button_alarm2.png)";
                            activity_photo_url = "url(imgs/button_photo.png)";
                            activity_video_url = "url(imgs/button_video.png)";
                        }else if(activity_dev_flag == 4){
                            activity_alarm_url = "url(imgs/button_alarm.png)";
                            activity_photo_url = "url(imgs/button_photo2.png)";
                            activity_video_url = "url(imgs/button_video2.png)";
                        }else if(activity_dev_flag == 5){
                            activity_alarm_url = "url(imgs/button_alarm.png)";
                            activity_photo_url = "url(imgs/button_photo.png)";
                            activity_video_url = "url(imgs/button_video2.png)";
                        }else if(activity_dev_flag == 6){
                            activity_alarm_url = "url(imgs/button_alarm.png)";
                            activity_photo_url = "url(imgs/button_photo2.png)";
                            activity_video_url = "url(imgs/button_video.png)";
                        }else if(activity_dev_flag == 7){
                            activity_alarm_url = "url(imgs/button_alarm.png)";
                            activity_photo_url = "url(imgs/button_photo.png)";
                            activity_video_url = "url(imgs/button_video.png)";
                        }

                        if(quiet_dev_flag == 0){
                            quiet_alarm_url = "url(imgs/button_alarm2.png)";
                            quiet_photo_url = "url(imgs/button_photo2.png)";
                            quiet_video_url = "url(imgs/button_video2.png)";
                        }else if(quiet_dev_flag == 1){
                            quiet_alarm_url = "url(imgs/button_alarm2.png)";
                            aquiet_photo_url = "url(imgs/button_photo.png)";
                            quiet_video_url = "url(imgs/button_video2.png)";
                        }else if(quiet_dev_flag == 2){
                            quiet_alarm_url = "url(imgs/button_alarm2.png)";
                            quiet_photo_url = "url(imgs/button_photo2.png)";
                            quiet_video_url = "url(imgs/button_video.png)";
                        }else if(quiet_dev_flag == 3){
                            quiet_alarm_url = "url(imgs/button_alarm2.png)";
                            quiet_photo_url = "url(imgs/button_photo.png)";
                            quiet_video_url = "url(imgs/button_video.png)";
                        }else if(quiet_dev_flag == 4){
                            quiet_alarm_url = "url(imgs/button_alarm.png)";
                            quiet_photo_url = "url(imgs/button_photo2.png)";
                            quiet_video_url = "url(imgs/button_video2.png)";
                        }else if(quiet_dev_flag == 5){
                            quiet_alarm_url = "url(imgs/button_alarm.png)";
                            quiet_photo_url = "url(imgs/button_photo.png)";
                            quiet_video_url = "url(imgs/button_video2.png)";
                        }else if(quiet_dev_flag == 6){
                            quiet_alarm_url = "url(imgs/button_alarm.png)";
                            quiet_photo_url = "url(imgs/button_photo2.png)";
                            quiet_video_url = "url(imgs/button_video.png)";
                        }else if(quiet_dev_flag == 7){
                            quiet_alarm_url = "url(imgs/button_alarm.png)";
                            quiet_photo_url = "url(imgs/button_photo.png)";
                            quiet_video_url = "url(imgs/button_video.png)";
                        }


                        if(out_dev_flag == 0){
                            out_alarm_url = "url(imgs/button_alarm2.png)";
                            out_photo_url = "url(imgs/button_photo2.png)";
                            out_video_url = "url(imgs/button_video2.png)";
                        }else if(out_dev_flag == 1){
                            out_alarm_url = "url(imgs/button_alarm2.png)";
                            out_photo_url = "url(imgs/button_photo.png)";
                            out_video_url = "url(imgs/button_video2.png)";
                        }else if(out_dev_flag == 2){
                            out_alarm_url = "url(imgs/button_alarm2.png)";
                            out_photo_url = "url(imgs/button_photo2.png)";
                            out_video_url = "url(imgs/button_video.png)";
                        }else if(out_dev_flag == 3){
                            out_alarm_url = "url(imgs/button_alarm2.png)";
                            out_photo_url = "url(imgs/button_photo.png)";
                            out_video_url = "url(imgs/button_video.png)";
                        }else if(out_dev_flag == 4){
                            out_alarm_url = "url(imgs/button_alarm.png)";
                            out_photo_url = "url(imgs/button_photo2.png)";
                            out_video_url = "url(imgs/button_video2.png)";
                        }else if(out_dev_flag == 5){
                            out_alarm_url = "url(imgs/button_alarm.png)";
                            out_photo_url = "url(imgs/button_photo.png)";
                            out_video_url = "url(imgs/button_video2.png)";
                        }else if(out_dev_flag == 6){
                            out_alarm_url = "url(imgs/button_alarm.png)";
                            out_photo_url = "url(imgs/button_photo2.png)";
                            out_video_url = "url(imgs/button_video.png)";
                        }else if(out_dev_flag == 7){
                            out_alarm_url = "url(imgs/button_alarm.png)";
                            out_photo_url = "url(imgs/button_photo.png)";
                            out_video_url = "url(imgs/button_video.png)";
                        }
                        for(var i  = 0;i< attachmen_total;i++){
                            attachmen_id.push(devs[i].id);
                            jQuery("#scene_activity_box").append("<div class='option_scene_list'>"
                                    +"<div class='option_scene_list_img' style='background:url(../imgs/sos.png)'></div>"
                                    +"<div class='option_scene_list_right'>"
                                        +"<div class='option_scene_list_text'>"+attachmen_id[i]+"</div>"
                                        +"<div class='option_scene_list_botton'>"
                                            +"<div class='option_scene_list_botton_alarm' style='background:"+activity_alarm_url+"'></div>"
                                            +"<div class='option_scene_nav'></div>"
                                            +"<div class='option_scene_list_botton_video' style='background:"+activity_video_url+"'></div>"
                                            +"<div class='option_scene_nav'></div>"
                                            +"<div class='option_scene_list_botton_photo' style='background:"+activity_photo_url+"'></div>"
                                        +"</div>"
                                    +"</div>"
                                +"</div>");
                            jQuery("#scene_quiet_box").append("<div class='option_scene_list'>"
                                    +"<div class='option_scene_list_img' style='background:url(../imgs/sos.png)'></div>"
                                    +"<div class='option_scene_list_right'>"
                                        +"<div class='option_scene_list_text'>"+attachmen_id[i]+"</div>"
                                        +"<div class='option_scene_list_botton'>"
                                            +"<div class='option_scene_list_botton_alarm' style='background:"+quiet_alarm_url+"'></div>"
                                            +"<div class='option_scene_nav'></div>"
                                            +"<div class='option_scene_list_botton_video' style='background:"+quiet_video_url+"'></div>"
                                            +"<div class='option_scene_nav'></div>"
                                            +"<div class='option_scene_list_botton_photo' style='background:"+quiet_photo_url+"'></div>"
                                        +"</div>"
                                    +"</div>"
                                +"</div>");

                            jQuery("#scene_level_box").append("<div class='option_scene_list'>"
                                    +"<div class='option_scene_list_img' style='background:url(../imgs/sos.png)'></div>"
                                    +"<div class='option_scene_list_right'>"
                                        +"<div class='option_scene_list_text'>"+attachmen_id[i]+"</div>"
                                        +"<div class='option_scene_list_botton'>"
                                            +"<div class='option_scene_list_botton_alarm' style='background:"+out_alarm_url+"'></div>"
                                            +"<div class='option_scene_nav'></div>"
                                            +"<div class='option_scene_list_botton_video' style='background:"+out_video_url+"'></div>"
                                            +"<div class='option_scene_nav'></div>"
                                            +"<div class='option_scene_list_botton_photo' style='background:"+out_photo_url+"'></div>"
                                        +"</div>"
                                    +"</div>"
                                +"</div>");
                        }
                        jQuery("#scene_activity_box .option_scene_list_botton_alarm").get(0).onclick = function()
                        {
                            var id=jQuery(this).parent().siblings(".option_scene_list_text").text();
                            
                            if(activity_dev_flag == 0){
                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                activity_dev_flag = 4;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 1){
                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                activity_dev_flag = 5;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 2){
                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                activity_dev_flag = 6;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 3){

                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                activity_dev_flag = 7;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 4){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                activity_dev_flag = 0;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 5){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                activity_dev_flag = 1;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 6){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                activity_dev_flag = 2;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 7){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                activity_dev_flag = 3;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }
                            
                        };

                        jQuery("#scene_quiet_box .option_scene_list_botton_alarm").get(0).onclick = function()
                        {
                            
                            var id=jQuery(this).parent().siblings(".option_scene_list_text").text();
                            
                            if(quiet_dev_flag == 0){
                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                quiet_dev_flag = 4;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 1){
                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                quiet_dev_flag = 5;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 2){
                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                quiet_dev_flag = 6;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 3){

                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                quiet_dev_flag = 7;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 4){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                quiet_dev_flag = 0;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 5){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                quiet_dev_flag = 1;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 6){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                quiet_dev_flag = 2;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 7){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                quiet_dev_flag = 3;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }
                        };


                        jQuery("#scene_level_box .option_scene_list_botton_alarm").get(0).onclick = function()
                        {
                            
                            var id=jQuery(this).parent().siblings(".option_scene_list_text").text();
                            
                            if(out_dev_flag == 0){
                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                out_dev_flag = 4;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 1){
                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                out_dev_flag = 5;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 2){
                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                out_dev_flag = 6;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 3){

                                jQuery(this).css("background","url(imgs/button_alarm.png)");
                                out_dev_flag = 7;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 4){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                out_dev_flag = 0;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 5){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                out_dev_flag = 1;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 6){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                out_dev_flag = 2;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 7){
                                jQuery(this).css("background","url(imgs/button_alarm2.png)");
                                out_dev_flag = 3;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }
                        };


                        jQuery("#scene_quiet_box .option_scene_list_botton_photo").get(0).onclick = function()
                        {
                            
                            var id=jQuery(this).parent().siblings(".option_scene_list_text").text();
                            
                            if(quiet_dev_flag == 0){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                quiet_dev_flag = 1;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 1){
                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                quiet_dev_flag = 0;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 2){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                quiet_dev_flag = 3;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 3){

                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                quiet_dev_flag = 2;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 4){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                quiet_dev_flag = 5;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 5){
                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                quiet_dev_flag = 4;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 6){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                quiet_dev_flag = 7;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 7){
                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                quiet_dev_flag = 6;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }
                        };


                        jQuery("#scene_level_box .option_scene_list_botton_photo").get(0).onclick = function()
                        {
                            
                            var id=jQuery(this).parent().siblings(".option_scene_list_text").text();
                            
                            if(out_dev_flag == 0){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                out_dev_flag = 1;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 1){
                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                out_dev_flag = 0;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 2){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                out_dev_flag = 3;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 3){

                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                out_dev_flag = 2;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 4){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                out_dev_flag = 5;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 5){
                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                out_dev_flag = 4;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 6){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                out_dev_flag = 7;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 7){
                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                out_dev_flag = 6;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }
                        };





                        jQuery("#scene_activity_box .option_scene_list_botton_photo").get(0).onclick = function()
                        {
                            var id=jQuery(this).parent().siblings(".option_scene_list_text").text();
                            if(activity_dev_flag == 0){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                activity_dev_flag = 1;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 1){
                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                activity_dev_flag = 0;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 2){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                activity_dev_flag = 3;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 3){
                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                activity_dev_flag = 2;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 4){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                activity_dev_flag = 5;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 5){
                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                activity_dev_flag = 4;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 6){
                                jQuery(this).css("background","url(imgs/button_photo.png)");
                                activity_dev_flag = 7;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag == 7){
                                jQuery(this).css("background","url(imgs/button_photo2.png)");
                                activity_dev_flag = 6;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }       
                        };


                        jQuery("#scene_quiet_box .option_scene_list_botton_video").get(0).onclick = function()
                        {
                            
                            var id=jQuery(this).parent().siblings(".option_scene_list_text").text();
                            
                            if(quiet_dev_flag == 0){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                quiet_dev_flag = 2;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 1){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                quiet_dev_flag = 3;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 2){
                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                quiet_dev_flag = 0;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 3){

                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                quiet_dev_flag = 1;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 4){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                quiet_dev_flag = 6;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 5){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                quiet_dev_flag = 7;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 6){
                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                quiet_dev_flag = 4;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(quiet_dev_flag == 7){
                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                quiet_dev_flag = 5;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }
                        };



                        jQuery("#scene_level_box .option_scene_list_botton_video").get(0).onclick = function()
                        {
                            
                            var id=jQuery(this).parent().siblings(".option_scene_list_text").text();
                            
                            if(out_dev_flag == 0){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                out_dev_flag = 2;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 1){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                out_dev_flag = 3;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 2){
                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                out_dev_flag = 0;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 3){

                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                out_dev_flag = 1;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 4){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                out_dev_flag = 6;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 5){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                out_dev_flag = 7;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 6){
                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                out_dev_flag = 4;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(out_dev_flag == 7){
                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                out_dev_flag = 5;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:quiet_dev_flag}]},{name:"out",flag:0,dev:[{id:id,flag:out_dev_flag}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }
                        };



                        jQuery("#scene_activity_box .option_scene_list_botton_video").get(0).onclick = function()
                        {
                            var id=jQuery(this).parent().siblings(".option_scene_list_text").text();
                            if(activity_dev_flag == 0){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                activity_dev_flag = 2;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag ==1 ){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                activity_dev_flag = 3;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag ==2 ){
                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                activity_dev_flag = 0;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag ==3 ){
                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                activity_dev_flag = 1;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag ==4 ){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                activity_dev_flag = 6;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag ==5 ){
                                jQuery(this).css("background","url(imgs/button_video.png)");
                                activity_dev_flag = 7;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag ==6 ){
                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                activity_dev_flag = 4;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }else if(activity_dev_flag ==7 ){
                                jQuery(this).css("background","url(imgs/button_video2.png)");
                                activity_dev_flag = 5;
                                ms.send_msg( "scene_set",{all:0,info:{select:"auto",scene:[{name:"auto",flag:0},{name:"quiet",flag:0,dev:[{id:id,flag:0}]},{name:"out",flag:0,dev:[{id:id,flag:0}]},{name:"active",flag:0,dev:[{id:id,flag:activity_dev_flag}]}]}},null,scene_set_ack);
                            }    
                        };


                        function alarm_click(flag,obj){
                            var id=jQuery(obj).parent().siblings(".option_scene_list_text").text();
                            var parentIndex = jQuery(obj).parents(".option_scene_list").parent().index();
                            
                            if(flag == 0){
                                jQuery(obj).css("background","url(imgs/button_alarm.png)");
                                flag = 4;
                                if(parentIndex == 2){
                                    info.scene[3].dev[0].flag=flag;
                                };
                                ms.send_msg( "scene_set",{all:0,info:info},null,scene_set_ack);
                            }else if(flag == 1){
                                jQuery(obj).css("background","url(imgs/button_alarm.png)");
                                flag = 5;
                                if(parentIndex == 2){
                                    info.scene[3].dev[0].flag=flag;
                                };
                                ms.send_msg( "scene_set",{all:0,info:info},null,scene_set_ack);
                            }else if(flag == 2){
                                jQuery(obj).css("background","url(imgs/button_alarm.png)");
                                flag = 6;
                                if(parentIndex == 2){
                                    info.scene[3].dev[0].flag=flag;
                                };
                                ms.send_msg( "scene_set",{all:0,info:info},null,scene_set_ack);
                            }else if(flag == 3){

                                jQuery(obj).css("background","url(imgs/button_alarm.png)");
                                flag = 7;
                                if(parentIndex == 2){
                                    info.scene[3].dev[0].flag=flag;
                                };
                                ms.send_msg( "scene_set",{all:0,info:info},null,scene_set_ack);
                            }else if(flag == 4){
                                jQuery(obj).css("background","url(imgs/button_alarm2.png)");
                                flag = 0;
                                if(parentIndex == 2){
                                    info.scene[3].dev[0].flag=flag;
                                };
                                ms.send_msg( "scene_set",{all:0,info:info},null,scene_set_ack);
                            }else if(flag == 5){
                                jQuery(obj).css("background","url(imgs/button_alarm2.png)");
                                flag = 1;
                                if(parentIndex == 2){
                                    info.scene[3].dev[0].flag=flag;
                                };
                                ms.send_msg( "scene_set",{all:0,info:info},null,scene_set_ack);
                            }else if(flag == 6){
                                jQuery(obj).css("background","url(imgs/button_alarm2.png)");
                                flag = 2;
                                if(parentIndex == 2){
                                    info.scene[3].dev[0].flag=flag;
                                };
                                ms.send_msg( "scene_set",{all:0,info:info},null,scene_set_ack);
                            }else if(flag == 7){
                                jQuery(obj).css("background","url(imgs/button_alarm2.png)");
                                flag = 3;
                                if(parentIndex == 2){
                                    info.scene[3].dev[0].flag=flag;
                                };
                                ms.send_msg( "scene_set",{all:0,info:info},null,scene_set_ack);
                            }
                        }
                    }    
                }                           
            });
        }
        function scene_set_ack(msg,ref){
            msg_tips({msg:"设置成功", type:"success", timeout:3000});
        }

        function record_ack(msg,ref)
        {
           if(msg && msg.sd_ready == 0)
           {
               msg_tips({msg:mcs_sdcard_not_ready, type:"error", timeout:3000});
           }else if(msg && msg.result==""){
              if(l_recording == 0)
               {
                  l_recording = 1;
                  adjust_recording_button_state({recording_state:"recording"});

               }
               else
               {
                  l_recording = 0;
                  adjust_recording_button_state({recording_state:"normal"});
               }

               if(jQuery(this).attr("status") == "off"){
                    jQuery(this).find(".text").html("OFF");        
                    mx("#video_switch_button_turn").style.float = "left";
                    jQuery(this).attr("status","on");
                    jQuery("#video_switch_img").css("background-image","url(../imgs/videotape.png)");
                    ms.send_msg( "scene_set",{all:0,info:0},null,function(msg,ref){
                        
                    });
                }else{
                    jQuery(this).find(".text").html("ON");        
                    mx("#video_switch_button_turn").style.float = "right";
                    jQuery(this).attr("status","off");
                    jQuery("#video_switch_img").css("background-image","url(../imgs/scene_video.png)");
                }
           }
           else if(msg.result == "permission.denied")
           {
               msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
           }
        }
        ms.send_msg("exdev_get",{flag:1,start:0,counts:100},null,exdev_get_ack);   
    }

        function class_options_attachmen(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            exdev_id;
        if(g_domain_oems_vimtag)
        {
            jQuery("#options_box").show();
            l_me_parent[s_innerHTML] = 
            "<div id='option_attachmen_box'>"
                +"<div id='option_attachmen_box_top'>"
                    +"<div id='option_attachmen_box_back'></div>"
                    +"<div id='option_attachmen_box_close'>&times;</div>"
                    +"<div id='option_attachmen_pattern'>"
                        +"<div id='option_attachmen_pattern_activity'>"+mcs_accessory+"</div>"
                    +"</div>"
                +"</div>"
                +"<div id='option_attachmen_box_main'>"
                    +"<div id='option_attachmen_box_main_content'>"
                    +   "<div class='last'>"
                    +       "<div id='option_attachmen_add_img' style='background-image:url(../imgs/add_attachmen.png)'></div>"
                    +       "<div id='option_attachmen_add'>"+mcs_add_accessory+"</div></div>"
                    +       "<div class='option_attachmen_nav'></div>"
                    +"</div>"
                    
                    
                    +"<div id='option_attachmen_box_select_type' style='display:none'>"
                        +"<div class='option_attachmen_list' id='option_attachmen_list'>"
                            +"<div class='option_attachmen_list_img' style='background-image:url(../imgs/door_attachmen.png)'></div>"
                            +"<div class='option_attachmen_list_name'>门磁</div>"
                        +"</div>"
                        +"<div class='option_attachmen_nav'></div>"
                        +"<div class='option_attachmen_list'>"
                            +"<div class='option_attachmen_list_img' style='background-image:url(../imgs/sos_attachmen.png)'></div>"
                            +"<div class='option_attachmen_list_name'>紧急按钮</div>"
                        +"</div>"
                    +"</div>"
                    +"<div id='option_attachmen_box_search' style='display:none'>"
                        +"<div id='option_attachmen_search_main'>"
                            +"<div id='option_attachmen_search_main_img'></div>"
                            +"<div id='option_attachmen_search_main_text'>长按按钮直到红灯慢闪点击按钮</div>"
                            +"<div id='option_attachmen_search_main_button'><div id='option_attachmen_search_main_button_div'><img src='../imgs/search.png' style='float:left;margin-top:5px;margin-right:10px;'>"+mcs_search+"</div></div>"
                        +"</div>"
                        +"<div id='option_attachmen_search_list'>"
                        +"</div>"
                    +"</div>"
                    +"<div id='option_attachmen_box_success' style='display:none;'>"
                        +"<div id='option_attachmen_box_success_img'></div>"
                        +"<div id='option_attachmen_box_success_text'>"+mcs_add_successfully+"</div>"
                    +"</div>"
                +"</div>"
            +"</div>";
            var l_height = mx("#options_box").offsetHeight - 120;
            mx("#option_attachmen_box_main").style.height = l_height + "px";
            mx("#option_attachmen_box_main").style.overflow = "auto";
            if(mx("#option_attachmen_search_main_button"))
            {
                var button_width = mx("#option_attachmen_search_main_button_div").offsetWidth;
                mx("#option_attachmen_search_main_button_div").style.marginLeft = (215-(button_width+26)/2) + "px";
            }
            function add_event(obj){
                mx("#option_attachmen_box_close").onclick = function()
                {
                    jQuery("#options_box").hide();
                    mx("#options_box")[s_innerHTML] = "";
                }
                mx(".option_attachmen_list")[0].onclick = function(){
                    this.parentNode.style.display = "none";
                    mx("#option_attachmen_box_main_door").style.display = "block";
                }
                
                mx("#option_attachmen_list").onclick = function(){
                    this.parentNode.style.display = "none";
                    mx("#option_attachmen_box_search").style.display = "block";
                }
                mx("#option_attachmen_search_main_button").onclick = function(){
                    ms.send_msg("exdev_discover",{flag:1,timeout:60,interval:10,sn:g_select_device_ipc},null,exdev_discover_ack); 
                } 

                mx(".last")[0].onclick = function(){
                    mx("#option_attachmen_box_main_content").style.display = "none";
                    mx("#option_attachmen_box_select_type").style.display = "block";
                };  
            };
            add_event(); 



            function exdev_discover_ack(msg, ref)
            {
                if(msg.data && msg.result == ""){
                    setTimeout(function(){
                        ms.send_msg("exdev_get",{flag:2,start:0,counts:100},ref,exdev_get_ack);
                    },8000);
                       
                }
            };

            function exdev_add(id,model){
                ms.send_msg("exdev_add",{id:id,model:model,timeout:100,interval:40,sn:g_select_device_ipc},null,exdev_add_ack);
            }  


            function exdev_add_ack(msg, ref){
                if(msg&&msg.result == ""){
                    mx("#option_attachmen_box_success").style.display = "block";
                    mx("#option_attachmen_box_search").style.display = "none";
                    mx("#option_attachmen_box_back").style.display = "none";
                }
            }

            function exdev_del_ack(msg,ref){
                if(msg&&msg.result == ""){
                    msg_tips({msg:"删除成功", type:"success", timeout:3000});
                    mx("#options_box").style.display = "none";
                    mx("#options_box")[s_innerHTML]= '';
                }
            }

            function exdev_get_ack(msg,ref){
                if(msg&&msg.result == ""){
                    var total = msg.data.total,devs = msg.data.devs,id,model;
                    if(total > 0){
                        model=msg.data.devs[0].model;
                        for(var i = 0;i<total;i++){
                            id = devs[i].id;
                            jQuery("#option_attachmen_search_list").append("<div class='option_attachmen_list'>"
                                +     "<div class='option_attachmen_list_img' style='background-image:url(../imgs/door_attachmen.png)'></div>"
                                +     "<div class='option_attachmen_list_name'>"+id+"</div>"
                                +     "<div class='option_attachmen_list_add' model='"+model+"'>"+mcs_add+"</div>"
                                +"</div>");
                            mx(".option_attachmen_list_add")[i].onclick = function(){
                                exdev_add(id,model);
                            };
                            jQuery("<div class='option_attachmen_list'>"
                                        +"<div class='option_attachmen_list_img' style='background-image:url(../imgs/sos_attachmen.png)'></div>"
                                        +"<div class='option_attachmen_list_name'>"+id+"</div>"
                                        +"<div class='option_attachmen_list_status' style='display:none'>"+mcs_device_offline+"</div>"
                                    +"</div>"
                                    +"<div class='option_attachmen_nav'></div>").prependTo(jQuery("#option_attachmen_box_main_content"));
                            mx(".option_attachmen_list")[i].onclick = function(){
                                mx("#option_attachmen_box_main_content").style.display = "none";
                                jQuery("#option_attachmen_box_main").append("<div id='option_attachmen_box_main_door'>"
                                    +"<div id='option_attachmen_door_title'>"
                                        +"<div id='option_attachmen_door_title_left'>"+mcs_name+"</div>"
                                        +"<div id='option_attachmen_door_title_right'><img src='../imgs/attachmen.png' style='float:left;margin-top:10px;'>&nbsp;&nbsp;&nbsp;"+mcs_accessory+" one"+"</div>"
                                    +"</div>"
                                    +"<div id='option_attachmen_door_content'>"
                                        +"<div id='option_attachmen_door_move'>"
                                            +"<div id='option_attachmen_door_move_text'>"+mcs_motion_detection_sensitivity+"</div>"
                                            +"<div id='option_attachmen_door_day'>"
                                                +"<div id='option_attachmen_door_day_img'></div>"
                                                +"<div id='option_attachmen_door_day_text'>"+mcs_daytime+"</div>"
                                                +"<div id='option_attachmen_door_day_turn'><div></div><img src='../imgs/ctrl.png' /></div>"
                                            +"</div>"
                                            +"<div id='option_attachmen_door_night'>"
                                                +"<div id='option_attachmen_door_night_img'></div>"
                                                +"<div id='option_attachmen_door_night_text'>"+mcs_night+"</div>"
                                                +"<div id='option_attachmen_door_night_turn'><div></div><img src='../imgs/ctrl.png' /></div>"
                                            +"</div>"
                                        +"</div>"
                                        +"<div id='option_attachmen_door_alarm'>"
                                            +"<div id='option_attachmen_door_alarm_text'>"+mcs_io+"</div>"
                                            +"<div id='option_attachmen_door_time'>"
                                                +"<div id='option_attachmen_door_time_img'></div>"
                                                +"<div id='option_attachmen_door_time_text'>"+mcs_io_alert_time+"</div>"
                                                +"<div id='option_attachmen_door_time_num'>00</div>"
                                            +"</div>"
                                            +"<div id='option_attachmen_door_video'>"
                                                +"<div id='option_attachmen_door_video_img'></div>"
                                                +"<div id='option_attachmen_door_video_text'>"+"mcs_record_timer"+"</div>"
                                                +"<div id='option_attachmen_door_video_num'>00</div>"
                                            +"</div>"
                                        +"</div>"
                                    +"</div>"
                                    +"<div id='option_attachmen_door_button'>"
                                        +"<div id='option_attachmen_door_button_delete'>"+mcs_delete+"</div>"
                                        +"<div id='option_attachmen_door_button_apply'>"+mcs_apply+"</div>"
                                    +"</div>"
                                +"</div>");
                                mx("#option_attachmen_door_button_delete").onclick = function(){
                                    ms.send_msg("exdev_del",{id:id},null,exdev_del_ack);
                                };
                                mx("#option_attachmen_door_button_apply").onclick = function(){
                                    alert(0);
                                }

                                jQuery("#option_attachmen_door_day_turn").find("img").mousedown(function(e){
                                    var _this = this;
                                    var X = e.pageX;
                                    var imgX = jQuery(_this).offset().left;
                                    jQuery(document).mousemove(function(e){
                                        var mouseX = e.pageX;
                                        var move = mouseX - jQuery("#option_attachmen_door_day_turn").offset().left-(X - imgX);
                                        if(mouseX < jQuery("#option_attachmen_door_day_turn").offset().left){
                                            move = 0;
                                        }else if(mouseX > jQuery("#option_attachmen_door_day_turn").offset().left+jQuery("#option_attachmen_door_day_turn").width()){
                                            move = jQuery("#option_attachmen_door_day_turn").width()-8;
                                        }
                                        jQuery(_this).css("left",move+ "px");
                                        jQuery("#option_attachmen_door_day_turn").find("div").css("width",move + "px");
                                    });
                                    jQuery(document).mouseup(function(){
                                        jQuery(document).off();
                                    });

                                    return false;
                                });
                                
                                jQuery("#option_attachmen_door_night_turn").find("img").mousedown(function(e){
                                    var _this = this;
                                    var X = e.pageX;
                                    var imgX = jQuery(_this).offset().left;
                                    jQuery(document).mousemove(function(e){
                                        var mouseX = e.pageX;
                                        var move = mouseX - jQuery("#option_attachmen_door_night_turn").offset().left-(X - imgX);
                                        if(mouseX < jQuery("#option_attachmen_door_night_turn").offset().left){
                                            move = 0;
                                        }else if(mouseX > jQuery("#option_attachmen_door_night_turn").offset().left+jQuery("#option_attachmen_door_night_turn").width()){
                                            move = jQuery("#option_attachmen_door_night_turn").width()-8;
                                        }
                                        jQuery(_this).css("left",move+ "px");
                                        jQuery("#option_attachmen_door_night_turn").find("div").css("width",move + "px");
                                    });
                                    jQuery(document).mouseup(function(){
                                        jQuery(document).off();
                                    });

                                    return false;
                                });
                            }


                        }
                    }    
                }           
            }
        }
        ms.send_msg("exdev_get",{flag:1,start:0,counts:100},null,exdev_get_ack);
    }
    // set the auto
    function class_options_auto(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent;
        if(g_domain_oems_vimtag)
        {
            jQuery("#options_box").show();
            l_me_parent[s_innerHTML] = 
            "<div id='option_auto_box'>"
                +"<div id='option_auto_box_top'>"
                    +"<div id='option_auto_box_close'>&times;</div>"
                    +"<div id='option_auto_pattern'>"
                        +"<div id='option_auto_pattern_quiet' class='scene_tab'><div id='option_auto_pattern_quiet_div' style='float:left;'><img src='../imgs/quiet_point.png' style='float:left;margin-top:4px;margin-right:5px;' />"+mcs_quiet+"</div></div>"
                        +"<div id='option_auto_pattern_activity' class='scene_tab active'><div id='option_auto_pattern_activity_div' style='float:left;'><img src='../imgs/all_point.png' style='float:left;margin-top:4px;margin-right:5px;' />"+mcs_active+"</div></div>"
                        +"<div id='option_auto_pattern_level' class='scene_tab'><div id='option_auto_pattern_level_div' style='float:left;'><img src='../imgs/level_point.png' style='float:left;margin-top:4px;margin-right:5px;' />"+mcs_out+"</div></div>"
                    +"</div>"
                +"</div>"
                +"<div id='option_auto_box_main'>"
                    +"<div id='option_auto_box_main_content'>"
                        +"<div id='option_auto_box_table'></div>"
                        +"<div id='option_auto_box_main_button'>"
                            +"<div id='option_auto_box_main_button_submit'>"+mcs_ok+"</div>"
                            +"<div id='option_auto_box_main_button_reset'>"+mcs_reset+"</div>"
                        +"</div>"
                    +"</div>"
                +"</div>"
            +"</div>";
            var quiet_div_width = mx("#option_auto_pattern_quiet_div").offsetWidth;
            var activity_div_width = mx("#option_auto_pattern_activity_div").offsetWidth;
            var level_div_width = mx("#option_auto_pattern_level_div").offsetWidth;
            mx("#option_auto_pattern_quiet_div").style.marginLeft = 60-((quiet_div_width+20)/2) + "px";
            mx("#option_auto_pattern_activity_div").style.marginLeft = 60-((activity_div_width+20)/2) + "px";
            mx("#option_auto_pattern_level_div").style.marginLeft = 60-((level_div_width+20)/2) + "px";
            var table_content = "";
            for(var i=0;i<8;i++)
            {               
                if(i==0)
                {
                    table_content += "<div class='option_auto_box_table_tr' style='background:#00a6ba;color:#fff;'>";
                    for(var j=0;j<25;j++)
                    {
                        if(j==0)
                        {
                            table_content += "<div class='option_auto_box_table_tb'>时间</div>"
                        }
                        else
                        {
                            table_content += "<div class='option_auto_box_table_td'>"+j+"</div>"
                        }
                    }
                }
                else
                {
                    table_content += "<div class='option_auto_box_table_tr'>";
                    if(i==1){var l_day = mcs_mon}
                    if(i==2){var l_day = mcs_tue}
                    if(i==3){var l_day = mcs_wed}
                    if(i==4){var l_day = mcs_thu}
                    if(i==5){var l_day = mcs_fri}
                    if(i==6){var l_day = mcs_sat}
                    if(i==7){var l_day = mcs_sun}
                    for(var j=0;j<25;j++)
                    {
                        if(j==0)
                        {
                            table_content += "<div class='option_auto_box_table_tb'>"+l_day+"</div>"
                        }
                        else
                        {
                            table_content += "<div class='option_auto_box_table_td' style='cursor:pointer;'>"+j+"</div>"
                        }
                    }
                }
                table_content += "</div>";
            }
            mx("#option_auto_box_table")[s_innerHTML] = table_content;
            var l_height = mx("#options_box").offsetHeight - 120;
            mx("#option_auto_box").style.height = l_height + "px";
            mx("#option_auto_box").style.overflow = "auto";
        }

        function add_event(obj)
        {
            var table_td = jQuery(".option_auto_box_table_td");
            var selected = {
                quiet:[],
                activity:[],
                level:[]
            };
            for(var i = 0;i<8;i++){
                var arr = [];
                selected.quiet.push(arr);
            }
            for(var i = 0;i<8;i++){
                var arr = [];
                selected.activity.push(arr);
            }
            for(var i = 0;i<8;i++){
                var arr = [];
                selected.level.push(arr);
            }
            for(var i = 0;i<table_td.length;i++){
                table_td[i].onclick = function(){
                    if(jQuery(this).parent().index() == 0){
                        return;
                    }
                    if(jQuery(this).hasClass("active") == false){

                        if(jQuery("#option_auto_pattern .scene_tab").eq(0).hasClass("active")){
                            selected.quiet[jQuery(this).parent().index()].push(jQuery(this).index());
                            this.className= "option_auto_box_table_td quiet active";
                        }else if(jQuery("#option_auto_pattern .scene_tab").eq(1).hasClass("active")){
                            selected.activity[jQuery(this).parent().index()].push(jQuery(this).index());
                            this.className= "option_auto_box_table_td activity active";
                        }else if(jQuery("#option_auto_pattern .scene_tab").eq(2).hasClass("active")){
                            selected.level[jQuery(this).parent().index()].push(jQuery(this).index());

                            if(jQuery.inArray(jQuery(this).index(),selected.quiet[jQuery(this).parent().index()]) != -1)
                            {
                                selected.quiet[jQuery(this).parent().index()].splice(jQuery.inArray(jQuery(this).index(),selected.quiet[jQuery(this).parent().index()]),1);
                            }

                            if(jQuery.inArray(jQuery(this).index(),selected.activity[jQuery(this).parent().index()]) != -1)
                            {
                                selected.activity[jQuery(this).parent().index()].splice(jQuery.inArray(jQuery(this).index(),selected.activity[jQuery(this).parent().index()]),1);
                            }
                            this.className= "option_auto_box_table_td level active";
                        };
                    }else{
                        if(jQuery("#option_auto_pattern .scene_tab").eq(0).hasClass("active"))
                        {
                            if(jQuery.inArray(jQuery(this).index(),selected.quiet[jQuery(this).parent().index()]) >= 0)
                            {
                                selected.quiet[jQuery(this).parent().index()].splice(jQuery.inArray(jQuery(this).index(),selected.quiet[jQuery(this).parent().index()]),1);
                                this.className = "option_auto_box_table_td";
                            }else{
                                if(jQuery.inArray(jQuery(this).index(),selected.activity[jQuery(this).parent().index()]) >= 0)
                                {
                                    selected.activity[jQuery(this).parent().index()].splice(jQuery.inArray(jQuery(this).index(),selected.activity[jQuery(this).parent().index()]),1);
                                }

                                if(jQuery.inArray(jQuery(this).index(),selected.level[jQuery(this).parent().index()]) >= 0)
                                {
                                    selected.level[jQuery(this).parent().index()].splice(jQuery.inArray(jQuery(this).index(),selected.level[jQuery(this).parent().index()]),1);
                                }
                                selected.quiet[jQuery(this).parent().index()].push(jQuery(this).index());
                                this.className = "option_auto_box_table_td quiet active";
                            }
                        }else if(jQuery("#option_auto_pattern .scene_tab").eq(1).hasClass("active")){
                            if(jQuery.inArray(jQuery(this).index(),selected.activity[jQuery(this).parent().index()]) >= 0)
                            {
                                selected.activity[jQuery(this).parent().index()].splice(jQuery.inArray(jQuery(this).index(),selected.activity[jQuery(this).parent().index()]),1);
                                this.className = "option_auto_box_table_td";
                            }else{
                                if(jQuery.inArray(jQuery(this).index(),selected.quiet[jQuery(this).parent().index()]) >= 0)
                                {
                                    selected.quiet[jQuery(this).parent().index()].splice(jQuery.inArray(jQuery(this).index(),selected.quiet[jQuery(this).parent().index()]),1);
                                }

                                if(jQuery.inArray(jQuery(this).index(),selected.level[jQuery(this).parent().index()]) >= 0)
                                {
                                    selected.level[jQuery(this).parent().index()].splice(jQuery.inArray(jQuery(this).index(),selected.level[jQuery(this).parent().index()]),1);
                                }
                                selected.activity[jQuery(this).parent().index()].push(jQuery(this).index());
                                this.className = "option_auto_box_table_td activity active";
                            }
                        }else if(jQuery("#option_auto_pattern .scene_tab").eq(2).hasClass("active")){
                            if(jQuery.inArray(jQuery(this).index(),selected.level[jQuery(this).parent().index()]) >= 0)
                            {
                                selected.level[jQuery(this).parent().index()].splice(jQuery.inArray(jQuery(this).index(),selected.level[jQuery(this).parent().index()]),1);
                                this.className = "option_auto_box_table_td";
                            }else{
                                if(jQuery.inArray(jQuery(this).index(),selected.quiet[jQuery(this).parent().index()]) >= 0)
                                {
                                    selected.quiet[jQuery(this).parent().index()].splice(jQuery.inArray(jQuery(this).index(),selected.quiet[jQuery(this).parent().index()]),1);
                                }

                                if(jQuery.inArray(jQuery(this).index(),selected.activity[jQuery(this).parent().index()]) >= 0)
                                {
                                    selected.activity[jQuery(this).parent().index()].splice(jQuery.inArray(jQuery(this).index(),selected.activity[jQuery(this).parent().index()]),1);
                                }
                                selected.level[jQuery(this).parent().index()].push(jQuery(this).index());
                                this.className = "option_auto_box_table_td level active";
                            }
                        };
                    }    
                    console.log(selected);
                };
            }
            mx("#option_auto_box_main_button_reset").onclick = function(){
                for(var i = 0;i<8;i++){
                    selected.quiet[i].length = 0;
                    selected.activity[i].length = 0;
                    selected.level[i].length = 0;
                }
                table_td.attr("class","option_auto_box_table_td");
                console.log(selected);
            };
            mx("#option_auto_box_main_button_submit").onclick = function(){
                alert("确定");
            };
        }
        add_event();
        var scene_tab = jQuery("#option_auto_pattern").find(".scene_tab");
        for(var i = 0;i<scene_tab.length;i++){
            scene_tab[i].onclick = function(){
                jQuery("#option_auto_pattern").find("img").eq(0).attr("src","imgs/quiet_point.png");
                jQuery("#option_auto_pattern").find("img").eq(1).attr("src","imgs/activity_point.png");
                jQuery("#option_auto_pattern").find("img").eq(2).attr("src","imgs/level_point.png");
                jQuery(this).siblings().removeClass("active");
                jQuery(this).siblings().css("background","url() no-repeat");
                jQuery(this).find("img").attr("src","imgs/all_point.png");
                jQuery(this).addClass("active");
                if(jQuery(this).index() == 0){
                    jQuery(this).css("background","url(imgs/quiet_button.png) no-repeat");
                }else if(jQuery(this).index() == 1){
                    jQuery(this).css("background","url(imgs/activity_button.png) no-repeat no-repeat");
                }else{
                    jQuery(this).css("background","url(imgs/level_button.png) no-repeat");
                }
            };
        }

        mx("#option_auto_box_close").onclick = function()
        {
            jQuery("#options_box").hide();
            mx("#options_box")[s_innerHTML] = "";
        }
    }

    //Set the alarm device
    function class_options_alarm(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_parent_callback = obj.on_event,
            l_dom_checkbox_deployment_div,
            l_dom_select_input_level,
            l_dom_select_linkage_level,
            l_dom_input_threshold,
            l_dom_button_setup,
            l_view_page_obj,
            l_mask_data_get = "",
            l_dom_input_thresholdLevelNight;
        if(g_domain_oems_vimtag)
        {
              l_me_parent[s_innerHTML] =
                  "<div id = 'alert_dev_info' class = 'list_right_box' >"
                +      "<div class = 'list_right_item_ex' style='display:none;'>"
                +         "<div class='options_float_left'>" + mcs_i_o_alarm + ":</div>"
                    +         "<div id='checkbox_deployment_div' class='options_float_right'></div>"
                +      "</div>"
                +      "<div class = 'list_right_item_ex' style='display:none;'>"
                +         "<div class='options_float_left'>- " + mcs_input + "</div>"
                    +         "<div class='options_float_right select_block'>"
                    +            "<input type='text' id='select_input_level' class='input_read_only'  disabled/>"
                    +         "</div>"
                +      "</div>"
                +      "<div class = 'list_right_item' style='display:none;'>"
                +         "<div class='options_float_left'>- " + mcs_outinput + "</div>"
                    +         "<div class='options_float_right '>"
                    +            "<input  id='select_linkage_level' class='input_read_only'  disabled/>"
                    +         "</div>"
                +      "</div>"
                +      "<div class = 'list_right_item_ex'>"
                +         "<span class = 'attribute_key_text'>"+mcs_motion_detection_sensitivity+"</span>"
                +      "</div>"
                +      "<div class = 'list_right_item_ex'>"
                    +         "<div class='vimtag_options_float_left'>- " + mcs_daytime + "</div>"
                    +         "<div class='options_float_right' style='width:200px;'>"
                    +            "<label for='input_threshold'></label>"
                    +            "<input name='slider' type='text' id='input_threshold' class='fd_tween fd_classname_extraclass fd_hide_input "
                    +               "fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update' value='0%'</input>"
                    +         "</div>"
                    +       "</div>"
                    +       "<div class='list_right_item'>"
                    +          "<div class='vimtag_options_float_left'>- " + mcs_night + "</div>"
                    +          "<div class='options_float_right' style='width:200px;'>"
                    +             "<label for='input_thresholdLevelNight'></label>"
                    +             "<input name='slider' type='text' id='input_thresholdLevelNight' class='fd_tween fd_classname_extraclass fd_hide_input "
                    +                "fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update' value='0%'</input>"
                    +          "</div>"
                    +      "</div>"
                +      "<div class='options_float_right' style='clear:both'>"
                    +         "<button id='button_setup' class='list_right_button' >" + mcs_apply + "</button>"
                    +      "</div>"
                +"</div>";
        }
        else
        {
                l_me_parent[s_innerHTML] =
                    "<div>"
                    +   "<div class='options_float_left'>" + mcs_i_o_alarm + ":</div>"
                    +   "<div id='checkbox_deployment_div' class='options_float_right'></div>"
                    +"</div>"
                    +"<div id='select_level_content'>"
                    +   "<div class='options_float_left'>- " + mcs_input + "</div>"
                    +   "<div class='options_float_right select_block'>"
                    +       "<input type='text' id='select_input_level' class='input_read_only'  disabled/>"
                    +   "</div>"
                    +"</div>"
                    +"<div id='select_linkage_content'>"
                    +   "<div class='options_float_left'>- " + mcs_outinput + "</div>"
                    +   "<div class='options_float_right '>"
                    +       "<input  id='select_linkage_level' class='input_read_only'  disabled/>"
                    +   "</div>"
                    +"</div>"
                    +"<div class='manager_split_bar_2px_2'></div>"
                    +"<div id='operate_content'>"
                    +   "<div class='options_float_left'>" + mcs_motion_detection_sensitivity + ":</div>"
                    +   "<div class='options_float_right'></div>"
                    +"</div>"
                    +"<div >"
                    +   "<div class='options_float_left'></input>&nbsp;&nbsp;- " + mcs_daytime + "</div>"
                    +   "<div class='options_float_right' style='width:200px;padding-top:18px'>"
                    +       "<label for='input_threshold'></label>"
                    +       "<input name='slider' type='text' id='input_threshold' class='fd_tween fd_classname_extraclass fd_hide_input "
                    +           "fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update' value='0%'</input>"
                    +   "</div>"
                    +"</div>"
                    +"<div>"
                    +   "<div class='options_float_left'></input>&nbsp;&nbsp;- " + mcs_night + "</div>"
                    +   "<div class='options_float_right' style='width:200px;padding-top:18px'>"
                    +       "<label for='input_thresholdLevelNight'></label>"
                    +       "<input name='slider' type='text' id='input_thresholdLevelNight' class='fd_tween fd_classname_extraclass fd_hide_input "
                    +           "fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update' value='0%'</input>"
                    +   "</div>"
                    +"</div>"
                    +"<div id='motion_mask_div'>"
                      +  "<div class='manager_split_bar_2px_2'></div>"
                      +  "<div>"
                      +    "<div class='options_float_left'>" + mcs_set_mask + "</div>"
                      +    "<div  class='options_float_right'>"
                      +      "<input id='mask_switch_checkbox' type='checkbox' />"
                      +    "</div>"
                      +  "</div>"
                      +  "<div id = 'mask_info' class='options_float_right' style='clear:both'>"
                      +    "<input id = 'mask_set_button' class = 'standard_buttons_white' type = 'button' value = '" + mcs_settings + "'>"
                      +  "</div>"
                      +  "<div class='manager_split_bar_2px_2'></div>"
                    +"</div>"
                    +"<div class='options_float_right' style='clear:both'>"
                    +   "<button id='button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>"
                    +"</div>";
                jQuery(l_me_parent).hide().fadeIn(500);
                l_dom_mask_setup = mx("#mask_set_button");
        }
        l_dom_checkbox_deployment_div = mx("#checkbox_deployment_div");
        l_dom_select_input_level = mx("#select_input_level");
        l_dom_select_linkage_level = mx("#select_linkage_level");
        l_dom_input_threshold = mx("#input_threshold");
        l_dom_input_thresholdLevelNight = mx("#input_thresholdLevelNight");
        l_dom_button_setup = mx("#button_setup");
        if(!g_domain_oems_vimtag)
        {
                if(g_hostname != "www.luxcamapp.eu")
                {
                      jQuery("#motion_mask_div").hide();
                }
                else
                {
                      jQuery("#motion_mask_div").show();
                }
                jQuery("#mask_switch_checkbox").iButton({
                      labelOn:"On",
                      labelOff:"Off",
                      change:function()
                      {
                          if(mx("#mask_switch_checkbox").checked)
                          {
                                jQuery("#mask_info")[0].style.display="inline";
                          }
                          else
                          {
                              jQuery("#mask_info").fadeOut();
                          }
                        }
                });
        }
        function dev_alarm_get_ack(msg,ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.result == "")
            {
                if(msg.io_input=="Open")
                {
                    l_dom_select_input_level.value=mcs_normally_open;
                }
                else
                {
                      l_dom_select_input_level.value=mcs_normally_close;
                }
                if(msg.io_output=="Open")
                {
                    l_dom_select_linkage_level.value=mcs_normally_open;
                }
                else
                {
                    l_dom_select_linkage_level.value=mcs_normally_close;
                }
                if(l_dom_input_thresholdLevelNight)
                    fdSliderController.increment("input_thresholdLevelNight", msg.night_sensitivity - l_dom_input_thresholdLevelNight.value );
                if(l_dom_input_threshold)
                    fdSliderController.increment("input_threshold", msg.sensitivity - l_dom_input_threshold.value );
            }
            else
            {
                log("error:CcmMDGetResponse return Result error in class_options_alarm.");
            }
        }
        function remove_event()
        {
             l_dom_button_setup.onclick = "";
        }
        function ccm_motion_mask_get_response(msg, ref)
        {
            if(!l_me_parent) return;
          if(msg.result == "")
          {
            if(msg.conf.enable==1)
            {
                 jQuery("#mask_switch_checkbox").iButton("toggle", true);
            }
            else
            {
                 jQuery("#mask_switch_checkbox").iButton("toggle", false);
            }
          }
          else
          {
            log("error:CcmMotionMaskGetResponse return Result error in class_options_alarm.");
            return -1;
          }
        }
        function add_event()
        {
            l_dom_button_setup.onclick = function() {
                var IoInputMode,IoOutputMode;
                l_dom_select_input_level.value==1 ? IoInputMode="Close" : IoInputMode="Open";
                l_dom_select_linkage_level.value==1 ? IoOutputMode="Colse" : IoOutputMode="Open";
                var conf={sn:g_select_device_ipc,io_input:IoInputMode,io_output:IoOutputMode , sensitivity:l_dom_input_threshold.value,night_sensitivity:l_dom_input_thresholdLevelNight.value};
                ms.send_msg("alarm_trigger_set",conf,null,function(msg,ref){
                    if(msg && msg.result == ""){
                        if(g_domain_oems_vimtag)
                        {
                             msg_tips({msg:mcs_set_successfully, type:"warning", timeout:3000});
                        }
                        else
                        {
                         g_system_prompt_box(mcs_set_successfully, 240, -200);
                      }
                    }
                    else if (msg.result == "permission.denied") {
                        if(g_domain_oems_vimtag)
                      {
                          msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
                      }
                    }
                });
            };

                if(!g_domain_oems_vimtag)
            {
                    l_dom_mask_setup.onclick = function ()
                    {
                        var dom_play_box,height = 290,width =515,
                                    top = (jQuery(window).height()-height-10)/2,left = (jQuery(window).width()-width)/2,
                                    pos = g_view_link.pos(g_select_device_ipc) + 1,view_page_obj,inner_window_info,l_mask_setup_click;

                                    g_now_page = "home";
                                    g_view_link.add(g_select_device_ipc);  //add the device list
                                    dom_play_box = dom_create_child(mx("#main_page"),"div","play_box");
                        dom_play_box.style.cssText = "height:"+height+"px;width:"+width+"px;left:"+left+"px;top:"+top+"px;position:absolute;";
                        l_view_page_obj = new class_view_page({parent:dom_play_box, type:"create", on_event:""});
                        inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:pos - g_view_split_count * (g_now_view_page - 1)}});
                                    inner_window_info.inner_ipc_dom = dom_play_box;
                                    inner_window_info.node_sn = g_select_device_ipc;
                                    inner_window_info.profile_token="p1";
                        l_view_page_obj.ctrl({type:"media_get", inner_window_info:inner_window_info, l_mask_setup_click:1});
                        motion_mask();
                    };
            }
        }
        function motion_mask()
          {
                var dom_mask_box = jQuery("#mask_box");
                if(!dom_mask_box[0])
                {
                    ms.send_msg("motion_mask_get",{sn:g_select_device_ipc},null,function(msg, ref)
                    {
                        if(!l_me_parent) return;
                        if(msg.result == "")
                        {
                            var dom_mask_pic ,dom_background;

                            dom_mask_box = dom_create_child(mx("#main_page"),"div","mask_box");
                            dom_mask_pic = document.createElement("div");
                            dom_mask_pic.setAttribute("id","mask_pic");
                            dom_background = document.createElement("div");
                            dom_background.setAttribute("id","mask_bg");
                            dom_mask_box.appendChild(dom_mask_pic);
                            dom_mask_box.appendChild(dom_background);
                            describe_mask(dom_mask_pic,msg.conf);
                        }
                      else
                      {
                          log("error:CcmMotionMaskGetResponse return Result error in class_options_alarm.");
                        return -1;
                      }
                    });
            }
            else
                {
                    dom_mask_box.remove();
                }
            function describe_mask(dom,conf)
            {
               var i, j,width,height,top,left,dom_play_box=jQuery("#play_box"),
                        dom_button_box,dom_draw,dom_clean,dom_point, data=new Array();

                 width = dom_play_box.width();
                 height = dom_play_box.height();
                 top=dom_play_box.offset().top;
                 left=dom_play_box.offset().left;

               dom.style.cssText="width:"+width+"px;height:"+height+"px;top:"+top+"px;left:"+left+"px;position:absolute;";
               if(conf.pos)
               {
                  l_mask_data_get = conf.pos;
                  for(i=0;i<conf.pos.length;i++)
                    {
                      var temp;
                      data[i]=new Array();
                      temp=conf.pos[i].bitmap;
                      for(j=0;j<=15;j++)
                      {
                        data[i][j]=temp[j];
                      }
                    }
               }
               for(i=0;i<9;i++)
               {
                  for(j=0;j<16;j++)
                  {
                    dom_point = document.createElement("div");
                    dom_point.setAttribute("class","mask_point");
                    dom_point.style.cssText="width:"+(width/16-2)+"px;height:"+(height/9-2)+"px;";
                    if(conf.pos)
                    {
                        for(var k=0;k<conf.pos.length;k++)
                        {
                          if(conf.pos[k].index==i&&data[k][j]==1)
                          {
                            dom_point.style.backgroundColor="#000000";
                            break;
                          }
                        }
                    }
                    dom.appendChild(dom_point);
                  }
               }
               dom_button_box=dom_create_child(dom,"div","mask_button_box");
               dom_confirm = dom_create_child(dom_button_box,"div","mask_confirm","standard_buttons_green");
                     dom_confirm.innerHTML = mcs_ok;
                     dom_reset = dom_create_child(dom_button_box,"div","mask_reset","standard_buttons_green");
                     dom_reset.innerHTML = mcs_reset;
               dom_cancel = dom_create_child(jQuery("#mask_pic")[0],"div","mask_cancel");
               var dom_points=jQuery(".mask_point") , draw_flag = false;
               g_mask_pic_pos = jQuery("#mask_pic").offset();
                     dom_points.mousemove();
                 dom_points.mousedown(function(e)
               {
                      var evt = window.event || e,
                  mouseX = evt.clientX,mouseY = evt.clientY;
                  x_pos = Math.ceil((mouseX - g_mask_pic_pos.left)/dom_point.offsetWidth) -1;
                    y_pos = Math.ceil((mouseY- g_mask_pic_pos.top)/dom_point.offsetHeight) -1;
                    g_start_pos={x_pos:x_pos,y_pos:y_pos};
                    g_mouse_start_pos = {x_pos:mouseX,y_pos:mouseY};
                    draw_flag = true;
                 });

                 jQuery("#mask_box")[0].onselectstart=function(){return false;}

                 jQuery("#mask_box").mousemove(function(e)
                 {
                      if(draw_flag)
                      {
                           var evt = window.event || e,
                       mouseX = evt.clientX,mouseY = evt.clientY,
                       dom_rect,max_x,max_y,min_x,min_y;

                     if(!(dom_rect = jQuery("#rect_box")[0]))
                     {
                            dom_rect = dom_create_child(jQuery("#mask_box")[0],"div","rect_box");
                     }

                     max_x =    (g_mouse_start_pos.x_pos > mouseX) ? g_mouse_start_pos.x_pos : mouseX;
                     min_x =    (g_mouse_start_pos.x_pos < mouseX) ? g_mouse_start_pos.x_pos : mouseX;
                     max_y =    (g_mouse_start_pos.y_pos > mouseY) ? g_mouse_start_pos.y_pos : mouseY;
                     min_y =    (g_mouse_start_pos.y_pos < mouseY) ? g_mouse_start_pos.y_pos : mouseY;

                   dom_rect.style.cssText = "left:"+min_x+"px; top:"+min_y+"px;width:"+(max_x-min_x)+"px;height:"+(max_y-min_y)+"px;" ;
                    }
                 });

                 jQuery("#mask_box").mouseup(function(e)
                 {
                      if(draw_flag)
                      {
                           var evt = window.event || e,
                         mouseX = evt.clientX,mouseY = evt.clientY,
                         x_pos,y_pos;
                     draw_flag =false;
                       jQuery("#rect_box").remove();
                       x_pos = Math.ceil((mouseX - g_mask_pic_pos.left)/dom_point.offsetWidth) -1;
                       y_pos = Math.ceil((mouseY- g_mask_pic_pos.top)/dom_point.offsetHeight) -1;

                       jQuery("#mask_pic").focus;
                         g_end_pos={x_pos:x_pos,y_pos:y_pos};

                       if(g_start_pos.x_pos == g_end_pos.x_pos && g_start_pos.y_pos == g_end_pos.y_pos )
                       {
                            var pos = g_start_pos.x_pos+16*g_start_pos.y_pos;
                            if(dom_points[pos].style.background=="")
                              {
                                   dom_points[pos].style.background = "#000000";
                              }
                              else
                              {
                                   dom_points[pos].style.background = "";
                              }
                       }
                       else
                       {
                            var max_x,max_y,min_x,min_y;
                            max_x = (g_start_pos.x_pos > g_end_pos.x_pos)?g_start_pos.x_pos:g_end_pos.x_pos;
                            min_x = (g_start_pos.x_pos < g_end_pos.x_pos)?g_start_pos.x_pos:g_end_pos.x_pos;
                            max_y = (g_start_pos.y_pos > g_end_pos.y_pos)?g_start_pos.y_pos:g_end_pos.y_pos;
                            min_y = (g_start_pos.y_pos < g_end_pos.y_pos)?g_start_pos.y_pos:g_end_pos.y_pos;
                            for(var i = min_y ; i <= max_y; i++)
                            {
                                for(var j = min_x ; j <= max_x;j++)
                                {
                                    if(dom_points[i*16+j].style.background == "")
                                    {
                                         dom_points[i*16+j].style.background = "#000000";
                                    }
                                    else
                                    {
                                         dom_points[i*16+j].style.background = "";
                              }
                                }
                            }
                       }
                      }
                 });
               dom_cancel.onclick = function()
               {
                    l_parent_callback({type:"delete_ipc", data:{node_sn:g_select_device_ipc}}); //End mask video stream
                    jQuery("#mask_box").remove();
                    jQuery("#play_box").remove();
                    g_now_page = "manager";
               };
               dom_cancel.onmouseover = function()
               {
                    this.style.background ="url(/imgs/mipc_img.png?v1.9.5.1412231038) -360px -146px no-repeat";
               };
               dom_cancel.onmouseout = function()
               {
                    this.style.background ="url(/imgs/mipc_img.png?v1.9.5.1412231038) -390px -146px no-repeat";
               };
                 dom_confirm.onclick = function()
               {
                  var data=new Array(),i,j,k,pos=new Array(),mask_data=new Array(),line_counts=0,
                  dom_mask_points=jQuery(".mask_point"),cover_enable,cover_flag,count;
                  length=dom_mask_points.length;
                  for(i = 0; i<9; i++)
                  {
                     cover_enable = false;
                     count = 0;
                     data[i] = new Array();
                     cover_flag = false;
                     for(k = 0;k < l_mask_data_get.length; k++)
                     {
                            if(i == l_mask_data_get[k].index)
                            {
                                 cover_flag = true;
                                 break;
                            }
                     }
                     for(j = 0;j <= 15;j++)
                     {
                            if(dom_mask_points[i*16+j].style.backgroundColor!= "")
                            {
                                 data[i][j]=1;
                                 count++;
                            }
                            else
                            {
                                 data[i][j]=0;
                            }
                            if(cover_flag&&data[i][j] != l_mask_data_get[k].bitmap[j])
                            {
                                 cover_enable = true;
                            }
                     }

                     if(cover_enable)
                     {
                            pos[line_counts]={index:i,bitmap:data[i]};
                            line_counts++;
                     }
                     else if(!cover_flag&&count>0)
                     {
                            pos[line_counts]={index:i,bitmap:data[i]};
                            line_counts++;
                     }
                  }
                  if(line_counts <= 5)
                  {
                     if(line_counts == 0)
                     {
                            conf={matrix_width:16,matrix_height:9,enable:1};
                     }
                     else
                     {
                            conf={matrix_width:16,matrix_height:9,enable:1,pos:pos};
                     }
                     set_motion_mask(conf);
                    }
                    else
                    {
                         var conf_1, conf_2,i,pos_=new Array();
                         conf_1={matrix_width:16,matrix_height:9,enable:1,pos:[pos[0],pos[1],pos[2],pos[3],pos[4]]};
                         for(i=5;i<line_counts;i++)
                         {
                            pos_.push(pos[i]);
                         }
                         conf_2 = {matrix_width:16,matrix_height:9,enable:1,pos:pos_};
                         set_motion_mask(conf_1,conf_2);
                    }
                    //l_parent_callback({type:"delete_ipc", data:{node_sn:g_select_device_ipc}}); //End mask video stream
                    inner_window_info = l_view_page_obj.ctrl({type:"get_inner_window_info", data:{index:(g_view_link.pos(g_select_device_ipc) + 1) - g_view_split_count * (g_now_view_page - 1)}});
                    l_view_page_obj.ctrl({type:"remove_ipc", data:{inner_window_info:inner_window_info}});
                     };

                     dom_reset.onclick = function()
                     {
                          dom_points.css("backgroundColor","");
                     };

                }
            }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "destroy":
                    {
                          remove_event();
                        l_me_parent.innerHTML = "";
                        l_me_parent = null;
                        break;
                    }
            }
        }
        add_event();
        fdSliderController.create();
        ms.send_msg("alarm_trigger_get",{sn:g_select_device_ipc},null,dev_alarm_get_ack);
        if(determine_the_version({type:"Positive",version:version_Category.curise_motion_version}))
                {
                     ms.send_msg("motion_mask_get",{sn:g_select_device_ipc},null,function(msg, ref){ccm_motion_mask_get_response(msg, ref);});
                }
    }

    function set_motion_mask(obj1,obj2)
    {
    	if(obj2)
    	{
    		 ms.send_msg("motion_mask_set",{conf:obj1,sn:g_select_device_ipc},null,function(msg, ref)
			   {
			     if(msg.result == "")
				   {
					   ms.send_msg("motion_mask_set",{conf:obj2,sn:g_select_device_ipc},null,function(msg, ref)
					   {
					 	   jQuery("#mask_box").remove();
					     jQuery("#play_box").remove();
					     g_now_page = "manager";
					     if(msg.result == "")
						   {
					     	  g_system_prompt_box(mcs_set_successfully, 240, -200);
					     }
					     else
					     {
					     	  g_system_prompt_box(mcs_failed_to_set_the, 240, -200);
					     }
				     });
			     }
			     else
			     {
			     	 g_system_prompt_box(mcs_failed_to_set_the, 240, -200);
			     }
			   });
    	}
    	else
    	{
    		ms.send_msg("motion_mask_set",{conf:obj1,sn:g_select_device_ipc},null,function(msg, ref)
			  {
			 	  jQuery("#mask_box").remove();
			    jQuery("#play_box").remove();
			    g_now_page = "manager";
			    if(msg.result == "")
				  {
			     	 g_system_prompt_box(mcs_set_successfully, 240, -200);
			    }
			    else
			    {
			     	g_system_prompt_box(mcs_failed_to_set_the, 240, -200);
			    }
			  });
    	}
    }

    //Set the alarm linkage
    function class_options_alarm_linkage(obj)
    {
          var l_me = this,
            l_me_parent = obj.parent,
            l_dom_IoOutputEnable,l_dom_SnapShotEnable,
            l_dom_RecordEnable,
            l_dom_Action,
            l_dom_Arming_button,
            l_dom_select_input_devices,
            l_dom_button_setup,l_dom_alarm_sources;

        if(g_domain_oems_vimtag)
        {
             l_me_parent[s_innerHTML] =
              "<div id = 'alert_linkage_info' class = 'list_right_box'>"
            +      "<div class = 'list_right_item'>"
            +         "<div class='options_float_left'>"+mcs_name+"</div>"
            +         "<div  class='options_float_right select_block' style='margin-top:0px;'><select id='select_input_devices'></select></div>"
            +      "</div>"
            +      "<div class = 'list_right_item'>"
            +         "<div class='options_float_left'>" + mcs_enabled + "</div>"
            +         "<div  class='options_float_right' style='margin-top:0px;'>"
            +            "<input id='alarm_switch_checkbox' type='checkbox' />"
            +         "</div>"
            +      "</div>"
            +      "<div id = 'open_switch'>"
            +         "<div class = 'list_right_item'>"
            +            "<div class='options_float_left'>"+mcs_alarm_sources+"</div>"
            +            "<div class='options_float_right' style='margin-top:13px;'><input type='text' id='alarm_sources' class='input_read_only'  disabled/></div>"
            +         "</div>"
            +         "<div class = 'list_right_item_ex'>"
            +            "<div class='options_float_left'>"+mcs_alarm_action+":</div>"
            +            "<div class='options_float_right'></div>"
            +         "</div>"
            +         "<div class = 'list_right_item_ex'>"
            +            "<div class='options_float_left'>- "+mcs_i_o_alarm+"</div>"
            +            "<div class='options_float_right'><input type='checkbox' id='IoOutputEnable'/></div>"
            +         "</div>"
            +         "<div class = 'list_right_item_ex'>"
            +            "<div class='options_float_left'>- "+mcs_snapshot+"</div>"
            +            "<div class='options_float_right'><input type='checkbox' id='SnapShotEnable' /></div>"
            +         "</div>"
            +         "<div class = 'list_right_item_ex'>"
            +            "<div class='options_float_left'>- "+mcs_record+"</div>"
            +            "<div class='options_float_right'><input type='checkbox' id='RecordEnable' /></div>"
            +         "</div>"
            +     "</div>"
            +     "<div class='options_float_right' style='clear:both'>"
            +        "<button id='Arming_button' class='list_right_button'>"+mcs_alert_on+"</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
            +        "<button id='button_setup' class='list_right_button' >" + mcs_apply + "</button>"
            +     "</div>"
            +"</div>";
        }
        else
        {
           l_me_parent[s_innerHTML] =
            "<div>"
            +"<div>"
            +   "<div class='options_float_left'>"+mcs_name+"</div>"
            +   "<div  class='options_float_right select_block'><select id='select_input_devices'>"
            +      "  </select></div>"
            +"</div>"
            +"<div class='manager_split_bar_2px_2'></div>"
            +"<div>"
            +   "<div class='options_float_left'>" + mcs_enabled + "</div>"
            +   "<div  class='options_float_right'>"
            +       "<input id='alarm_switch_checkbox' type='checkbox' />"
            +   "</div>"
            +"</div>"
            +"<div class='manager_split_bar_2px_2'></div>"
            +"<div id='alarm_info'>"
            +"<div>"
            +   "<div class='options_float_left'>"+mcs_alarm_sources+"</div>"
            +   "<div class='options_float_right'><input type='text' id='alarm_sources' class='input_read_only'  disabled/></div>"
            +"</div>"
            +"<div class='manager_split_bar_2px_2'></div>"
            +"<div>"
            +   "<div class='options_float_left'>"+mcs_alarm_action+":</div>"
            +   "<div class='options_float_right'></div>"
            +"</div>"
            +"<div>"
            +   "<div class='options_float_left'>- "+mcs_i_o_alarm+"</div>"
            +   "<div class='options_float_right'><input type='checkbox' id='IoOutputEnable'/></div>"
            +"</div>"
            +"<div>"
            +   "<div class='options_float_left'>- "+mcs_snapshot+"</div>"
            +   "<div class='options_float_right'><input type='checkbox' id='SnapShotEnable' /></div>"
            +"</div>"
            +"<div>"
            +   "<div class='options_float_left'>- "+mcs_record+"</div>"
            +   "<div class='options_float_right'><input type='checkbox' id='RecordEnable' /></div>"
            +"</div>"
            +"<div class='manager_split_bar_2px_2'></div>"
            +"</div>"
            +"<div class='options_float_right' style='clear:both'>"
            +   "<button id='Arming_button' class='standard_buttons_white'>"+mcs_alert_on+"</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
            +   "<button id='button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>"
            +"</div>" ;
        }
            jQuery(l_me_parent).hide().fadeIn(500);
            l_dom_IoOutputEnable                 = mx("#IoOutputEnable");
            l_dom_SnapShotEnable                 = mx("#SnapShotEnable");
            l_dom_RecordEnable                   = mx("#RecordEnable");
            l_dom_select_input_devices           = mx("#select_input_devices");
            l_dom_button_setup                   = mx("#button_setup");
            l_dom_alarm_sources                  = mx("#alarm_sources");
            l_dom_Arming_button                  = mx("#Arming_button");
            jQuery(l_dom_select_input_devices).tzSelect();


        //Get alarm linkage
        function dev_alarm_action_get_ack(msg,ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.result == "")
            {
                if(msg.actions)
                {
                     var innerhtml;
                     for(var i=0;i<msg.actions.length;i++)
                     {
                        if(msg.actions[i].name=="io_alert")
                        {
                            innerhtml+="<option value='io_alert'>"+mcs_i_o_alarm+"</option>";
                        }
                        else if(msg.actions[i].name=="motion_alert")
                        {
                            innerhtml+="<option value='motion_alert'>"+mcs_motion+"</option>";
                        }
                        else if(msg.actions[i].name=="pir")
                        {
                            innerhtml+="<option value='pir'>"+mcs_pir+"</option>";
                        }else
                        {
                            innerhtml+="<option value='"+msg.actions[i].name+"'>"+msg.actions[i].name+"</option>";
                        }
                     }
                     jQuery(l_dom_select_input_devices).html(innerhtml);
                     jQuery(l_dom_select_input_devices).tzSelect();

                     ccm_AlertAction_Info(msg.actions[0]);
                     l_dom_select_input_devices.change_value=function(obj)
                     {
                       jQuery(l_dom_select_input_devices).tzSelect();
                       for(var i=0;i<msg.actions.length;i++)
                       {
                          if(l_dom_select_input_devices.value==msg.actions[i].name)
                          {
                              ccm_AlertAction_Info(msg.actions[i]);
                          }
                       }
                     }
                }
                if(msg.enable)
                {
                     l_dom_Arming_button[s_innerHTML]=mcs_alert_off;
                }else
                {
                     l_dom_Arming_button[s_innerHTML]=mcs_alert_on;
                }
            }
            else
            {
                 log("error:ctrl's obj.type is not exist in class_options_alarm_linkage.");
            }
        }
        function ccm_AlertAction_Info(obj)
        {
                l_dom_Action=obj;
                 if(l_dom_Action.enable)
                     {
                            jQuery("#alarm_switch_checkbox").iButton("toggle",true);
                            jQuery("#alarm_info").fadeIn();
                     }else
                     {
                            jQuery("#alarm_switch_checkbox").iButton("toggle",false);
                            jQuery("#alarm_info").fadeOut();
                     }
                     if(l_dom_Action.io_out_enable)
                     {
                            jQuery(l_dom_IoOutputEnable).iButton("toggle", true);
                     }else
                     {
                            jQuery(l_dom_IoOutputEnable).iButton("toggle", false);
                     }
                     if(l_dom_Action.snapshot_enable)
                     {
                            jQuery(l_dom_SnapShotEnable).iButton("toggle",true);

                     }else
                     {
                            jQuery(l_dom_SnapShotEnable).iButton("toggle",false);

                     }
                     if(l_dom_Action.record_enable)
                     {
                            jQuery(l_dom_RecordEnable).iButton("toggle",true);
                            //jQuery("#PreRecordTime_content").fadeIn();
                     }else
                     {
                            jQuery(l_dom_RecordEnable).iButton("toggle",false);
                            //jQuery("#PreRecordTime_content").fadeOut();
                     }
                     //PreRecordTime.value    = l_dom_Action.pre_record_time;
               if(l_dom_Action.srcs)
               {
                var innerhtml="";
                  for(var i=0;i<l_dom_Action.srcs.length;i++)
                  {
                       if(!l_dom_Action.srcs[i].devs)continue;
                       for(j=0;j<l_dom_Action.srcs[i].devs.length;j++)
                       {
                         if(l_dom_Action.srcs[i].devs[j]=="motion")
                            innerhtml+=mcs_motion;
                         else if(l_dom_Action.srcs[i].devs[j]=="io")
                            innerhtml+=mcs_i_o_alarm;
                         else if(l_dom_Action.srcs[i].devs[j]=="pir")
                            innerhtml+=mcs_pir;

                         if(l_dom_Action.srcs[i].devs[j+1])
                              innerhtml+="/";
                       }
                       if(l_dom_Action.srcs[i+1])
                         innerhtml+="  |  ";
                  }
                  l_dom_alarm_sources.value=innerhtml;
               }
        }
        //Arm & disarm the system to respond
        function dev_alarm_action_set_ack(msg)
        {
             if(msg.result =="")
             {
                  if(g_domain_oems_vimtag)
                  {
                     msg_tips({msg:mcs_set_successfully, type:"warning", timeout:3000});
                  }
                  else
                  {
                   g_system_prompt_box(mcs_set_successfully, 240, -200);
                }
                ms.send_msg("alarm_action_get",{sn:g_select_device_ipc},null,dev_alarm_action_get_ack);
             }
             else if(msg.result == "permission.denied")
             {
                 if(g_domain_oems_vimtag)
                 {
                     msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
                 }
             }
        }
        function remove_event()
        {
             l_dom_Arming_button.onclick = "";
             l_dom_button_setup.onclick = "";
        }
        function add_event()
        {
           jQuery(l_dom_IoOutputEnable).iButton({
               labelOn:"On",
               labelOff:"Off"
           });
           jQuery(l_dom_SnapShotEnable).iButton({
               labelOn:"On",
               labelOff:"Off",
               change:function(){
                  if(l_dom_SnapShotEnable.checked)
                  {
                     jQuery("#SnapShotInterval_content").fadeIn();
                  }else
                  {
                     jQuery("#SnapShotInterval_content").fadeOut();
                  }
               }
           });
           jQuery(l_dom_RecordEnable).iButton({
               labelOn:"On",
               labelOff:"Off",
               change:function(){
                  if(l_dom_RecordEnable.checked)
                  {
                     //jQuery("#PreRecordTime_content").fadeIn();
                  }
                  else
                  {
                     //jQuery("#PreRecordTime_content").fadeOut();
                  }
               }
           });
           jQuery("#alarm_switch_checkbox").iButton({
               labelOn:"On",
               labelOff:"Off",
               change:function(){
                 if(mx("#alarm_switch_checkbox").checked)
                 {
                    jQuery("#alarm_info").fadeIn();
                 }
                 else
                 {
                    jQuery("#alarm_info").fadeOut();
                 }
               }
           });
           //Arm & Disarm key events
           l_dom_Arming_button.onclick=function()
           {  //Arm
              if(l_dom_Arming_button[s_innerHTML] == mcs_alert_on)
              {
                   system_pop_confirm_box({str:mcs_prompt_alert_on, callback_func:function(){
                      ms.send_msg("alarm_action_set",{sn:g_select_device_ipc,enable:1},null,dev_alarm_action_set_ack);
                   }});
              }
              else//Disarm
              {
                   system_pop_confirm_box({str:mcs_prompt_alert_off, callback_func:function(){
                      ms.send_msg("alarm_action_set",{sn:g_select_device_ipc,enable:0},null,dev_alarm_action_set_ack);
                   }});
              }
           }
           //Application of key events
           l_dom_button_setup.onclick=function()
           {
              var Actions_one = new Object();
              var Arming_Enable;
              Actions_one.token=l_dom_Action.token;
              Actions_one.enable=mx("#alarm_switch_checkbox").checked?1:0;
              Actions_one.name=l_dom_Action.name;
              Actions_one.srcs=l_dom_Action.srcs;
              Actions_one.io_out_enable=l_dom_IoOutputEnable.checked?1:0;
              Actions_one.snapshot_enable=l_dom_SnapShotEnable.checked?1:0;
              Actions_one.record_enable=l_dom_RecordEnable.checked?1:0;
              Actions_one.snapshot_interval=l_dom_Action.snapshot_interval;
              //Actions_one.pre_record_time=PreRecordTime.value;
              if(l_dom_Arming_button[s_innerHTML] == mcs_alert_on)
              {
                   Arming_Enable=0;
              }
              else
              {
                   Arming_Enable=1;
              }
              ms.send_msg("alarm_action_set",{sn:g_select_device_ipc,enable:Arming_Enable,actions:Actions_one},null,dev_alarm_action_set_ack);
           }
        }
        l_me.ctrl =function(obj)
        {
            switch(obj.type)
            {
                case "destroy":
                    {
                          remove_event();
                        l_me_parent.innerHTML = "";
                        l_me_parent = null;
                        break;
                    }
            }
        }
        add_event();
        if(g_select_device_ipc)
          ms.send_msg("alarm_action_get",{sn:g_select_device_ipc},null,dev_alarm_action_get_ack);
    }

    //Set the scheduled recording
    function class_options_record_setting(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_dom_checkbox_schedule,
            l_dom_schedule_record_content,
            l_dom_radio_H7_24,
            l_dom_radio_schedule,
            l_dom_radio_schedule_content,
            l_dom_button_setup,
            l_dom_input_begin_time1,l_dom_input_end_time1,l_dom_input_begin_time2,l_dom_input_end_time2,l_dom_input_begin_time3,l_dom_input_end_time3,l_dom_input_begin_time4,l_dom_input_end_time4,
            l_dom_schedule_record1,l_dom_schedule_record2,l_dom_schedule_record3,l_dom_schedule_record4,
            l_dom_schedule_record1_content,l_dom_schedule_record2_content,l_dom_schedule_record3_content,l_dom_schedule_record4_content,
            l_dom_week_checkbox1,l_dom_week_checkbox2,l_dom_week_checkbox3,l_dom_week_checkbox4,
            l_week_array=["0x1","0x2","0x4","0x8","0x10","0x20","0x40"];

            if(g_domain_oems_vimtag)
            {
            	  l_me_parent[s_innerHTML] =
            	  "<div id = 'plan_info' class = 'list_right_box'>"
                +      "<div class = 'list_right_item'>"
                +         "<div class='options_float_left'>" + mcs_enabled + "</div>"
		            +         "<div id='checkbox_schedule_div' class='options_float_right' style='margin-top:0px;'><input type='checkbox' id='checkbox_schedule'/></div>"
                +      "</div>"
                +      "<div id = 'schedule_record_content'>"
                +         "<div class = 'list_right_item'>"
                +            "<div class='options_float_left'>" + mcs_7x24_hours + "</div>"
		            +            "<div class='options_float_right' id='div_radio_H7_24' style='margin-top:15px;'><input id='radio_H7_24' type='radio' name='record_type' ></input></div>"
                +         "</div>"
                +         "<div class = 'list_right_item'>"
                +            "<div class='options_float_left'>" + mcs_scheduled_recording + "</div>"
		            +            "<div class='options_float_right' id='div_radio_schedule' style='margin-top:15px;'><input id='radio_schedule' type='radio' name='record_type'></input></div>"
                +         "</div>"
                +         "<div id='radio_schedule_content'>"
                +               "<div class = 'list_right_item_ex'>"
                +                  "<div class='options_float_left'>"+mcs_scheduled_one+":</div>"
		            +                  "<div class='options_float_right' style='margin-top:0px;'>"
		            +                     "<input id='schedule_record1' type='checkbox'/>"
		            +                  "</div>"
		            +               "</div>"	            
                +               "<div id='schedule_record1_content'>"
                +                  "<div class = 'list_right_item_ex'>"
                +                     "<span class = 'attribute_key_text'>"+mcs_begin_time+"</span>"
                +                     "<input id='input_begin_time1' type = 'text' value = '00:00' class = 'time_input'>"
                +                  "</div>"
                +                  "<div class = 'list_right_item_ex'>"
                +                     "<span class = 'attribute_key_text'>"+mcs_end_time+"</span>"
                +                     "<input id='input_end_time1' type = 'text' value = '00:00' class = 'time_input'>"
                +                  "</div>"
                +                   "<div class = 'list_right_item_ex'>"
                +                      "<span class = 'attribute_key_text'>"+mcs_week+"</span>"
                +                   "</div>"
                +                   "<div class = 'list_right_item'>"
                +                       "<div class='vimtag_week_checkbox_div1' style='margin-left:0px;'><input type='checkbox' class='week_checkbox_class1'  value='0'></input>" + mcs_sun+"</div>"
		            +                       "<div class='vimtag_week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='1'></input>" + mcs_mon+"</div>"
		            +                       "<div class='vimtag_week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='2'></input>" + mcs_tue  +"</div>"
		            +                       "<div class='vimtag_week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='3'></input>" + mcs_wed  +"</div>"
		            +                       "<div class='vimtag_week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='4'></input>" + mcs_thu  +"</div>"
		            +                       "<div class='vimtag_week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='5'></input>" + mcs_fri +"</div>"
		            +                       "<div class='vimtag_week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='6'></input>" + mcs_sat  +"</div>"
		            +                       "<div id='week_checkbox1_div' style='float:left;margin-left:10px;'><input type='checkbox' id='week_checkbox1'></input>" + mcs_all+"</div>"
                +                   "</div>"
                +                "</div>"
                +                   "<div class = 'list_right_item_ex'>"
                +                      "<div class='options_float_left'>"+mcs_scheduled_two+":</div>"
		            +                      "<div class='options_float_right' style='margin-top:0px;'><input id='schedule_record2' type='checkbox' /></div>"
		            +                   "</div>"
                +                   "<div id='schedule_record2_content'>"
                +                      "<div class = 'list_right_item_ex'>"
                +                         "<span class = 'attribute_key_text'>"+mcs_begin_time+"</span>"
                +                         "<input id='input_begin_time2' type='text' value='00:00' class='time_input'>"
                +                      "</div>"
                +                      "<div class = 'list_right_item_ex'>"
                +                         "<span class = 'attribute_key_text'>"+mcs_end_time+"</span>"
                +                         "<input id='input_end_time2' type='text' value='00:00' class='time_input'>"
                +                      "</div>"
                +                      "<div class = 'list_right_item_ex'>"
                +                         "<span class = 'attribute_key_text'>"+mcs_week+"</span>"
                +                      "</div>"
                +                      "<div class = 'list_right_item'>"
                +                         "<div class='vimtag_week_checkbox_div2' style='margin-left:0px;'><input type='checkbox' class='week_checkbox_class2' value='0'></input>" + mcs_sun+"</div>"
		            +                         "<div class='vimtag_week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='1'></input>" + mcs_mon+"</div>"
		            +                         "<div class='vimtag_week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='2'></input>" + mcs_tue  +"</div>"
		            +                         "<div class='vimtag_week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='3'></input>" + mcs_wed +"</div>"
		            +                         "<div class='vimtag_week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='4'></input>" + mcs_thu +"</div>"
		            +                         "<div class='vimtag_week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='5'></input>" + mcs_fri  +"</div>"
		            +                         "<div class='vimtag_week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='6'></input>" + mcs_sat +"</div>"
		            +                         "<div id='week_checkbox2_div' style='float:left;margin-left:10px;'><input type='checkbox' id='week_checkbox2'></input>" + mcs_all+"</div>"
                +                      "</div>"
                +                   "</div>"
                +                      "<div class = 'list_right_item_ex'>"
                +                        "<div class='options_float_left'>"+mcs_scheduled_three+":</div>"
		            +                        "<div class='options_float_right' style='margin-top:0px;'><input id='schedule_record3' type='checkbox' /></div>"
		            +                      "</div>"
                +                   "<div id='schedule_record3_content'>"
                +                      "<div class = 'list_right_item_ex'>"
                +                         "<span class = 'attribute_key_text'>"+mcs_begin_time+"</span>"
                +                         "<input id='input_begin_time3' type = 'text' value = '00:00' class = 'time_input'>"
                +                      "</div>"
                +                      "<div class = 'list_right_item_ex'>"
                +                         "<span class = 'attribute_key_text'>"+mcs_end_time+"</span>"
                +                         "<input id='input_end_time3' type = 'text' value = '00:00' class = 'time_input'>"
                +                      "</div>"
                +                      "<div class = 'list_right_item_ex'>"
                +                         "<span class = 'attribute_key_text'>"+mcs_week+"</span>"
                +                      "</div>"
                +                      "<div class = 'list_right_item'>"
                +                         "<div class='vimtag_week_checkbox_div3' style='margin-left:0px;'><input type='checkbox' class='week_checkbox_class3' value='0'></input>" + mcs_sun+"</div>"
		            +                         "<div class='vimtag_week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='1'></input>" + mcs_mon+"</div>"
		            +                         "<div class='vimtag_week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='2'></input>" + mcs_tue  +"</div>"
		            +                         "<div class='vimtag_week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='3'></input>" + mcs_wed  +"</div>"
		            +                         "<div class='vimtag_week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='4'></input>" + mcs_thu  +"</div>"
		            +                         "<div class='vimtag_week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='5'></input>" + mcs_fri  +"</div>"
		            +                         "<div class='vimtag_week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='6'></input>" + mcs_sat +"</div>"
		            +                         "<div id='week_checkbox3_div' style='float:left;margin-left:10px;'><input type='checkbox'  id='week_checkbox3'></input>" + mcs_all+"</div>"
                +                      "</div>"
                +                   "</div>"
                +                      "<div class = 'list_right_item_ex'>"
                +                         "<div class='options_float_left'>"+mcs_scheduled_four+":</div>"
		            +                         "<div class='options_float_right' style='margin-top:0px;'><input id='schedule_record4' type='checkbox' /></div>"
		            +                      "</div>"
                +                      "<div id='schedule_record4_content'>"
                +                         "<div class = 'list_right_item_ex'>"
                +                            "<span class = 'attribute_key_text'>"+mcs_begin_time+"</span>"
                +                            "<input id='input_begin_time4' type = 'text' value = '00:00' class = 'time_input'>"
                +                         "</div>"
                +                         "<div class = 'list_right_item_ex'>"
                +                            "<span class = 'attribute_key_text'>"+mcs_end_time+"</span>"
                +                            "<input id='input_end_time4' type = 'text' value = '00:00' class = 'time_input'>"
                +                         "</div>"
                +                         "<div class = 'list_right_item_ex'>"
                +                            "<span class = 'attribute_key_text'>"+mcs_week+"</span>"
                +                         "</div>"
                +                         "<div class = 'list_right_item'>"
                +                            "<div class='vimtag_week_checkbox_div4' style='margin-left:0px;'><input type='checkbox' class='week_checkbox_class4' value='0'></input>" + mcs_sun+"</div>"
		            +                            "<div class='vimtag_week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='1'></input>" + mcs_mon+"</div>"
		            +                            "<div class='vimtag_week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='2'></input>" + mcs_tue +"</div>"
		            +                            "<div class='vimtag_week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='3'></input>" + mcs_wed +"</div>"
		            +                            "<div class='vimtag_week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='4'></input>" + mcs_thu  +"</div>"
		            +                            "<div class='vimtag_week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='5'></input>" + mcs_fri  +"</div>"
		            +                            "<div class='vimtag_week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='6'></input>" + mcs_sat  +"</div>"
		            +                            "<div id='week_checkbox4_div' style='float:left;margin-left:10px;' ><input type='checkbox'  id='week_checkbox4'></input>" + mcs_all+"</div>"
                +                         "</div>"
                +                      "</div>"
                +                   "</div>"
                +                "</div>"
                +                "<input class = 'list_right_button' id='button_setup' type = 'button' value = "+mcs_action_apply+">"
                +"</div>";
            }
            else
            {
		            l_me_parent[s_innerHTML] =
		            "<div>"
		            +   "<div class='options_float_left'>" + mcs_enabled + "</div>"
		            +   "<div id='checkbox_schedule_div' class='options_float_right'><input type='checkbox' id='checkbox_schedule'/></div>"
		            +"</div>"
		            +"<div class='manager_split_bar_2px_2'></div>"
		            +"<div id='schedule_record_content'>"
		            +   "<div>"
		            +       "<div class='options_float_left'>" + mcs_7x24_hours + "</div>"
		            +       "<div class='options_float_right' id='div_radio_H7_24'><input id='radio_H7_24' type='radio' name='record_type' ></input></div>"
		            +   "</div>"
		            +   "<div class='manager_split_bar_2px_2'></div>"
		            +   "<div>"
		            +       "<div class='options_float_left'>" + mcs_scheduled_recording + "</div>"
		            +       "<div class='options_float_right' id='div_radio_schedule'><input id='radio_schedule' type='radio' name='record_type'></input></div>"
		            +   "</div>"
		            +   "<div class='manager_split_bar_2px_2'></div>"
		            +   "<div id='radio_schedule_content'>"
		            +      "<div >"
		            +          "<div>"
		            +               "<div class='options_float_left'>"+mcs_scheduled_one+":</div>"
		            +               "<div class='options_float_right'>"
		            +                   "<input id='schedule_record1' type='checkbox'/>"
		            +               "</div>"
		            +          "</div>"
		            +          "<div id='schedule_record1_content'>"
		            +          "<div>"
		            +             "<div class='options_float_left'>" + mcs_begin_time + "</div>"
		            +             "<div class='options_float_right' ><input id='input_begin_time1' class='standard_inputs manager_standard_inputs' value='00:00' type='text' style='width:100px'></div>"
		            +          "</div>"
		            +          "<div>"
		            +              "<div class='options_float_left'>" + mcs_end_time+ "</div>"
		            +              "<div class='options_float_right'><input id='input_end_time1' class='standard_inputs manager_standard_inputs' value='00:00' type='text' style='width:100px'></div>"
		            +          "</div>"

		            +          "<div>"
		            +              "<div class='options_float_left'>" +mcs_week+ " :</div>"
		            +               "<div class='options_float_right'></div>"
		            +         "</div>"
		            +         "<div>"
		            +             "<div class='options_float_left'>"
		            +              "<div class='week_checkbox_div1' style='margin-left:0px;'><input type='checkbox' class='week_checkbox_class1'  value='0'></input>" + mcs_sun+"</div>"
		            +              "<div class='week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='1'></input>" + mcs_mon+"</div>"
		            +              "<div class='week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='2'></input>" + mcs_tue  +"</div>"
		            +              "<div class='week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='3'></input>" + mcs_wed  +"</div>"
		            +              "<div class='week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='4'></input>" + mcs_thu  +"</div>"
		            +              "<div class='week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='5'></input>" + mcs_fri +"</div>"
		            +              "<div class='week_checkbox_div1'><input type='checkbox' class='week_checkbox_class1' value='6'></input>" + mcs_sat  +"</div>"
		            +              "<div id='week_checkbox1_div' style='float:left;margin-left:10px;'><input type='checkbox' id='week_checkbox1'></input>" + mcs_all+"</div>"
		            +             "</div>"
		            +         "</div>"
		            +         "<div class='manager_split_bar_2px_2'></div>"
		            +      "</div>"
		            +   "</div>"
		            +   "<div >"
		            +      "<div>"
		            +           "<div class='options_float_left'>"+mcs_scheduled_two+":</div>"
		            +           "<div class='options_float_right' ><input id='schedule_record2' type='checkbox' /></div>"
		            +      "</div>"
		            +      "<div id='schedule_record2_content'>"
		            +      "<div>"
		            +           "<div class='options_float_left'>" + mcs_begin_time + "</div>"
		            +           "<div class='options_float_right' ><input id='input_begin_time2' class='standard_inputs manager_standard_inputs' value='00:00' type='text' style='width:100px'></div>"
		            +      "</div>"
		            +      "<div>"
		            +           "<div class='options_float_left'>" + mcs_end_time + "</div>"
		            +           "<div class='options_float_right'><input id='input_end_time2' class='standard_inputs manager_standard_inputs' value='00:00' type='text' style='width:100px'></div>"
		            +      "</div>"
		            +      "<div>"
		            +           "<div class='options_float_left'>" +mcs_week+ " :</div>"
		            +           "<div class='options_float_right'></div>"
		            +      "</div>"
		            +      "<div>"
		            +           "<div class='options_float_left'>"
		            +           "<div class='week_checkbox_div2' style='margin-left:0px;'><input type='checkbox' class='week_checkbox_class2' value='0'></input>" + mcs_sun+"</div>"
		            +           "<div class='week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='1'></input>" + mcs_mon+"</div>"
		            +           "<div class='week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='2'></input>" + mcs_tue  +"</div>"
		            +           "<div class='week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='3'></input>" + mcs_wed +"</div>"
		            +           "<div class='week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='4'></input>" + mcs_thu +"</div>"
		            +           "<div class='week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='5'></input>" + mcs_fri  +"</div>"
		            +           "<div class='week_checkbox_div2'><input type='checkbox' class='week_checkbox_class2' value='6'></input>" + mcs_sat +"</div>"
		            +           " <div id='week_checkbox2_div' style='float:left;margin-left:10px;'><input type='checkbox' id='week_checkbox2'></input>" + mcs_all+"</div>"
		            +           "</div>"
		            +      "</div>"
		            +      "<div class='manager_split_bar_2px_2'></div>"
		            +      "</div>"
		            +   "</div>"
		            +   "<div >"
		            +      "<div>"
		            +           "<div class='options_float_left'>"+mcs_scheduled_three+":</div>"
		            +           "<div class='options_float_right' ><input id='schedule_record3' type='checkbox' /></div>"
		            +      "</div>"
		            +      "<div id='schedule_record3_content'>"
		            +      "<div>"
		            +           "<div class='options_float_left'>" + mcs_begin_time + "</div>"
		            +           "<div class='options_float_right'><input id='input_begin_time3' class='standard_inputs manager_standard_inputs' value='00:00' type='text' style='width:100px'></div>"
		            +      "</div>"
		            +      "<div>"
		            +           "<div class='options_float_left'>" + mcs_end_time + "</div>"
		            +           "<div class='options_float_right'><input id='input_end_time3' class='standard_inputs manager_standard_inputs' value='00:00' type='text' style='width:100px'></div>"
		            +      "</div>"
		            +      "<div>"
		            +           "<div class='options_float_left'>" +mcs_week+ " :</div>"
		            +           "<div class='options_float_right'></div>"
		            +      "</div>"
		            +      "<div>"
		            +           "<div class='options_float_left'>"
		            +           "<div class='week_checkbox_div3' style='margin-left:0px;'><input type='checkbox' class='week_checkbox_class3' value='0'></input>" + mcs_sun+"</div>"
		            +           "<div class='week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='1'></input>" + mcs_mon+"</div>"
		            +           "<div class='week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='2'></input>" + mcs_tue  +"</div>"
		            +           "<div class='week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='3'></input>" + mcs_wed  +"</div>"
		            +           "<div class='week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='4'></input>" + mcs_thu  +"</div>"
		            +           "<div class='week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='5'></input>" + mcs_fri  +"</div>"
		            +           "<div class='week_checkbox_div3'><input type='checkbox' class='week_checkbox_class3' value='6'></input>" + mcs_sat +"</div>"
		            +           "<div id='week_checkbox3_div' style='float:left;margin-left:10px;'><input type='checkbox'  id='week_checkbox3'></input>" + mcs_all+"</div>"
		            +           "</div>"
		            +      "</div>"
		            +      "<div class='manager_split_bar_2px_2'></div>"
		            +      "</div>"
		            +   "</div>"
		            +   "<div >"
		            +      "<div>"
		            +           "<div class='options_float_left'>"+mcs_scheduled_four+":</div>"
		            +           "<div class='options_float_right' ><input id='schedule_record4' type='checkbox' /></div>"
		            +      "</div>"
		            +      "<div id='schedule_record4_content'>"
		            +      "<div>"
		            +           "<div class='options_float_left'>" + mcs_begin_time + "</div>"
		            +           "<div class='options_float_right'><input id='input_begin_time4' class='standard_inputs manager_standard_inputs' value='00:00' type='text' style='width:100px'></div>"
		            +      "</div>"
		            +      "<div>"
		            +           "<div class='options_float_left'>" + mcs_end_time + "</div>"
		            +           "<div class='options_float_right'><input id='input_end_time4' class='standard_inputs manager_standard_inputs' value='00:00' type='text' style='width:100px'></div>"
		            +      "</div>"
		            +      "<div>"
		            +           "<div class='options_float_left'>" +mcs_week+ " :</div>"
		            +           "<div class='options_float_right'></div>"
		            +      "</div>"
		            +      "<div>"
		            +           "<div class='options_float_left'>"
		            +           "<div class='week_checkbox_div4' style='margin-left:0px;'><input type='checkbox' class='week_checkbox_class4' value='0'></input>" + mcs_sun+"</div>"
		            +           "<div class='week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='1'></input>" + mcs_mon+"</div>"
		            +           "<div class='week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='2'></input>" + mcs_tue +"</div>"
		            +           "<div class='week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='3'></input>" + mcs_wed +"</div>"
		            +           "<div class='week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='4'></input>" + mcs_thu  +"</div>"
		            +           "<div class='week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='5'></input>" + mcs_fri  +"</div>"
		            +           "<div class='week_checkbox_div4'><input type='checkbox' class='week_checkbox_class4' value='6'></input>" + mcs_sat  +"</div>"
		            +           "<div id='week_checkbox4_div' style='float:left;margin-left:10px;' ><input type='checkbox'  id='week_checkbox4'></input>" + mcs_all+"</div>"
		            +           "</div>"
		            +      "</div>"
		            +      "<div class='manager_split_bar_2px_2'></div>"
		            +      "</div>"
		            +   "</div>"
		            +"</div>"
		            +"</div>"
		            +"<div class='options_float_right' style='clear:both'><button id='button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>"
		            +"</div>";
            }
            jQuery(l_me_parent).hide().fadeIn(500);
            l_dom_checkbox_schedule         = mx("#checkbox_schedule");
            l_dom_schedule_record_content   = mx("#schedule_record_content");
            l_dom_radio_H7_24               = mx("#radio_H7_24");
            l_dom_radio_schedule            = mx("#radio_schedule");

            l_dom_input_begin_time1         = mx("#input_begin_time1");
            l_dom_input_end_time1           = mx("#input_end_time1");
            l_dom_input_begin_time2         = mx("#input_begin_time2");
            l_dom_input_end_time2           = mx("#input_end_time2");
            l_dom_input_begin_time3         = mx("#input_begin_time3");
            l_dom_input_end_time3           = mx("#input_end_time3");
            l_dom_input_begin_time4         = mx("#input_begin_time4");
            l_dom_input_end_time4           = mx("#input_end_time4");

            l_dom_schedule_record1          = mx("#schedule_record1");
            l_dom_schedule_record2          = mx("#schedule_record2");
            l_dom_schedule_record3          = mx("#schedule_record3");
            l_dom_schedule_record4          = mx("#schedule_record4");

            l_dom_week_checkbox1            = mx("#week_checkbox1");
            l_dom_week_checkbox2            = mx("#week_checkbox2");
            l_dom_week_checkbox3            = mx("#week_checkbox3");
            l_dom_week_checkbox4            = mx("#week_checkbox4");

            l_dom_schedule_record1_content  = mx("#schedule_record1_content");
            l_dom_schedule_record2_content  = mx("#schedule_record2_content");
            l_dom_schedule_record3_content  = mx("#schedule_record3_content");
            l_dom_schedule_record4_content  = mx("#schedule_record4_content");

            l_dom_radio_schedule_content    = mx("#radio_schedule_content");
            week_checkbox = mx("#week_checkbox");
            l_dom_button_setup = mx("#button_setup");
            jQuery(l_dom_radio_schedule_content).hide();
            jQuery(l_dom_schedule_record1_content).hide();
            jQuery(l_dom_schedule_record2_content).hide();
            jQuery(l_dom_schedule_record3_content).hide();
            jQuery(l_dom_schedule_record4_content).hide();
            jQuery("#week_checkbox1_div").jNice({callback:checkbox_checkbox1_callback});
            jQuery("#week_checkbox2_div").jNice({callback:checkbox_checkbox2_callback});
            jQuery("#week_checkbox3_div").jNice({callback:checkbox_checkbox3_callback});
            jQuery("#week_checkbox4_div").jNice({callback:checkbox_checkbox4_callback});
            jQuery(".week_checkbox_div1").jNice();
            jQuery(".week_checkbox_div2").jNice();
            jQuery(".week_checkbox_div3").jNice();
            jQuery(".week_checkbox_div4").jNice();

        function checkbox_checkbox1_callback()
        {
            week_checkbox_class = mx(".week_checkbox_class1");
            if(l_dom_week_checkbox1.checked)
            {
                for(i=0;i<week_checkbox_class.length;i++)
                {
                      week_checkbox_class[i].checked=true;
                }
            }
            else
            {
                for(i=0;i<week_checkbox_class.length;i++)
                {
                      week_checkbox_class[i].checked=false;
                }
            }
            jQuery(".week_checkbox_div1").jNice();
        }
        function checkbox_checkbox2_callback()
        {
              week_checkbox_class = mx(".week_checkbox_class2");
              if(l_dom_week_checkbox2.checked)
              {
                 for(i=0;i<week_checkbox_class.length;i++)
                 {
                      week_checkbox_class[i].checked=true;
                 }
              }
              else
              {
                for(i=0;i<week_checkbox_class.length;i++)
                {
                      week_checkbox_class[i].checked=false;
                }
              }
             jQuery(".week_checkbox_div2").jNice();
        }
        function checkbox_checkbox3_callback()
        {
              week_checkbox_class = mx(".week_checkbox_class3");
              if(l_dom_week_checkbox3.checked)
              {
                for(i=0;i<week_checkbox_class.length;i++)
                {
                      week_checkbox_class[i].checked=true;
                }
              }
              else
              {
                for(i=0;i<week_checkbox_class.length;i++)
                {
                      week_checkbox_class[i].checked=false;
                }
              }
             jQuery(".week_checkbox_div3").jNice();
        }
        function checkbox_checkbox4_callback()
        {
              week_checkbox_class = mx(".week_checkbox_class4");
              if(l_dom_week_checkbox4.checked)
              {
                for(i=0;i<week_checkbox_class.length;i++)
                {
                      week_checkbox_class[i].checked=true;
                }
              }
              else
              {
                for(i=0;i<week_checkbox_class.length;i++)
                {
                      week_checkbox_class[i].checked=false;
                }
              }
             jQuery(".week_checkbox_div4").jNice();
        }
        //Program video capture device return
        function dev_record_get_ack(msg,ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.result == "")
            {
                if(msg.enable)
                {
                   jQuery(l_dom_checkbox_schedule).iButton("toggle",true);
                }else
                {
                   jQuery(l_dom_checkbox_schedule).iButton("toggle",false);
                }
                if(msg.full_time)
                {
                    jQuery(l_dom_radio_H7_24).click();
                    jQuery(l_dom_radio_schedule_content).hide();
                }
                else if(msg.times)
                {
                    jQuery(l_dom_radio_schedule).click();
                    jQuery(l_dom_radio_schedule_content).show();
                    for(i=0;i<msg.times.length;i++)
                    {
                       if(msg.times[i].wday)
                       {
                            jQuery("#schedule_record"+(i+1)).iButton("toggle",true);
                            week_checkbox_class=mx(".week_checkbox_class"+(i+1));

                            mx("#input_begin_time"+(i+1)).value=input_time_change({type:"int",data:msg.times[i].start});
                            mx("#input_end_time"+(i+1)).value=input_time_change({type:"int",data:msg.times[i].end});
                            for(j=0;j<l_week_array.length;j++)
                            {
                               if(msg.times[i].wday & l_week_array[j])
                                {
                                   for(k=0;k<week_checkbox_class.length;k++)
                                   {
                                      if(week_checkbox_class[k].value==j)
                                      {
                                          week_checkbox_class[k].checked=true;
                                      }
                                   }
                                }
                            }
                       }
                       else
                       {
                           jQuery("#schedule_record"+(i+1)).iButton("toggle",false);
                       }
                    }
                }
            }
            jQuery("#manager_page").mCustomScrollbar("update");
            jQuery(".week_checkbox_div1").jNice();
            jQuery(".week_checkbox_div2").jNice();
            jQuery(".week_checkbox_div3").jNice();
            jQuery(".week_checkbox_div4").jNice();
        }
        function input_time_change(obj)
        {
           if(obj.type=="string")
           {
             return  obj.data.substring(obj.data.indexOf(":"),0)*60*60+obj.data.substring(obj.data.indexOf(":")+1,obj.data.length)*60;
           }
           else if(obj.type=="int")
           {
              var hour,Minute;
              hour=parseInt(obj.data/3600);
              Minute=(obj.data%3600)/60;
              if(hour<10)
              {
                hour="0"+hour;
              }
              if(Minute<10)
              {
                Minute="0"+Minute;
              }
              return hour+":"+Minute;
           }
        }
        function remove_event()
        {
        	 l_dom_radio_H7_24.onclick = "";
        	 l_dom_radio_schedule.onclick = "";
        	 l_dom_button_setup.onclick = "";
        }
        function time_check()
        {
            time_Standard=/^([0-1]?[0-9]|2[0-3]):([0-5][0-9])$/;
            if( l_dom_schedule_record1.checked )
            {
                if(!time_Standard.test(l_dom_input_begin_time1.value))
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_format_error + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_begin_time1, color:"red", position:"left", disappear_way:"time", str:mcs_format_error + "."});
                   }
                   return false;
                }
                if(!time_Standard.test(l_dom_input_end_time1.value))
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_format_error + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_end_time1, color:"red", position:"left", disappear_way:"time", str:mcs_format_error + "."});
                   }
                   return false;
                }
                if(l_dom_input_begin_time1.value >= l_dom_input_end_time1.value)
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_end_time_should_lt_begin + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_end_time1, color:"red", position:"left", disappear_way:"time", str:mcs_end_time_should_lt_begin + "."});
                   }
                   return false;
                }
            }
            if( l_dom_schedule_record2.checked )
            {
                if(!time_Standard.test(l_dom_input_begin_time2.value))
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_format_error + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_begin_time2, color:"red", position:"left", disappear_way:"time", str:mcs_format_error + "."});
                   }
                   return false;
                }
                if(!time_Standard.test(l_dom_input_end_time2.value))
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_format_error + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_end_time2, color:"red", position:"left", disappear_way:"time", str:mcs_format_error + "."});
                   }
                   return false;
                }
                if(l_dom_input_begin_time2.value >= l_dom_input_end_time2.value)
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_end_time_should_lt_begin + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_end_time2, color:"red", position:"left", disappear_way:"time", str:mcs_end_time_should_lt_begin + "."});
                   }
                   return false;
                }
            }
            if( l_dom_schedule_record3.checked )
            {
                if(!time_Standard.test(l_dom_input_begin_time3.value))
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_format_error + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_begin_time3, color:"red", position:"left", disappear_way:"time", str:mcs_format_error + "."});
                   }
                   return false;
                }
                if(!time_Standard.test(l_dom_input_end_time3.value))
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_format_error + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_end_time3, color:"red", position:"left", disappear_way:"time", str:mcs_format_error + "."});
                   }
                   return false;
                }
                if(l_dom_input_begin_time3.value >= l_dom_input_end_time3.value)
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_end_time_should_lt_begin + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_end_time3, color:"red", position:"left", disappear_way:"time", str:mcs_end_time_should_lt_begin + "."});
                   }
                   return false;
                }
            }
            if( l_dom_schedule_record4.checked )
            {
                if(!time_Standard.test(l_dom_input_begin_time4.value))
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_format_error + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_begin_time4, color:"red", position:"left", disappear_way:"time", str:mcs_format_error + "."});
                   }
                   return false;
                }
                if(!time_Standard.test(l_dom_input_end_time4.value))
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_format_error + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_end_time4, color:"red", position:"left", disappear_way:"time", str:mcs_format_error + "."});
                   }
                   return false;
                }
                if(l_dom_input_begin_time4.value >= l_dom_input_end_time4.value)
                {
                	 if(g_domain_oems_vimtag)
                	 {
                	 	  msg_tips({msg:mcs_end_time_should_lt_begin + ".", type:"error", timeout:3000});
                	 }
                	 else
                	 {
                      system_tooltip({parent:l_dom_input_end_time4, color:"red", position:"left", disappear_way:"time", str:mcs_end_time_should_lt_begin + "."});
                   }
                   return false;
                }
            }
            return true;
        }
        function add_event()
        {
            l_dom_radio_H7_24.onclick=function()
            {
                if(this.checked)
                {
                   jQuery(l_dom_radio_schedule_content).hide();
                   jQuery("#manager_page").mCustomScrollbar("update");
                }
            }
            l_dom_radio_schedule.onclick=function()
            {
                if(this.checked)
                {
                   jQuery(l_dom_radio_schedule_content).show();
                   jQuery("#manager_page").mCustomScrollbar("update");
                }
            }
            l_dom_button_setup.onclick=function(){
                if(!time_check())return;
                week_checkbox_array=Array();
                if(l_dom_radio_schedule.checked)
                {
                   for(i=0;i<4;i++)
                   {
                      if(mx("#schedule_record"+(i+1)).checked)
                      {
                        week_checkbox_class=mx(".week_checkbox_class"+(i+1));
                        var wday=0;
                        for(j=0;j<week_checkbox_class.length;j++)
                        {
                          if(week_checkbox_class[j].checked)
                          {
                             wday=wday|l_week_array[week_checkbox_class[j].value];
                          }
                        }
                        if( wday == 0 )
                        {
                            //system_tooltip({parent:mx("#week_checkbox"+(i+1)+"_div"), color:"red", position:"right", disappear_way:"time", str:mcs_end_time_should_lt_begin + "."});
                            //return;
                        }
                        var input_begin_time = mx("#input_begin_time"+(i+1)).value;
                        var input_end_time =  mx("#input_end_time"+(i+1)).value;
                        week_checkbox_array.push({wday:wday,start:input_time_change({type:"string",data:input_begin_time}),end:input_time_change({type:"string",data:input_end_time})});
                      }
                   }
                }
                ms.send_msg("record_set",{sn:g_select_device_ipc,enable:l_dom_checkbox_schedule.checked?1:0,full_time:l_dom_radio_H7_24.checked?1:0,times:week_checkbox_array},null,function(msg,ref){
                    if(msg && msg.result=="")
                    {
                       if(g_domain_oems_vimtag)
                       {
                           msg_tips({msg:mcs_set_successfully, type:"success", timeout:3000});
                       }
                       else
                       {
                           g_system_prompt_box(mcs_set_successfully, 240, -200);
                       }
                    }
                    else if(msg.result == "permission.denied")
                    {
                        if(g_domain_oems_vimtag)
                        {
                            msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
                        }
                    }
                    ms.send_msg("record_get",{sn:g_select_device_ipc},null,dev_record_get_ack);
                });
            }
            jQuery(l_dom_schedule_record1).iButton({
               change:function(){
                     if(l_dom_schedule_record1.checked)
            		 {
            		    jQuery(l_dom_schedule_record1_content).fadeIn();
            		 }else
            		 {
            		 	jQuery(l_dom_schedule_record1_content).fadeOut();
            		 }
            		 jQuery("#manager_page").mCustomScrollbar("update");
               }
           	});
           	jQuery(l_dom_checkbox_schedule).iButton({
               change:function(){
                 if(l_dom_checkbox_schedule.checked)
            		 {
            		    jQuery(l_dom_schedule_record_content).fadeIn();
            		 }else
            		 {
            		 	jQuery(l_dom_schedule_record_content).fadeOut();
            		 }
            		 jQuery("#manager_page").mCustomScrollbar("update");
               }
           	});
           	jQuery(l_dom_schedule_record2).iButton({
               change:function(){
                 if(l_dom_schedule_record2.checked)
            		 {
            		    jQuery(l_dom_schedule_record2_content).fadeIn();
            		 }else
            		 {
            		 	jQuery(l_dom_schedule_record2_content).fadeOut();
            		 }
            		 jQuery("#manager_page").mCustomScrollbar("update");
               }
           	});
           	jQuery(l_dom_schedule_record3).iButton({
               change:function(){
                 if(l_dom_schedule_record3.checked)
            		 {
            		    jQuery(l_dom_schedule_record3_content).fadeIn();
            		 }else
            		 {
            		 	jQuery(l_dom_schedule_record3_content).fadeOut();
            		 }
            		 jQuery("#manager_page").mCustomScrollbar("update");
               }
           	});
           	jQuery(l_dom_schedule_record4).iButton({
                change:function(){
                 		if(l_dom_schedule_record4.checked)
            		 		{
            		    		jQuery(l_dom_schedule_record4_content).fadeIn();
            		 		}else
            		 		{
            		 			jQuery(l_dom_schedule_record4_content).fadeOut();
            		 		}
            		 		jQuery("#manager_page").mCustomScrollbar("update");
                }
           	});
        }
        l_me.ctrl = function(obj)
        {
           switch(obj.type)
            {
                case "destroy":
                    {
                    	remove_event();
                        l_me_parent.innerHTML = "";
                        l_me_parent = null;
                        break;
                    }
            }
        }
        add_event();
        ms.send_msg("record_get",{sn:g_select_device_ipc},null,dev_record_get_ack);
    }
    //Set the time and date
    function class_options_time_date(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            l_refresh_time_id,//Timer refresh time
            l_dom_input_year,
            l_dom_input_month,
            l_dom_input_day,
            l_dom_input_hour,
            l_dom_input_minute,
            l_dom_input_second,
            l_dom_time_zone_selevt,
            l_dom_ntp,
            l_dom_button_setup,
            l_dom_time_zone_selevt_content;

        if(g_domain_oems_vimtag)
        {
        	  l_me_parent[s_innerHTML] =
        	  "<div id = 'date_info' class = 'list_right_box'>"
            +       "<div class = 'list_right_item_ex'>"
            +          "<div class='options_float_left'>" + mcs_date + "</div>"
            +          "<div class='options_float_right'>"
            +             "<input id='input_date_year' class='vimtag_date' type='text' style='width:43px' ></input>"
            +             "<span id='date_year_span' style='padding:0 2px 0 2px'>" + mcs_year + "</span>"
            +             "<input id='input_date_month' class='vimtag_date' type='text' style='width:38px'></input>"
            +             "<span id='date_month_span' style='padding:0 2px 0 2px'>" + mcs_month + "</span>"
            +             "<input id='input_date_day' class='vimtag_date' type='text' style='width:38px'></input>"
            +             "<span id='date_day_span' style='padding:0 2px 0 2px'>" + mcs_day + "</span>"
            +          "</div>"
            +       "</div>"
            +       "<div class = 'list_right_item'>"
            +          "<div class='options_float_left'>" + mcs_time + "</div>"
            +          "<div class='options_float_right'>"
            +             "<input id='input_time_hour' class='vimtag_date' type='text' style='width:54px'></input>"
            +             "<span id='time_hour_span' style='padding:0 2px 0 2px'>:</span>"
            +             "<input id='input_time_minute' class='vimtag_date' type='text' style='width:53px'></input>"
            +             "<span id='time_minute_span' style='padding:0 2px 0 2px'>:</span>"
            +             "<input id='input_time_second' class='vimtag_date' type='text' style='width:53px'></input>"
            +          "</div>"
            +       "</div>"
            +       "<div id='time_zone_selevt_content'>"
            +          "<div class='options_float_left'>" + mcs_time_zone + "</div>"
            +          "<div class='options_float_right select_block'><select id='time_zone_selevt'>"
            +             "<option value='UTC+00:00'>UTC+00:00</option>"
            +             "<option value='UTC+01:00'>UTC+01:00</option>"
            +             "<option value='UTC+02:00'>UTC+02:00</option>"
            +             "<option value='UTC+03:00'>UTC+03:00</option>"
            +             "<option value='UTC+03:30'>UTC+03:30</option>"
            +             "<option value='UTC+04:00'>UTC+04:00</option>"
            +             "<option value='UTC+04:30'>UTC+04:30</option>"
            +             "<option value='UTC+05:00'>UTC+05:00</option>"
            +             "<option value='UTC+05:30'>UTC+05:30</option>"
            +             "<option value='UTC+05:45'>UTC+05:45</option>"
            +             "<option value='UTC+06:00'>UTC+06:00</option>"
            +             "<option value='UTC+06:30'>UTC+06:30</option>"
            +             "<option value='UTC+07:00'>UTC+07:00</option>"
            +             "<option value='UTC+08:00'>UTC+08:00</option>"
            +             "<option value='UTC+09:00'>UTC+09:00</option>"
            +             "<option value='UTC+09:30'>UTC+09:30</option>"
            +             "<option value='UTC+10:00'>UTC+10:00</option>"
            +             "<option value='UTC+10:30'>UTC+10:30</option>"
            +             "<option value='UTC+11:00'>UTC+11:00</option>"
            +             "<option value='UTC+12:00'>UTC+12:00</option>"
            +             "<option value='UTC+13:00'>UTC+13:00</option>"
            +             "<option value='UTC+14:00'>UTC+14:00</option>"
            +             "<option value='UTC-01:00'>UTC-01:00</option>"
            +             "<option value='UTC-02:00'>UTC-02:00</option>"
            +             "<option value='UTC-03:00'>UTC-03:00</option>"
            +             "<option value='UTC-03:30'>UTC-03:00</option>"
            +             "<option value='UTC-04:00'>UTC-04:00</option>"
            +             "<option value='UTC-05:00'>UTC-05:00</option>"
            +             "<option value='UTC-06:00'>UTC-06:00</option>"
            +             "<option value='UTC-07:00'>UTC-07:00</option>"
            +             "<option value='UTC-08:00'>UTC-08:00</option>"
            +             "<option value='UTC-09:00'>UTC-09:00</option>"
            +             "<option value='UTC-09:30'>UTC-09:30</option>"
            +             "<option value='UTC-10:00'>UTC-10:00</option>"
            +             "<option value='UTC-11:00'>UTC-11:00</option>"
            +             "<option value='UTC-12:00'>UTC-12:00</option>"
            +             "</select>"
            +          "</div>"
            +       "</div>"
            +       "<div class = 'list_right_item_ex'>"
            +          "<div>"
            +             "<div class='options_float_left'>" + mcs_auto_sync_date_time + "</div>"
            +             "<div id='checkbox_auto_sync_div' class='options_float_right'><input id='checkbox_auto_sync' type='checkbox'/></div>"
            +          "</div>"
            +          "<div id='ntp' class='clear'>"
            +             "<div class='options_float_left'>" + mcs_ntp + "</div>"
            +             "<div class='options_float_right'><input id='input_ntp' class='vimtag_service_address' type='text' style='width:145px'></input></div>"
            +          "</div>"
            +          "<div class='options_float_right' style='clear:both'><button id='button_setup' class='list_right_button' >" + mcs_apply + "</button></div>"
            +"</div>";
        }
        else
        {
            l_me_parent[s_innerHTML] =
            "<div>"
            +   "<div class='options_float_left'>" + mcs_date + "</div>"
            +   "<div class='options_float_right'>"
            +       "<input id='input_date_year' class='standard_inputs manager_standard_inputs' type='text' style='width:43px' ></input>"
            +       "<span id='date_year_span' style='padding:0 2px 0 2px'>" + mcs_year + "</span>"
            +       "<input id='input_date_month' class='standard_inputs manager_standard_inputs' type='text' style='width:38px'></input>"
            +       "<span id='date_month_span' style='padding:0 2px 0 2px'>" + mcs_month + "</span>"
            +       "<input id='input_date_day' class='standard_inputs manager_standard_inputs' type='text' style='width:38px'></input>"
            +       "<span id='date_day_span' style='padding:0 2px 0 2px'>" + mcs_day + "</span>"
            +   "</div>"
            +"</div>"
            +"<div>"
            +   "<div class='options_float_left'>" + mcs_time + "</div>"
            +   "<div class='options_float_right'>"
            +       "<input id='input_time_hour' class='standard_inputs manager_standard_inputs' type='text' style='width:54px'></input>"
            +       "<span id='time_hour_span' style='padding:0 2px 0 2px'>:</span>"
            +       "<input id='input_time_minute' class='standard_inputs manager_standard_inputs' type='text' style='width:53px'></input>"
            +       "<span id='time_minute_span' style='padding:0 2px 0 2px'>:</span>"
            +       "<input id='input_time_second' class='standard_inputs manager_standard_inputs' type='text' style='width:53px'></input>"
            +   "</div>"
            +"</div>"
            +"<div class='manager_split_bar_3px'></div>"
            +"<div id='time_zone_selevt_content'>"
            +   "<div class='options_float_left'>" + mcs_time_zone + "</div>"
            +   "<div class='options_float_right select_block'><select id='time_zone_selevt'>"
            +       "<option value='UTC+00:00'>UTC+00:00</option>"
            +       "<option value='UTC+01:00'>UTC+01:00</option>"
            +       "<option value='UTC+02:00'>UTC+02:00</option>"
            +       "<option value='UTC+03:00'>UTC+03:00</option>"
            +       "<option value='UTC+03:30'>UTC+03:30</option>"
            +       "<option value='UTC+04:00'>UTC+04:00</option>"
            +       "<option value='UTC+04:30'>UTC+04:30</option>"
            +       "<option value='UTC+05:00'>UTC+05:00</option>"
            +       "<option value='UTC+05:30'>UTC+05:30</option>"
            +       "<option value='UTC+05:45'>UTC+05:45</option>"
            +       "<option value='UTC+06:00'>UTC+06:00</option>"
            +       "<option value='UTC+06:30'>UTC+06:30</option>"
            +       "<option value='UTC+07:00'>UTC+07:00</option>"
            +       "<option value='UTC+08:00'>UTC+08:00</option>"
            +       "<option value='UTC+09:00'>UTC+09:00</option>"
            +       "<option value='UTC+09:30'>UTC+09:30</option>"
            +       "<option value='UTC+10:00'>UTC+10:00</option>"
            +       "<option value='UTC+10:30'>UTC+10:30</option>"
            +       "<option value='UTC+11:00'>UTC+11:00</option>"
            +       "<option value='UTC+12:00'>UTC+12:00</option>"
            +       "<option value='UTC+13:00'>UTC+13:00</option>"
            +       "<option value='UTC+14:00'>UTC+14:00</option>"
            +       "<option value='UTC-01:00'>UTC-01:00</option>"
            +       "<option value='UTC-02:00'>UTC-02:00</option>"
            +       "<option value='UTC-03:00'>UTC-03:00</option>"
            +       "<option value='UTC-03:30'>UTC-03:00</option>"
            +       "<option value='UTC-04:00'>UTC-04:00</option>"
            +       "<option value='UTC-05:00'>UTC-05:00</option>"
            +       "<option value='UTC-06:00'>UTC-06:00</option>"
            +       "<option value='UTC-07:00'>UTC-07:00</option>"
            +       "<option value='UTC-08:00'>UTC-08:00</option>"
            +       "<option value='UTC-09:00'>UTC-09:00</option>"
            +       "<option value='UTC-09:30'>UTC-09:30</option>"
            +       "<option value='UTC-10:00'>UTC-10:00</option>"
            +       "<option value='UTC-11:00'>UTC-11:00</option>"
            +       "<option value='UTC-12:00'>UTC-12:00</option>"
            +    "</select>"
            +   "</div>"
            +"</div>"
            +"<div>"
            +   "<div class='options_float_left'>" + mcs_auto_sync_date_time + "</div>"
            +   "<div id='checkbox_auto_sync_div' class='options_float_right'><input id='checkbox_auto_sync' type='checkbox'/></div>"
            +"</div>"
            +"<div id='ntp' class='clear'>"
            +   "<div class='options_float_left'>" + mcs_ntp + "</div>"
            +   "<div class='options_float_right'><input id='input_ntp' class='standard_inputs manager_standard_inputs' type='text' style='width:145px'></input>"
            +   "</div>"
            +"</div>"
            +"<div class='options_float_right' style='clear:both'><button id='button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>"
            +"</div>";
        }
        jQuery(l_me_parent).hide().fadeIn(500);

        l_dom_input_year = mx("#input_date_year");
        l_dom_input_month = mx("#input_date_month");
        l_dom_input_day = mx("#input_date_day");
        l_dom_input_hour = mx("#input_time_hour");
        l_dom_input_minute = mx("#input_time_minute");
        l_dom_input_second = mx("#input_time_second");
        l_dom_time_zone_selevt =mx("#time_zone_selevt");
        l_dom_time_zone_selevt_content =mx("#time_zone_selevt_content");
        l_dom_ntp = mx("#input_ntp");
        l_dom_button_setup = mx("#button_setup");

        if(determine_the_version({type:"Positive",version:version_Category.Schedule_recording}))
        {
          l_dom_time_zone_selevt_content.style.display="inline";
        }

        if(!g_domain_oems_vimtag) jQuery(l_dom_time_zone_selevt).tzSelect();
        var stop_time={input_year:"",input_month:"",input_day:"",input_hour:"",input_minute:"",input_second:""};
        //Time to refresh the display of
        function refresh_time_func(obj)
        {
            var me = this,
                year, month, day, hour, minute, second,
                leap_year = false;

            year = parseInt(obj.year, 10);
            month = parseInt(obj.month, 10);
            day = parseInt(obj.day, 10);
            hour = parseInt(obj.hour, 10);
            minute = parseInt(obj.minute, 10);
            second = parseInt(obj.second, 10);
            clearTimeout(l_refresh_time_id);
            if((year % 4 == 0) && (year % 100 != 0) || (year % 400 == 0))
            {
                leap_yaer = true;
            }
            if(++second >= 60)
            {
                minute += 1;
                second = 0;
                if(minute >= 60)
                {
                    hour += 1;
                    minute = 0;
                    if(hour >= 24)
                    {
                        day += 1;
                        hour = 0;
                        if((month == 1 || month == 3 || month == 5 || month == 7
                                    || month == 8 || month == 10 || month == 12) && (day > 31))
                        {
                            month +=1;
                            day = 0;
                        }
                        else if((month == 2) && (day > (leap_year? 29:28)))
                        {
                            month += 1;
                            day = 0;
                        }
                        else if(day > 30)
                        {
                            month += 1;
                            day = 0;
                        }
                        if(month > 12)
                        {
                            year += 1;
                            month = 0;
                        }
                    }
                }
            }
            if(second < 10)
                second = "0" + second;
            if(minute < 10)
                minute = "0" + minute;
            filling_time({year:year,month:month,day:day,hour:hour,minute:minute,second:second});
            l_refresh_time_id = setTimeout(function(){refresh_time_func({year:year,month:month,day:day,hour:hour,minute:minute,second:second})}, 1000);
        }
        //The time is displayed
        function filling_time(obj)
        {
             focus_id=document.activeElement.id;
             if(focus_id!="input_date_year" && focus_id!="input_date_month" && focus_id!="input_date_day" && focus_id!="input_time_hour" && focus_id!="input_time_minute" && focus_id!="input_time_second")
             {
                if(stop_time.input_year)
                {
                    if(stop_time.input_year != l_dom_input_year.value  || stop_time.input_month != l_dom_input_month.value ||stop_time.input_day != l_dom_input_day.value ||stop_time.input_hour != l_dom_input_hour.value || l_dom_input_minute.value != stop_time.input_minute ||l_dom_input_second.value != stop_time.input_second)
                    return;
                }
                if(stop_time.input_year)
                {
                   stop_time.input_year = "";
                   stop_time.input_month= "";
                   stop_time.input_day  = "";
                   stop_time.input_hour = "";
                   stop_time.input_minute = "";
                   stop_time.input_second = "";
                }
                l_dom_input_year.value = obj.year;
                l_dom_input_month.value =obj.month;
                l_dom_input_day.value = obj.day;
                l_dom_input_hour.value = obj.hour;
                l_dom_input_minute.value = obj.minute;
                l_dom_input_second.value = obj.second;
             }else if(focus_id=="input_date_year" || focus_id=="input_date_month" || focus_id=="input_date_day" || focus_id=="input_time_hour" || focus_id=="input_time_minute" || focus_id=="input_time_second")
             {
                if(stop_time.input_year=="")
                {
                   stop_time.input_year = l_dom_input_year.value;
                   stop_time.input_month= l_dom_input_month.value;
                   stop_time.input_day  = l_dom_input_day.value;
                   stop_time.input_hour = l_dom_input_hour.value;
                   stop_time.input_minute = l_dom_input_minute.value;
                   stop_time.input_second = l_dom_input_second.value;
                }
             }
        }
        function dev_time_get_ack(msg,ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.result=="")
            {
                 l_dom_input_year.value = msg.year;
                 l_dom_input_month.value = msg.mon;
                 l_dom_input_day.value = msg.day;
                 l_dom_input_hour.value = msg.hour;
                 l_dom_input_minute.value = msg.min;
                 l_dom_input_second.value = msg.sec;
                 if(msg.auto_sync)
                   jQuery("#checkbox_auto_sync").iButton("toggle", true);
                 else
                   jQuery("#checkbox_auto_sync").iButton("toggle", false);
                 if(msg.ntp_addr)
                 {
                    l_dom_ntp.value = msg.ntp_addr;
                 }
                 if(msg.timezone)
                 {
                    l_dom_time_zone_selevt.value= msg.timezone;
                    if(!g_domain_oems_vimtag) jQuery(l_dom_time_zone_selevt).tzSelect();
                 }
                 refresh_time_func({year:l_dom_input_year.value,month:l_dom_input_month.value,day:l_dom_input_day.value,hour:l_dom_input_hour.value
                      ,minute:l_dom_input_minute.value,second:l_dom_input_second.value});
            }
        }
        function add_event()
        {
            l_dom_input_year.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_year.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_input_month.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
                mx("#date_year_span").style.paddingRight = "1px";
                mx("#date_month_span").style.paddingLeft = "1px";
            };
            l_dom_input_month.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
                mx("#date_year_span").style.paddingRight = "2px";
                mx("#date_month_span").style.paddingLeft = "2px";
            };
            l_dom_input_day.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
                mx("#date_month_span").style.paddingRight = "1px";
                mx("#date_day_span").style.paddingLeft = "1px";
            };
            l_dom_input_day.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
                mx("#date_month_span").style.paddingRight = "2px";
                mx("#date_day_span").style.paddingLeft = "2px";
            };
            l_dom_input_hour.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_hour.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            l_dom_input_minute.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
                mx("#time_hour_span").style.paddingRight = "1px";
                mx("#time_minute_span").style.paddingLeft = "1px";
            };
            l_dom_input_minute.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
                mx("#time_hour_span").style.paddingRight = "2px";
                mx("#time_minute_span").style.paddingLeft = "2px";
            };
            l_dom_input_second.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
                mx("#time_minute_span").style.paddingRight = "0px";
            };
            l_dom_input_second.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
                mx("#time_minute_span").style.paddingRight = "2px";
            };
            l_dom_ntp.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_ntp.onblur = function() {
                if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            jQuery("#checkbox_auto_sync").iButton({
            	  labelOn:"On",
                labelOff:"Off",
                change:function(){
                 if(mx("#checkbox_auto_sync").checked)
                  {
                  	jQuery("#input_date_year").attr("disabled","disabled");
                    jQuery("#input_date_day").attr("disabled","disabled");
                    jQuery("#input_time_hour").attr("disabled","disabled");
                    jQuery("#input_date_month").attr("disabled","disabled");
                    jQuery("#input_time_minute").attr("disabled","disabled");
                    jQuery("#input_time_second").attr("disabled","disabled");
                    mx("#ntp").style.display="inline";
                  }
                  else{
                    jQuery("#input_date_year").removeAttr("disabled");
                    jQuery("#input_date_day").removeAttr("disabled");
                    jQuery("#input_time_hour").removeAttr("disabled");
                    jQuery("#input_date_month").removeAttr("disabled");
                    jQuery("#input_time_minute").removeAttr("disabled");
                    jQuery("#input_time_second").removeAttr("disabled");
                    jQuery("#ntp").fadeOut(500);
                  }
                }
            });
            l_dom_button_setup.onclick= function(){
                ms.send_msg("time_set",{sn:g_select_device_ipc,type:mx("#checkbox_auto_sync").checked?"NTP":"manually",
                          timezone:l_dom_time_zone_selevt.value, hour:l_dom_input_hour.value, min:l_dom_input_minute.value, sec:l_dom_input_second.value,
                          year:l_dom_input_year.value,mon:l_dom_input_month.value,day:l_dom_input_day.value,auto_sync:Number(mx("#checkbox_auto_sync").checked),ntp_addr:l_dom_ntp.value},null,function(msg,ref){
                             if(msg.result=="")
                             {
                             	 if(g_domain_oems_vimtag)
                             	 {
                             	 	  msg_tips({msg:mcs_set_successfully, type:"warning", timeout:3000});
                             	 }
                             	 else
                             	 {
                                  g_system_prompt_box(mcs_set_successfully, 240, -200);
                               }
                               ms.send_msg("time_get",{sn:g_select_device_ipc},null,dev_time_get_ack);
                             }
                          }
                );
            };
            l_dom_time_zone_selevt.change_value=function()
            {
               if(!g_domain_oems_vimtag) jQuery(l_dom_time_zone_selevt).tzSelect();
            }
        }
        function remove_event()
        {
            l_dom_input_year.onfocus = "";
            l_dom_input_year.onblur = "";
            l_dom_input_month.onfocus = "";
            l_dom_input_month.onblur = "";
            l_dom_input_day.onfocus = "";
            l_dom_input_day.onblur = "";
            l_dom_input_hour.onfocus = "";
            l_dom_input_hour.onblur= "";
            l_dom_input_minute.onfocus = "";
            l_dom_input_minute.onblur = "";
            l_dom_input_second.onfocus = "";
            l_dom_input_second.onblur = "";
            l_dom_button_setup.onclick = "";
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "destroy":
                    {
                        clearTimeout(l_refresh_time_id);
                        remove_event();
                        l_me_parent.innerHTML = "";
                        l_me_parent = null;
                        break;
                    }
                default:
                    log("error:ctrl's obj.type is not exist in class_options_time_date.");
            }
        }
        add_event();
        if(g_select_device_ipc){
           ms.send_msg("time_get",{sn:g_select_device_ipc},null,dev_time_get_ack);
        }
    }
    //Setting the system
    function class_options_system_maintenance(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            //data
            l_extra_timer = 1,
            l_inner_html = "",
            l_refresh_timer,
            //dom
            l_dom_system_upgrade_div,//Display online upgrade or the latest version
            l_dom_input_activation,//Activation input box
            l_dom_button_activation,//Activation keys
            l_dom_button_restore,//reset
            l_dom_button_restart,//Reset button
            l_dom_system_upgrade_left,
            l_dom_detail_div_page,
            l_dom_detail_div_inner;

        if(g_domain_oems_vimtag)
        {	            
	            l_inner_html =
		            "<div class='list_right_item'>"
		            +   "<div class='options_float_left' id='system_upgrade_left'></div>"
		            +   "<div id='system_upgrade_div' class='options_float_right' style='margin-top:5px;'></div>"
		            +"</div>";
		        //Direct Connect Uploads upgrades
		        if( g_network_environ == "private" )
		        {
		            l_inner_html +=
		                "<div class='list_right_item'>"
		                +   "<div class='options_float_left'>" + mcs_upload_upgrade + "</div>"
		                +   "<div id='file_upload_div' class='options_float_right' style='position:relative;right:40px;top:10px;cursor:pointer;'></div>"
		                +"</div>";
		        }
		        l_inner_html +=
		            "<div id='activation_div' class='list_right_item'>"
		            +   "<div class='options_float_left'>" + mcs_activation + "</div>"
		            +   "<div class='options_float_right'>"
		            +       "<input type='text' id='input_activation' class='vimtag_service_address'></input>"
		            +       "<button id='button_activation' class='list_right_button_ex'>" + mcs_activate + "</button>"
		            +   "</div>"
		            +"</div>"
		            +"<div class='list_right_item'>"
		            +   "<div class='options_float_left'>" + mcs_restore_the_factory_settings + "</div>"
		            +   "<div class='options_float_right' style='margin-top:5px;'><button id='button_restore_default_settings' class='list_right_button_ex'>" + mcs_restore + "</button></div>"
		            +"</div>"
		            +"<div class='list_right_item'>"
		            +   "<div class='options_float_left'>" + mcs_reboot + "</div>"
		            +   "<div class='options_float_right' style='margin-top:5px;'><button id='button_restart_device' class='list_right_button_ex'>" + mcs_reboot + "</button></div>"
		            +"</div>";

		        l_me_parent[s_innerHTML] = l_inner_html;
        }
        else
        {
		        l_inner_html =
		            "<div>"
		            +   "<div class='options_float_left' id='system_upgrade_left'></div>"
		            +   "<div id='system_upgrade_div' class='options_float_right'></div>"
		            +"</div>";
		        //Direct Connect Uploads upgrades
		        if( g_network_environ == "private" )
		        {
		            l_inner_html +=
		                "<div>"
		                +   "<div class='options_float_left'>" + mcs_upload_upgrade + "</div>"
		                +   "<div id='file_upload_div' class='options_float_right' style='position:relative;right:40px;top:10px;cursor:pointer;'></div>"
		                +"</div>";
		        }
		        l_inner_html +=
		            "<div id='activation_div'>"
		            +   "<div class='options_float_left'>" + mcs_activation + "</div>"
		            +   "<div class='options_float_right'>"
		            +       "<input type='text' id='input_activation' class='standard_inputs manager_standard_inputs'></input>"
		            +       "<button id='button_activation' class='standard_buttons_white'>" + mcs_activate + "</button>"
		            +   "</div>"
		            +"</div>"
		            +"<div class='manager_split_bar_2px_2'></div>"
		            +"<div>"
		            +   "<div class='options_float_left'>" + mcs_restore_the_factory_settings + "</div>"
		            +   "<div class='options_float_right'><button id='button_restore_default_settings' class='standard_buttons_white'>" + mcs_restore + "</button></div>"
		            +"</div>"
		            +"<div class='manager_split_bar_2px_2'></div>"
		            +"<div>"
		            +   "<div class='options_float_left'>" + mcs_reboot + "</div>"
		            +   "<div class='options_float_right'><button id='button_restart_device' class='standard_buttons_white'>" + mcs_reboot + "</button></div>"
		            +"</div>";

		        l_me_parent[s_innerHTML] = l_inner_html;
        }
        jQuery(l_me_parent).hide().fadeIn(500);

        l_dom_detail_div_page = dom_create_child(l_me_parent, "div", "detail_div_page");
        l_dom_detail_div_page[s_innerHTML]="<div id='detail_div_inner'><div>";
        l_dom_detail_div_inner=mx("#detail_div_inner");
        if(!g_domain_oems_vimtag) jQuery(l_dom_detail_div_inner).mCustomScrollbar();

        l_dom_system_upgrade_div  = mx("#system_upgrade_div");
        l_dom_input_activation    = mx("#input_activation");
        l_dom_button_activation   = mx("#button_activation");
        l_dom_button_restore      = mx("#button_restore_default_settings");
        l_dom_button_restart      = mx("#button_restart_device");
        l_dom_system_upgrade_left = mx("#system_upgrade_left");

        //If the device number begins with 166, you need to use the activation code to activate
        if(g_select_device_ipc.substr(0, 3) != "166")
           mx("#activation_div").style.display = "none";

        function dev_upgrade_get_ack(msg,ref)
        {           
            if(!l_me_parent) return;
            if(msg && msg.result == "")
            {
                var msg_status = msg.status;
                if(ref.check_ver && msg_status == "fail" )
                {
                   msg_status="free";
                }
                if(ref.type == "online" && msg_status == "")
                {
                   l_dom_system_upgrade_div[s_innerHTML] = mcs_already_latest_version;
                }
                else if(msg_status == "fail" )
                {
                   system_pop_confirm_box({alert:true, str:mcs_fail + ":" +　msg.remark});
                }
                else if(msg_status != "free" && msg_status != "" && msg_status != "finish" )
                {
                    var wait_div = mx("#system_wait_div"), str_div = mx("#cl_str_div"),
                        i, extra = "";
                    setTimeout(function(){
                       ms.send_msg("upgrade_get",{sn:g_select_device_ipc},{type:""},dev_upgrade_get_ack);
                    }, 1000);
                    if(ref.type == "online")
                        l_dom_system_upgrade_div[s_innerHTML] = mcs_upgrading + "...";
                    if(!wait_div) g_system_wait_div("");
                    else
                    {
                        for(i = 1; i <= l_extra_timer; ++i)
                        {
                            extra += "."
                        }
                        l_extra_timer = ++l_extra_timer > 3 ? 1 : l_extra_timer;
                        if(msg_status == "download")
                        {
                            str_div[s_innerHTML] = mcs_downloading+ extra;
                        }
                        else if(msg_status == "erase")
                        {
                            str_div[s_innerHTML] = mcs_erasing + extra;
                        }
                        else if(msg_status == "write")
                        {
                            str_div[s_innerHTML] =  mcs_writing + " " + msg.progress + "%";  //Download shows the percentage
                        }
                    }
                }
                else
                {
                    g_system_stop_wait();
                    l_extra_timer = 1;
                    if(ref.check_ver)
                    {
                        if(msg.ver_current < "12.09.13.04.04")
                        {
                            l_dom_system_upgrade_div.parentNode[s_style].display = "none";
                        }
                        if((msg.ver_valid == msg.ver_current)&&(msg.ext_prj==msg.ext_hw||msg.ext_hw.length==0))
                        {
                            l_dom_system_upgrade_left[s_innerHTML]= mcs_online_upgrade;
                            l_dom_system_upgrade_div[s_innerHTML] = mcs_already_latest_version;
                        }
                        else
                        {
                            l_dom_system_upgrade_left[s_innerHTML]= mcs_online_upgrade;
                            if(g_domain_oems_vimtag)
                            {
                            	l_dom_system_upgrade_div[s_innerHTML] = "<div style='float:left;margin-top:8px;'>"+mcs_new_version+msg.ver_valid+mcs_valid + "</div><div style='padding-top:20px;float:left'><div  id='Detail_id'></div></div>&nbsp;<button class='list_right_button_ex'>" + mcs_upgrade + "</button>";
                            }
                            else
                            {
                              l_dom_system_upgrade_div[s_innerHTML] = mcs_new_version+msg.ver_valid+mcs_valid + "&nbsp;<div style='padding-top:20px;;float:left'><div  id='Detail_id'></div></div>&nbsp;<button class='standard_buttons_white'>" + mcs_upgrade + "</button>";
                            }
                            background_img_set(mx("#Detail_id"), sub_img_arrow);
                            mx("#Detail_id").onclick=function(){
                               jQuery(l_dom_detail_div_page).toggle();
                               jQuery(l_dom_detail_div_inner).mCustomScrollbar("update");
                            }
                            //Upgrade button click event
                            mx("/button", l_dom_system_upgrade_div)[0].onclick = function(){
                            	 var img_ver = mcloud_agent.devs.get(g_select_device_ipc).img_ver;
                            	 var valid_ver = msg.ver_valid;
                            	 var ver_update_warn="";
                            	 function desc_get_ack(msg,ref){
                            	 	 if(msg.data.desc){
                            	 	   for(var i=0,length=msg.data.desc.length;i<length;i++){
                            	 	     ver_update_warn += msg.data.desc[i]+"<br>";
                            	 	   }
                            	 	 }
                            	   system_pop_confirm_box({str:(ver_update_warn?ver_update_warn:(mcs_upgrade_to_the_latest_version+valid_ver)),
                                   callback_func:function(){
                                     ms.send_msg("upgrade_set",{sn:g_select_device_ipc,check:1},{type:"",check_ver:1},function(msg,ref){
                                       if(msg.result==""){
                                         ms.send_msg("upgrade_get",{sn:g_select_device_ipc,check:1},{type:"online",check_ver:0},dev_upgrade_get_ack);
                                       }
                                     });
                                   }
                                 });  
                            	 }
                            	 ms.send_msg("desc_get",{ver_type:"windows",ver_from:img_ver,ver_to:msg.ver_valid,lang:g_now_lang},null,desc_get_ack);
                            }
                            jQuery("#Detail_id").hide();
                        }
                    }
                    else
                    {
                        //Reboot the device upgrade is successful
                        system_pop_confirm_box({str:mcs_upgrade_successful_restart_to_take_effect, button_left:mcs_reset_now, button_right:mcs_reset_later,
                            callback_func:function(obj){
                                ms.send_msg("reboot",{sn:g_select_device_ipc},null,function(msg,ref){
                                    if(msg.result=="")
                                    {
                                       g_system_prompt_box(mcs_set_successfully, 240, -200);
                                       setTimeout(function(){
                                          ms.send_msg("upgrade_get",{sn:g_select_device_ipc,check:1},{type:"",check_ver:1},dev_upgrade_get_ack);
                                       },1000);
                                    }
                                });
                            }
                        });
                    }
                }
            }
            else
            {
                log("error:CcmGetUpgradeStatusResponse return Result error in class_options_system_maintenance.");
            }
        }
        function on_cacs_check_nid_ack(type, msg, ref)
        {
            g_system_stop_wait();
            if(!msg.result)
            {
                clearInterval(l_refresh_timer);
                if(g_device_list_obj["sn_" + g_select_device_ipc.toUpperCase()]){
                   if(!g_device_list_obj["sn_" + g_select_device_ipc.toUpperCase()].parent_sn)
                       window.location.reload(true);
                   else
                    log("Rebooting.");
                }
                else if(g_device_list_obj["sn_" + g_select_device_ipc.toLowerCase()])
                {
                    if(!g_device_list_obj["sn_" + g_select_device_ipc.toLowerCase()].parent_sn)
                       window.location.reload(true);
                   else
                    log("Rebooting.");
                }
            }
            else
            {
                log("error:on_cacs_check_nid_ack return result error in class_options_system_maintenance.");
            }
        }
        function restore_pop_confirm_box(obj)
        {
            var pop_confirm_box = mx("#system_pop_confirm_box"),
             pop_confirm_content, pop_confirm_div,
             l_client_w, l_client_h,save_configuration,
             button_left = obj.button_left || mcs_ok, button_right = obj.button_right || mcs_cancel;

            if(!pop_confirm_box)
            {
                l_client_h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
                l_client_w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
                if(l_client_h < g_client_division_h)
                {
                    l_client_h = g_client_division_h;
                }
                if(l_client_w < g_client_division_w)
                {
                    l_client_w = g_client_division_w;
                }
                document.documentElement.onkeydown = function(e) {var evt = e || window.event; if(evt.keyCode != 116) return false;};
                pop_confirm_box = document.createElement("div");
                pop_confirm_box[s_setAttribute]("id", "system_pop_confirm_box");
                page.parentNode.insertBefore(pop_confirm_box, page);

                pop_confirm_content = dom_create_child(pop_confirm_box, "div", "system_pop_confirm_cotent");
                pop_confirm_div = dom_create_child(pop_confirm_box, "div", "system_pop_confirm_div");

                pop_confirm_div[s_style][s_cssText] = "position:absolute;width:" + l_client_w + "px;height:" + l_client_h + "px;background-color:#fff;opacity:0.1;"
                    + "filter:alpha(opacity=10);z-index:100";
                if(g_domain_oems_vimtag)
                {
                	  pop_confirm_content[s_style][s_cssText] = "position:absolute;top:" + ((l_client_h - 168) / 3) + "px;left:" + ((l_client_w - 286) / 2) + "px;z-index:101;"
		                    + " background-color:#ffffff;width:286px;height:168px;";
		
		
		                pop_confirm_content[s_innerHTML] =
		                     "<div style='padding-left:15px;padding-top:20px;font-size:16px;color:#333333'><div style='height:70px;'>" + mcs_restore_factory_settings_prompt +"</div><input type='checkbox' id='save_configuration' checked='checked'></input>&nbsp;"+mcs_keep_network_settings+"</div>"
		                    +"<div style='position:absolute;bottom:15px'>"
		                    +   "<button class='vimtag_standard_buttons_green' style='margin-left:25px'>" + button_left + "</button>"
		                    +   "<button class='vimtag_standard_buttons_red' style='margin-left:45px'>" + button_right + "</button>"
		                    +"</div>";
		                    
		                mx(".vimtag_standard_buttons_green", pop_confirm_content)[0].onclick = function() {
		                    var pop_confirm_box = mx("#system_pop_confirm_box"),
		                        pop_confirm_content = mx("#system_pop_confirm_content"),
		                        pop_confirm_div = mx("#system_pop_confirm_div");
		
		                    document.documentElement.onkeydown = null;
		                    mx(".vimtag_standard_buttons_green", pop_confirm_content)[0].onclick = null;
		                    mx(".vimtag_standard_buttons_red", pop_confirm_content)[0].onclick = null;
		                    if(mx("#save_configuration").checked)
		                    {
		                        save_configuration=1;
		                    }else
		                    {
		                        save_configuration=0;
		                    }
		                    pop_confirm_box[s_innerHTML] = "";
		                    pop_confirm_box.parentNode[s_removeChild](pop_confirm_box);
		                    pop_confirm_box = null;
		
		                    obj.callback_func({save_configuration:save_configuration});
		                };
		                mx(".vimtag_standard_buttons_red", pop_confirm_content)[0].onclick = function() {
		                    var pop_confirm_box = mx("#system_pop_confirm_box"),
		                        pop_confirm_content = mx("#system_pop_confirm_content"),
		                        pop_confirm_div = mx("#system_pop_confirm_div");
		
		                    document.documentElement.onkeydown = null;
		                    mx(".vimtag_standard_buttons_green", pop_confirm_content)[0].onclick = null;
		                    mx(".vimtag_standard_buttons_red", pop_confirm_content)[0].onclick = null;
		
		                    pop_confirm_box[s_innerHTML] = "";
		                    pop_confirm_box.parentNode[s_removeChild](pop_confirm_box);
		                    pop_confirm_box = null;
		                };
                }
                else
                {
		                pop_confirm_content[s_style][s_cssText] = "position:absolute;top:" + ((l_client_h - 168) / 3) + "px;left:" + ((l_client_w - 286) / 2) + "px;z-index:101;"
		                    + " background:url("+mipc_img_src_date+") no-repeat scroll -458px -167px transparent;width:286px;height:168px;"
		                    + "-webkit-box-shadow:0 2px 30px #050505; -moz-box-shadow:0 2px 30px #050505; box-shadow:0 2px 30px #050505;";
		
		
		                pop_confirm_content[s_innerHTML] =
		                     "<div style='padding-left:15px;padding-top:20px;font-weight:900;font-size:16px;color:#EEE'><div style='height:70px;'>" + mcs_restore_factory_settings_prompt +"</div><input type='checkbox' id='save_configuration' checked='checked'></input>&nbsp;"+mcs_keep_network_settings+"</div>"
		                    +"<div style='position:absolute;bottom:15px'>"
		                    +   "<button class='standard_buttons_green' style='margin-left:25px'>" + button_left + "</button>"
		                    +   "<button class='standard_buttons_red' style='margin-left:45px'>" + button_right + "</button>"
		                    +"</div>";
		                // jQuery("#save_configuration").jNice();
		                mx(".standard_buttons_green", pop_confirm_content)[0].onclick = function() {
		                    var pop_confirm_box = mx("#system_pop_confirm_box"),
		                        pop_confirm_content = mx("#system_pop_confirm_content"),
		                        pop_confirm_div = mx("#system_pop_confirm_div");
		
		                    document.documentElement.onkeydown = null;
		                    mx(".standard_buttons_green", pop_confirm_content)[0].onclick = null;
		                    mx(".standard_buttons_red", pop_confirm_content)[0].onclick = null;
		                    if(mx("#save_configuration").checked)
		                    {
		                        save_configuration=1;
		                    }else
		                    {
		                        save_configuration=0;
		                    }
		                    pop_confirm_box[s_innerHTML] = "";
		                    pop_confirm_box.parentNode[s_removeChild](pop_confirm_box);
		                    pop_confirm_box = null;
		
		                    obj.callback_func({save_configuration:save_configuration});
		                };
		                mx(".standard_buttons_red", pop_confirm_content)[0].onclick = function() {
		                    var pop_confirm_box = mx("#system_pop_confirm_box"),
		                        pop_confirm_content = mx("#system_pop_confirm_content"),
		                        pop_confirm_div = mx("#system_pop_confirm_div");
		
		                    document.documentElement.onkeydown = null;
		                    mx(".standard_buttons_green", pop_confirm_content)[0].onclick = null;
		                    mx(".standard_buttons_red", pop_confirm_content)[0].onclick = null;
		
		                    pop_confirm_box[s_innerHTML] = "";
		                    pop_confirm_box.parentNode[s_removeChild](pop_confirm_box);
		                    pop_confirm_box = null;
		                };
                }
            }
        }
        function add_event()
        {
            //Enter the activation code box event
            l_dom_input_activation.onfocus = function() {
                this.select();
                if(g_standard_input_box_onfocus)
                    g_standard_input_box_onfocus(this);
            };
            l_dom_input_activation.onblur = function() {
                 if(g_standard_input_box_onblur)
                    g_standard_input_box_onblur(this);
            };
            //Activate button click event
            l_dom_button_activation.onclick = function() {
                ms.send_msg("dev_activate",{sn:g_select_device_ipc,activationCode:l_dom_input_activation.value},null,function(msg,ref){
                	if(msg && msg.result == ""){
                		 g_system_prompt_box(mcs_set_successfully, 240, -200);
                	}
                });
            };
            //reset
            l_dom_button_restore.onclick = function() {
                restore_pop_confirm_box({str:"", callback_func:function(obj){
                     ms.send_msg("restore",{sn:g_select_device_ipc,keep_extends_cofig:obj.save_configuration},null,function(msg,ref){
                         if(msg.result=="")
                         {
                             device_reboot();
                         }
                     });
                }});
            };
            //Reboot Set
            l_dom_button_restart.onclick = function() {
                system_pop_confirm_box({str:mcs_restart_prompt, callback_func:function(obj){device_reboot();}});
            };
            jQuery(document).bind("click", function (event)
            {
               var e = event || window.event;
               var elem = e.srcElement||e.target;
               while(elem)
               {
                   if(elem.id == "Detail_id" || elem.id ==  "detail_div_page")
                   {
                       return;
                   }
                   elem = elem.parentNode;
               }
               jQuery(l_dom_detail_div_page).hide();
            });
        }
        function remove_event()
        {
            l_dom_input_activation.onfocus = "";
            l_dom_input_activation.onblur = "";
            l_dom_button_activation.onclick = "";
            l_dom_button_restore.onclick = "";
            l_dom_button_restart.onclick = "";
        }
        function device_reboot()
        {
        	  ms.send_msg("reboot",{sn:g_select_device_ipc},null,function(msg,ref){
                if(msg.result==""){
                   g_system_prompt_box(mcs_set_successfully, 240, -200);
                }
            });
        }
        function ccm_get_upgrade_status_request(obj)
        {
            var node, node_sn;
            node_sn = g_select_device_ipc;
            node = mcloud_agent.devs.get(node_sn);
            if(!node) return;
            ms.send_msg("upgrade_get",{sn:node_sn,check:0},{type:0,check_ver:0},dev_upgrade_get_ack);
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "destroy":
                    {
                        clearInterval(l_refresh_timer);
                        remove_event();
                        l_me_parent.innerHTML = "";
                        l_me_parent = null;
                        break;
                    }
            }
        }
        add_event();
        if(g_network_environ == "private")
           new class_file_upload({parent:mx("#file_upload_div"), callback:ccm_get_upgrade_status_request});
        ms.send_msg("upgrade_get",{sn:g_select_device_ipc,check:1},{type:"",check_ver:1},dev_upgrade_get_ack);
    }
    //Other settings
    function class_options_others(obj)
    {
        var l_me = this,
            l_me_parent = obj.parent,
            //dom
            l_dom_input_speaker,
            l_dom_input_microphone,
            l_dom_button_setup,
            l_dom_ipc_turnover,
            l_dom_power_fr,
            l_ipc_turnover_true=0,
            l_cam_info;

        if(g_domain_oems_vimtag)
        {
        	  l_me_parent[s_innerHTML] =
        	  "<div id = 'other_info' class = 'list_right_box'>"
        	  +"<div class='list_right_item'>"
            +   "<div class='vimtag_options_float_left'>" + mcs_audio + " :</div>"
            +"</div>"
            +"<div class = 'list_right_item_ex'>"
            +   "<div class='vimtag_options_float_left'>- " + mcs_speaker + "</div>"
            +   "<div class='options_float_right' style='width:200px;'>"
            +       "<label for='input_speaker'></label>"
            +       "<input name='slider' type='text' id='input_speaker' class='fd_tween fd_classname_extraclass fd_hide_input "
            +           "fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update' value='0%'</input>"
            +   "</div>"
            +"</div>"
            +"<div class='list_right_item'>"
            +   "<div class='vimtag_options_float_left'>- " + mcs_mic + "</div>"
            +   "<div class='options_float_right' style='width:200px;'>"
            +       "<label for='input_microphone'></label>"
            +       "<input name='slider' type='text' id='input_microphone' class='fd_tween fd_classname_extraclass fd_hide_input "
            +           "fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update' value='0%'</input>"
            +   "</div>"
            +"</div>"
            +"<div class='list_right_item'>"
            +   "<span class='attribute_key_text'>"+mcs_equipment_flip+"</span>"
            +   "<div id='checkbox_ipc_turnover_div' class='options_float_right'><input id='checkbox_ipc_turnover' type='checkbox'/></div>"
            +"</div>"
            +"<div id='power_fr_div'>"
            +   "<div class='options_float_left'>" + mcs_power_frequency + "</div>"
            +   "<div class='options_float_right select_block'><select id='power_fr'>"
            +      "<option>50hz</option>"
            +      "<option>60hz</option>"
            +      "</select>"
            +   "</div>"
            +"</div>"
            +"<div class='options_float_right' style='clear:both'><button id='button_setup' class='list_right_button' >" + mcs_apply + "</button>"
            +"</div>"
            +"</div>";
        }else{
            l_me_parent[s_innerHTML] =
            "<div class='options_left_title'>" + mcs_audio + " :</div>"
            +"<div>"
            +   "<div class='options_float_left'>- " + mcs_speaker + "</div>"
            +   "<div class='options_float_right' style='width:200px;padding-top:18px'>"
            +       "<label for='input_speaker'></label>"
            +       "<input name='slider' type='text' id='input_speaker' class='fd_tween fd_classname_extraclass fd_hide_input "
            +           "fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update' value='0%'</input>"
            +   "</div>"
            +"</div>"
            +"<div>"
            +   "<div class='options_float_left'>- " + mcs_mic + "</div>"
            +   "<div class='options_float_right' style='width:200px;padding-top:18px'>"
            +       "<label for='input_microphone'></label>"
            +       "<input name='slider' type='text' id='input_microphone' class='fd_tween fd_classname_extraclass fd_hide_input "
            +           "fd_slider_cb_create_ms.TT-init fd_slider_cb_update_ms.TT-update fd_slider_cb_move_ms.TT-update' value='0%'</input>"
            +   "</div>"
            +"</div>"
            +"<div class='options_float_right' style='clear:both'><button id='button_setup' class='standard_buttons_white' >" + mcs_apply + "</button>"
            +"</div>";
        }
        jQuery(l_me_parent).hide().fadeIn(500);
        // dom get
        l_dom_button_setup = mx("#button_setup");
        l_dom_input_speaker = mx("#input_speaker");
        l_dom_input_microphone = mx("#input_microphone");
        if(g_domain_oems_vimtag){
        	  l_dom_ipc_turnover = mx("#checkbox_ipc_turnover");
        	  l_dom_power_fr = mx("#power_fr");
        }

        //Get Audio
        function dev_audio_get_ack(msg,ref)
        {
            if(!l_me_parent) return;
            if(msg && msg.result == ""){
                if(l_dom_input_speaker)
                    fdSliderController.increment("input_speaker", msg.speaker_level - l_dom_input_speaker.value);
		            if(l_dom_input_microphone)
                    fdSliderController.increment("input_microphone", msg.mic_level - l_dom_input_microphone.value);
            }else{
                log("error:GetAudioOutputConfigurationResponse return Result error in class_options_others.");
            }
        }
        function cam_get_ack(msg,ref)
        {
        	  if(msg&&msg.result==""){
        	  	  l_ipc_turnover_true=1;
        	  	  l_cam_info = msg;
        	  	  l_cam_info.sn = g_select_device_ipc;
        	  	  msg.flicker_freq?(l_dom_power_fr[1].selected=true):(l_dom_power_fr[0].selected=true); 
        	  	  if(msg.flip){
        	  	  	 jQuery("#checkbox_ipc_turnover").iButton("toggle",true);
        	  	  }else {
        	  	  	 jQuery("#checkbox_ipc_turnover").iButton("toggle",false);
        	  	  }
        	  }
        }
        /*To get the devices information*/ 
        if(g_domain_oems_vimtag){
        	  mcloud_agent.cam_get({sn:g_select_device_ipc},null,cam_get_ack);
        }
        function cam_set()
        {
            var flip,flicker_freq;
				    l_cam_info.flip = Number(l_dom_ipc_turnover.checked);
				    l_cam_info.flicker_freq = l_dom_power_fr.selectedIndex;
				    mcloud_agent.cam_set(l_cam_info,null,function(msg,ref) {
				    	  if(msg.result == "permission.denied"){
	            	 	  msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
	            	}else if(msg.result!= ""){
                	  msg_tips({msg:msg.result, type:"error", timeout:3000});
                }else{
                	  msg_tips({msg:mcs_set_successfully, type:"success", timeout:3000});
                } 
				    });
        }       
        if(g_domain_oems_vimtag)
        {
        	  jQuery("#checkbox_ipc_turnover").iButton({
                  labelOn:"On",
                labelOff:"Off",
                change:function(){
                  if(l_ipc_turnover_true){
                  	l_ipc_turnover_true=0;
                  }else{
                  	cam_set();
                  }
                }
            });
            jQuery("#power_fr").change(
              function(){
              	cam_set();
            });
        }
        function add_event()
        {
            l_dom_button_setup.onclick = function() {
                var output_level,speaker_level;
                speaker_level  = parseInt(mx(".fd-slider-handle", mx("#fd-slider-input_speaker"))[0].getAttribute("aria-valuenow"), 10);
                output_level = parseInt(mx(".fd-slider-handle", mx("#fd-slider-input_microphone"))[0].getAttribute("aria-valuenow"), 10);

						                ms.send_msg("audio_set",{sn:g_select_device_ipc,mic_level:output_level,speaker_level:speaker_level},null,function(msg,ref){
				   					if(msg && msg.result == ""){
				   						if(g_domain_oems_vimtag){
				   							 msg_tips({msg:mcs_set_successfully, type:"warning", timeout:3000});
				   						}else{
                         g_system_prompt_box(mcs_set_successfully, 240, -200);
                      }
				      			  ms.send_msg("audio_get",{sn:g_select_device_ipc},null,dev_audio_get_ack);
				   					}
								});
            };
        }
        function remove_event()
        {
            l_dom_button_setup.onclick = "";
        }
        l_me.ctrl = function(obj)
        {
            switch(obj.type)
            {
                case "update":
                   {
                   	   break;
                   }
                case "destroy"://delete
                   {
                        remove_event();
                        l_me_parent[s_innerHTML] = "";
                        l_me_parent = null;
                        break;
                   }
                default:
                    log("error:ctrl's obj.type is not exist in class_options_others.");
            }
        }
        add_event();
        fdSliderController.create();
        ms.send_msg("audio_get",{sn:g_select_device_ipc},null,dev_audio_get_ack);
    }
    //Remove the device settings
    function class_options_delete_device(obj)
    {    
    	  var l_me = this,
    	      l_me_parent = obj.parent,
    	      l_parent_callback = obj.on_event,
    	      l_dom_button_setup;
    	      
    	      l_me_parent[s_innerHTML] =
    	      "<div class='options_float_right' style='clear:both'><button id='button_setup' class='list_right_button'>" + mcs_delete_device + "</button>"
    	      +"</div>";
    	      
    	      l_dom_button_setup = mx("#button_setup");
    	      
    	      function ccm_dev_del_ack(msg,ref)
            {
            	 if(!l_me_parent) return;
            	 if(msg && (msg.result=="")){
                  mcloud_agent.devs.del(ref.sn);
                  var del_g_device_list_obj = new Array();
                    g_device_list_obj = del_g_device_list_obj;
                  for(var i=0; i<mcloud_agent.devs.list.length; i++){
                     g_device_list_obj["sn_" + mcloud_agent.devs.list[i].sn] = {name:name,type:mcloud_agent.devs.get(mcloud_agent.devs.list[i].sn).type, ip:mcloud_agent.devs.get(mcloud_agent.devs.list[i].sn).addr, isParent:true,
                         state:{online:"Online", view:0, recording:0, call:0, playback:0,playback_download:0}};
                  }
                  for(var j=0,length=mcloud_agent.devs.list.length;j<length;j++){
                     if(mcloud_agent.devs.list[j].type=="IPC"&&mcloud_agent.devs.list[j].stat=="Online"){
                       g_select_device_ipc = mcloud_agent.devs.list[j].sn;
                       break;
                     }
                  }
                  jQuery("#history_return").click();
            	 }
            	 else if(msg.result == "permission.denied")
            	 {
            	 	  msg_tips({msg:mcs_permission_denied, type:"error", timeout:3000});
            	 }
            	 else
            	 {
            	 	  msg_tips({msg:"error:CcmAddSubDeviceResponse return Result error in class_device_list_box.", type:"error", timeout:3000});
            	 }
            }
    	      
    	      l_dom_button_setup.onclick = function(){
    	      	 system_pop_confirm_box({str:mcs_delete_device + "?",callback_func:function(){
		              ms.send_msg("dev_del",{sn:g_select_device_ipc},{sn:g_select_device_ipc},ccm_dev_del_ack)	
		           }});
    	      };
    	      
    	      function remove_event()
		        {
		            l_dom_button_setup.onclick = "";
		        }
		        l_me.ctrl = function(obj)
		        {
		            switch(obj.type)
		            {
		                case "update":
		                   {
		                   	   break;
		                   }
		                case "destroy"://delete
		                   {
		                        remove_event();
		                        l_me_parent[s_innerHTML] = "";
		                        l_me_parent = null;
		                        break;
		                   }
		                default:
		                    log("error:ctrl's obj.type is not exist in class_options_delete_device.");
		            }
		        }
    }
    function class_file_upload(obj)
    {
        var l_me_parent  = obj.parent,
            l_callback = obj.callback,
            l_flag    = 0,
            l_alpha   = 1.0,

            l_field_name = "dimg_content",
            icon    = document.createElement("img"),
            iframe  = document.createElement("iframe"),
            form,
            l_file;

        function iframe_build()
        {
            var file_content, alpha = 0.01, html_text,
                doc = iframe.contentDocument || iframe.contentWindow.document;

            /* it is very important, you should not delete these tow line codes */
            try {
                doc.open();
                doc.close();
            }catch(err){}

            doc.body[s_style][s_cssText] = "padding:0px;margin:0px;border:none;overflow:hidden;";
            html_text = "<form id='upf' method='post' action='/ccm/ccm_upgrade.js?dsess=1&dsess_nid=" + mcloud_agent.create_nid() + "&dimg_src=upload'"
                + " enctype='multipart/form-data' "
                + "style='padding:0px;margin:0px;border:none;width:32px;height:32px;overflow:hidden;'>"
                + "<input type='file' id='" + l_field_name +  "' hidefocus='true'"
                + " title='" + mcs_caption + "'"
                + " style='padding:0px;margin:0px;position:absolute;left:-5px;top:0px;verflow:hidden;cursor:f;"
                + "width:24px;height:24px;line-height:24px;"
                + mhack.css_alpha(alpha) + "'"
                + " name='" + l_field_name + "' "
                + "/>"
                + "</form>";

            doc.body.innerHTML = html_text;
            if(iframe.style.visibility == "hidden")
            {
                iframe.style.visibility = "";
            }

            form = doc.getElementById("upf");
            l_file = doc.getElementById(l_field_name);
            //File change event
            l_file.onchange = function ()
            {
                if("" == l_file.value)
                {
                    system_pop_confirm_box({alert:true, str:"select nothing"});
                    return;
                }
                iframe.style.visibility = "hidden";

                form.submit();
                icon.src = "/imgs/loading.gif";
                l_flag = 1;
            };
            icon.src = "/imgs/plugin_install_ico_out.png";
        }

        function ifame_on_load()
        {
            var doc = iframe.contentDocument || iframe.contentWindow.document;
            if (doc && ((undefined == doc.readyState) || (doc.readyState == "complete")))
            {
                if(1 == l_flag)
                {
                    var msg = doc.body.innerHTML,
                        param = null,
                        s = msg, start = s.indexOf("("), end = s.lastIndexOf(")");

                    if ((end > (start + 2))&& ('{' == s.charAt(start + 1))&& ('}' == s.charAt(end - 1))) {
                        try {
                            param = meval(s.substring(start + 1, end));
                        } catch (err) {
                            param = "error";
                        }
                    }

                    if (("error" == param) || (null == param) || (null == param.data) || ("" != param.data.ret.code))
                    {
                        log("upload error");
                    }
                    else
                    {
                        l_callback();
                        log("upload succeed");
                        l_flag = 0;
                    }
                    iframe_build();
                }
            }
        }
        /* must use attach to iframe */
        l_me_parent.appendChild(icon);
        l_me_parent.appendChild(iframe);
        iframe.onload = ifame_on_load;

        icon[s_style][s_cssText] = "border:none;padding:0px;margin:0px;position:absolute;top:0px;";
        iframe[s_style][s_cssText] = "border:none;padding:0px;margin:0px;width:32px;height:32px;position:absolute;" +  mhack.css_alpha(l_alpha);
        iframe.title =  "upload file here";
        iframe.src = "";
        iframe_build();
    }
/*-----------------Setting options pages--------------------*/

    function software_init()
    {
    	var currheight = document.documentElement.clientHeight,
            currwidth = document.documentElement.clientWidth;
    	window.ms = new class_mining_software();
    	window.onresize = function() {
            if(jQuery("#web").css("display")=="none")
            {
                jQuery("#product_iframe").css({"height":document.documentElement.clientHeight-3+"px"});
            }
            // else
            // {
               if(currheight != document.documentElement.clientHeight || currwidth != document.documentElement.clientWidth)
               {
                 ms.ctrl({type:"update"});
               }
               currheight = document.documentElement.clientHeight;
                  currwidth = document.documentElement.clientWidth;
            // }                      
    	};
    	window.onunload = function(){
          ms.ctrl({type:"destroy"});
    	};
    }

    window.software_init = software_init;
})(window, document);
mx(software_init);
